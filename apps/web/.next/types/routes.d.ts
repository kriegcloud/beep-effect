// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/about" | "/auth/request-reset-password" | "/auth/reset-password" | "/auth/sign-in" | "/auth/sign-up" | "/contact-us" | "/dashboard" | "/dashboard/visual-effect" | "/dashboard/visual-effect/[exampleId]" | "/faqs" | "/landing" | "/portfolio" | "/pricing" | "/privacy" | "/terms" | "/upload"
type AppRouteHandlerRoutes = "/api/auth/[...all]"
type PageRoutes = never
type LayoutRoutes = "/" | "/auth" | "/auth/request-reset-password" | "/auth/reset-password" | "/auth/sign-in" | "/auth/sign-up" | "/dashboard"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/about": {}
  "/api/auth/[...all]": { "all": string[]; }
  "/auth": {}
  "/auth/request-reset-password": {}
  "/auth/reset-password": {}
  "/auth/sign-in": {}
  "/auth/sign-up": {}
  "/contact-us": {}
  "/dashboard": {}
  "/dashboard/visual-effect": {}
  "/dashboard/visual-effect/[exampleId]": { "exampleId": string; }
  "/faqs": {}
  "/landing": {}
  "/portfolio": {}
  "/pricing": {}
  "/privacy": {}
  "/terms": {}
  "/upload": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/auth": never
  "/auth/request-reset-password": never
  "/auth/reset-password": never
  "/auth/sign-in": never
  "/auth/sign-up": never
  "/dashboard": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
