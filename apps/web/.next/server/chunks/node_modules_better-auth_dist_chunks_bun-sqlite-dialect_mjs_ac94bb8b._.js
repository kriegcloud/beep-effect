module.exports=[463259,e=>{"use strict";var t=e.i(390476),r=e.i(736306),n=e.i(77033),a=e.i(913031);class s{get supportsCreateIfNotExists(){return!0}get supportsTransactionalDdl(){return!1}get supportsReturning(){return!0}async acquireMigrationLock(){}async releaseMigrationLock(){}get supportsOutput(){return!0}}class i{#e;#t=new c;#r;#n;constructor(e){this.#e={...e}}async init(){this.#r=this.#e.database,this.#n=new o(this.#r),this.#e.onCreateConnection&&await this.#e.onCreateConnection(this.#n)}async acquireConnection(){return await this.#t.lock(),this.#n}async beginTransaction(e){await e.executeQuery(t.CompiledQuery.raw("begin"))}async commitTransaction(e){await e.executeQuery(t.CompiledQuery.raw("commit"))}async rollbackTransaction(e){await e.executeQuery(t.CompiledQuery.raw("rollback"))}async releaseConnection(){this.#t.unlock()}async destroy(){this.#r?.close()}}class o{#r;constructor(e){this.#r=e}executeQuery(e){let{sql:t,parameters:r}=e;return Promise.resolve({rows:this.#r.prepare(t).all(r)})}async *streamQuery(){throw Error("Streaming query is not supported by SQLite driver.")}}class c{#a;#s;async lock(){for(;this.#a;)await this.#a;this.#a=new Promise(e=>{this.#s=e})}unlock(){let e=this.#s;this.#a=void 0,this.#s=void 0,e?.()}}class l{#r;constructor(e){this.#r=e}async getSchemas(){return[]}async getTables(e={withInternalKyselyTables:!1}){let t=this.#r.selectFrom("sqlite_schema").where("type","=","table").where("name","not like","sqlite_%").select("name").$castTo();return e.withInternalKyselyTables||(t=t.where("name","!=",n.DEFAULT_MIGRATION_TABLE).where("name","!=",n.DEFAULT_MIGRATION_LOCK_TABLE)),Promise.all((await t.execute()).map(({name:e})=>this.#i(e)))}async getMetadata(e){return{tables:await this.getTables(e)}}async #i(e){let t=this.#r,r=await t.selectFrom("sqlite_master").where("name","=",e).select("sql").$castTo().execute(),n=r[0]?.sql?.split(/[\(\),]/)?.find(e=>e.toLowerCase().includes("autoincrement"))?.split(/\s+/)?.[0]?.replace(/["`]/g,""),s=await t.selectFrom(a.sql`pragma_table_info(${e})`.as("table_info")).select(["name","type","notnull","dflt_value"]).execute();return{name:e,columns:s.map(e=>({name:e.name,dataType:e.type,isNullable:!e.notnull,isAutoIncrementing:e.name===n,hasDefaultValue:null!=e.dflt_value})),isView:!0}}}class u extends r.DefaultQueryCompiler{getCurrentParameterPlaceholder(){return"?"}getLeftIdentifierWrapper(){return'"'}getRightIdentifierWrapper(){return'"'}getAutoIncrement(){return"autoincrement"}}class m{#e;constructor(e){this.#e={...e}}createDriver(){return new i(this.#e)}createQueryCompiler(){return new u}createAdapter(){return new s}createIntrospector(e){return new l(e)}}e.s(["BunSqliteAdapter",()=>s,"BunSqliteDialect",()=>m,"BunSqliteDriver",()=>i,"BunSqliteIntrospector",()=>l,"BunSqliteQueryCompiler",()=>u])}];

//# sourceMappingURL=node_modules_better-auth_dist_chunks_bun-sqlite-dialect_mjs_ac94bb8b._.js.map