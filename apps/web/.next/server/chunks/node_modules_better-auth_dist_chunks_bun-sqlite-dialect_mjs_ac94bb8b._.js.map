{"version":3,"sources":["turbopack:///[project]/node_modules/better-auth/dist/chunks/bun-sqlite-dialect.mjs"],"sourcesContent":["import { CompiledQuery, DefaultQueryCompiler, DEFAULT_MIGRATION_TABLE, DEFAULT_MIGRATION_LOCK_TABLE, sql } from 'kysely';\n\nclass BunSqliteAdapter {\n  get supportsCreateIfNotExists() {\n    return true;\n  }\n  get supportsTransactionalDdl() {\n    return false;\n  }\n  get supportsReturning() {\n    return true;\n  }\n  async acquireMigrationLock() {\n  }\n  async releaseMigrationLock() {\n  }\n  get supportsOutput() {\n    return true;\n  }\n}\nclass BunSqliteDriver {\n  #config;\n  #connectionMutex = new ConnectionMutex();\n  #db;\n  #connection;\n  constructor(config) {\n    this.#config = { ...config };\n  }\n  async init() {\n    this.#db = this.#config.database;\n    this.#connection = new BunSqliteConnection(this.#db);\n    if (this.#config.onCreateConnection) {\n      await this.#config.onCreateConnection(this.#connection);\n    }\n  }\n  async acquireConnection() {\n    await this.#connectionMutex.lock();\n    return this.#connection;\n  }\n  async beginTransaction(connection) {\n    await connection.executeQuery(CompiledQuery.raw(\"begin\"));\n  }\n  async commitTransaction(connection) {\n    await connection.executeQuery(CompiledQuery.raw(\"commit\"));\n  }\n  async rollbackTransaction(connection) {\n    await connection.executeQuery(CompiledQuery.raw(\"rollback\"));\n  }\n  async releaseConnection() {\n    this.#connectionMutex.unlock();\n  }\n  async destroy() {\n    this.#db?.close();\n  }\n}\nclass BunSqliteConnection {\n  #db;\n  constructor(db) {\n    this.#db = db;\n  }\n  executeQuery(compiledQuery) {\n    const { sql: sql2, parameters } = compiledQuery;\n    const stmt = this.#db.prepare(sql2);\n    return Promise.resolve({\n      rows: stmt.all(parameters)\n    });\n  }\n  async *streamQuery() {\n    throw new Error(\"Streaming query is not supported by SQLite driver.\");\n  }\n}\nclass ConnectionMutex {\n  #promise;\n  #resolve;\n  async lock() {\n    while (this.#promise) {\n      await this.#promise;\n    }\n    this.#promise = new Promise((resolve) => {\n      this.#resolve = resolve;\n    });\n  }\n  unlock() {\n    const resolve = this.#resolve;\n    this.#promise = void 0;\n    this.#resolve = void 0;\n    resolve?.();\n  }\n}\nclass BunSqliteIntrospector {\n  #db;\n  constructor(db) {\n    this.#db = db;\n  }\n  async getSchemas() {\n    return [];\n  }\n  async getTables(options = { withInternalKyselyTables: false }) {\n    let query = this.#db.selectFrom(\"sqlite_schema\").where(\"type\", \"=\", \"table\").where(\"name\", \"not like\", \"sqlite_%\").select(\"name\").$castTo();\n    if (!options.withInternalKyselyTables) {\n      query = query.where(\"name\", \"!=\", DEFAULT_MIGRATION_TABLE).where(\"name\", \"!=\", DEFAULT_MIGRATION_LOCK_TABLE);\n    }\n    const tables = await query.execute();\n    return Promise.all(tables.map(({ name }) => this.#getTableMetadata(name)));\n  }\n  async getMetadata(options) {\n    return {\n      tables: await this.getTables(options)\n    };\n  }\n  async #getTableMetadata(table) {\n    const db = this.#db;\n    const createSql = await db.selectFrom(\"sqlite_master\").where(\"name\", \"=\", table).select(\"sql\").$castTo().execute();\n    const autoIncrementCol = createSql[0]?.sql?.split(/[\\(\\),]/)?.find((it) => it.toLowerCase().includes(\"autoincrement\"))?.split(/\\s+/)?.[0]?.replace(/[\"`]/g, \"\");\n    const columns = await db.selectFrom(\n      sql`pragma_table_info(${table})`.as(\"table_info\")\n    ).select([\"name\", \"type\", \"notnull\", \"dflt_value\"]).execute();\n    return {\n      name: table,\n      columns: columns.map((col) => ({\n        name: col.name,\n        dataType: col.type,\n        isNullable: !col.notnull,\n        isAutoIncrementing: col.name === autoIncrementCol,\n        hasDefaultValue: col.dflt_value != null\n      })),\n      isView: true\n    };\n  }\n}\nclass BunSqliteQueryCompiler extends DefaultQueryCompiler {\n  getCurrentParameterPlaceholder() {\n    return \"?\";\n  }\n  getLeftIdentifierWrapper() {\n    return '\"';\n  }\n  getRightIdentifierWrapper() {\n    return '\"';\n  }\n  getAutoIncrement() {\n    return \"autoincrement\";\n  }\n}\nclass BunSqliteDialect {\n  #config;\n  constructor(config) {\n    this.#config = { ...config };\n  }\n  createDriver() {\n    return new BunSqliteDriver(this.#config);\n  }\n  createQueryCompiler() {\n    return new BunSqliteQueryCompiler();\n  }\n  createAdapter() {\n    return new BunSqliteAdapter();\n  }\n  createIntrospector(db) {\n    return new BunSqliteIntrospector(db);\n  }\n}\n\nexport { BunSqliteAdapter, BunSqliteDialect, BunSqliteDriver, BunSqliteIntrospector, BunSqliteQueryCompiler };\n"],"names":[],"mappings":"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","ignoreList":[0]}