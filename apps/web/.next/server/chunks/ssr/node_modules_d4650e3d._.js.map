{"version":3,"sources":["turbopack:///[project]/node_modules/pure-rand/lib/esm/generator/XorShift.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/ReadRegex.js","turbopack:///[project]/node_modules/fast-check/lib/esm/utils/apply.js","turbopack:///[project]/node_modules/fast-check/lib/esm/stream/LazyIterableIterator.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/property/IRawProperty.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/runner/configuration/GlobalParameters.js","turbopack:///[project]/node_modules/pure-rand/lib/esm/generator/LinearCongruential.js","turbopack:///[project]/node_modules/pure-rand/lib/esm/generator/MersenneTwister.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/ZipIterableIterators.js","turbopack:///[project]/node_modules/fast-check/lib/esm/stream/StreamHelpers.js","turbopack:///[project]/node_modules/pure-rand/lib/esm/generator/XoroShiro.js","turbopack:///[project]/node_modules/pure-rand/lib/esm/distribution/UnsafeUniformBigIntDistribution.js","turbopack:///[project]/node_modules/pure-rand/lib/esm/pure-rand.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/runner/utils/PathWalker.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/FloatingOnlyHelpers.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/FloatHelpers.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/TypedIntArrayArbitraryBuilder.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/EnumerableKeysExtractor.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/PartsToUrl.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/implementations/NoopSlicedGenerator.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/noBias.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/IndexToPrintableIndex.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/data/GraphemeRanges.js","turbopack:///[project]/node_modules/pure-rand/lib/esm/generator/RandomGenerator.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/InvalidSubdomainLabelFiIter.js","turbopack:///[project]/node_modules/pure-rand/lib/esm/distribution/internals/ArrayInt.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/ArrayInt64.js","turbopack:///[project]/node_modules/pure-rand/lib/esm/distribution/internals/UnsafeUniformIntDistributionInternal.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/TextEscaper.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/noShrink.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/symbols.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/runner/configuration/VerbosityLevel.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/ArrayToMap.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/ArrayToSet.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/property/UnbiasedProperty.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/precondition/PreconditionFailure.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/runner/reporter/ExecutionStatus.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/model/ReplayPath.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/model/commands/ScheduledCommand.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/runner/SourceValuesIterator.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/hexa.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/base64.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/constantFrom.js","turbopack:///[project]/node_modules/fast-check/lib/esm/utils/hash.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/TimeToDate.js","turbopack:///[project]/node_modules/pure-rand/lib/esm/distribution/UniformBigIntDistribution.js","turbopack:///[project]/node_modules/pure-rand/lib/esm/distribution/UniformIntDistribution.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/clone.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/compareBooleanFunc.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/compareFunc.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/maxSafeInteger.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/maxSafeNat.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/NatToStringifiedNat.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/arbitrary/definition/Value.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/EntitiesToIPv6.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/memo.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/property/SkipAfterProperty.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/property/TimeoutProperty.js","turbopack:///[project]/node_modules/fast-check/lib/esm/stream/Stream.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/StrictlyEqualSet.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/SameValueSet.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/KeyValuePairsToObject.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/GraphemeRangesHelpers.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/nat.js","turbopack:///[project]/node_modules/fast-check/lib/esm/utils/stringify.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/DoubleHelpers.js","turbopack:///[project]/node_modules/pure-rand/lib/esm/distribution/UniformArrayIntDistribution.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/IndexToMappedConstant.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/ValuesAndSeparateKeysToObject.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/record.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/infiniteStream.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/IsSubarrayOf.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/UintToBase32String.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/VersionsApplierForUuid.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/DoubleOnlyHelpers.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/StableArbitraryGeneratorCache.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/BiasNumericRange.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/model/ModelRunner.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/BuildSchedulerFor.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/SanitizeRegexAst.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/integer.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/DepthContext.js","turbopack:///[project]/node_modules/fast-check/lib/esm/utils/globals.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/char.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/LazyArbitrary.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/gen.js","turbopack:///[project]/node_modules/pure-rand/lib/esm/distribution/internals/UnsafeUniformArrayIntDistributionInternal.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/NoUndefinedAsContext.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/CustomEqualSet.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/tuple.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/SameValueZeroSet.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/IndexToCharString.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/CodePointsToString.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/limitShrink.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/WordsToLorem.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/ToggleFlags.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/precondition/Pre.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/UnboxedToBoxed.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/BoxedArbitraryBuilder.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/constant.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/unicodeJson.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/TokenizeString.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/StringToBase64.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/CharsToString.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/subarray.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/shuffledSubarray.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/NumberToPaddedEight.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/PaddedEightsToUuid.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/webFragments.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/SegmentsToPath.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/webQueryParameters.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/model/commands/CommandsIterable.js","turbopack:///[project]/node_modules/fast-check/lib/esm/random/generator/Random.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/json.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/unicode.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/anything.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/FloatOnlyHelpers.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/MaxLengthFromMinLength.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/fullUnicode.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/letrec.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/array.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/ShrinkInteger.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/context.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/implementations/SlicedBasedGenerator.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/runner/configuration/QualifiedParameters.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/mixedCase.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/bigInt.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/bigUint.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/WithShrinkFromOtherArbitrary.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/boolean.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/property/IgnoreEqualValuesProperty.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/TokenizeRegex.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/commands.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/CharacterArbitraryBuilder.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/PaddedNumberArbitraryBuilder.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/UriQueryOrFragmentArbitraryBuilder.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/webSegment.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/webPath.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/bigIntN.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/ascii.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/model/commands/CommandWrapper.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/scheduler.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/char16bits.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/bigUintN.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/BuildSlicedGenerator.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/falsy.js","turbopack:///[project]/node_modules/pure-rand/lib/esm/distribution/UnsafeUniformArrayIntDistribution.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/runner/RunnerIterator.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/RestrictedIntegerArbitraryBuilder.js","turbopack:///[project]/node_modules/effect/src/internal/encoding/common.ts","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/float32Array.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/ulid.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/float64Array.js","turbopack:///[project]/node_modules/pure-rand/lib/esm/distribution/UnsafeUniformIntDistribution.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/object.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/oneof.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/AdapterArbitrary.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/mapToConstant.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/implementations/SchedulerImplem.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/float.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/stringOf.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/date.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/arbitrary/definition/Arbitrary.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/ShrinkBigInt.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/bigInt64Array.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/uint32Array.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/uint8Array.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/uuidV.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/uint8ClampedArray.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/runner/reporter/RunExecution.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/option.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/JsonConstraintsBuilder.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/AlwaysShrinkableArbitrary.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/uint16Array.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/PatternsToString.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/unicodeJsonValue.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/bigUint64Array.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/int16Array.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/int32Array.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/int8Array.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/unicodeString.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/UriPathArbitraryBuilder.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/lorem.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/runner/DecorateProperty.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/SchedulerArbitrary.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/string16bits.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/CharacterRangeArbitraryBuilder.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/SlicesForStringBuilder.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/runner/Tosser.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/GeneratorValueBuilder.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/runner/utils/RunDetailsFormatter.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/asciiString.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/fullUnicodeString.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/ArrayInt64Arbitrary.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/ipV4.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/ipV4Extended.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/string.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/StringUnitArbitrary.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/double.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/hexaString.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/LimitedShrinkArbitrary.js","turbopack:///[project]/node_modules/effect/src/internal/encoding/hex.ts","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/jsonValue.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/StringifiedNatArbitraryBuilder.js","turbopack:///[project]/node_modules/effect/src/internal/encoding/base64Url.ts","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/uuid.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/property/AsyncProperty.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/IntegerArbitrary.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/CloneArbitrary.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/property/Property.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/ConstantArbitrary.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/sparseArray.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/dictionary.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/StreamArbitrary.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/ipV6.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/TupleArbitrary.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/base64String.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/uniqueArray.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/FrequencyArbitrary.js","turbopack:///[project]/node_modules/effect/src/internal/encoding/base64.ts","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/GeneratorArbitrary.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/BigIntArbitrary.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/property/Property.generic.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/property/AsyncProperty.generic.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/runner/Sampler.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/PartialRecordArbitraryBuilder.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/SubarrayArbitrary.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/emailAddress.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/MixedCaseArbitrary.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/QualifiedObjectConstraints.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/CompareFunctionArbitraryBuilder.js","turbopack:///[project]/node_modules/effect/src/internal/redacted.ts","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/func.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/ArrayArbitrary.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/domain.js","turbopack:///[project]/node_modules/fast-check/lib/esm/check/runner/Runner.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/CommandsArbitrary.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/webUrl.js","turbopack:///[project]/node_modules/pure-rand/lib/esm/pure-rand-default.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/webAuthority.js","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/stringMatching.js","turbopack:///[project]/node_modules/effect/src/internal/layer/circular.ts","turbopack:///[project]/node_modules/effect/src/BigInt.ts","turbopack:///[project]/node_modules/effect/src/internal/secret.ts","turbopack:///[project]/node_modules/effect/src/internal/config.ts","turbopack:///[project]/node_modules/effect/src/Encoding.ts","turbopack:///[project]/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/AnyArbitraryBuilder.js","turbopack:///[project]/node_modules/effect/src/Layer.ts","turbopack:///[project]/node_modules/effect/src/BigDecimal.ts","turbopack:///[project]/node_modules/effect/src/DateTime.ts","turbopack:///[project]/node_modules/effect/src/Config.ts","turbopack:///[project]/node_modules/effect/src/ConfigError.ts","turbopack:///[project]/node_modules/fast-check/lib/esm/fast-check-default.js","turbopack:///[project]/node_modules/effect/src/internal/schema/util.ts","turbopack:///[project]/node_modules/effect/src/internal/schema/errors.ts","turbopack:///[project]/node_modules/effect/src/internal/schema/schemaId.ts","turbopack:///[project]/node_modules/effect/src/ParseResult.ts","turbopack:///[project]/node_modules/effect/src/SchemaAST.ts","turbopack:///[project]/node_modules/effect/src/Schema.ts","turbopack:///[project]/node_modules/effect/src/Redacted.ts","turbopack:///[project]/node_modules/@mui/utils/esm/isHostComponent/isHostComponent.js","turbopack:///[project]/node_modules/@mui/utils/esm/appendOwnerState/appendOwnerState.js","turbopack:///[project]/node_modules/@mui/utils/esm/mergeSlotProps/mergeSlotProps.js","turbopack:///[project]/node_modules/@mui/utils/esm/extractEventHandlers/extractEventHandlers.js","turbopack:///[project]/node_modules/@mui/utils/esm/omitEventHandlers/omitEventHandlers.js","turbopack:///[project]/node_modules/@mui/utils/esm/resolveComponentProps/resolveComponentProps.js","turbopack:///[project]/node_modules/@mui/utils/esm/useControlled/useControlled.js","turbopack:///[project]/node_modules/@mui/material/esm/FormControl/useFormControl.js","turbopack:///[project]/node_modules/@mui/material/esm/FormControl/FormControlContext.js"],"sourcesContent":["var XorShift128Plus = (function () {\n    function XorShift128Plus(s01, s00, s11, s10) {\n        this.s01 = s01;\n        this.s00 = s00;\n        this.s11 = s11;\n        this.s10 = s10;\n    }\n    XorShift128Plus.prototype.clone = function () {\n        return new XorShift128Plus(this.s01, this.s00, this.s11, this.s10);\n    };\n    XorShift128Plus.prototype.next = function () {\n        var nextRng = new XorShift128Plus(this.s01, this.s00, this.s11, this.s10);\n        var out = nextRng.unsafeNext();\n        return [out, nextRng];\n    };\n    XorShift128Plus.prototype.unsafeNext = function () {\n        var a0 = this.s00 ^ (this.s00 << 23);\n        var a1 = this.s01 ^ ((this.s01 << 23) | (this.s00 >>> 9));\n        var b0 = a0 ^ this.s10 ^ ((a0 >>> 18) | (a1 << 14)) ^ ((this.s10 >>> 5) | (this.s11 << 27));\n        var b1 = a1 ^ this.s11 ^ (a1 >>> 18) ^ (this.s11 >>> 5);\n        var out = (this.s00 + this.s10) | 0;\n        this.s01 = this.s11;\n        this.s00 = this.s10;\n        this.s11 = b1;\n        this.s10 = b0;\n        return out;\n    };\n    XorShift128Plus.prototype.jump = function () {\n        var nextRng = new XorShift128Plus(this.s01, this.s00, this.s11, this.s10);\n        nextRng.unsafeJump();\n        return nextRng;\n    };\n    XorShift128Plus.prototype.unsafeJump = function () {\n        var ns01 = 0;\n        var ns00 = 0;\n        var ns11 = 0;\n        var ns10 = 0;\n        var jump = [0x635d2dff, 0x8a5cd789, 0x5c472f96, 0x121fd215];\n        for (var i = 0; i !== 4; ++i) {\n            for (var mask = 1; mask; mask <<= 1) {\n                if (jump[i] & mask) {\n                    ns01 ^= this.s01;\n                    ns00 ^= this.s00;\n                    ns11 ^= this.s11;\n                    ns10 ^= this.s10;\n                }\n                this.unsafeNext();\n            }\n        }\n        this.s01 = ns01;\n        this.s00 = ns00;\n        this.s11 = ns11;\n        this.s10 = ns10;\n    };\n    XorShift128Plus.prototype.getState = function () {\n        return [this.s01, this.s00, this.s11, this.s10];\n    };\n    return XorShift128Plus;\n}());\nfunction fromState(state) {\n    var valid = state.length === 4;\n    if (!valid) {\n        throw new Error('The state must have been produced by a xorshift128plus RandomGenerator');\n    }\n    return new XorShift128Plus(state[0], state[1], state[2], state[3]);\n}\nexport var xorshift128plus = Object.assign(function (seed) {\n    return new XorShift128Plus(-1, ~seed, seed | 0, 0);\n}, { fromState: fromState });\n","function charSizeAt(text, pos) {\n    return text[pos] >= '\\uD800' && text[pos] <= '\\uDBFF' && text[pos + 1] >= '\\uDC00' && text[pos + 1] <= '\\uDFFF'\n        ? 2\n        : 1;\n}\nfunction isHexaDigit(char) {\n    return (char >= '0' && char <= '9') || (char >= 'a' && char <= 'f') || (char >= 'A' && char <= 'F');\n}\nfunction isDigit(char) {\n    return char >= '0' && char <= '9';\n}\nfunction squaredBracketBlockContentEndFrom(text, from) {\n    for (let index = from; index !== text.length; ++index) {\n        const char = text[index];\n        if (char === '\\\\') {\n            index += 1;\n        }\n        else if (char === ']') {\n            return index;\n        }\n    }\n    throw new Error(`Missing closing ']'`);\n}\nfunction parenthesisBlockContentEndFrom(text, from) {\n    let numExtraOpened = 0;\n    for (let index = from; index !== text.length; ++index) {\n        const char = text[index];\n        if (char === '\\\\') {\n            index += 1;\n        }\n        else if (char === ')') {\n            if (numExtraOpened === 0) {\n                return index;\n            }\n            numExtraOpened -= 1;\n        }\n        else if (char === '[') {\n            index = squaredBracketBlockContentEndFrom(text, index);\n        }\n        else if (char === '(') {\n            numExtraOpened += 1;\n        }\n    }\n    throw new Error(`Missing closing ')'`);\n}\nfunction curlyBracketBlockContentEndFrom(text, from) {\n    let foundComma = false;\n    for (let index = from; index !== text.length; ++index) {\n        const char = text[index];\n        if (isDigit(char)) {\n        }\n        else if (from === index) {\n            return -1;\n        }\n        else if (char === ',') {\n            if (foundComma) {\n                return -1;\n            }\n            foundComma = true;\n        }\n        else if (char === '}') {\n            return index;\n        }\n        else {\n            return -1;\n        }\n    }\n    return -1;\n}\nexport var TokenizerBlockMode;\n(function (TokenizerBlockMode) {\n    TokenizerBlockMode[TokenizerBlockMode[\"Full\"] = 0] = \"Full\";\n    TokenizerBlockMode[TokenizerBlockMode[\"Character\"] = 1] = \"Character\";\n})(TokenizerBlockMode || (TokenizerBlockMode = {}));\nfunction blockEndFrom(text, from, unicodeMode, mode) {\n    switch (text[from]) {\n        case '[': {\n            if (mode === TokenizerBlockMode.Character) {\n                return from + 1;\n            }\n            return squaredBracketBlockContentEndFrom(text, from + 1) + 1;\n        }\n        case '{': {\n            if (mode === TokenizerBlockMode.Character) {\n                return from + 1;\n            }\n            const foundEnd = curlyBracketBlockContentEndFrom(text, from + 1);\n            if (foundEnd === -1) {\n                return from + 1;\n            }\n            return foundEnd + 1;\n        }\n        case '(': {\n            if (mode === TokenizerBlockMode.Character) {\n                return from + 1;\n            }\n            return parenthesisBlockContentEndFrom(text, from + 1) + 1;\n        }\n        case ']':\n        case '}':\n        case ')':\n            return from + 1;\n        case '\\\\': {\n            const next1 = text[from + 1];\n            switch (next1) {\n                case 'x':\n                    if (isHexaDigit(text[from + 2]) && isHexaDigit(text[from + 3])) {\n                        return from + 4;\n                    }\n                    throw new Error(`Unexpected token '${text.substring(from, from + 4)}' found`);\n                case 'u':\n                    if (text[from + 2] === '{') {\n                        if (!unicodeMode) {\n                            return from + 2;\n                        }\n                        if (text[from + 4] === '}') {\n                            if (isHexaDigit(text[from + 3])) {\n                                return from + 5;\n                            }\n                            throw new Error(`Unexpected token '${text.substring(from, from + 5)}' found`);\n                        }\n                        if (text[from + 5] === '}') {\n                            if (isHexaDigit(text[from + 3]) && isHexaDigit(text[from + 4])) {\n                                return from + 6;\n                            }\n                            throw new Error(`Unexpected token '${text.substring(from, from + 6)}' found`);\n                        }\n                        if (text[from + 6] === '}') {\n                            if (isHexaDigit(text[from + 3]) && isHexaDigit(text[from + 4]) && isHexaDigit(text[from + 5])) {\n                                return from + 7;\n                            }\n                            throw new Error(`Unexpected token '${text.substring(from, from + 7)}' found`);\n                        }\n                        if (text[from + 7] === '}') {\n                            if (isHexaDigit(text[from + 3]) &&\n                                isHexaDigit(text[from + 4]) &&\n                                isHexaDigit(text[from + 5]) &&\n                                isHexaDigit(text[from + 6])) {\n                                return from + 8;\n                            }\n                            throw new Error(`Unexpected token '${text.substring(from, from + 8)}' found`);\n                        }\n                        if (text[from + 8] === '}' &&\n                            isHexaDigit(text[from + 3]) &&\n                            isHexaDigit(text[from + 4]) &&\n                            isHexaDigit(text[from + 5]) &&\n                            isHexaDigit(text[from + 6]) &&\n                            isHexaDigit(text[from + 7])) {\n                            return from + 9;\n                        }\n                        throw new Error(`Unexpected token '${text.substring(from, from + 9)}' found`);\n                    }\n                    if (isHexaDigit(text[from + 2]) &&\n                        isHexaDigit(text[from + 3]) &&\n                        isHexaDigit(text[from + 4]) &&\n                        isHexaDigit(text[from + 5])) {\n                        return from + 6;\n                    }\n                    throw new Error(`Unexpected token '${text.substring(from, from + 6)}' found`);\n                case 'p':\n                case 'P': {\n                    if (!unicodeMode) {\n                        return from + 2;\n                    }\n                    let subIndex = from + 2;\n                    for (; subIndex < text.length && text[subIndex] !== '}'; subIndex += text[subIndex] === '\\\\' ? 2 : 1) {\n                    }\n                    if (text[subIndex] !== '}') {\n                        throw new Error(`Invalid \\\\P definition`);\n                    }\n                    return subIndex + 1;\n                }\n                case 'k': {\n                    let subIndex = from + 2;\n                    for (; subIndex < text.length && text[subIndex] !== '>'; ++subIndex) {\n                    }\n                    if (text[subIndex] !== '>') {\n                        if (!unicodeMode) {\n                            return from + 2;\n                        }\n                        throw new Error(`Invalid \\\\k definition`);\n                    }\n                    return subIndex + 1;\n                }\n                default: {\n                    if (isDigit(next1)) {\n                        const maxIndex = unicodeMode ? text.length : Math.min(from + 4, text.length);\n                        let subIndex = from + 2;\n                        for (; subIndex < maxIndex && isDigit(text[subIndex]); ++subIndex) {\n                        }\n                        return subIndex;\n                    }\n                    const charSize = unicodeMode ? charSizeAt(text, from + 1) : 1;\n                    return from + charSize + 1;\n                }\n            }\n        }\n        default: {\n            const charSize = unicodeMode ? charSizeAt(text, from) : 1;\n            return from + charSize;\n        }\n    }\n}\nexport function readFrom(text, from, unicodeMode, mode) {\n    const to = blockEndFrom(text, from, unicodeMode, mode);\n    return text.substring(from, to);\n}\n","const untouchedApply = Function.prototype.apply;\nconst ApplySymbol = Symbol('apply');\nfunction safeExtractApply(f) {\n    try {\n        return f.apply;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction safeApplyHacky(f, instance, args) {\n    const ff = f;\n    ff[ApplySymbol] = untouchedApply;\n    const out = ff[ApplySymbol](instance, args);\n    delete ff[ApplySymbol];\n    return out;\n}\nexport function safeApply(f, instance, args) {\n    if (safeExtractApply(f) === untouchedApply) {\n        return f.apply(instance, args);\n    }\n    return safeApplyHacky(f, instance, args);\n}\n","class LazyIterableIterator {\n    constructor(producer) {\n        this.producer = producer;\n    }\n    [Symbol.iterator]() {\n        if (this.it === undefined) {\n            this.it = this.producer();\n        }\n        return this.it;\n    }\n    next() {\n        if (this.it === undefined) {\n            this.it = this.producer();\n        }\n        return this.it.next();\n    }\n}\nexport function makeLazy(producer) {\n    return new LazyIterableIterator(producer);\n}\n","const safeMathLog = Math.log;\nexport function runIdToFrequency(runId) {\n    return 2 + ~~(safeMathLog(runId + 1) * 0.4342944819032518);\n}\n","let globalParameters = {};\nexport function configureGlobal(parameters) {\n    globalParameters = parameters;\n}\nexport function readConfigureGlobal() {\n    return globalParameters;\n}\nexport function resetConfigureGlobal() {\n    globalParameters = {};\n}\n","var MULTIPLIER = 0x000343fd;\nvar INCREMENT = 0x00269ec3;\nvar MASK = 0xffffffff;\nvar MASK_2 = (1 << 31) - 1;\nvar computeNextSeed = function (seed) {\n    return (seed * MULTIPLIER + INCREMENT) & MASK;\n};\nvar computeValueFromNextSeed = function (nextseed) {\n    return (nextseed & MASK_2) >> 16;\n};\nvar LinearCongruential32 = (function () {\n    function LinearCongruential32(seed) {\n        this.seed = seed;\n    }\n    LinearCongruential32.prototype.clone = function () {\n        return new LinearCongruential32(this.seed);\n    };\n    LinearCongruential32.prototype.next = function () {\n        var nextRng = new LinearCongruential32(this.seed);\n        var out = nextRng.unsafeNext();\n        return [out, nextRng];\n    };\n    LinearCongruential32.prototype.unsafeNext = function () {\n        var s1 = computeNextSeed(this.seed);\n        var v1 = computeValueFromNextSeed(s1);\n        var s2 = computeNextSeed(s1);\n        var v2 = computeValueFromNextSeed(s2);\n        this.seed = computeNextSeed(s2);\n        var v3 = computeValueFromNextSeed(this.seed);\n        var vnext = v3 + ((v2 + (v1 << 15)) << 15);\n        return vnext | 0;\n    };\n    LinearCongruential32.prototype.getState = function () {\n        return [this.seed];\n    };\n    return LinearCongruential32;\n}());\nfunction fromState(state) {\n    var valid = state.length === 1;\n    if (!valid) {\n        throw new Error('The state must have been produced by a congruential32 RandomGenerator');\n    }\n    return new LinearCongruential32(state[0]);\n}\nexport var congruential32 = Object.assign(function (seed) {\n    return new LinearCongruential32(seed);\n}, { fromState: fromState });\n","var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar MersenneTwister = (function () {\n    function MersenneTwister(states, index) {\n        this.states = states;\n        this.index = index;\n    }\n    MersenneTwister.twist = function (prev) {\n        var mt = prev.slice();\n        for (var idx = 0; idx !== MersenneTwister.N - MersenneTwister.M; ++idx) {\n            var y_1 = (mt[idx] & MersenneTwister.MASK_UPPER) + (mt[idx + 1] & MersenneTwister.MASK_LOWER);\n            mt[idx] = mt[idx + MersenneTwister.M] ^ (y_1 >>> 1) ^ (-(y_1 & 1) & MersenneTwister.A);\n        }\n        for (var idx = MersenneTwister.N - MersenneTwister.M; idx !== MersenneTwister.N - 1; ++idx) {\n            var y_2 = (mt[idx] & MersenneTwister.MASK_UPPER) + (mt[idx + 1] & MersenneTwister.MASK_LOWER);\n            mt[idx] = mt[idx + MersenneTwister.M - MersenneTwister.N] ^ (y_2 >>> 1) ^ (-(y_2 & 1) & MersenneTwister.A);\n        }\n        var y = (mt[MersenneTwister.N - 1] & MersenneTwister.MASK_UPPER) + (mt[0] & MersenneTwister.MASK_LOWER);\n        mt[MersenneTwister.N - 1] = mt[MersenneTwister.M - 1] ^ (y >>> 1) ^ (-(y & 1) & MersenneTwister.A);\n        return mt;\n    };\n    MersenneTwister.seeded = function (seed) {\n        var out = Array(MersenneTwister.N);\n        out[0] = seed;\n        for (var idx = 1; idx !== MersenneTwister.N; ++idx) {\n            var xored = out[idx - 1] ^ (out[idx - 1] >>> 30);\n            out[idx] = (Math.imul(MersenneTwister.F, xored) + idx) | 0;\n        }\n        return out;\n    };\n    MersenneTwister.from = function (seed) {\n        return new MersenneTwister(MersenneTwister.twist(MersenneTwister.seeded(seed)), 0);\n    };\n    MersenneTwister.prototype.clone = function () {\n        return new MersenneTwister(this.states, this.index);\n    };\n    MersenneTwister.prototype.next = function () {\n        var nextRng = new MersenneTwister(this.states, this.index);\n        var out = nextRng.unsafeNext();\n        return [out, nextRng];\n    };\n    MersenneTwister.prototype.unsafeNext = function () {\n        var y = this.states[this.index];\n        y ^= this.states[this.index] >>> MersenneTwister.U;\n        y ^= (y << MersenneTwister.S) & MersenneTwister.B;\n        y ^= (y << MersenneTwister.T) & MersenneTwister.C;\n        y ^= y >>> MersenneTwister.L;\n        if (++this.index >= MersenneTwister.N) {\n            this.states = MersenneTwister.twist(this.states);\n            this.index = 0;\n        }\n        return y;\n    };\n    MersenneTwister.prototype.getState = function () {\n        return __spreadArray([this.index], __read(this.states), false);\n    };\n    MersenneTwister.fromState = function (state) {\n        var valid = state.length === MersenneTwister.N + 1 && state[0] >= 0 && state[0] < MersenneTwister.N;\n        if (!valid) {\n            throw new Error('The state must have been produced by a mersenne RandomGenerator');\n        }\n        return new MersenneTwister(state.slice(1), state[0]);\n    };\n    MersenneTwister.N = 624;\n    MersenneTwister.M = 397;\n    MersenneTwister.R = 31;\n    MersenneTwister.A = 0x9908b0df;\n    MersenneTwister.F = 1812433253;\n    MersenneTwister.U = 11;\n    MersenneTwister.S = 7;\n    MersenneTwister.B = 0x9d2c5680;\n    MersenneTwister.T = 15;\n    MersenneTwister.C = 0xefc60000;\n    MersenneTwister.L = 18;\n    MersenneTwister.MASK_LOWER = Math.pow(2, MersenneTwister.R) - 1;\n    MersenneTwister.MASK_UPPER = Math.pow(2, MersenneTwister.R);\n    return MersenneTwister;\n}());\nfunction fromState(state) {\n    return MersenneTwister.fromState(state);\n}\nexport default Object.assign(function (seed) {\n    return MersenneTwister.from(seed);\n}, { fromState: fromState });\n","function initZippedValues(its) {\n    const vs = [];\n    for (let index = 0; index !== its.length; ++index) {\n        vs.push(its[index].next());\n    }\n    return vs;\n}\nfunction nextZippedValues(its, vs) {\n    for (let index = 0; index !== its.length; ++index) {\n        vs[index] = its[index].next();\n    }\n}\nfunction isDoneZippedValues(vs) {\n    for (let index = 0; index !== vs.length; ++index) {\n        if (vs[index].done) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function* zipIterableIterators(...its) {\n    const vs = initZippedValues(its);\n    while (!isDoneZippedValues(vs)) {\n        yield vs.map((v) => v.value);\n        nextZippedValues(its, vs);\n    }\n}\n","class Nil {\n    [Symbol.iterator]() {\n        return this;\n    }\n    next(value) {\n        return { value, done: true };\n    }\n}\nNil.nil = new Nil();\nexport function nilHelper() {\n    return Nil.nil;\n}\nexport function* mapHelper(g, f) {\n    for (const v of g) {\n        yield f(v);\n    }\n}\nexport function* flatMapHelper(g, f) {\n    for (const v of g) {\n        yield* f(v);\n    }\n}\nexport function* filterHelper(g, f) {\n    for (const v of g) {\n        if (f(v)) {\n            yield v;\n        }\n    }\n}\nexport function* takeNHelper(g, n) {\n    for (let i = 0; i < n; ++i) {\n        const cur = g.next();\n        if (cur.done) {\n            break;\n        }\n        yield cur.value;\n    }\n}\nexport function* takeWhileHelper(g, f) {\n    let cur = g.next();\n    while (!cur.done && f(cur.value)) {\n        yield cur.value;\n        cur = g.next();\n    }\n}\nexport function* joinHelper(g, others) {\n    for (let cur = g.next(); !cur.done; cur = g.next()) {\n        yield cur.value;\n    }\n    for (const s of others) {\n        for (let cur = s.next(); !cur.done; cur = s.next()) {\n            yield cur.value;\n        }\n    }\n}\n","var XoroShiro128Plus = (function () {\n    function XoroShiro128Plus(s01, s00, s11, s10) {\n        this.s01 = s01;\n        this.s00 = s00;\n        this.s11 = s11;\n        this.s10 = s10;\n    }\n    XoroShiro128Plus.prototype.clone = function () {\n        return new XoroShiro128Plus(this.s01, this.s00, this.s11, this.s10);\n    };\n    XoroShiro128Plus.prototype.next = function () {\n        var nextRng = new XoroShiro128Plus(this.s01, this.s00, this.s11, this.s10);\n        var out = nextRng.unsafeNext();\n        return [out, nextRng];\n    };\n    XoroShiro128Plus.prototype.unsafeNext = function () {\n        var out = (this.s00 + this.s10) | 0;\n        var a0 = this.s10 ^ this.s00;\n        var a1 = this.s11 ^ this.s01;\n        var s00 = this.s00;\n        var s01 = this.s01;\n        this.s00 = (s00 << 24) ^ (s01 >>> 8) ^ a0 ^ (a0 << 16);\n        this.s01 = (s01 << 24) ^ (s00 >>> 8) ^ a1 ^ ((a1 << 16) | (a0 >>> 16));\n        this.s10 = (a1 << 5) ^ (a0 >>> 27);\n        this.s11 = (a0 << 5) ^ (a1 >>> 27);\n        return out;\n    };\n    XoroShiro128Plus.prototype.jump = function () {\n        var nextRng = new XoroShiro128Plus(this.s01, this.s00, this.s11, this.s10);\n        nextRng.unsafeJump();\n        return nextRng;\n    };\n    XoroShiro128Plus.prototype.unsafeJump = function () {\n        var ns01 = 0;\n        var ns00 = 0;\n        var ns11 = 0;\n        var ns10 = 0;\n        var jump = [0xd8f554a5, 0xdf900294, 0x4b3201fc, 0x170865df];\n        for (var i = 0; i !== 4; ++i) {\n            for (var mask = 1; mask; mask <<= 1) {\n                if (jump[i] & mask) {\n                    ns01 ^= this.s01;\n                    ns00 ^= this.s00;\n                    ns11 ^= this.s11;\n                    ns10 ^= this.s10;\n                }\n                this.unsafeNext();\n            }\n        }\n        this.s01 = ns01;\n        this.s00 = ns00;\n        this.s11 = ns11;\n        this.s10 = ns10;\n    };\n    XoroShiro128Plus.prototype.getState = function () {\n        return [this.s01, this.s00, this.s11, this.s10];\n    };\n    return XoroShiro128Plus;\n}());\nfunction fromState(state) {\n    var valid = state.length === 4;\n    if (!valid) {\n        throw new Error('The state must have been produced by a xoroshiro128plus RandomGenerator');\n    }\n    return new XoroShiro128Plus(state[0], state[1], state[2], state[3]);\n}\nexport var xoroshiro128plus = Object.assign(function (seed) {\n    return new XoroShiro128Plus(-1, ~seed, seed | 0, 0);\n}, { fromState: fromState });\n","var SBigInt = typeof BigInt !== 'undefined' ? BigInt : undefined;\nexport function unsafeUniformBigIntDistribution(from, to, rng) {\n    var diff = to - from + SBigInt(1);\n    var MinRng = SBigInt(-0x80000000);\n    var NumValues = SBigInt(0x100000000);\n    var FinalNumValues = NumValues;\n    var NumIterations = 1;\n    while (FinalNumValues < diff) {\n        FinalNumValues *= NumValues;\n        ++NumIterations;\n    }\n    var MaxAcceptedRandom = FinalNumValues - (FinalNumValues % diff);\n    while (true) {\n        var value = SBigInt(0);\n        for (var num = 0; num !== NumIterations; ++num) {\n            var out = rng.unsafeNext();\n            value = NumValues * value + (SBigInt(out) - MinRng);\n        }\n        if (value < MaxAcceptedRandom) {\n            var inDiff = value % diff;\n            return inDiff + from;\n        }\n    }\n}\n","import * as prand from './pure-rand-default.js';\nexport default prand;\nexport * from './pure-rand-default.js';\n","function produce(producer) {\n    return producer();\n}\nexport function pathWalk(path, initialProducers, shrink) {\n    const producers = initialProducers;\n    const segments = path.split(':').map((text) => +text);\n    if (segments.length === 0) {\n        return producers.map(produce);\n    }\n    if (!segments.every((v) => !Number.isNaN(v))) {\n        throw new Error(`Unable to replay, got invalid path=${path}`);\n    }\n    let values = producers.drop(segments[0]).map(produce);\n    for (const s of segments.slice(1)) {\n        const valueToShrink = values.getNthOrLast(0);\n        if (valueToShrink === null) {\n            throw new Error(`Unable to replay, got wrong path=${path}`);\n        }\n        values = shrink(valueToShrink).drop(s);\n    }\n    return values;\n}\n","const safeNumberIsInteger = Number.isInteger;\nconst safeObjectIs = Object.is;\nconst safeNegativeInfinity = Number.NEGATIVE_INFINITY;\nconst safePositiveInfinity = Number.POSITIVE_INFINITY;\nexport function refineConstraintsForFloatingOnly(constraints, maxValue, maxNonIntegerValue, onlyIntegersAfterThisValue) {\n    const { noDefaultInfinity = false, minExcluded = false, maxExcluded = false, min = noDefaultInfinity ? -maxValue : safeNegativeInfinity, max = noDefaultInfinity ? maxValue : safePositiveInfinity, } = constraints;\n    const effectiveMin = minExcluded\n        ? min < -maxNonIntegerValue\n            ? -onlyIntegersAfterThisValue\n            : Math.max(min, -maxNonIntegerValue)\n        : min === safeNegativeInfinity\n            ? Math.max(min, -onlyIntegersAfterThisValue)\n            : Math.max(min, -maxNonIntegerValue);\n    const effectiveMax = maxExcluded\n        ? max > maxNonIntegerValue\n            ? onlyIntegersAfterThisValue\n            : Math.min(max, maxNonIntegerValue)\n        : max === safePositiveInfinity\n            ? Math.min(max, onlyIntegersAfterThisValue)\n            : Math.min(max, maxNonIntegerValue);\n    const fullConstraints = {\n        noDefaultInfinity: false,\n        minExcluded: minExcluded || ((min !== safeNegativeInfinity || minExcluded) && safeNumberIsInteger(effectiveMin)),\n        maxExcluded: maxExcluded || ((max !== safePositiveInfinity || maxExcluded) && safeNumberIsInteger(effectiveMax)),\n        min: safeObjectIs(effectiveMin, -0) ? 0 : effectiveMin,\n        max: safeObjectIs(effectiveMax, 0) ? -0 : effectiveMax,\n        noNaN: constraints.noNaN || false,\n    };\n    return fullConstraints;\n}\n","const safeNegativeInfinity = Number.NEGATIVE_INFINITY;\nconst safePositiveInfinity = Number.POSITIVE_INFINITY;\nexport const MIN_VALUE_32 = 2 ** -126 * 2 ** -23;\nexport const MAX_VALUE_32 = 2 ** 127 * (1 + (2 ** 23 - 1) / 2 ** 23);\nexport const EPSILON_32 = 2 ** -23;\nconst INDEX_POSITIVE_INFINITY = 2139095040;\nconst INDEX_NEGATIVE_INFINITY = -2139095041;\nconst f32 = new Float32Array(1);\nconst u32 = new Uint32Array(f32.buffer, f32.byteOffset);\nfunction bitCastFloatToUInt32(f) {\n    f32[0] = f;\n    return u32[0];\n}\nexport function decomposeFloat(f) {\n    const bits = bitCastFloatToUInt32(f);\n    const signBit = bits >>> 31;\n    const exponentBits = (bits >>> 23) & 0xff;\n    const significandBits = bits & 0x7fffff;\n    const exponent = exponentBits === 0 ? -126 : exponentBits - 127;\n    let significand = exponentBits === 0 ? 0 : 1;\n    significand += significandBits / 2 ** 23;\n    significand *= signBit === 0 ? 1 : -1;\n    return { exponent, significand };\n}\nfunction indexInFloatFromDecomp(exponent, significand) {\n    if (exponent === -126) {\n        return significand * 0x800000;\n    }\n    return (exponent + 127) * 0x800000 + (significand - 1) * 0x800000;\n}\nexport function floatToIndex(f) {\n    if (f === safePositiveInfinity) {\n        return INDEX_POSITIVE_INFINITY;\n    }\n    if (f === safeNegativeInfinity) {\n        return INDEX_NEGATIVE_INFINITY;\n    }\n    const decomp = decomposeFloat(f);\n    const exponent = decomp.exponent;\n    const significand = decomp.significand;\n    if (f > 0 || (f === 0 && 1 / f === safePositiveInfinity)) {\n        return indexInFloatFromDecomp(exponent, significand);\n    }\n    else {\n        return -indexInFloatFromDecomp(exponent, -significand) - 1;\n    }\n}\nexport function indexToFloat(index) {\n    if (index < 0) {\n        return -indexToFloat(-index - 1);\n    }\n    if (index === INDEX_POSITIVE_INFINITY) {\n        return safePositiveInfinity;\n    }\n    if (index < 0x1000000) {\n        return index * 2 ** -149;\n    }\n    const postIndex = index - 0x1000000;\n    const exponent = -125 + (postIndex >> 23);\n    const significand = 1 + (postIndex & 0x7fffff) / 0x800000;\n    return significand * 2 ** exponent;\n}\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { array } from '../../array.js';\nexport function typedIntArrayArbitraryArbitraryBuilder(constraints, defaultMin, defaultMax, TypedArrayClass, arbitraryBuilder) {\n    const generatorName = TypedArrayClass.name;\n    const { min = defaultMin, max = defaultMax } = constraints, arrayConstraints = __rest(constraints, [\"min\", \"max\"]);\n    if (min > max) {\n        throw new Error(`Invalid range passed to ${generatorName}: min must be lower than or equal to max`);\n    }\n    if (min < defaultMin) {\n        throw new Error(`Invalid min value passed to ${generatorName}: min must be greater than or equal to ${defaultMin}`);\n    }\n    if (max > defaultMax) {\n        throw new Error(`Invalid max value passed to ${generatorName}: max must be lower than or equal to ${defaultMax}`);\n    }\n    return array(arbitraryBuilder({ min, max }), arrayConstraints).map((data) => TypedArrayClass.from(data), (value) => {\n        if (!(value instanceof TypedArrayClass))\n            throw new Error('Invalid type');\n        return [...value];\n    });\n}\n","const safeObjectKeys = Object.keys;\nconst safeObjectGetOwnPropertySymbols = Object.getOwnPropertySymbols;\nconst safeObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nexport function extractEnumerableKeys(instance) {\n    const keys = safeObjectKeys(instance);\n    const symbols = safeObjectGetOwnPropertySymbols(instance);\n    for (let index = 0; index !== symbols.length; ++index) {\n        const symbol = symbols[index];\n        const descriptor = safeObjectGetOwnPropertyDescriptor(instance, symbol);\n        if (descriptor && descriptor.enumerable) {\n            keys.push(symbol);\n        }\n    }\n    return keys;\n}\n","export function partsToUrlMapper(data) {\n    const [scheme, authority, path] = data;\n    const query = data[3] === null ? '' : `?${data[3]}`;\n    const fragments = data[4] === null ? '' : `#${data[4]}`;\n    return `${scheme}://${authority}${path}${query}${fragments}`;\n}\nconst UrlSplitRegex = /^([[A-Za-z][A-Za-z0-9+.-]*):\\/\\/([^/?#]*)([^?#]*)(\\?[A-Za-z0-9\\-._~!$&'()*+,;=:@/?%]*)?(#[A-Za-z0-9\\-._~!$&'()*+,;=:@/?%]*)?$/;\nexport function partsToUrlUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Incompatible value received: type');\n    }\n    const m = UrlSplitRegex.exec(value);\n    if (m === null) {\n        throw new Error('Incompatible value received');\n    }\n    const scheme = m[1];\n    const authority = m[2];\n    const path = m[3];\n    const query = m[4];\n    const fragments = m[5];\n    return [\n        scheme,\n        authority,\n        path,\n        query !== undefined ? query.substring(1) : null,\n        fragments !== undefined ? fragments.substring(1) : null,\n    ];\n}\n","export class NoopSlicedGenerator {\n    constructor(arb, mrng, biasFactor) {\n        this.arb = arb;\n        this.mrng = mrng;\n        this.biasFactor = biasFactor;\n    }\n    attemptExact() {\n        return;\n    }\n    next() {\n        return this.arb.generate(this.mrng, this.biasFactor);\n    }\n}\n","export function noBias(arb) {\n    return arb.noBias();\n}\n","export function indexToPrintableIndexMapper(v) {\n    if (v < 95)\n        return v + 0x20;\n    if (v <= 0x7e)\n        return v - 95;\n    return v;\n}\nexport function indexToPrintableIndexUnmapper(v) {\n    if (v >= 0x20 && v <= 0x7e)\n        return v - 0x20;\n    if (v >= 0 && v <= 0x1f)\n        return v + 95;\n    return v;\n}\n","export const asciiAlphabetRanges = [[0x00, 0x7f]];\nexport const fullAlphabetRanges = [\n    [0x0000, 0xd7ff],\n    [0xe000, 0x10ffff],\n];\nexport const autonomousGraphemeRanges = [\n    [0x20, 0x7e],\n    [0xa0, 0xac],\n    [0xae, 0x2ff],\n    [0x370, 0x377],\n    [0x37a, 0x37f],\n    [0x384, 0x38a],\n    [0x38c],\n    [0x38e, 0x3a1],\n    [0x3a3, 0x482],\n    [0x48a, 0x52f],\n    [0x531, 0x556],\n    [0x559, 0x58a],\n    [0x58d, 0x58f],\n    [0x5be],\n    [0x5c0],\n    [0x5c3],\n    [0x5c6],\n    [0x5d0, 0x5ea],\n    [0x5ef, 0x5f4],\n    [0x606, 0x60f],\n    [0x61b],\n    [0x61d, 0x64a],\n    [0x660, 0x66f],\n    [0x671, 0x6d5],\n    [0x6de],\n    [0x6e5, 0x6e6],\n    [0x6e9],\n    [0x6ee, 0x70d],\n    [0x710],\n    [0x712, 0x72f],\n    [0x74d, 0x7a5],\n    [0x7b1],\n    [0x7c0, 0x7ea],\n    [0x7f4, 0x7fa],\n    [0x7fe, 0x815],\n    [0x81a],\n    [0x824],\n    [0x828],\n    [0x830, 0x83e],\n    [0x840, 0x858],\n    [0x85e],\n    [0x860, 0x86a],\n    [0x870, 0x88e],\n    [0x8a0, 0x8c9],\n    [0x904, 0x939],\n    [0x93d],\n    [0x950],\n    [0x958, 0x961],\n    [0x964, 0x980],\n    [0x985, 0x98c],\n    [0x98f, 0x990],\n    [0x993, 0x9a8],\n    [0x9aa, 0x9b0],\n    [0x9b2],\n    [0x9b6, 0x9b9],\n    [0x9bd],\n    [0x9ce],\n    [0x9dc, 0x9dd],\n    [0x9df, 0x9e1],\n    [0x9e6, 0x9fd],\n    [0xa05, 0xa0a],\n    [0xa0f, 0xa10],\n    [0xa13, 0xa28],\n    [0xa2a, 0xa30],\n    [0xa32, 0xa33],\n    [0xa35, 0xa36],\n    [0xa38, 0xa39],\n    [0xa59, 0xa5c],\n    [0xa5e],\n    [0xa66, 0xa6f],\n    [0xa72, 0xa74],\n    [0xa76],\n    [0xa85, 0xa8d],\n    [0xa8f, 0xa91],\n    [0xa93, 0xaa8],\n    [0xaaa, 0xab0],\n    [0xab2, 0xab3],\n    [0xab5, 0xab9],\n    [0xabd],\n    [0xad0],\n    [0xae0, 0xae1],\n    [0xae6, 0xaf1],\n    [0xaf9],\n    [0xb05, 0xb0c],\n    [0xb0f, 0xb10],\n    [0xb13, 0xb28],\n    [0xb2a, 0xb30],\n    [0xb32, 0xb33],\n    [0xb35, 0xb39],\n    [0xb3d],\n    [0xb5c, 0xb5d],\n    [0xb5f, 0xb61],\n    [0xb66, 0xb77],\n    [0xb83],\n    [0xb85, 0xb8a],\n    [0xb8e, 0xb90],\n    [0xb92, 0xb95],\n    [0xb99, 0xb9a],\n    [0xb9c],\n    [0xb9e, 0xb9f],\n    [0xba3, 0xba4],\n    [0xba8, 0xbaa],\n    [0xbae, 0xbb9],\n    [0xbd0],\n    [0xbe6, 0xbfa],\n    [0xc05, 0xc0c],\n    [0xc0e, 0xc10],\n    [0xc12, 0xc28],\n    [0xc2a, 0xc39],\n    [0xc3d],\n    [0xc58, 0xc5a],\n    [0xc5d],\n    [0xc60, 0xc61],\n    [0xc66, 0xc6f],\n    [0xc77, 0xc80],\n    [0xc84, 0xc8c],\n    [0xc8e, 0xc90],\n    [0xc92, 0xca8],\n    [0xcaa, 0xcb3],\n    [0xcb5, 0xcb9],\n    [0xcbd],\n    [0xcdd, 0xcde],\n    [0xce0, 0xce1],\n    [0xce6, 0xcef],\n    [0xcf1, 0xcf2],\n    [0xd04, 0xd0c],\n    [0xd0e, 0xd10],\n    [0xd12, 0xd3a],\n    [0xd3d],\n    [0xd4f],\n    [0xd54, 0xd56],\n    [0xd58, 0xd61],\n    [0xd66, 0xd7f],\n    [0xd85, 0xd96],\n    [0xd9a, 0xdb1],\n    [0xdb3, 0xdbb],\n    [0xdbd],\n    [0xdc0, 0xdc6],\n    [0xde6, 0xdef],\n    [0xdf4],\n    [0xe01, 0xe30],\n    [0xe32],\n    [0xe3f, 0xe46],\n    [0xe4f, 0xe5b],\n    [0xe81, 0xe82],\n    [0xe84],\n    [0xe86, 0xe8a],\n    [0xe8c, 0xea3],\n    [0xea5],\n    [0xea7, 0xeb0],\n    [0xeb2],\n    [0xebd],\n    [0xec0, 0xec4],\n    [0xec6],\n    [0xed0, 0xed9],\n    [0xedc, 0xedf],\n    [0xf00, 0xf17],\n    [0xf1a, 0xf34],\n    [0xf36],\n    [0xf38],\n    [0xf3a, 0xf3d],\n    [0xf40, 0xf47],\n    [0xf49, 0xf6c],\n    [0xf85],\n    [0xf88, 0xf8c],\n    [0xfbe, 0xfc5],\n    [0xfc7, 0xfcc],\n    [0xfce, 0xfda],\n    [0x1000, 0x102a],\n    [0x103f, 0x1055],\n    [0x105a, 0x105d],\n    [0x1061],\n    [0x1065, 0x1066],\n    [0x106e, 0x1070],\n    [0x1075, 0x1081],\n    [0x108e],\n    [0x1090, 0x1099],\n    [0x109e, 0x10c5],\n    [0x10c7],\n    [0x10cd],\n    [0x10d0, 0x10ff],\n    [0x1200, 0x1248],\n    [0x124a, 0x124d],\n    [0x1250, 0x1256],\n    [0x1258],\n    [0x125a, 0x125d],\n    [0x1260, 0x1288],\n    [0x128a, 0x128d],\n    [0x1290, 0x12b0],\n    [0x12b2, 0x12b5],\n    [0x12b8, 0x12be],\n    [0x12c0],\n    [0x12c2, 0x12c5],\n    [0x12c8, 0x12d6],\n    [0x12d8, 0x1310],\n    [0x1312, 0x1315],\n    [0x1318, 0x135a],\n    [0x1360, 0x137c],\n    [0x1380, 0x1399],\n    [0x13a0, 0x13f5],\n    [0x13f8, 0x13fd],\n    [0x1400, 0x169c],\n    [0x16a0, 0x16f8],\n    [0x1700, 0x1711],\n    [0x171f, 0x1731],\n    [0x1735, 0x1736],\n    [0x1740, 0x1751],\n    [0x1760, 0x176c],\n    [0x176e, 0x1770],\n    [0x1780, 0x17b3],\n    [0x17d4, 0x17dc],\n    [0x17e0, 0x17e9],\n    [0x17f0, 0x17f9],\n    [0x1800, 0x180a],\n    [0x1810, 0x1819],\n    [0x1820, 0x1878],\n    [0x1880, 0x1884],\n    [0x1887, 0x18a8],\n    [0x18aa],\n    [0x18b0, 0x18f5],\n    [0x1900, 0x191e],\n    [0x1940],\n    [0x1944, 0x196d],\n    [0x1970, 0x1974],\n    [0x1980, 0x19ab],\n    [0x19b0, 0x19c9],\n    [0x19d0, 0x19da],\n    [0x19de, 0x1a16],\n    [0x1a1e, 0x1a54],\n    [0x1a80, 0x1a89],\n    [0x1a90, 0x1a99],\n    [0x1aa0, 0x1aad],\n    [0x1b05, 0x1b33],\n    [0x1b45, 0x1b4c],\n    [0x1b50, 0x1b6a],\n    [0x1b74, 0x1b7e],\n    [0x1b83, 0x1ba0],\n    [0x1bae, 0x1be5],\n    [0x1bfc, 0x1c23],\n    [0x1c3b, 0x1c49],\n    [0x1c4d, 0x1c88],\n    [0x1c90, 0x1cba],\n    [0x1cbd, 0x1cc7],\n    [0x1cd3],\n    [0x1ce9, 0x1cec],\n    [0x1cee, 0x1cf3],\n    [0x1cf5, 0x1cf6],\n    [0x1cfa],\n    [0x1d00, 0x1dbf],\n    [0x1e00, 0x1f15],\n    [0x1f18, 0x1f1d],\n    [0x1f20, 0x1f45],\n    [0x1f48, 0x1f4d],\n    [0x1f50, 0x1f57],\n    [0x1f59],\n    [0x1f5b],\n    [0x1f5d],\n    [0x1f5f, 0x1f7d],\n    [0x1f80, 0x1fb4],\n    [0x1fb6, 0x1fc4],\n    [0x1fc6, 0x1fd3],\n    [0x1fd6, 0x1fdb],\n    [0x1fdd, 0x1fef],\n    [0x1ff2, 0x1ff4],\n    [0x1ff6, 0x1ffe],\n    [0x2000, 0x200a],\n    [0x2010, 0x2029],\n    [0x202f, 0x205f],\n    [0x2070, 0x2071],\n    [0x2074, 0x208e],\n    [0x2090, 0x209c],\n    [0x20a0, 0x20c0],\n    [0x2100, 0x218b],\n    [0x2190, 0x2426],\n    [0x2440, 0x244a],\n    [0x2460, 0x2b73],\n    [0x2b76, 0x2b95],\n    [0x2b97, 0x2cee],\n    [0x2cf2, 0x2cf3],\n    [0x2cf9, 0x2d25],\n    [0x2d27],\n    [0x2d2d],\n    [0x2d30, 0x2d67],\n    [0x2d6f, 0x2d70],\n    [0x2d80, 0x2d96],\n    [0x2da0, 0x2da6],\n    [0x2da8, 0x2dae],\n    [0x2db0, 0x2db6],\n    [0x2db8, 0x2dbe],\n    [0x2dc0, 0x2dc6],\n    [0x2dc8, 0x2dce],\n    [0x2dd0, 0x2dd6],\n    [0x2dd8, 0x2dde],\n    [0x2e00, 0x2e5d],\n    [0x2e80, 0x2e99],\n    [0x2e9b, 0x2ef3],\n    [0x2f00, 0x2fd5],\n    [0x2ff0, 0x3029],\n    [0x3030, 0x303f],\n    [0x3041, 0x3096],\n    [0x309b, 0x30ff],\n    [0x3105, 0x312f],\n    [0x3131, 0x318e],\n    [0x3190, 0x31e3],\n    [0x31ef, 0x321e],\n    [0x3220, 0x3400],\n    [0x4dbf, 0x4e00],\n    [0x9fff, 0xa48c],\n    [0xa490, 0xa4c6],\n    [0xa4d0, 0xa62b],\n    [0xa640, 0xa66e],\n    [0xa673],\n    [0xa67e, 0xa69d],\n    [0xa6a0, 0xa6ef],\n    [0xa6f2, 0xa6f7],\n    [0xa700, 0xa7ca],\n    [0xa7d0, 0xa7d1],\n    [0xa7d3],\n    [0xa7d5, 0xa7d9],\n    [0xa7f2, 0xa801],\n    [0xa803, 0xa805],\n    [0xa807, 0xa80a],\n    [0xa80c, 0xa822],\n    [0xa828, 0xa82b],\n    [0xa830, 0xa839],\n    [0xa840, 0xa877],\n    [0xa882, 0xa8b3],\n    [0xa8ce, 0xa8d9],\n    [0xa8f2, 0xa8fe],\n    [0xa900, 0xa925],\n    [0xa92e, 0xa946],\n    [0xa95f],\n    [0xa984, 0xa9b2],\n    [0xa9c1, 0xa9cd],\n    [0xa9cf, 0xa9d9],\n    [0xa9de, 0xa9e4],\n    [0xa9e6, 0xa9fe],\n    [0xaa00, 0xaa28],\n    [0xaa40, 0xaa42],\n    [0xaa44, 0xaa4b],\n    [0xaa50, 0xaa59],\n    [0xaa5c, 0xaa7a],\n    [0xaa7e, 0xaaaf],\n    [0xaab1],\n    [0xaab5, 0xaab6],\n    [0xaab9, 0xaabd],\n    [0xaac0],\n    [0xaac2],\n    [0xaadb, 0xaaea],\n    [0xaaf0, 0xaaf4],\n    [0xab01, 0xab06],\n    [0xab09, 0xab0e],\n    [0xab11, 0xab16],\n    [0xab20, 0xab26],\n    [0xab28, 0xab2e],\n    [0xab30, 0xab6b],\n    [0xab70, 0xabe2],\n    [0xabeb],\n    [0xabf0, 0xabf9],\n    [0xac00],\n    [0xd7a3],\n    [0xf900, 0xfa6d],\n    [0xfa70, 0xfad9],\n    [0xfb00, 0xfb06],\n    [0xfb13, 0xfb17],\n    [0xfb1d],\n    [0xfb1f, 0xfb36],\n    [0xfb38, 0xfb3c],\n    [0xfb3e],\n    [0xfb40, 0xfb41],\n    [0xfb43, 0xfb44],\n    [0xfb46, 0xfbc2],\n    [0xfbd3, 0xfd8f],\n    [0xfd92, 0xfdc7],\n    [0xfdcf],\n    [0xfdf0, 0xfdff],\n    [0xfe10, 0xfe19],\n    [0xfe30, 0xfe52],\n    [0xfe54, 0xfe66],\n    [0xfe68, 0xfe6b],\n    [0xfe70, 0xfe74],\n    [0xfe76, 0xfefc],\n    [0xff01, 0xff9d],\n    [0xffa0, 0xffbe],\n    [0xffc2, 0xffc7],\n    [0xffca, 0xffcf],\n    [0xffd2, 0xffd7],\n    [0xffda, 0xffdc],\n    [0xffe0, 0xffe6],\n    [0xffe8, 0xffee],\n    [0xfffc, 0xfffd],\n    [0x10000, 0x1000b],\n    [0x1000d, 0x10026],\n    [0x10028, 0x1003a],\n    [0x1003c, 0x1003d],\n    [0x1003f, 0x1004d],\n    [0x10050, 0x1005d],\n    [0x10080, 0x100fa],\n    [0x10100, 0x10102],\n    [0x10107, 0x10133],\n    [0x10137, 0x1018e],\n    [0x10190, 0x1019c],\n    [0x101a0],\n    [0x101d0, 0x101fc],\n    [0x10280, 0x1029c],\n    [0x102a0, 0x102d0],\n    [0x102e1, 0x102fb],\n    [0x10300, 0x10323],\n    [0x1032d, 0x1034a],\n    [0x10350, 0x10375],\n    [0x10380, 0x1039d],\n    [0x1039f, 0x103c3],\n    [0x103c8, 0x103d5],\n    [0x10400, 0x1049d],\n    [0x104a0, 0x104a9],\n    [0x104b0, 0x104d3],\n    [0x104d8, 0x104fb],\n    [0x10500, 0x10527],\n    [0x10530, 0x10563],\n    [0x1056f, 0x1057a],\n    [0x1057c, 0x1058a],\n    [0x1058c, 0x10592],\n    [0x10594, 0x10595],\n    [0x10597, 0x105a1],\n    [0x105a3, 0x105b1],\n    [0x105b3, 0x105b9],\n    [0x105bb, 0x105bc],\n    [0x10600, 0x10736],\n    [0x10740, 0x10755],\n    [0x10760, 0x10767],\n    [0x10780, 0x10785],\n    [0x10787, 0x107b0],\n    [0x107b2, 0x107ba],\n    [0x10800, 0x10805],\n    [0x10808],\n    [0x1080a, 0x10835],\n    [0x10837, 0x10838],\n    [0x1083c],\n    [0x1083f, 0x10855],\n    [0x10857, 0x1089e],\n    [0x108a7, 0x108af],\n    [0x108e0, 0x108f2],\n    [0x108f4, 0x108f5],\n    [0x108fb, 0x1091b],\n    [0x1091f, 0x10939],\n    [0x1093f],\n    [0x10980, 0x109b7],\n    [0x109bc, 0x109cf],\n    [0x109d2, 0x10a00],\n    [0x10a10, 0x10a13],\n    [0x10a15, 0x10a17],\n    [0x10a19, 0x10a35],\n    [0x10a40, 0x10a48],\n    [0x10a50, 0x10a58],\n    [0x10a60, 0x10a9f],\n    [0x10ac0, 0x10ae4],\n    [0x10aeb, 0x10af6],\n    [0x10b00, 0x10b35],\n    [0x10b39, 0x10b55],\n    [0x10b58, 0x10b72],\n    [0x10b78, 0x10b91],\n    [0x10b99, 0x10b9c],\n    [0x10ba9, 0x10baf],\n    [0x10c00, 0x10c48],\n    [0x10c80, 0x10cb2],\n    [0x10cc0, 0x10cf2],\n    [0x10cfa, 0x10d23],\n    [0x10d30, 0x10d39],\n    [0x10e60, 0x10e7e],\n    [0x10e80, 0x10ea9],\n    [0x10ead],\n    [0x10eb0, 0x10eb1],\n    [0x10f00, 0x10f27],\n    [0x10f30, 0x10f45],\n    [0x10f51, 0x10f59],\n    [0x10f70, 0x10f81],\n    [0x10f86, 0x10f89],\n    [0x10fb0, 0x10fcb],\n    [0x10fe0, 0x10ff6],\n    [0x11003, 0x11037],\n    [0x11047, 0x1104d],\n    [0x11052, 0x1106f],\n    [0x11071, 0x11072],\n    [0x11075],\n    [0x11083, 0x110af],\n    [0x110bb, 0x110bc],\n    [0x110be, 0x110c1],\n    [0x110d0, 0x110e8],\n    [0x110f0, 0x110f9],\n    [0x11103, 0x11126],\n    [0x11136, 0x11144],\n    [0x11147],\n    [0x11150, 0x11172],\n    [0x11174, 0x11176],\n    [0x11183, 0x111b2],\n    [0x111c1],\n    [0x111c4, 0x111c8],\n    [0x111cd],\n    [0x111d0, 0x111df],\n    [0x111e1, 0x111f4],\n    [0x11200, 0x11211],\n    [0x11213, 0x1122b],\n    [0x11238, 0x1123d],\n    [0x1123f, 0x11240],\n    [0x11280, 0x11286],\n    [0x11288],\n    [0x1128a, 0x1128d],\n    [0x1128f, 0x1129d],\n    [0x1129f, 0x112a9],\n    [0x112b0, 0x112de],\n    [0x112f0, 0x112f9],\n    [0x11305, 0x1130c],\n    [0x1130f, 0x11310],\n    [0x11313, 0x11328],\n    [0x1132a, 0x11330],\n    [0x11332, 0x11333],\n    [0x11335, 0x11339],\n    [0x1133d],\n    [0x11350],\n    [0x1135d, 0x11361],\n    [0x11400, 0x11434],\n    [0x11447, 0x1145b],\n    [0x1145d],\n    [0x1145f, 0x11461],\n    [0x11480, 0x114af],\n    [0x114c4, 0x114c7],\n    [0x114d0, 0x114d9],\n    [0x11580, 0x115ae],\n    [0x115c1, 0x115db],\n    [0x11600, 0x1162f],\n    [0x11641, 0x11644],\n    [0x11650, 0x11659],\n    [0x11660, 0x1166c],\n    [0x11680, 0x116aa],\n    [0x116b8, 0x116b9],\n    [0x116c0, 0x116c9],\n    [0x11700, 0x1171a],\n    [0x11730, 0x11746],\n    [0x11800, 0x1182b],\n    [0x1183b],\n    [0x118a0, 0x118f2],\n    [0x118ff, 0x11906],\n    [0x11909],\n    [0x1190c, 0x11913],\n    [0x11915, 0x11916],\n    [0x11918, 0x1192f],\n    [0x11944, 0x11946],\n    [0x11950, 0x11959],\n    [0x119a0, 0x119a7],\n    [0x119aa, 0x119d0],\n    [0x119e1, 0x119e3],\n    [0x11a00],\n    [0x11a0b, 0x11a32],\n    [0x11a3f, 0x11a46],\n    [0x11a50],\n    [0x11a5c, 0x11a83],\n    [0x11a9a, 0x11aa2],\n    [0x11ab0, 0x11af8],\n    [0x11b00, 0x11b09],\n    [0x11c00, 0x11c08],\n    [0x11c0a, 0x11c2e],\n    [0x11c40, 0x11c45],\n    [0x11c50, 0x11c6c],\n    [0x11c70, 0x11c8f],\n    [0x11d00, 0x11d06],\n    [0x11d08, 0x11d09],\n    [0x11d0b, 0x11d30],\n    [0x11d50, 0x11d59],\n    [0x11d60, 0x11d65],\n    [0x11d67, 0x11d68],\n    [0x11d6a, 0x11d89],\n    [0x11d98],\n    [0x11da0, 0x11da9],\n    [0x11ee0, 0x11ef2],\n    [0x11ef7, 0x11ef8],\n    [0x11f04, 0x11f10],\n    [0x11f12, 0x11f33],\n    [0x11f43, 0x11f59],\n    [0x11fb0],\n    [0x11fc0, 0x11ff1],\n    [0x11fff, 0x12399],\n    [0x12400, 0x1246e],\n    [0x12470, 0x12474],\n    [0x12480, 0x12543],\n    [0x12f90, 0x12ff2],\n    [0x13000, 0x1342f],\n    [0x13441, 0x13446],\n    [0x14400, 0x14646],\n    [0x16800, 0x16a38],\n    [0x16a40, 0x16a5e],\n    [0x16a60, 0x16a69],\n    [0x16a6e, 0x16abe],\n    [0x16ac0, 0x16ac9],\n    [0x16ad0, 0x16aed],\n    [0x16af5],\n    [0x16b00, 0x16b2f],\n    [0x16b37, 0x16b45],\n    [0x16b50, 0x16b59],\n    [0x16b5b, 0x16b61],\n    [0x16b63, 0x16b77],\n    [0x16b7d, 0x16b8f],\n    [0x16e40, 0x16e9a],\n    [0x16f00, 0x16f4a],\n    [0x16f50],\n    [0x16f93, 0x16f9f],\n    [0x16fe0, 0x16fe3],\n    [0x17000],\n    [0x187f7],\n    [0x18800, 0x18cd5],\n    [0x18d00],\n    [0x18d08],\n    [0x1aff0, 0x1aff3],\n    [0x1aff5, 0x1affb],\n    [0x1affd, 0x1affe],\n    [0x1b000, 0x1b122],\n    [0x1b132],\n    [0x1b150, 0x1b152],\n    [0x1b155],\n    [0x1b164, 0x1b167],\n    [0x1b170, 0x1b2fb],\n    [0x1bc00, 0x1bc6a],\n    [0x1bc70, 0x1bc7c],\n    [0x1bc80, 0x1bc88],\n    [0x1bc90, 0x1bc99],\n    [0x1bc9c],\n    [0x1bc9f],\n    [0x1cf50, 0x1cfc3],\n    [0x1d000, 0x1d0f5],\n    [0x1d100, 0x1d126],\n    [0x1d129, 0x1d164],\n    [0x1d16a, 0x1d16c],\n    [0x1d183, 0x1d184],\n    [0x1d18c, 0x1d1a9],\n    [0x1d1ae, 0x1d1ea],\n    [0x1d200, 0x1d241],\n    [0x1d245],\n    [0x1d2c0, 0x1d2d3],\n    [0x1d2e0, 0x1d2f3],\n    [0x1d300, 0x1d356],\n    [0x1d360, 0x1d378],\n    [0x1d400, 0x1d454],\n    [0x1d456, 0x1d49c],\n    [0x1d49e, 0x1d49f],\n    [0x1d4a2],\n    [0x1d4a5, 0x1d4a6],\n    [0x1d4a9, 0x1d4ac],\n    [0x1d4ae, 0x1d4b9],\n    [0x1d4bb],\n    [0x1d4bd, 0x1d4c3],\n    [0x1d4c5, 0x1d505],\n    [0x1d507, 0x1d50a],\n    [0x1d50d, 0x1d514],\n    [0x1d516, 0x1d51c],\n    [0x1d51e, 0x1d539],\n    [0x1d53b, 0x1d53e],\n    [0x1d540, 0x1d544],\n    [0x1d546],\n    [0x1d54a, 0x1d550],\n    [0x1d552, 0x1d6a5],\n    [0x1d6a8, 0x1d7cb],\n    [0x1d7ce, 0x1d9ff],\n    [0x1da37, 0x1da3a],\n    [0x1da6d, 0x1da74],\n    [0x1da76, 0x1da83],\n    [0x1da85, 0x1da8b],\n    [0x1df00, 0x1df1e],\n    [0x1df25, 0x1df2a],\n    [0x1e030, 0x1e06d],\n    [0x1e100, 0x1e12c],\n    [0x1e137, 0x1e13d],\n    [0x1e140, 0x1e149],\n    [0x1e14e, 0x1e14f],\n    [0x1e290, 0x1e2ad],\n    [0x1e2c0, 0x1e2eb],\n    [0x1e2f0, 0x1e2f9],\n    [0x1e2ff],\n    [0x1e4d0, 0x1e4eb],\n    [0x1e4f0, 0x1e4f9],\n    [0x1e7e0, 0x1e7e6],\n    [0x1e7e8, 0x1e7eb],\n    [0x1e7ed, 0x1e7ee],\n    [0x1e7f0, 0x1e7fe],\n    [0x1e800, 0x1e8c4],\n    [0x1e8c7, 0x1e8cf],\n    [0x1e900, 0x1e943],\n    [0x1e94b],\n    [0x1e950, 0x1e959],\n    [0x1e95e, 0x1e95f],\n    [0x1ec71, 0x1ecb4],\n    [0x1ed01, 0x1ed3d],\n    [0x1ee00, 0x1ee03],\n    [0x1ee05, 0x1ee1f],\n    [0x1ee21, 0x1ee22],\n    [0x1ee24],\n    [0x1ee27],\n    [0x1ee29, 0x1ee32],\n    [0x1ee34, 0x1ee37],\n    [0x1ee39],\n    [0x1ee3b],\n    [0x1ee42],\n    [0x1ee47],\n    [0x1ee49],\n    [0x1ee4b],\n    [0x1ee4d, 0x1ee4f],\n    [0x1ee51, 0x1ee52],\n    [0x1ee54],\n    [0x1ee57],\n    [0x1ee59],\n    [0x1ee5b],\n    [0x1ee5d],\n    [0x1ee5f],\n    [0x1ee61, 0x1ee62],\n    [0x1ee64],\n    [0x1ee67, 0x1ee6a],\n    [0x1ee6c, 0x1ee72],\n    [0x1ee74, 0x1ee77],\n    [0x1ee79, 0x1ee7c],\n    [0x1ee7e],\n    [0x1ee80, 0x1ee89],\n    [0x1ee8b, 0x1ee9b],\n    [0x1eea1, 0x1eea3],\n    [0x1eea5, 0x1eea9],\n    [0x1eeab, 0x1eebb],\n    [0x1eef0, 0x1eef1],\n    [0x1f000, 0x1f02b],\n    [0x1f030, 0x1f093],\n    [0x1f0a0, 0x1f0ae],\n    [0x1f0b1, 0x1f0bf],\n    [0x1f0c1, 0x1f0cf],\n    [0x1f0d1, 0x1f0f5],\n    [0x1f100, 0x1f1ad],\n    [0x1f200, 0x1f202],\n    [0x1f210, 0x1f23b],\n    [0x1f240, 0x1f248],\n    [0x1f250, 0x1f251],\n    [0x1f260, 0x1f265],\n    [0x1f300, 0x1f3fa],\n    [0x1f400, 0x1f6d7],\n    [0x1f6dc, 0x1f6ec],\n    [0x1f6f0, 0x1f6fc],\n    [0x1f700, 0x1f776],\n    [0x1f77b, 0x1f7d9],\n    [0x1f7e0, 0x1f7eb],\n    [0x1f7f0],\n    [0x1f800, 0x1f80b],\n    [0x1f810, 0x1f847],\n    [0x1f850, 0x1f859],\n    [0x1f860, 0x1f887],\n    [0x1f890, 0x1f8ad],\n    [0x1f8b0, 0x1f8b1],\n    [0x1f900, 0x1fa53],\n    [0x1fa60, 0x1fa6d],\n    [0x1fa70, 0x1fa7c],\n    [0x1fa80, 0x1fa88],\n    [0x1fa90, 0x1fabd],\n    [0x1fabf, 0x1fac5],\n    [0x1face, 0x1fadb],\n    [0x1fae0, 0x1fae8],\n    [0x1faf0, 0x1faf8],\n    [0x1fb00, 0x1fb92],\n    [0x1fb94, 0x1fbca],\n    [0x1fbf0, 0x1fbf9],\n    [0x20000],\n    [0x2a6df],\n    [0x2a700],\n    [0x2b739],\n    [0x2b740],\n    [0x2b81d],\n    [0x2b820],\n    [0x2cea1],\n    [0x2ceb0],\n    [0x2ebe0],\n    [0x2ebf0],\n    [0x2ee5d],\n    [0x2f800, 0x2fa1d],\n    [0x30000],\n    [0x3134a],\n    [0x31350],\n    [0x323af],\n];\nexport const autonomousDecomposableGraphemeRanges = [\n    [0xc0, 0xc5],\n    [0xc7, 0xcf],\n    [0xd1, 0xd6],\n    [0xd9, 0xdd],\n    [0xe0, 0xe5],\n    [0xe7, 0xef],\n    [0xf1, 0xf6],\n    [0xf9, 0xfd],\n    [0xff, 0x10f],\n    [0x112, 0x125],\n    [0x128, 0x130],\n    [0x134, 0x137],\n    [0x139, 0x13e],\n    [0x143, 0x148],\n    [0x14c, 0x151],\n    [0x154, 0x165],\n    [0x168, 0x17e],\n    [0x1a0, 0x1a1],\n    [0x1af, 0x1b0],\n    [0x1cd, 0x1dc],\n    [0x1de, 0x1e3],\n    [0x1e6, 0x1f0],\n    [0x1f4, 0x1f5],\n    [0x1f8, 0x21b],\n    [0x21e, 0x21f],\n    [0x226, 0x233],\n    [0x385, 0x386],\n    [0x388, 0x38a],\n    [0x38c],\n    [0x38e, 0x390],\n    [0x3aa, 0x3b0],\n    [0x3ca, 0x3ce],\n    [0x3d3, 0x3d4],\n    [0x400, 0x401],\n    [0x403],\n    [0x407],\n    [0x40c, 0x40e],\n    [0x419],\n    [0x439],\n    [0x450, 0x451],\n    [0x453],\n    [0x457],\n    [0x45c, 0x45e],\n    [0x476, 0x477],\n    [0x4c1, 0x4c2],\n    [0x4d0, 0x4d3],\n    [0x4d6, 0x4d7],\n    [0x4da, 0x4df],\n    [0x4e2, 0x4e7],\n    [0x4ea, 0x4f5],\n    [0x4f8, 0x4f9],\n    [0x622, 0x626],\n    [0x6c0],\n    [0x6c2],\n    [0x6d3],\n    [0x929],\n    [0x931],\n    [0x934],\n    [0x958, 0x95f],\n    [0x9dc, 0x9dd],\n    [0x9df],\n    [0xa33],\n    [0xa36],\n    [0xa59, 0xa5b],\n    [0xa5e],\n    [0xb5c, 0xb5d],\n    [0xb94],\n    [0xf43],\n    [0xf4d],\n    [0xf52],\n    [0xf57],\n    [0xf5c],\n    [0xf69],\n    [0x1026],\n    [0x1b06],\n    [0x1b08],\n    [0x1b0a],\n    [0x1b0c],\n    [0x1b0e],\n    [0x1b12],\n    [0x1e00, 0x1e99],\n    [0x1e9b],\n    [0x1ea0, 0x1ef9],\n    [0x1f00, 0x1f15],\n    [0x1f18, 0x1f1d],\n    [0x1f20, 0x1f45],\n    [0x1f48, 0x1f4d],\n    [0x1f50, 0x1f57],\n    [0x1f59],\n    [0x1f5b],\n    [0x1f5d],\n    [0x1f5f, 0x1f70],\n    [0x1f72],\n    [0x1f74],\n    [0x1f76],\n    [0x1f78],\n    [0x1f7a],\n    [0x1f7c],\n    [0x1f80, 0x1fb4],\n    [0x1fb6, 0x1fba],\n    [0x1fbc],\n    [0x1fc1, 0x1fc4],\n    [0x1fc6, 0x1fc8],\n    [0x1fca],\n    [0x1fcc, 0x1fd2],\n    [0x1fd6, 0x1fda],\n    [0x1fdd, 0x1fe2],\n    [0x1fe4, 0x1fea],\n    [0x1fec, 0x1fed],\n    [0x1ff2, 0x1ff4],\n    [0x1ff6, 0x1ff8],\n    [0x1ffa],\n    [0x1ffc],\n    [0x219a, 0x219b],\n    [0x21ae],\n    [0x21cd, 0x21cf],\n    [0x2204],\n    [0x2209],\n    [0x220c],\n    [0x2224],\n    [0x2226],\n    [0x2241],\n    [0x2244],\n    [0x2247],\n    [0x2249],\n    [0x2260],\n    [0x2262],\n    [0x226d, 0x2271],\n    [0x2274, 0x2275],\n    [0x2278, 0x2279],\n    [0x2280, 0x2281],\n    [0x2284, 0x2285],\n    [0x2288, 0x2289],\n    [0x22ac, 0x22af],\n    [0x22e0, 0x22e3],\n    [0x22ea, 0x22ed],\n    [0x2adc],\n    [0x304c],\n    [0x304e],\n    [0x3050],\n    [0x3052],\n    [0x3054],\n    [0x3056],\n    [0x3058],\n    [0x305a],\n    [0x305c],\n    [0x305e],\n    [0x3060],\n    [0x3062],\n    [0x3065],\n    [0x3067],\n    [0x3069],\n    [0x3070, 0x3071],\n    [0x3073, 0x3074],\n    [0x3076, 0x3077],\n    [0x3079, 0x307a],\n    [0x307c, 0x307d],\n    [0x3094],\n    [0x309e],\n    [0x30ac],\n    [0x30ae],\n    [0x30b0],\n    [0x30b2],\n    [0x30b4],\n    [0x30b6],\n    [0x30b8],\n    [0x30ba],\n    [0x30bc],\n    [0x30be],\n    [0x30c0],\n    [0x30c2],\n    [0x30c5],\n    [0x30c7],\n    [0x30c9],\n    [0x30d0, 0x30d1],\n    [0x30d3, 0x30d4],\n    [0x30d6, 0x30d7],\n    [0x30d9, 0x30da],\n    [0x30dc, 0x30dd],\n    [0x30f4],\n    [0x30f7, 0x30fa],\n    [0x30fe],\n    [0xac00],\n    [0xd7a3],\n    [0xfb1d],\n    [0xfb1f],\n    [0xfb2a, 0xfb36],\n    [0xfb38, 0xfb3c],\n    [0xfb3e],\n    [0xfb40, 0xfb41],\n    [0xfb43, 0xfb44],\n    [0xfb46, 0xfb4e],\n    [0x1109a],\n    [0x1109c],\n    [0x110ab],\n    [0x1d15e, 0x1d164],\n    [0x1d1bb, 0x1d1c0],\n];\n","export function unsafeGenerateN(rng, num) {\n    var out = [];\n    for (var idx = 0; idx != num; ++idx) {\n        out.push(rng.unsafeNext());\n    }\n    return out;\n}\nexport function generateN(rng, num) {\n    var nextRng = rng.clone();\n    var out = unsafeGenerateN(nextRng, num);\n    return [out, nextRng];\n}\nexport function unsafeSkipN(rng, num) {\n    for (var idx = 0; idx != num; ++idx) {\n        rng.unsafeNext();\n    }\n}\nexport function skipN(rng, num) {\n    var nextRng = rng.clone();\n    unsafeSkipN(nextRng, num);\n    return nextRng;\n}\n","export function filterInvalidSubdomainLabel(subdomainLabel) {\n    if (subdomainLabel.length > 63) {\n        return false;\n    }\n    return (subdomainLabel.length < 4 ||\n        subdomainLabel[0] !== 'x' ||\n        subdomainLabel[1] !== 'n' ||\n        subdomainLabel[2] !== '-' ||\n        subdomainLabel[3] !== '-');\n}\n","export function addArrayIntToNew(arrayIntA, arrayIntB) {\n    if (arrayIntA.sign !== arrayIntB.sign) {\n        return substractArrayIntToNew(arrayIntA, { sign: -arrayIntB.sign, data: arrayIntB.data });\n    }\n    var data = [];\n    var reminder = 0;\n    var dataA = arrayIntA.data;\n    var dataB = arrayIntB.data;\n    for (var indexA = dataA.length - 1, indexB = dataB.length - 1; indexA >= 0 || indexB >= 0; --indexA, --indexB) {\n        var vA = indexA >= 0 ? dataA[indexA] : 0;\n        var vB = indexB >= 0 ? dataB[indexB] : 0;\n        var current = vA + vB + reminder;\n        data.push(current >>> 0);\n        reminder = ~~(current / 0x100000000);\n    }\n    if (reminder !== 0) {\n        data.push(reminder);\n    }\n    return { sign: arrayIntA.sign, data: data.reverse() };\n}\nexport function addOneToPositiveArrayInt(arrayInt) {\n    arrayInt.sign = 1;\n    var data = arrayInt.data;\n    for (var index = data.length - 1; index >= 0; --index) {\n        if (data[index] === 0xffffffff) {\n            data[index] = 0;\n        }\n        else {\n            data[index] += 1;\n            return arrayInt;\n        }\n    }\n    data.unshift(1);\n    return arrayInt;\n}\nfunction isStrictlySmaller(dataA, dataB) {\n    var maxLength = Math.max(dataA.length, dataB.length);\n    for (var index = 0; index < maxLength; ++index) {\n        var indexA = index + dataA.length - maxLength;\n        var indexB = index + dataB.length - maxLength;\n        var vA = indexA >= 0 ? dataA[indexA] : 0;\n        var vB = indexB >= 0 ? dataB[indexB] : 0;\n        if (vA < vB)\n            return true;\n        if (vA > vB)\n            return false;\n    }\n    return false;\n}\nexport function substractArrayIntToNew(arrayIntA, arrayIntB) {\n    if (arrayIntA.sign !== arrayIntB.sign) {\n        return addArrayIntToNew(arrayIntA, { sign: -arrayIntB.sign, data: arrayIntB.data });\n    }\n    var dataA = arrayIntA.data;\n    var dataB = arrayIntB.data;\n    if (isStrictlySmaller(dataA, dataB)) {\n        var out = substractArrayIntToNew(arrayIntB, arrayIntA);\n        out.sign = -out.sign;\n        return out;\n    }\n    var data = [];\n    var reminder = 0;\n    for (var indexA = dataA.length - 1, indexB = dataB.length - 1; indexA >= 0 || indexB >= 0; --indexA, --indexB) {\n        var vA = indexA >= 0 ? dataA[indexA] : 0;\n        var vB = indexB >= 0 ? dataB[indexB] : 0;\n        var current = vA - vB - reminder;\n        data.push(current >>> 0);\n        reminder = current < 0 ? 1 : 0;\n    }\n    return { sign: arrayIntA.sign, data: data.reverse() };\n}\nexport function trimArrayIntInplace(arrayInt) {\n    var data = arrayInt.data;\n    var firstNonZero = 0;\n    for (; firstNonZero !== data.length && data[firstNonZero] === 0; ++firstNonZero) { }\n    if (firstNonZero === data.length) {\n        arrayInt.sign = 1;\n        arrayInt.data = [0];\n        return arrayInt;\n    }\n    data.splice(0, firstNonZero);\n    return arrayInt;\n}\nexport function fromNumberToArrayInt64(out, n) {\n    if (n < 0) {\n        var posN = -n;\n        out.sign = -1;\n        out.data[0] = ~~(posN / 0x100000000);\n        out.data[1] = posN >>> 0;\n    }\n    else {\n        out.sign = 1;\n        out.data[0] = ~~(n / 0x100000000);\n        out.data[1] = n >>> 0;\n    }\n    return out;\n}\nexport function substractArrayInt64(out, arrayIntA, arrayIntB) {\n    var lowA = arrayIntA.data[1];\n    var highA = arrayIntA.data[0];\n    var signA = arrayIntA.sign;\n    var lowB = arrayIntB.data[1];\n    var highB = arrayIntB.data[0];\n    var signB = arrayIntB.sign;\n    out.sign = 1;\n    if (signA === 1 && signB === -1) {\n        var low_1 = lowA + lowB;\n        var high = highA + highB + (low_1 > 0xffffffff ? 1 : 0);\n        out.data[0] = high >>> 0;\n        out.data[1] = low_1 >>> 0;\n        return out;\n    }\n    var lowFirst = lowA;\n    var highFirst = highA;\n    var lowSecond = lowB;\n    var highSecond = highB;\n    if (signA === -1) {\n        lowFirst = lowB;\n        highFirst = highB;\n        lowSecond = lowA;\n        highSecond = highA;\n    }\n    var reminderLow = 0;\n    var low = lowFirst - lowSecond;\n    if (low < 0) {\n        reminderLow = 1;\n        low = low >>> 0;\n    }\n    out.data[0] = highFirst - highSecond - reminderLow;\n    out.data[1] = low;\n    return out;\n}\n","export const Zero64 = { sign: 1, data: [0, 0] };\nexport const Unit64 = { sign: 1, data: [0, 1] };\nexport function isZero64(a) {\n    return a.data[0] === 0 && a.data[1] === 0;\n}\nexport function isStrictlyNegative64(a) {\n    return a.sign === -1 && !isZero64(a);\n}\nexport function isStrictlyPositive64(a) {\n    return a.sign === 1 && !isZero64(a);\n}\nexport function isEqual64(a, b) {\n    if (a.data[0] === b.data[0] && a.data[1] === b.data[1]) {\n        return a.sign === b.sign || (a.data[0] === 0 && a.data[1] === 0);\n    }\n    return false;\n}\nfunction isStrictlySmaller64Internal(a, b) {\n    return a[0] < b[0] || (a[0] === b[0] && a[1] < b[1]);\n}\nexport function isStrictlySmaller64(a, b) {\n    if (a.sign === b.sign) {\n        return a.sign === 1\n            ? isStrictlySmaller64Internal(a.data, b.data)\n            : isStrictlySmaller64Internal(b.data, a.data);\n    }\n    return a.sign === -1 && (!isZero64(a) || !isZero64(b));\n}\nexport function clone64(a) {\n    return { sign: a.sign, data: [a.data[0], a.data[1]] };\n}\nfunction substract64DataInternal(a, b) {\n    let reminderLow = 0;\n    let low = a[1] - b[1];\n    if (low < 0) {\n        reminderLow = 1;\n        low = low >>> 0;\n    }\n    return [a[0] - b[0] - reminderLow, low];\n}\nfunction substract64Internal(a, b) {\n    if (a.sign === 1 && b.sign === -1) {\n        const low = a.data[1] + b.data[1];\n        const high = a.data[0] + b.data[0] + (low > 0xffffffff ? 1 : 0);\n        return { sign: 1, data: [high >>> 0, low >>> 0] };\n    }\n    return {\n        sign: 1,\n        data: a.sign === 1 ? substract64DataInternal(a.data, b.data) : substract64DataInternal(b.data, a.data),\n    };\n}\nexport function substract64(arrayIntA, arrayIntB) {\n    if (isStrictlySmaller64(arrayIntA, arrayIntB)) {\n        const out = substract64Internal(arrayIntB, arrayIntA);\n        out.sign = -1;\n        return out;\n    }\n    return substract64Internal(arrayIntA, arrayIntB);\n}\nexport function negative64(arrayIntA) {\n    return {\n        sign: -arrayIntA.sign,\n        data: [arrayIntA.data[0], arrayIntA.data[1]],\n    };\n}\nexport function add64(arrayIntA, arrayIntB) {\n    if (isZero64(arrayIntB)) {\n        if (isZero64(arrayIntA)) {\n            return clone64(Zero64);\n        }\n        return clone64(arrayIntA);\n    }\n    return substract64(arrayIntA, negative64(arrayIntB));\n}\nexport function halve64(a) {\n    return {\n        sign: a.sign,\n        data: [Math.floor(a.data[0] / 2), (a.data[0] % 2 === 1 ? 0x80000000 : 0) + Math.floor(a.data[1] / 2)],\n    };\n}\nexport function logLike64(a) {\n    return {\n        sign: a.sign,\n        data: [0, Math.floor(Math.log(a.data[0] * 0x100000000 + a.data[1]) / Math.log(2))],\n    };\n}\n","export function unsafeUniformIntDistributionInternal(rangeSize, rng) {\n    var MaxAllowed = rangeSize > 2 ? ~~(0x100000000 / rangeSize) * rangeSize : 0x100000000;\n    var deltaV = rng.unsafeNext() + 0x80000000;\n    while (deltaV >= MaxAllowed) {\n        deltaV = rng.unsafeNext() + 0x80000000;\n    }\n    return deltaV % rangeSize;\n}\n","export function escapeForTemplateString(originalText) {\n    return originalText.replace(/([$`\\\\])/g, '\\\\$1').replace(/\\r/g, '\\\\r');\n}\nexport function escapeForMultilineComments(originalText) {\n    return originalText.replace(/\\*\\//g, '*\\\\/');\n}\n","export function noShrink(arb) {\n    return arb.noShrink();\n}\n","export const cloneMethod = Symbol.for('fast-check/cloneMethod');\nexport function hasCloneMethod(instance) {\n    return (instance !== null &&\n        (typeof instance === 'object' || typeof instance === 'function') &&\n        cloneMethod in instance &&\n        typeof instance[cloneMethod] === 'function');\n}\nexport function cloneIfNeeded(instance) {\n    return hasCloneMethod(instance) ? instance[cloneMethod]() : instance;\n}\n","export var VerbosityLevel;\n(function (VerbosityLevel) {\n    VerbosityLevel[VerbosityLevel[\"None\"] = 0] = \"None\";\n    VerbosityLevel[VerbosityLevel[\"Verbose\"] = 1] = \"Verbose\";\n    VerbosityLevel[VerbosityLevel[\"VeryVerbose\"] = 2] = \"VeryVerbose\";\n})(VerbosityLevel || (VerbosityLevel = {}));\n","export function arrayToMapMapper(data) {\n    return new Map(data);\n}\nexport function arrayToMapUnmapper(value) {\n    if (typeof value !== 'object' || value === null) {\n        throw new Error('Incompatible instance received: should be a non-null object');\n    }\n    if (!('constructor' in value) || value.constructor !== Map) {\n        throw new Error('Incompatible instance received: should be of exact type Map');\n    }\n    return Array.from(value);\n}\n","export function arrayToSetMapper(data) {\n    return new Set(data);\n}\nexport function arrayToSetUnmapper(value) {\n    if (typeof value !== 'object' || value === null) {\n        throw new Error('Incompatible instance received: should be a non-null object');\n    }\n    if (!('constructor' in value) || value.constructor !== Set) {\n        throw new Error('Incompatible instance received: should be of exact type Set');\n    }\n    return Array.from(value);\n}\n","export class UnbiasedProperty {\n    constructor(property) {\n        this.property = property;\n        if (this.property.runBeforeEach !== undefined && this.property.runAfterEach !== undefined) {\n            this.runBeforeEach = () => this.property.runBeforeEach();\n            this.runAfterEach = () => this.property.runAfterEach();\n        }\n    }\n    isAsync() {\n        return this.property.isAsync();\n    }\n    generate(mrng, _runId) {\n        return this.property.generate(mrng, undefined);\n    }\n    shrink(value) {\n        return this.property.shrink(value);\n    }\n    run(v, dontRunHook) {\n        return this.property.run(v, dontRunHook);\n    }\n}\n","export class PreconditionFailure extends Error {\n    constructor(interruptExecution = false) {\n        super();\n        this.interruptExecution = interruptExecution;\n        this.footprint = PreconditionFailure.SharedFootPrint;\n    }\n    static isFailure(err) {\n        return err != null && err.footprint === PreconditionFailure.SharedFootPrint;\n    }\n}\nPreconditionFailure.SharedFootPrint = Symbol.for('fast-check/PreconditionFailure');\n","export var ExecutionStatus;\n(function (ExecutionStatus) {\n    ExecutionStatus[ExecutionStatus[\"Success\"] = 0] = \"Success\";\n    ExecutionStatus[ExecutionStatus[\"Skipped\"] = -1] = \"Skipped\";\n    ExecutionStatus[ExecutionStatus[\"Failure\"] = 1] = \"Failure\";\n})(ExecutionStatus || (ExecutionStatus = {}));\n","export class ReplayPath {\n    static parse(replayPathStr) {\n        const [serializedCount, serializedChanges] = replayPathStr.split(':');\n        const counts = this.parseCounts(serializedCount);\n        const changes = this.parseChanges(serializedChanges);\n        return this.parseOccurences(counts, changes);\n    }\n    static stringify(replayPath) {\n        const occurences = this.countOccurences(replayPath);\n        const serializedCount = this.stringifyCounts(occurences);\n        const serializedChanges = this.stringifyChanges(occurences);\n        return `${serializedCount}:${serializedChanges}`;\n    }\n    static intToB64(n) {\n        if (n < 26)\n            return String.fromCharCode(n + 65);\n        if (n < 52)\n            return String.fromCharCode(n + 97 - 26);\n        if (n < 62)\n            return String.fromCharCode(n + 48 - 52);\n        return String.fromCharCode(n === 62 ? 43 : 47);\n    }\n    static b64ToInt(c) {\n        if (c >= 'a')\n            return c.charCodeAt(0) - 97 + 26;\n        if (c >= 'A')\n            return c.charCodeAt(0) - 65;\n        if (c >= '0')\n            return c.charCodeAt(0) - 48 + 52;\n        return c === '+' ? 62 : 63;\n    }\n    static countOccurences(replayPath) {\n        return replayPath.reduce((counts, cur) => {\n            if (counts.length === 0 || counts[counts.length - 1].count === 64 || counts[counts.length - 1].value !== cur)\n                counts.push({ value: cur, count: 1 });\n            else\n                counts[counts.length - 1].count += 1;\n            return counts;\n        }, []);\n    }\n    static parseOccurences(counts, changes) {\n        const replayPath = [];\n        for (let idx = 0; idx !== counts.length; ++idx) {\n            const count = counts[idx];\n            const value = changes[idx];\n            for (let num = 0; num !== count; ++num)\n                replayPath.push(value);\n        }\n        return replayPath;\n    }\n    static stringifyChanges(occurences) {\n        let serializedChanges = '';\n        for (let idx = 0; idx < occurences.length; idx += 6) {\n            const changesInt = occurences\n                .slice(idx, idx + 6)\n                .reduceRight((prev, cur) => prev * 2 + (cur.value ? 1 : 0), 0);\n            serializedChanges += this.intToB64(changesInt);\n        }\n        return serializedChanges;\n    }\n    static parseChanges(serializedChanges) {\n        const changesInt = serializedChanges.split('').map((c) => this.b64ToInt(c));\n        const changes = [];\n        for (let idx = 0; idx !== changesInt.length; ++idx) {\n            let current = changesInt[idx];\n            for (let n = 0; n !== 6; ++n, current >>= 1) {\n                changes.push(current % 2 === 1);\n            }\n        }\n        return changes;\n    }\n    static stringifyCounts(occurences) {\n        return occurences.map(({ count }) => this.intToB64(count - 1)).join('');\n    }\n    static parseCounts(serializedCount) {\n        return serializedCount.split('').map((c) => this.b64ToInt(c) + 1);\n    }\n}\n","export class ScheduledCommand {\n    constructor(s, cmd) {\n        this.s = s;\n        this.cmd = cmd;\n    }\n    async check(m) {\n        let error = null;\n        let checkPassed = false;\n        const status = await this.s.scheduleSequence([\n            {\n                label: `check@${this.cmd.toString()}`,\n                builder: async () => {\n                    try {\n                        checkPassed = await Promise.resolve(this.cmd.check(m));\n                    }\n                    catch (err) {\n                        error = err;\n                        throw err;\n                    }\n                },\n            },\n        ]).task;\n        if (status.faulty) {\n            throw error;\n        }\n        return checkPassed;\n    }\n    async run(m, r) {\n        let error = null;\n        const status = await this.s.scheduleSequence([\n            {\n                label: `run@${this.cmd.toString()}`,\n                builder: async () => {\n                    try {\n                        await this.cmd.run(m, r);\n                    }\n                    catch (err) {\n                        error = err;\n                        throw err;\n                    }\n                },\n            },\n        ]).task;\n        if (status.faulty) {\n            throw error;\n        }\n    }\n}\nexport const scheduleCommands = function* (s, cmds) {\n    for (const cmd of cmds) {\n        yield new ScheduledCommand(s, cmd);\n    }\n};\n","export class SourceValuesIterator {\n    constructor(initialValues, maxInitialIterations, remainingSkips) {\n        this.initialValues = initialValues;\n        this.maxInitialIterations = maxInitialIterations;\n        this.remainingSkips = remainingSkips;\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next() {\n        if (--this.maxInitialIterations !== -1 && this.remainingSkips >= 0) {\n            const n = this.initialValues.next();\n            if (!n.done)\n                return { value: n.value, done: false };\n        }\n        return { value: undefined, done: true };\n    }\n    skippedOne() {\n        --this.remainingSkips;\n        ++this.maxInitialIterations;\n    }\n}\n","import { buildCharacterArbitrary } from './_internals/builders/CharacterArbitraryBuilder.js';\nfunction hexaMapper(v) {\n    return v < 10\n        ? v + 48\n        : v + 97 - 10;\n}\nfunction hexaUnmapper(v) {\n    return v < 58\n        ? v - 48\n        : v >= 97 && v < 103\n            ? v - 97 + 10\n            : -1;\n}\nexport function hexa() {\n    return buildCharacterArbitrary(0, 15, hexaMapper, hexaUnmapper);\n}\n","import { buildCharacterArbitrary } from './_internals/builders/CharacterArbitraryBuilder.js';\nfunction base64Mapper(v) {\n    if (v < 26)\n        return v + 65;\n    if (v < 52)\n        return v + 97 - 26;\n    if (v < 62)\n        return v + 48 - 52;\n    return v === 62 ? 43 : 47;\n}\nfunction base64Unmapper(v) {\n    if (v >= 65 && v <= 90)\n        return v - 65;\n    if (v >= 97 && v <= 122)\n        return v - 97 + 26;\n    if (v >= 48 && v <= 57)\n        return v - 48 + 52;\n    return v === 43 ? 62 : v === 47 ? 63 : -1;\n}\nexport function base64() {\n    return buildCharacterArbitrary(0, 63, base64Mapper, base64Unmapper);\n}\n","import { ConstantArbitrary } from './_internals/ConstantArbitrary.js';\nfunction constantFrom(...values) {\n    if (values.length === 0) {\n        throw new Error('fc.constantFrom expects at least one parameter');\n    }\n    return new ConstantArbitrary(values);\n}\nexport { constantFrom };\n","import { safeCharCodeAt } from './globals.js';\nconst crc32Table = [\n    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3, 0x0edb8832,\n    0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2,\n    0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7, 0x136c9856, 0x646ba8c0, 0xfd62f97a,\n    0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172,\n    0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3,\n    0x45df5c75, 0xdcd60dcf, 0xabd13d59, 0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423,\n    0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab,\n    0xb6662d3d, 0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n    0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01, 0x6b6b51f4,\n    0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950,\n    0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65, 0x4db26158, 0x3ab551ce, 0xa3bc0074,\n    0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0,\n    0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525,\n    0x206f85b3, 0xb966d409, 0xce61e49f, 0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81,\n    0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615,\n    0x73dc1683, 0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n    0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7, 0xfed41b76,\n    0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e,\n    0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b, 0xd80d2bda, 0xaf0a1b4c, 0x36034af6,\n    0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,\n    0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7,\n    0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d, 0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f,\n    0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7,\n    0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n    0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45, 0xa00ae278,\n    0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc,\n    0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9, 0xbdbdf21c, 0xcabac28a, 0x53b39330,\n    0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94,\n    0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,\n];\nexport function hash(repr) {\n    let crc = 0xffffffff;\n    for (let idx = 0; idx < repr.length; ++idx) {\n        const c = safeCharCodeAt(repr, idx);\n        if (c < 0x80) {\n            crc = crc32Table[(crc & 0xff) ^ c] ^ (crc >> 8);\n        }\n        else if (c < 0x800) {\n            crc = crc32Table[(crc & 0xff) ^ (192 | ((c >> 6) & 31))] ^ (crc >> 8);\n            crc = crc32Table[(crc & 0xff) ^ (128 | (c & 63))] ^ (crc >> 8);\n        }\n        else if (c >= 0xd800 && c < 0xe000) {\n            const cNext = safeCharCodeAt(repr, ++idx);\n            if (c >= 0xdc00 || cNext < 0xdc00 || cNext > 0xdfff || Number.isNaN(cNext)) {\n                idx -= 1;\n                crc = crc32Table[(crc & 0xff) ^ 0xef] ^ (crc >> 8);\n                crc = crc32Table[(crc & 0xff) ^ 0xbf] ^ (crc >> 8);\n                crc = crc32Table[(crc & 0xff) ^ 0xbd] ^ (crc >> 8);\n            }\n            else {\n                const c1 = (c & 1023) + 64;\n                const c2 = cNext & 1023;\n                crc = crc32Table[(crc & 0xff) ^ (240 | ((c1 >> 8) & 7))] ^ (crc >> 8);\n                crc = crc32Table[(crc & 0xff) ^ (128 | ((c1 >> 2) & 63))] ^ (crc >> 8);\n                crc = crc32Table[(crc & 0xff) ^ (128 | ((c2 >> 6) & 15) | ((c1 & 3) << 4))] ^ (crc >> 8);\n                crc = crc32Table[(crc & 0xff) ^ (128 | (c2 & 63))] ^ (crc >> 8);\n            }\n        }\n        else {\n            crc = crc32Table[(crc & 0xff) ^ (224 | ((c >> 12) & 15))] ^ (crc >> 8);\n            crc = crc32Table[(crc & 0xff) ^ (128 | ((c >> 6) & 63))] ^ (crc >> 8);\n            crc = crc32Table[(crc & 0xff) ^ (128 | (c & 63))] ^ (crc >> 8);\n        }\n    }\n    return (crc | 0) + 0x80000000;\n}\n","import { Date, Error, safeGetTime } from '../../../utils/globals.js';\nconst safeNaN = Number.NaN;\nconst safeNumberIsNaN = Number.isNaN;\nexport function timeToDateMapper(time) {\n    return new Date(time);\n}\nexport function timeToDateUnmapper(value) {\n    if (!(value instanceof Date) || value.constructor !== Date) {\n        throw new Error('Not a valid value for date unmapper');\n    }\n    return safeGetTime(value);\n}\nexport function timeToDateMapperWithNaN(valueForNaN) {\n    return (time) => {\n        return time === valueForNaN ? new Date(safeNaN) : timeToDateMapper(time);\n    };\n}\nexport function timeToDateUnmapperWithNaN(valueForNaN) {\n    return (value) => {\n        const time = timeToDateUnmapper(value);\n        return safeNumberIsNaN(time) ? valueForNaN : time;\n    };\n}\n","import { unsafeUniformBigIntDistribution } from './UnsafeUniformBigIntDistribution.js';\nfunction uniformBigIntDistribution(from, to, rng) {\n    if (rng != null) {\n        var nextRng = rng.clone();\n        return [unsafeUniformBigIntDistribution(from, to, nextRng), nextRng];\n    }\n    return function (rng) {\n        var nextRng = rng.clone();\n        return [unsafeUniformBigIntDistribution(from, to, nextRng), nextRng];\n    };\n}\nexport { uniformBigIntDistribution };\n","import { unsafeUniformIntDistribution } from './UnsafeUniformIntDistribution.js';\nfunction uniformIntDistribution(from, to, rng) {\n    if (rng != null) {\n        var nextRng = rng.clone();\n        return [unsafeUniformIntDistribution(from, to, nextRng), nextRng];\n    }\n    return function (rng) {\n        var nextRng = rng.clone();\n        return [unsafeUniformIntDistribution(from, to, nextRng), nextRng];\n    };\n}\nexport { uniformIntDistribution };\n","import { CloneArbitrary } from './_internals/CloneArbitrary.js';\nfunction clone(arb, numValues) {\n    return new CloneArbitrary(arb, numValues);\n}\nexport { clone };\n","import { buildCompareFunctionArbitrary } from './_internals/builders/CompareFunctionArbitraryBuilder.js';\nconst safeObjectAssign = Object.assign;\nexport function compareBooleanFunc() {\n    return buildCompareFunctionArbitrary(safeObjectAssign((hA, hB) => hA < hB, {\n        toString() {\n            return '(hA, hB) => hA < hB';\n        },\n    }));\n}\n","import { buildCompareFunctionArbitrary } from './_internals/builders/CompareFunctionArbitraryBuilder.js';\nconst safeObjectAssign = Object.assign;\nexport function compareFunc() {\n    return buildCompareFunctionArbitrary(safeObjectAssign((hA, hB) => hA - hB, {\n        toString() {\n            return '(hA, hB) => hA - hB';\n        },\n    }));\n}\n","import { IntegerArbitrary } from './_internals/IntegerArbitrary.js';\nconst safeMinSafeInteger = Number.MIN_SAFE_INTEGER;\nconst safeMaxSafeInteger = Number.MAX_SAFE_INTEGER;\nexport function maxSafeInteger() {\n    return new IntegerArbitrary(safeMinSafeInteger, safeMaxSafeInteger);\n}\n","import { IntegerArbitrary } from './_internals/IntegerArbitrary.js';\nconst safeMaxSafeInteger = Number.MAX_SAFE_INTEGER;\nexport function maxSafeNat() {\n    return new IntegerArbitrary(0, safeMaxSafeInteger);\n}\n","import { safeNumberToString, safeSubstring } from '../../../utils/globals.js';\nconst safeNumberParseInt = Number.parseInt;\nexport function natToStringifiedNatMapper(options) {\n    const [style, v] = options;\n    switch (style) {\n        case 'oct':\n            return `0${safeNumberToString(v, 8)}`;\n        case 'hex':\n            return `0x${safeNumberToString(v, 16)}`;\n        case 'dec':\n        default:\n            return `${v}`;\n    }\n}\nexport function tryParseStringifiedNat(stringValue, radix) {\n    const parsedNat = safeNumberParseInt(stringValue, radix);\n    if (safeNumberToString(parsedNat, radix) !== stringValue) {\n        throw new Error('Invalid value');\n    }\n    return parsedNat;\n}\nexport function natToStringifiedNatUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Invalid type');\n    }\n    if (value.length >= 2 && value[0] === '0') {\n        if (value[1] === 'x') {\n            return ['hex', tryParseStringifiedNat(safeSubstring(value, 2), 16)];\n        }\n        return ['oct', tryParseStringifiedNat(safeSubstring(value, 1), 8)];\n    }\n    return ['dec', tryParseStringifiedNat(value, 10)];\n}\n","import { cloneMethod, hasCloneMethod } from '../../symbols.js';\nconst safeObjectDefineProperty = Object.defineProperty;\nexport class Value {\n    constructor(value_, context, customGetValue = undefined) {\n        this.value_ = value_;\n        this.context = context;\n        this.hasToBeCloned = customGetValue !== undefined || hasCloneMethod(value_);\n        this.readOnce = false;\n        if (this.hasToBeCloned) {\n            safeObjectDefineProperty(this, 'value', { get: customGetValue !== undefined ? customGetValue : this.getValue });\n        }\n        else {\n            this.value = value_;\n        }\n    }\n    getValue() {\n        if (this.hasToBeCloned) {\n            if (!this.readOnce) {\n                this.readOnce = true;\n                return this.value_;\n            }\n            return this.value_[cloneMethod]();\n        }\n        return this.value_;\n    }\n}\n","import { safeEndsWith, safeJoin, safeSlice, safeSplit, safeStartsWith, safeSubstring } from '../../../utils/globals.js';\nfunction readBh(value) {\n    if (value.length === 0)\n        return [];\n    else\n        return safeSplit(value, ':');\n}\nfunction extractEhAndL(value) {\n    const valueSplits = safeSplit(value, ':');\n    if (valueSplits.length >= 2 && valueSplits[valueSplits.length - 1].length <= 4) {\n        return [\n            safeSlice(valueSplits, 0, valueSplits.length - 2),\n            `${valueSplits[valueSplits.length - 2]}:${valueSplits[valueSplits.length - 1]}`,\n        ];\n    }\n    return [safeSlice(valueSplits, 0, valueSplits.length - 1), valueSplits[valueSplits.length - 1]];\n}\nexport function fullySpecifiedMapper(data) {\n    return `${safeJoin(data[0], ':')}:${data[1]}`;\n}\nexport function fullySpecifiedUnmapper(value) {\n    if (typeof value !== 'string')\n        throw new Error('Invalid type');\n    return extractEhAndL(value);\n}\nexport function onlyTrailingMapper(data) {\n    return `::${safeJoin(data[0], ':')}:${data[1]}`;\n}\nexport function onlyTrailingUnmapper(value) {\n    if (typeof value !== 'string')\n        throw new Error('Invalid type');\n    if (!safeStartsWith(value, '::'))\n        throw new Error('Invalid value');\n    return extractEhAndL(safeSubstring(value, 2));\n}\nexport function multiTrailingMapper(data) {\n    return `${safeJoin(data[0], ':')}::${safeJoin(data[1], ':')}:${data[2]}`;\n}\nexport function multiTrailingUnmapper(value) {\n    if (typeof value !== 'string')\n        throw new Error('Invalid type');\n    const [bhString, trailingString] = safeSplit(value, '::', 2);\n    const [eh, l] = extractEhAndL(trailingString);\n    return [readBh(bhString), eh, l];\n}\nexport function multiTrailingMapperOne(data) {\n    return multiTrailingMapper([data[0], [data[1]], data[2]]);\n}\nexport function multiTrailingUnmapperOne(value) {\n    const out = multiTrailingUnmapper(value);\n    return [out[0], safeJoin(out[1], ':'), out[2]];\n}\nexport function singleTrailingMapper(data) {\n    return `${safeJoin(data[0], ':')}::${data[1]}`;\n}\nexport function singleTrailingUnmapper(value) {\n    if (typeof value !== 'string')\n        throw new Error('Invalid type');\n    const [bhString, trailing] = safeSplit(value, '::', 2);\n    return [readBh(bhString), trailing];\n}\nexport function noTrailingMapper(data) {\n    return `${safeJoin(data[0], ':')}::`;\n}\nexport function noTrailingUnmapper(value) {\n    if (typeof value !== 'string')\n        throw new Error('Invalid type');\n    if (!safeEndsWith(value, '::'))\n        throw new Error('Invalid value');\n    return [readBh(safeSubstring(value, 0, value.length - 2))];\n}\n","import { safeHasOwnProperty } from '../utils/globals.js';\nlet contextRemainingDepth = 10;\nexport function memo(builder) {\n    const previous = {};\n    return ((maxDepth) => {\n        const n = maxDepth !== undefined ? maxDepth : contextRemainingDepth;\n        if (!safeHasOwnProperty(previous, n)) {\n            const prev = contextRemainingDepth;\n            contextRemainingDepth = n - 1;\n            previous[n] = builder(n);\n            contextRemainingDepth = prev;\n        }\n        return previous[n];\n    });\n}\n","import { PreconditionFailure } from '../precondition/PreconditionFailure.js';\nfunction interruptAfter(timeMs, setTimeoutSafe, clearTimeoutSafe) {\n    let timeoutHandle = null;\n    const promise = new Promise((resolve) => {\n        timeoutHandle = setTimeoutSafe(() => {\n            const preconditionFailure = new PreconditionFailure(true);\n            resolve(preconditionFailure);\n        }, timeMs);\n    });\n    return {\n        clear: () => clearTimeoutSafe(timeoutHandle),\n        promise,\n    };\n}\nexport class SkipAfterProperty {\n    constructor(property, getTime, timeLimit, interruptExecution, setTimeoutSafe, clearTimeoutSafe) {\n        this.property = property;\n        this.getTime = getTime;\n        this.interruptExecution = interruptExecution;\n        this.setTimeoutSafe = setTimeoutSafe;\n        this.clearTimeoutSafe = clearTimeoutSafe;\n        this.skipAfterTime = this.getTime() + timeLimit;\n        if (this.property.runBeforeEach !== undefined && this.property.runAfterEach !== undefined) {\n            this.runBeforeEach = () => this.property.runBeforeEach();\n            this.runAfterEach = () => this.property.runAfterEach();\n        }\n    }\n    isAsync() {\n        return this.property.isAsync();\n    }\n    generate(mrng, runId) {\n        return this.property.generate(mrng, runId);\n    }\n    shrink(value) {\n        return this.property.shrink(value);\n    }\n    run(v, dontRunHook) {\n        const remainingTime = this.skipAfterTime - this.getTime();\n        if (remainingTime <= 0) {\n            const preconditionFailure = new PreconditionFailure(this.interruptExecution);\n            if (this.isAsync()) {\n                return Promise.resolve(preconditionFailure);\n            }\n            else {\n                return preconditionFailure;\n            }\n        }\n        if (this.interruptExecution && this.isAsync()) {\n            const t = interruptAfter(remainingTime, this.setTimeoutSafe, this.clearTimeoutSafe);\n            const propRun = Promise.race([this.property.run(v, dontRunHook), t.promise]);\n            propRun.then(t.clear, t.clear);\n            return propRun;\n        }\n        return this.property.run(v, dontRunHook);\n    }\n}\n","import { Error } from '../../utils/globals.js';\nconst timeoutAfter = (timeMs, setTimeoutSafe, clearTimeoutSafe) => {\n    let timeoutHandle = null;\n    const promise = new Promise((resolve) => {\n        timeoutHandle = setTimeoutSafe(() => {\n            resolve({\n                error: new Error(`Property timeout: exceeded limit of ${timeMs} milliseconds`),\n                errorMessage: `Property timeout: exceeded limit of ${timeMs} milliseconds`,\n            });\n        }, timeMs);\n    });\n    return {\n        clear: () => clearTimeoutSafe(timeoutHandle),\n        promise,\n    };\n};\nexport class TimeoutProperty {\n    constructor(property, timeMs, setTimeoutSafe, clearTimeoutSafe) {\n        this.property = property;\n        this.timeMs = timeMs;\n        this.setTimeoutSafe = setTimeoutSafe;\n        this.clearTimeoutSafe = clearTimeoutSafe;\n        if (this.property.runBeforeEach !== undefined && this.property.runAfterEach !== undefined) {\n            this.runBeforeEach = () => Promise.resolve(this.property.runBeforeEach());\n            this.runAfterEach = () => Promise.resolve(this.property.runAfterEach());\n        }\n    }\n    isAsync() {\n        return true;\n    }\n    generate(mrng, runId) {\n        return this.property.generate(mrng, runId);\n    }\n    shrink(value) {\n        return this.property.shrink(value);\n    }\n    async run(v, dontRunHook) {\n        const t = timeoutAfter(this.timeMs, this.setTimeoutSafe, this.clearTimeoutSafe);\n        const propRun = Promise.race([this.property.run(v, dontRunHook), t.promise]);\n        propRun.then(t.clear, t.clear);\n        return propRun;\n    }\n}\n","import { filterHelper, flatMapHelper, joinHelper, mapHelper, nilHelper, takeNHelper, takeWhileHelper, } from './StreamHelpers.js';\nconst safeSymbolIterator = Symbol.iterator;\nexport class Stream {\n    static nil() {\n        return new Stream(nilHelper());\n    }\n    static of(...elements) {\n        return new Stream(elements[safeSymbolIterator]());\n    }\n    constructor(g) {\n        this.g = g;\n    }\n    next() {\n        return this.g.next();\n    }\n    [Symbol.iterator]() {\n        return this.g;\n    }\n    map(f) {\n        return new Stream(mapHelper(this.g, f));\n    }\n    flatMap(f) {\n        return new Stream(flatMapHelper(this.g, f));\n    }\n    dropWhile(f) {\n        let foundEligible = false;\n        function* helper(v) {\n            if (foundEligible || !f(v)) {\n                foundEligible = true;\n                yield v;\n            }\n        }\n        return this.flatMap(helper);\n    }\n    drop(n) {\n        if (n <= 0) {\n            return this;\n        }\n        let idx = 0;\n        function helper() {\n            return idx++ < n;\n        }\n        return this.dropWhile(helper);\n    }\n    takeWhile(f) {\n        return new Stream(takeWhileHelper(this.g, f));\n    }\n    take(n) {\n        return new Stream(takeNHelper(this.g, n));\n    }\n    filter(f) {\n        return new Stream(filterHelper(this.g, f));\n    }\n    every(f) {\n        for (const v of this.g) {\n            if (!f(v)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    has(f) {\n        for (const v of this.g) {\n            if (f(v)) {\n                return [true, v];\n            }\n        }\n        return [false, null];\n    }\n    join(...others) {\n        return new Stream(joinHelper(this.g, others));\n    }\n    getNthOrLast(nth) {\n        let remaining = nth;\n        let last = null;\n        for (const v of this.g) {\n            if (remaining-- === 0)\n                return v;\n            last = v;\n        }\n        return last;\n    }\n}\nexport function stream(g) {\n    return new Stream(g);\n}\n","import { safeAdd, safePush, Set } from '../../../utils/globals.js';\nconst safeNumberIsNaN = Number.isNaN;\nexport class StrictlyEqualSet {\n    constructor(selector) {\n        this.selector = selector;\n        this.selectedItemsExceptNaN = new Set();\n        this.data = [];\n    }\n    tryAdd(value) {\n        const selected = this.selector(value);\n        if (safeNumberIsNaN(selected)) {\n            safePush(this.data, value);\n            return true;\n        }\n        const sizeBefore = this.selectedItemsExceptNaN.size;\n        safeAdd(this.selectedItemsExceptNaN, selected);\n        if (sizeBefore !== this.selectedItemsExceptNaN.size) {\n            safePush(this.data, value);\n            return true;\n        }\n        return false;\n    }\n    size() {\n        return this.data.length;\n    }\n    getData() {\n        return this.data;\n    }\n}\n","import { Set, safeAdd, safePush } from '../../../utils/globals.js';\nconst safeObjectIs = Object.is;\nexport class SameValueSet {\n    constructor(selector) {\n        this.selector = selector;\n        this.selectedItemsExceptMinusZero = new Set();\n        this.data = [];\n        this.hasMinusZero = false;\n    }\n    tryAdd(value) {\n        const selected = this.selector(value);\n        if (safeObjectIs(selected, -0)) {\n            if (this.hasMinusZero) {\n                return false;\n            }\n            safePush(this.data, value);\n            this.hasMinusZero = true;\n            return true;\n        }\n        const sizeBefore = this.selectedItemsExceptMinusZero.size;\n        safeAdd(this.selectedItemsExceptMinusZero, selected);\n        if (sizeBefore !== this.selectedItemsExceptMinusZero.size) {\n            safePush(this.data, value);\n            return true;\n        }\n        return false;\n    }\n    size() {\n        return this.data.length;\n    }\n    getData() {\n        return this.data;\n    }\n}\n","import { Error, safeEvery } from '../../../utils/globals.js';\nconst safeObjectCreate = Object.create;\nconst safeObjectDefineProperty = Object.defineProperty;\nconst safeObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nconst safeObjectGetPrototypeOf = Object.getPrototypeOf;\nconst safeObjectGetOwnPropertySymbols = Object.getOwnPropertySymbols;\nconst safeObjectGetOwnPropertyNames = Object.getOwnPropertyNames;\nconst safeObjectEntries = Object.entries;\nexport function keyValuePairsToObjectMapper(definition) {\n    const obj = definition[1] ? safeObjectCreate(null) : {};\n    for (const keyValue of definition[0]) {\n        safeObjectDefineProperty(obj, keyValue[0], {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: keyValue[1],\n        });\n    }\n    return obj;\n}\nfunction buildIsValidPropertyNameFilter(obj) {\n    return function isValidPropertyNameFilter(key) {\n        const descriptor = safeObjectGetOwnPropertyDescriptor(obj, key);\n        return (descriptor !== undefined &&\n            !!descriptor.configurable &&\n            !!descriptor.enumerable &&\n            !!descriptor.writable &&\n            descriptor.get === undefined &&\n            descriptor.set === undefined);\n    };\n}\nexport function keyValuePairsToObjectUnmapper(value) {\n    if (typeof value !== 'object' || value === null) {\n        throw new Error('Incompatible instance received: should be a non-null object');\n    }\n    const hasNullPrototype = safeObjectGetPrototypeOf(value) === null;\n    const hasObjectPrototype = 'constructor' in value && value.constructor === Object;\n    if (!hasNullPrototype && !hasObjectPrototype) {\n        throw new Error('Incompatible instance received: should be of exact type Object');\n    }\n    if (safeObjectGetOwnPropertySymbols(value).length > 0) {\n        throw new Error('Incompatible instance received: should contain symbols');\n    }\n    if (!safeEvery(safeObjectGetOwnPropertyNames(value), buildIsValidPropertyNameFilter(value))) {\n        throw new Error('Incompatible instance received: should contain only c/e/w properties without get/set');\n    }\n    return [safeObjectEntries(value), hasNullPrototype];\n}\n","import { safePop, safePush } from '../../../utils/globals.js';\nconst safeStringFromCodePoint = String.fromCodePoint;\nconst safeMathMin = Math.min;\nconst safeMathMax = Math.max;\nexport function convertGraphemeRangeToMapToConstantEntry(range) {\n    if (range.length === 1) {\n        const codePointString = safeStringFromCodePoint(range[0]);\n        return { num: 1, build: () => codePointString };\n    }\n    const rangeStart = range[0];\n    return { num: range[1] - range[0] + 1, build: (idInGroup) => safeStringFromCodePoint(rangeStart + idInGroup) };\n}\nexport function intersectGraphemeRanges(rangesA, rangesB) {\n    const mergedRanges = [];\n    let cursorA = 0;\n    let cursorB = 0;\n    while (cursorA < rangesA.length && cursorB < rangesB.length) {\n        const rangeA = rangesA[cursorA];\n        const rangeAMin = rangeA[0];\n        const rangeAMax = rangeA.length === 1 ? rangeA[0] : rangeA[1];\n        const rangeB = rangesB[cursorB];\n        const rangeBMin = rangeB[0];\n        const rangeBMax = rangeB.length === 1 ? rangeB[0] : rangeB[1];\n        if (rangeAMax < rangeBMin) {\n            cursorA += 1;\n        }\n        else if (rangeBMax < rangeAMin) {\n            cursorB += 1;\n        }\n        else {\n            let min = safeMathMax(rangeAMin, rangeBMin);\n            const max = safeMathMin(rangeAMax, rangeBMax);\n            if (mergedRanges.length >= 1) {\n                const lastMergedRange = mergedRanges[mergedRanges.length - 1];\n                const lastMergedRangeMax = lastMergedRange.length === 1 ? lastMergedRange[0] : lastMergedRange[1];\n                if (lastMergedRangeMax + 1 === min) {\n                    min = lastMergedRange[0];\n                    safePop(mergedRanges);\n                }\n            }\n            safePush(mergedRanges, min === max ? [min] : [min, max]);\n            if (rangeAMax <= max) {\n                cursorA += 1;\n            }\n            if (rangeBMax <= max) {\n                cursorB += 1;\n            }\n        }\n    }\n    return mergedRanges;\n}\n","import { IntegerArbitrary } from './_internals/IntegerArbitrary.js';\nconst safeNumberIsInteger = Number.isInteger;\nfunction nat(arg) {\n    const max = typeof arg === 'number' ? arg : arg && arg.max !== undefined ? arg.max : 0x7fffffff;\n    if (max < 0) {\n        throw new Error('fc.nat value should be greater than or equal to 0');\n    }\n    if (!safeNumberIsInteger(max)) {\n        throw new Error('fc.nat maximum value should be an integer');\n    }\n    return new IntegerArbitrary(0, max);\n}\nexport { nat };\n","import { safeFilter, safeGetTime, safeIndexOf, safeJoin, safeMap, safePush, safeToISOString, safeToString, Map, String, Symbol as StableSymbol, } from './globals.js';\nconst safeArrayFrom = Array.from;\nconst safeBufferIsBuffer = typeof Buffer !== 'undefined' ? Buffer.isBuffer : undefined;\nconst safeJsonStringify = JSON.stringify;\nconst safeNumberIsNaN = Number.isNaN;\nconst safeObjectKeys = Object.keys;\nconst safeObjectGetOwnPropertySymbols = Object.getOwnPropertySymbols;\nconst safeObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nconst safeObjectGetPrototypeOf = Object.getPrototypeOf;\nconst safeNegativeInfinity = Number.NEGATIVE_INFINITY;\nconst safePositiveInfinity = Number.POSITIVE_INFINITY;\nexport const toStringMethod = Symbol.for('fast-check/toStringMethod');\nexport function hasToStringMethod(instance) {\n    return (instance !== null &&\n        (typeof instance === 'object' || typeof instance === 'function') &&\n        toStringMethod in instance &&\n        typeof instance[toStringMethod] === 'function');\n}\nexport const asyncToStringMethod = Symbol.for('fast-check/asyncToStringMethod');\nexport function hasAsyncToStringMethod(instance) {\n    return (instance !== null &&\n        (typeof instance === 'object' || typeof instance === 'function') &&\n        asyncToStringMethod in instance &&\n        typeof instance[asyncToStringMethod] === 'function');\n}\nconst findSymbolNameRegex = /^Symbol\\((.*)\\)$/;\nfunction getSymbolDescription(s) {\n    if (s.description !== undefined)\n        return s.description;\n    const m = findSymbolNameRegex.exec(String(s));\n    return m && m[1].length ? m[1] : null;\n}\nfunction stringifyNumber(numValue) {\n    switch (numValue) {\n        case 0:\n            return 1 / numValue === safeNegativeInfinity ? '-0' : '0';\n        case safeNegativeInfinity:\n            return 'Number.NEGATIVE_INFINITY';\n        case safePositiveInfinity:\n            return 'Number.POSITIVE_INFINITY';\n        default:\n            return numValue === numValue ? String(numValue) : 'Number.NaN';\n    }\n}\nfunction isSparseArray(arr) {\n    let previousNumberedIndex = -1;\n    for (const index in arr) {\n        const numberedIndex = Number(index);\n        if (numberedIndex !== previousNumberedIndex + 1)\n            return true;\n        previousNumberedIndex = numberedIndex;\n    }\n    return previousNumberedIndex + 1 !== arr.length;\n}\nexport function stringifyInternal(value, previousValues, getAsyncContent) {\n    const currentValues = [...previousValues, value];\n    if (typeof value === 'object') {\n        if (safeIndexOf(previousValues, value) !== -1) {\n            return '[cyclic]';\n        }\n    }\n    if (hasAsyncToStringMethod(value)) {\n        const content = getAsyncContent(value);\n        if (content.state === 'fulfilled') {\n            return content.value;\n        }\n    }\n    if (hasToStringMethod(value)) {\n        try {\n            return value[toStringMethod]();\n        }\n        catch (err) {\n        }\n    }\n    switch (safeToString(value)) {\n        case '[object Array]': {\n            const arr = value;\n            if (arr.length >= 50 && isSparseArray(arr)) {\n                const assignments = [];\n                for (const index in arr) {\n                    if (!safeNumberIsNaN(Number(index)))\n                        safePush(assignments, `${index}:${stringifyInternal(arr[index], currentValues, getAsyncContent)}`);\n                }\n                return assignments.length !== 0\n                    ? `Object.assign(Array(${arr.length}),{${safeJoin(assignments, ',')}})`\n                    : `Array(${arr.length})`;\n            }\n            const stringifiedArray = safeJoin(safeMap(arr, (v) => stringifyInternal(v, currentValues, getAsyncContent)), ',');\n            return arr.length === 0 || arr.length - 1 in arr ? `[${stringifiedArray}]` : `[${stringifiedArray},]`;\n        }\n        case '[object BigInt]':\n            return `${value}n`;\n        case '[object Boolean]': {\n            const unboxedToString = value == true ? 'true' : 'false';\n            return typeof value === 'boolean' ? unboxedToString : `new Boolean(${unboxedToString})`;\n        }\n        case '[object Date]': {\n            const d = value;\n            return safeNumberIsNaN(safeGetTime(d)) ? `new Date(NaN)` : `new Date(${safeJsonStringify(safeToISOString(d))})`;\n        }\n        case '[object Map]':\n            return `new Map(${stringifyInternal(Array.from(value), currentValues, getAsyncContent)})`;\n        case '[object Null]':\n            return `null`;\n        case '[object Number]':\n            return typeof value === 'number' ? stringifyNumber(value) : `new Number(${stringifyNumber(Number(value))})`;\n        case '[object Object]': {\n            try {\n                const toStringAccessor = value.toString;\n                if (typeof toStringAccessor === 'function' && toStringAccessor !== Object.prototype.toString) {\n                    return value.toString();\n                }\n            }\n            catch (err) {\n                return '[object Object]';\n            }\n            const mapper = (k) => `${k === '__proto__'\n                ? '[\"__proto__\"]'\n                : typeof k === 'symbol'\n                    ? `[${stringifyInternal(k, currentValues, getAsyncContent)}]`\n                    : safeJsonStringify(k)}:${stringifyInternal(value[k], currentValues, getAsyncContent)}`;\n            const stringifiedProperties = [\n                ...safeMap(safeObjectKeys(value), mapper),\n                ...safeMap(safeFilter(safeObjectGetOwnPropertySymbols(value), (s) => {\n                    const descriptor = safeObjectGetOwnPropertyDescriptor(value, s);\n                    return descriptor && descriptor.enumerable;\n                }), mapper),\n            ];\n            const rawRepr = '{' + safeJoin(stringifiedProperties, ',') + '}';\n            if (safeObjectGetPrototypeOf(value) === null) {\n                return rawRepr === '{}' ? 'Object.create(null)' : `Object.assign(Object.create(null),${rawRepr})`;\n            }\n            return rawRepr;\n        }\n        case '[object Set]':\n            return `new Set(${stringifyInternal(Array.from(value), currentValues, getAsyncContent)})`;\n        case '[object String]':\n            return typeof value === 'string' ? safeJsonStringify(value) : `new String(${safeJsonStringify(value)})`;\n        case '[object Symbol]': {\n            const s = value;\n            if (StableSymbol.keyFor(s) !== undefined) {\n                return `Symbol.for(${safeJsonStringify(StableSymbol.keyFor(s))})`;\n            }\n            const desc = getSymbolDescription(s);\n            if (desc === null) {\n                return 'Symbol()';\n            }\n            const knownSymbol = desc.startsWith('Symbol.') && StableSymbol[desc.substring(7)];\n            return s === knownSymbol ? desc : `Symbol(${safeJsonStringify(desc)})`;\n        }\n        case '[object Promise]': {\n            const promiseContent = getAsyncContent(value);\n            switch (promiseContent.state) {\n                case 'fulfilled':\n                    return `Promise.resolve(${stringifyInternal(promiseContent.value, currentValues, getAsyncContent)})`;\n                case 'rejected':\n                    return `Promise.reject(${stringifyInternal(promiseContent.value, currentValues, getAsyncContent)})`;\n                case 'pending':\n                    return `new Promise(() => {/*pending*/})`;\n                case 'unknown':\n                default:\n                    return `new Promise(() => {/*unknown*/})`;\n            }\n        }\n        case '[object Error]':\n            if (value instanceof Error) {\n                return `new Error(${stringifyInternal(value.message, currentValues, getAsyncContent)})`;\n            }\n            break;\n        case '[object Undefined]':\n            return `undefined`;\n        case '[object Int8Array]':\n        case '[object Uint8Array]':\n        case '[object Uint8ClampedArray]':\n        case '[object Int16Array]':\n        case '[object Uint16Array]':\n        case '[object Int32Array]':\n        case '[object Uint32Array]':\n        case '[object Float32Array]':\n        case '[object Float64Array]':\n        case '[object BigInt64Array]':\n        case '[object BigUint64Array]': {\n            if (typeof safeBufferIsBuffer === 'function' && safeBufferIsBuffer(value)) {\n                return `Buffer.from(${stringifyInternal(safeArrayFrom(value.values()), currentValues, getAsyncContent)})`;\n            }\n            const valuePrototype = safeObjectGetPrototypeOf(value);\n            const className = valuePrototype && valuePrototype.constructor && valuePrototype.constructor.name;\n            if (typeof className === 'string') {\n                const typedArray = value;\n                const valuesFromTypedArr = typedArray.values();\n                return `${className}.from(${stringifyInternal(safeArrayFrom(valuesFromTypedArr), currentValues, getAsyncContent)})`;\n            }\n            break;\n        }\n    }\n    try {\n        return value.toString();\n    }\n    catch (_a) {\n        return safeToString(value);\n    }\n}\nexport function stringify(value) {\n    return stringifyInternal(value, [], () => ({ state: 'unknown', value: undefined }));\n}\nexport function possiblyAsyncStringify(value) {\n    const stillPendingMarker = StableSymbol();\n    const pendingPromisesForCache = [];\n    const cache = new Map();\n    function createDelay0() {\n        let handleId = null;\n        const cancel = () => {\n            if (handleId !== null) {\n                clearTimeout(handleId);\n            }\n        };\n        const delay = new Promise((resolve) => {\n            handleId = setTimeout(() => {\n                handleId = null;\n                resolve(stillPendingMarker);\n            }, 0);\n        });\n        return { delay, cancel };\n    }\n    const unknownState = { state: 'unknown', value: undefined };\n    const getAsyncContent = function getAsyncContent(data) {\n        const cacheKey = data;\n        if (cache.has(cacheKey)) {\n            return cache.get(cacheKey);\n        }\n        const delay0 = createDelay0();\n        const p = asyncToStringMethod in data\n            ? Promise.resolve().then(() => data[asyncToStringMethod]())\n            : data;\n        p.catch(() => { });\n        pendingPromisesForCache.push(Promise.race([p, delay0.delay]).then((successValue) => {\n            if (successValue === stillPendingMarker)\n                cache.set(cacheKey, { state: 'pending', value: undefined });\n            else\n                cache.set(cacheKey, { state: 'fulfilled', value: successValue });\n            delay0.cancel();\n        }, (errorValue) => {\n            cache.set(cacheKey, { state: 'rejected', value: errorValue });\n            delay0.cancel();\n        }));\n        cache.set(cacheKey, unknownState);\n        return unknownState;\n    };\n    function loop() {\n        const stringifiedValue = stringifyInternal(value, [], getAsyncContent);\n        if (pendingPromisesForCache.length === 0) {\n            return stringifiedValue;\n        }\n        return Promise.all(pendingPromisesForCache.splice(0)).then(loop);\n    }\n    return loop();\n}\nexport async function asyncStringify(value) {\n    return Promise.resolve(possiblyAsyncStringify(value));\n}\n","import { clone64, isEqual64 } from './ArrayInt64.js';\nconst safeNegativeInfinity = Number.NEGATIVE_INFINITY;\nconst safePositiveInfinity = Number.POSITIVE_INFINITY;\nconst safeEpsilon = Number.EPSILON;\nconst INDEX_POSITIVE_INFINITY = { sign: 1, data: [2146435072, 0] };\nconst INDEX_NEGATIVE_INFINITY = { sign: -1, data: [2146435072, 1] };\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer, f64.byteOffset);\nfunction bitCastDoubleToUInt64(f) {\n    f64[0] = f;\n    return [u32[1], u32[0]];\n}\nexport function decomposeDouble(d) {\n    const { 0: hi, 1: lo } = bitCastDoubleToUInt64(d);\n    const signBit = hi >>> 31;\n    const exponentBits = (hi >>> 20) & 0x7ff;\n    const significandBits = (hi & 0xfffff) * 0x100000000 + lo;\n    const exponent = exponentBits === 0 ? -1022 : exponentBits - 1023;\n    let significand = exponentBits === 0 ? 0 : 1;\n    significand += significandBits / 2 ** 52;\n    significand *= signBit === 0 ? 1 : -1;\n    return { exponent, significand };\n}\nfunction positiveNumberToInt64(n) {\n    return [~~(n / 0x100000000), n >>> 0];\n}\nfunction indexInDoubleFromDecomp(exponent, significand) {\n    if (exponent === -1022) {\n        const rescaledSignificand = significand * 2 ** 52;\n        return positiveNumberToInt64(rescaledSignificand);\n    }\n    const rescaledSignificand = (significand - 1) * 2 ** 52;\n    const exponentOnlyHigh = (exponent + 1023) * 2 ** 20;\n    const index = positiveNumberToInt64(rescaledSignificand);\n    index[0] += exponentOnlyHigh;\n    return index;\n}\nexport function doubleToIndex(d) {\n    if (d === safePositiveInfinity) {\n        return clone64(INDEX_POSITIVE_INFINITY);\n    }\n    if (d === safeNegativeInfinity) {\n        return clone64(INDEX_NEGATIVE_INFINITY);\n    }\n    const decomp = decomposeDouble(d);\n    const exponent = decomp.exponent;\n    const significand = decomp.significand;\n    if (d > 0 || (d === 0 && 1 / d === safePositiveInfinity)) {\n        return { sign: 1, data: indexInDoubleFromDecomp(exponent, significand) };\n    }\n    else {\n        const indexOpposite = indexInDoubleFromDecomp(exponent, -significand);\n        if (indexOpposite[1] === 0xffffffff) {\n            indexOpposite[0] += 1;\n            indexOpposite[1] = 0;\n        }\n        else {\n            indexOpposite[1] += 1;\n        }\n        return { sign: -1, data: indexOpposite };\n    }\n}\nexport function indexToDouble(index) {\n    if (index.sign === -1) {\n        const indexOpposite = { sign: 1, data: [index.data[0], index.data[1]] };\n        if (indexOpposite.data[1] === 0) {\n            indexOpposite.data[0] -= 1;\n            indexOpposite.data[1] = 0xffffffff;\n        }\n        else {\n            indexOpposite.data[1] -= 1;\n        }\n        return -indexToDouble(indexOpposite);\n    }\n    if (isEqual64(index, INDEX_POSITIVE_INFINITY)) {\n        return safePositiveInfinity;\n    }\n    if (index.data[0] < 0x200000) {\n        return (index.data[0] * 0x100000000 + index.data[1]) * 2 ** -1074;\n    }\n    const postIndexHigh = index.data[0] - 0x200000;\n    const exponent = -1021 + (postIndexHigh >> 20);\n    const significand = 1 + ((postIndexHigh & 0xfffff) * 2 ** 32 + index.data[1]) * safeEpsilon;\n    return significand * 2 ** exponent;\n}\n","import { unsafeUniformArrayIntDistribution } from './UnsafeUniformArrayIntDistribution.js';\nfunction uniformArrayIntDistribution(from, to, rng) {\n    if (rng != null) {\n        var nextRng = rng.clone();\n        return [unsafeUniformArrayIntDistribution(from, to, nextRng), nextRng];\n    }\n    return function (rng) {\n        var nextRng = rng.clone();\n        return [unsafeUniformArrayIntDistribution(from, to, nextRng), nextRng];\n    };\n}\nexport { uniformArrayIntDistribution };\n","import { Error, Number, Map, safeMapGet, safeMapSet } from '../../../utils/globals.js';\nconst safeObjectIs = Object.is;\nfunction buildDichotomyEntries(entries) {\n    let currentFrom = 0;\n    const dichotomyEntries = [];\n    for (const entry of entries) {\n        const from = currentFrom;\n        currentFrom = from + entry.num;\n        const to = currentFrom - 1;\n        dichotomyEntries.push({ from, to, entry });\n    }\n    return dichotomyEntries;\n}\nfunction findDichotomyEntry(dichotomyEntries, choiceIndex) {\n    let min = 0;\n    let max = dichotomyEntries.length;\n    while (max - min > 1) {\n        const mid = ~~((min + max) / 2);\n        if (choiceIndex < dichotomyEntries[mid].from) {\n            max = mid;\n        }\n        else {\n            min = mid;\n        }\n    }\n    return dichotomyEntries[min];\n}\nexport function indexToMappedConstantMapperFor(entries) {\n    const dichotomyEntries = buildDichotomyEntries(entries);\n    return function indexToMappedConstantMapper(choiceIndex) {\n        const dichotomyEntry = findDichotomyEntry(dichotomyEntries, choiceIndex);\n        return dichotomyEntry.entry.build(choiceIndex - dichotomyEntry.from);\n    };\n}\nfunction buildReverseMapping(entries) {\n    const reverseMapping = { mapping: new Map(), negativeZeroIndex: undefined };\n    let choiceIndex = 0;\n    for (let entryIdx = 0; entryIdx !== entries.length; ++entryIdx) {\n        const entry = entries[entryIdx];\n        for (let idxInEntry = 0; idxInEntry !== entry.num; ++idxInEntry) {\n            const value = entry.build(idxInEntry);\n            if (value === 0 && 1 / value === Number.NEGATIVE_INFINITY) {\n                reverseMapping.negativeZeroIndex = choiceIndex;\n            }\n            else {\n                safeMapSet(reverseMapping.mapping, value, choiceIndex);\n            }\n            ++choiceIndex;\n        }\n    }\n    return reverseMapping;\n}\nexport function indexToMappedConstantUnmapperFor(entries) {\n    let reverseMapping = null;\n    return function indexToMappedConstantUnmapper(value) {\n        if (reverseMapping === null) {\n            reverseMapping = buildReverseMapping(entries);\n        }\n        const choiceIndex = safeObjectIs(value, -0)\n            ? reverseMapping.negativeZeroIndex\n            : safeMapGet(reverseMapping.mapping, value);\n        if (choiceIndex === undefined) {\n            throw new Error('Unknown value encountered cannot be built using this mapToConstant');\n        }\n        return choiceIndex;\n    };\n}\n","import { safePush } from '../../../utils/globals.js';\nconst safeObjectCreate = Object.create;\nconst safeObjectDefineProperty = Object.defineProperty;\nconst safeObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nconst safeObjectGetOwnPropertyNames = Object.getOwnPropertyNames;\nconst safeObjectGetOwnPropertySymbols = Object.getOwnPropertySymbols;\nexport function buildValuesAndSeparateKeysToObjectMapper(keys, noKeyValue) {\n    return function valuesAndSeparateKeysToObjectMapper(definition) {\n        const obj = definition[1] ? safeObjectCreate(null) : {};\n        for (let idx = 0; idx !== keys.length; ++idx) {\n            const valueWrapper = definition[0][idx];\n            if (valueWrapper !== noKeyValue) {\n                safeObjectDefineProperty(obj, keys[idx], {\n                    value: valueWrapper,\n                    configurable: true,\n                    enumerable: true,\n                    writable: true,\n                });\n            }\n        }\n        return obj;\n    };\n}\nexport function buildValuesAndSeparateKeysToObjectUnmapper(keys, noKeyValue) {\n    return function valuesAndSeparateKeysToObjectUnmapper(value) {\n        if (typeof value !== 'object' || value === null) {\n            throw new Error('Incompatible instance received: should be a non-null object');\n        }\n        const hasNullPrototype = Object.getPrototypeOf(value) === null;\n        const hasObjectPrototype = 'constructor' in value && value.constructor === Object;\n        if (!hasNullPrototype && !hasObjectPrototype) {\n            throw new Error('Incompatible instance received: should be of exact type Object');\n        }\n        let extractedPropertiesCount = 0;\n        const extractedValues = [];\n        for (let idx = 0; idx !== keys.length; ++idx) {\n            const descriptor = safeObjectGetOwnPropertyDescriptor(value, keys[idx]);\n            if (descriptor !== undefined) {\n                if (!descriptor.configurable || !descriptor.enumerable || !descriptor.writable) {\n                    throw new Error('Incompatible instance received: should contain only c/e/w properties');\n                }\n                if (descriptor.get !== undefined || descriptor.set !== undefined) {\n                    throw new Error('Incompatible instance received: should contain only no get/set properties');\n                }\n                ++extractedPropertiesCount;\n                safePush(extractedValues, descriptor.value);\n            }\n            else {\n                safePush(extractedValues, noKeyValue);\n            }\n        }\n        const namePropertiesCount = safeObjectGetOwnPropertyNames(value).length;\n        const symbolPropertiesCount = safeObjectGetOwnPropertySymbols(value).length;\n        if (extractedPropertiesCount !== namePropertiesCount + symbolPropertiesCount) {\n            throw new Error('Incompatible instance received: should not contain extra properties');\n        }\n        return [extractedValues, hasNullPrototype];\n    };\n}\n","import { buildPartialRecordArbitrary } from './_internals/builders/PartialRecordArbitraryBuilder.js';\nfunction record(recordModel, constraints) {\n    const noNullPrototype = constraints === undefined || constraints.noNullPrototype === undefined || constraints.noNullPrototype;\n    if (constraints == null) {\n        return buildPartialRecordArbitrary(recordModel, undefined, noNullPrototype);\n    }\n    if ('withDeletedKeys' in constraints && 'requiredKeys' in constraints) {\n        throw new Error(`requiredKeys and withDeletedKeys cannot be used together in fc.record`);\n    }\n    const requireDeletedKeys = ('requiredKeys' in constraints && constraints.requiredKeys !== undefined) ||\n        ('withDeletedKeys' in constraints && !!constraints.withDeletedKeys);\n    if (!requireDeletedKeys) {\n        return buildPartialRecordArbitrary(recordModel, undefined, noNullPrototype);\n    }\n    const requiredKeys = ('requiredKeys' in constraints ? constraints.requiredKeys : undefined) || [];\n    for (let idx = 0; idx !== requiredKeys.length; ++idx) {\n        const descriptor = Object.getOwnPropertyDescriptor(recordModel, requiredKeys[idx]);\n        if (descriptor === undefined) {\n            throw new Error(`requiredKeys cannot reference keys that have not been defined in recordModel`);\n        }\n        if (!descriptor.enumerable) {\n            throw new Error(`requiredKeys cannot reference keys that have are enumerable in recordModel`);\n        }\n    }\n    return buildPartialRecordArbitrary(recordModel, requiredKeys, noNullPrototype);\n}\nexport { record };\n","import { StreamArbitrary } from './_internals/StreamArbitrary.js';\nfunction infiniteStream(arb) {\n    return new StreamArbitrary(arb);\n}\nexport { infiniteStream };\n","import { Map, safeMapGet, safeMapSet } from '../../../utils/globals.js';\nconst safeObjectIs = Object.is;\nexport function isSubarrayOf(source, small) {\n    const countMap = new Map();\n    let countMinusZero = 0;\n    for (const sourceEntry of source) {\n        if (safeObjectIs(sourceEntry, -0)) {\n            ++countMinusZero;\n        }\n        else {\n            const oldCount = safeMapGet(countMap, sourceEntry) || 0;\n            safeMapSet(countMap, sourceEntry, oldCount + 1);\n        }\n    }\n    for (let index = 0; index !== small.length; ++index) {\n        if (!(index in small)) {\n            return false;\n        }\n        const smallEntry = small[index];\n        if (safeObjectIs(smallEntry, -0)) {\n            if (countMinusZero === 0)\n                return false;\n            --countMinusZero;\n        }\n        else {\n            const oldCount = safeMapGet(countMap, smallEntry) || 0;\n            if (oldCount === 0)\n                return false;\n            safeMapSet(countMap, smallEntry, oldCount - 1);\n        }\n    }\n    return true;\n}\n","import { Error, String } from '../../../utils/globals.js';\nconst encodeSymbolLookupTable = {\n    10: 'A',\n    11: 'B',\n    12: 'C',\n    13: 'D',\n    14: 'E',\n    15: 'F',\n    16: 'G',\n    17: 'H',\n    18: 'J',\n    19: 'K',\n    20: 'M',\n    21: 'N',\n    22: 'P',\n    23: 'Q',\n    24: 'R',\n    25: 'S',\n    26: 'T',\n    27: 'V',\n    28: 'W',\n    29: 'X',\n    30: 'Y',\n    31: 'Z',\n};\nconst decodeSymbolLookupTable = {\n    '0': 0,\n    '1': 1,\n    '2': 2,\n    '3': 3,\n    '4': 4,\n    '5': 5,\n    '6': 6,\n    '7': 7,\n    '8': 8,\n    '9': 9,\n    A: 10,\n    B: 11,\n    C: 12,\n    D: 13,\n    E: 14,\n    F: 15,\n    G: 16,\n    H: 17,\n    J: 18,\n    K: 19,\n    M: 20,\n    N: 21,\n    P: 22,\n    Q: 23,\n    R: 24,\n    S: 25,\n    T: 26,\n    V: 27,\n    W: 28,\n    X: 29,\n    Y: 30,\n    Z: 31,\n};\nfunction encodeSymbol(symbol) {\n    return symbol < 10 ? String(symbol) : encodeSymbolLookupTable[symbol];\n}\nfunction pad(value, paddingLength) {\n    let extraPadding = '';\n    while (value.length + extraPadding.length < paddingLength) {\n        extraPadding += '0';\n    }\n    return extraPadding + value;\n}\nfunction smallUintToBase32StringMapper(num) {\n    let base32Str = '';\n    for (let remaining = num; remaining !== 0;) {\n        const next = remaining >> 5;\n        const current = remaining - (next << 5);\n        base32Str = encodeSymbol(current) + base32Str;\n        remaining = next;\n    }\n    return base32Str;\n}\nexport function uintToBase32StringMapper(num, paddingLength) {\n    const head = ~~(num / 0x40000000);\n    const tail = num & 0x3fffffff;\n    return pad(smallUintToBase32StringMapper(head), paddingLength - 6) + pad(smallUintToBase32StringMapper(tail), 6);\n}\nexport function paddedUintToBase32StringMapper(paddingLength) {\n    return function padded(num) {\n        return uintToBase32StringMapper(num, paddingLength);\n    };\n}\nexport function uintToBase32StringUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Unsupported type');\n    }\n    let accumulated = 0;\n    let power = 1;\n    for (let index = value.length - 1; index >= 0; --index) {\n        const char = value[index];\n        const numericForChar = decodeSymbolLookupTable[char];\n        if (numericForChar === undefined) {\n            throw new Error('Unsupported type');\n        }\n        accumulated += numericForChar * power;\n        power *= 32;\n    }\n    return accumulated;\n}\n","import { Error, safeSubstring } from '../../../utils/globals.js';\nconst quickNumberToHexaString = '0123456789abcdef';\nexport function buildVersionsAppliersForUuid(versions) {\n    const mapping = {};\n    const reversedMapping = {};\n    for (let index = 0; index !== versions.length; ++index) {\n        const from = quickNumberToHexaString[index];\n        const to = quickNumberToHexaString[versions[index]];\n        mapping[from] = to;\n        reversedMapping[to] = from;\n    }\n    function versionsApplierMapper(value) {\n        return mapping[value[0]] + safeSubstring(value, 1);\n    }\n    function versionsApplierUnmapper(value) {\n        if (typeof value !== 'string') {\n            throw new Error('Cannot produce non-string values');\n        }\n        const rev = reversedMapping[value[0]];\n        if (rev === undefined) {\n            throw new Error('Cannot produce strings not starting by the version in hexa code');\n        }\n        return rev + safeSubstring(value, 1);\n    }\n    return { versionsApplierMapper, versionsApplierUnmapper };\n}\n","import { refineConstraintsForFloatingOnly } from './FloatingOnlyHelpers.js';\nconst safeNegativeInfinity = Number.NEGATIVE_INFINITY;\nconst safePositiveInfinity = Number.POSITIVE_INFINITY;\nconst safeMaxValue = Number.MAX_VALUE;\nexport const maxNonIntegerValue = 4503599627370495.5;\nexport const onlyIntegersAfterThisValue = 4503599627370496;\nexport function refineConstraintsForDoubleOnly(constraints) {\n    return refineConstraintsForFloatingOnly(constraints, safeMaxValue, maxNonIntegerValue, onlyIntegersAfterThisValue);\n}\nexport function doubleOnlyMapper(value) {\n    return value === onlyIntegersAfterThisValue\n        ? safePositiveInfinity\n        : value === -onlyIntegersAfterThisValue\n            ? safeNegativeInfinity\n            : value;\n}\nexport function doubleOnlyUnmapper(value) {\n    if (typeof value !== 'number')\n        throw new Error('Unsupported type');\n    return value === safePositiveInfinity\n        ? onlyIntegersAfterThisValue\n        : value === safeNegativeInfinity\n            ? -onlyIntegersAfterThisValue\n            : value;\n}\n","import { Map, safeMapGet, safeMapSet, safePush } from '../../../utils/globals.js';\nconst safeArrayIsArray = Array.isArray;\nconst safeObjectKeys = Object.keys;\nconst safeObjectIs = Object.is;\nexport function buildStableArbitraryGeneratorCache(isEqual) {\n    const previousCallsPerBuilder = new Map();\n    return function stableArbitraryGeneratorCache(builder, args) {\n        const entriesForBuilder = safeMapGet(previousCallsPerBuilder, builder);\n        if (entriesForBuilder === undefined) {\n            const newValue = builder(...args);\n            safeMapSet(previousCallsPerBuilder, builder, [{ args, value: newValue }]);\n            return newValue;\n        }\n        const safeEntriesForBuilder = entriesForBuilder;\n        for (const entry of safeEntriesForBuilder) {\n            if (isEqual(args, entry.args)) {\n                return entry.value;\n            }\n        }\n        const newValue = builder(...args);\n        safePush(safeEntriesForBuilder, { args, value: newValue });\n        return newValue;\n    };\n}\nexport function naiveIsEqual(v1, v2) {\n    if (v1 !== null && typeof v1 === 'object' && v2 !== null && typeof v2 === 'object') {\n        if (safeArrayIsArray(v1)) {\n            if (!safeArrayIsArray(v2))\n                return false;\n            if (v1.length !== v2.length)\n                return false;\n        }\n        else if (safeArrayIsArray(v2)) {\n            return false;\n        }\n        if (safeObjectKeys(v1).length !== safeObjectKeys(v2).length) {\n            return false;\n        }\n        for (const index in v1) {\n            if (!(index in v2)) {\n                return false;\n            }\n            if (!naiveIsEqual(v1[index], v2[index])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else {\n        return safeObjectIs(v1, v2);\n    }\n}\n","import { BigInt, String } from '../../../utils/globals.js';\nconst safeMathFloor = Math.floor;\nconst safeMathLog = Math.log;\nexport function integerLogLike(v) {\n    return safeMathFloor(safeMathLog(v) / safeMathLog(2));\n}\nexport function bigIntLogLike(v) {\n    if (v === BigInt(0))\n        return BigInt(0);\n    return BigInt(String(v).length);\n}\nfunction biasNumericRange(min, max, logLike) {\n    if (min === max) {\n        return [{ min: min, max: max }];\n    }\n    if (min < 0 && max > 0) {\n        const logMin = logLike(-min);\n        const logMax = logLike(max);\n        return [\n            { min: -logMin, max: logMax },\n            { min: (max - logMax), max: max },\n            { min: min, max: min + logMin },\n        ];\n    }\n    const logGap = logLike((max - min));\n    const arbCloseToMin = { min: min, max: min + logGap };\n    const arbCloseToMax = { min: (max - logGap), max: max };\n    return min < 0\n        ? [arbCloseToMax, arbCloseToMin]\n        : [arbCloseToMin, arbCloseToMax];\n}\nexport { biasNumericRange };\n","import { scheduleCommands } from './commands/ScheduledCommand.js';\nconst genericModelRun = (s, cmds, initialValue, runCmd, then) => {\n    return s.then((o) => {\n        const { model, real } = o;\n        let state = initialValue;\n        for (const c of cmds) {\n            state = then(state, () => {\n                return runCmd(c, model, real);\n            });\n        }\n        return state;\n    });\n};\nconst internalModelRun = (s, cmds) => {\n    const then = (_p, c) => c();\n    const setupProducer = {\n        then: (fun) => {\n            fun(s());\n            return undefined;\n        },\n    };\n    const runSync = (cmd, m, r) => {\n        if (cmd.check(m))\n            cmd.run(m, r);\n        return undefined;\n    };\n    return genericModelRun(setupProducer, cmds, undefined, runSync, then);\n};\nconst isAsyncSetup = (s) => {\n    return typeof s.then === 'function';\n};\nconst internalAsyncModelRun = async (s, cmds, defaultPromise = Promise.resolve()) => {\n    const then = (p, c) => p.then(c);\n    const setupProducer = {\n        then: (fun) => {\n            const out = s();\n            if (isAsyncSetup(out))\n                return out.then(fun);\n            else\n                return fun(out);\n        },\n    };\n    const runAsync = async (cmd, m, r) => {\n        if (await cmd.check(m))\n            await cmd.run(m, r);\n    };\n    return await genericModelRun(setupProducer, cmds, defaultPromise, runAsync, then);\n};\nexport function modelRun(s, cmds) {\n    internalModelRun(s, cmds);\n}\nexport async function asyncModelRun(s, cmds) {\n    await internalAsyncModelRun(s, cmds);\n}\nexport async function scheduledModelRun(scheduler, s, cmds) {\n    const scheduledCommands = scheduleCommands(scheduler, cmds);\n    const out = internalAsyncModelRun(s, scheduledCommands, scheduler.schedule(Promise.resolve(), 'startModel'));\n    await scheduler.waitFor(out);\n    await scheduler.waitAll();\n}\n","import { SchedulerImplem } from '../implementations/SchedulerImplem.js';\nfunction buildNextTaskIndex(ordering) {\n    let numTasks = 0;\n    return {\n        clone: () => buildNextTaskIndex(ordering),\n        nextTaskIndex: (scheduledTasks) => {\n            if (ordering.length <= numTasks) {\n                throw new Error(`Invalid schedulerFor defined: too many tasks have been scheduled`);\n            }\n            const taskIndex = scheduledTasks.findIndex((t) => t.taskId === ordering[numTasks]);\n            if (taskIndex === -1) {\n                throw new Error(`Invalid schedulerFor defined: unable to find next task`);\n            }\n            ++numTasks;\n            return taskIndex;\n        },\n    };\n}\nexport function buildSchedulerFor(act, ordering) {\n    return new SchedulerImplem(act, buildNextTaskIndex(ordering));\n}\n","import { stringify } from '../../../utils/stringify.js';\nfunction raiseUnsupportedASTNode(astNode) {\n    return new Error(`Unsupported AST node! Received: ${stringify(astNode)}`);\n}\nfunction addMissingDotStarTraversalAddMissing(astNode, isFirst, isLast) {\n    if (!isFirst && !isLast) {\n        return astNode;\n    }\n    const traversalResults = { hasStart: false, hasEnd: false };\n    const revampedNode = addMissingDotStarTraversal(astNode, isFirst, isLast, traversalResults);\n    const missingStart = isFirst && !traversalResults.hasStart;\n    const missingEnd = isLast && !traversalResults.hasEnd;\n    if (!missingStart && !missingEnd) {\n        return revampedNode;\n    }\n    const expressions = [];\n    if (missingStart) {\n        expressions.push({ type: 'Assertion', kind: '^' });\n        expressions.push({\n            type: 'Repetition',\n            quantifier: { type: 'Quantifier', kind: '*', greedy: true },\n            expression: { type: 'Char', kind: 'meta', symbol: '.', value: '.', codePoint: Number.NaN },\n        });\n    }\n    expressions.push(revampedNode);\n    if (missingEnd) {\n        expressions.push({\n            type: 'Repetition',\n            quantifier: { type: 'Quantifier', kind: '*', greedy: true },\n            expression: { type: 'Char', kind: 'meta', symbol: '.', value: '.', codePoint: Number.NaN },\n        });\n        expressions.push({ type: 'Assertion', kind: '$' });\n    }\n    return { type: 'Group', capturing: false, expression: { type: 'Alternative', expressions } };\n}\nfunction addMissingDotStarTraversal(astNode, isFirst, isLast, traversalResults) {\n    switch (astNode.type) {\n        case 'Char':\n            return astNode;\n        case 'Repetition':\n            return astNode;\n        case 'Quantifier':\n            throw new Error(`Wrongly defined AST tree, Quantifier nodes not supposed to be scanned!`);\n        case 'Alternative':\n            traversalResults.hasStart = true;\n            traversalResults.hasEnd = true;\n            return Object.assign(Object.assign({}, astNode), { expressions: astNode.expressions.map((node, index) => addMissingDotStarTraversalAddMissing(node, isFirst && index === 0, isLast && index === astNode.expressions.length - 1)) });\n        case 'CharacterClass':\n            return astNode;\n        case 'ClassRange':\n            return astNode;\n        case 'Group': {\n            return Object.assign(Object.assign({}, astNode), { expression: addMissingDotStarTraversal(astNode.expression, isFirst, isLast, traversalResults) });\n        }\n        case 'Disjunction': {\n            traversalResults.hasStart = true;\n            traversalResults.hasEnd = true;\n            return Object.assign(Object.assign({}, astNode), { left: astNode.left !== null ? addMissingDotStarTraversalAddMissing(astNode.left, isFirst, isLast) : null, right: astNode.right !== null ? addMissingDotStarTraversalAddMissing(astNode.right, isFirst, isLast) : null });\n        }\n        case 'Assertion': {\n            if (astNode.kind === '^' || astNode.kind === 'Lookahead') {\n                traversalResults.hasStart = true;\n                return astNode;\n            }\n            else if (astNode.kind === '$' || astNode.kind === 'Lookbehind') {\n                traversalResults.hasEnd = true;\n                return astNode;\n            }\n            else {\n                throw new Error(`Assertions of kind ${astNode.kind} not implemented yet!`);\n            }\n        }\n        case 'Backreference':\n            return astNode;\n        default:\n            throw raiseUnsupportedASTNode(astNode);\n    }\n}\nexport function addMissingDotStar(astNode) {\n    return addMissingDotStarTraversalAddMissing(astNode, true, true);\n}\n","import { IntegerArbitrary } from './_internals/IntegerArbitrary.js';\nconst safeNumberIsInteger = Number.isInteger;\nfunction buildCompleteIntegerConstraints(constraints) {\n    const min = constraints.min !== undefined ? constraints.min : -0x80000000;\n    const max = constraints.max !== undefined ? constraints.max : 0x7fffffff;\n    return { min, max };\n}\nexport function integer(constraints = {}) {\n    const fullConstraints = buildCompleteIntegerConstraints(constraints);\n    if (fullConstraints.min > fullConstraints.max) {\n        throw new Error('fc.integer maximum value should be equal or greater than the minimum one');\n    }\n    if (!safeNumberIsInteger(fullConstraints.min)) {\n        throw new Error('fc.integer minimum value should be an integer');\n    }\n    if (!safeNumberIsInteger(fullConstraints.max)) {\n        throw new Error('fc.integer maximum value should be an integer');\n    }\n    return new IntegerArbitrary(fullConstraints.min, fullConstraints.max);\n}\n","import { safeMapGet, safeMapSet } from '../../../utils/globals.js';\nconst depthContextCache = new Map();\nexport function getDepthContextFor(contextMeta) {\n    if (contextMeta === undefined) {\n        return { depth: 0 };\n    }\n    if (typeof contextMeta !== 'string') {\n        return contextMeta;\n    }\n    const cachedContext = safeMapGet(depthContextCache, contextMeta);\n    if (cachedContext !== undefined) {\n        return cachedContext;\n    }\n    const context = { depth: 0 };\n    safeMapSet(depthContextCache, contextMeta, context);\n    return context;\n}\nexport function createDepthIdentifier() {\n    const identifier = { depth: 0 };\n    return identifier;\n}\n","import { safeApply } from './apply.js';\nconst SArray = typeof Array !== 'undefined' ? Array : undefined;\nexport { SArray as Array };\nconst SBigInt = typeof BigInt !== 'undefined' ? BigInt : undefined;\nexport { SBigInt as BigInt };\nconst SBigInt64Array = typeof BigInt64Array !== 'undefined' ? BigInt64Array : undefined;\nexport { SBigInt64Array as BigInt64Array };\nconst SBigUint64Array = typeof BigUint64Array !== 'undefined' ? BigUint64Array : undefined;\nexport { SBigUint64Array as BigUint64Array };\nconst SBoolean = typeof Boolean !== 'undefined' ? Boolean : undefined;\nexport { SBoolean as Boolean };\nconst SDate = typeof Date !== 'undefined' ? Date : undefined;\nexport { SDate as Date };\nconst SError = typeof Error !== 'undefined' ? Error : undefined;\nexport { SError as Error };\nconst SFloat32Array = typeof Float32Array !== 'undefined' ? Float32Array : undefined;\nexport { SFloat32Array as Float32Array };\nconst SFloat64Array = typeof Float64Array !== 'undefined' ? Float64Array : undefined;\nexport { SFloat64Array as Float64Array };\nconst SInt8Array = typeof Int8Array !== 'undefined' ? Int8Array : undefined;\nexport { SInt8Array as Int8Array };\nconst SInt16Array = typeof Int16Array !== 'undefined' ? Int16Array : undefined;\nexport { SInt16Array as Int16Array };\nconst SInt32Array = typeof Int32Array !== 'undefined' ? Int32Array : undefined;\nexport { SInt32Array as Int32Array };\nconst SNumber = typeof Number !== 'undefined' ? Number : undefined;\nexport { SNumber as Number };\nconst SString = typeof String !== 'undefined' ? String : undefined;\nexport { SString as String };\nconst SSet = typeof Set !== 'undefined' ? Set : undefined;\nexport { SSet as Set };\nconst SUint8Array = typeof Uint8Array !== 'undefined' ? Uint8Array : undefined;\nexport { SUint8Array as Uint8Array };\nconst SUint8ClampedArray = typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : undefined;\nexport { SUint8ClampedArray as Uint8ClampedArray };\nconst SUint16Array = typeof Uint16Array !== 'undefined' ? Uint16Array : undefined;\nexport { SUint16Array as Uint16Array };\nconst SUint32Array = typeof Uint32Array !== 'undefined' ? Uint32Array : undefined;\nexport { SUint32Array as Uint32Array };\nconst SencodeURIComponent = typeof encodeURIComponent !== 'undefined' ? encodeURIComponent : undefined;\nexport { SencodeURIComponent as encodeURIComponent };\nconst SMap = Map;\nexport { SMap as Map };\nconst SSymbol = Symbol;\nexport { SSymbol as Symbol };\nconst untouchedForEach = Array.prototype.forEach;\nconst untouchedIndexOf = Array.prototype.indexOf;\nconst untouchedJoin = Array.prototype.join;\nconst untouchedMap = Array.prototype.map;\nconst untouchedFilter = Array.prototype.filter;\nconst untouchedPush = Array.prototype.push;\nconst untouchedPop = Array.prototype.pop;\nconst untouchedSplice = Array.prototype.splice;\nconst untouchedSlice = Array.prototype.slice;\nconst untouchedSort = Array.prototype.sort;\nconst untouchedEvery = Array.prototype.every;\nfunction extractForEach(instance) {\n    try {\n        return instance.forEach;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractIndexOf(instance) {\n    try {\n        return instance.indexOf;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractJoin(instance) {\n    try {\n        return instance.join;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractMap(instance) {\n    try {\n        return instance.map;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractFilter(instance) {\n    try {\n        return instance.filter;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractPush(instance) {\n    try {\n        return instance.push;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractPop(instance) {\n    try {\n        return instance.pop;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractSplice(instance) {\n    try {\n        return instance.splice;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractSlice(instance) {\n    try {\n        return instance.slice;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractSort(instance) {\n    try {\n        return instance.sort;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractEvery(instance) {\n    try {\n        return instance.every;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nexport function safeForEach(instance, fn) {\n    if (extractForEach(instance) === untouchedForEach) {\n        return instance.forEach(fn);\n    }\n    return safeApply(untouchedForEach, instance, [fn]);\n}\nexport function safeIndexOf(instance, ...args) {\n    if (extractIndexOf(instance) === untouchedIndexOf) {\n        return instance.indexOf(...args);\n    }\n    return safeApply(untouchedIndexOf, instance, args);\n}\nexport function safeJoin(instance, ...args) {\n    if (extractJoin(instance) === untouchedJoin) {\n        return instance.join(...args);\n    }\n    return safeApply(untouchedJoin, instance, args);\n}\nexport function safeMap(instance, fn) {\n    if (extractMap(instance) === untouchedMap) {\n        return instance.map(fn);\n    }\n    return safeApply(untouchedMap, instance, [fn]);\n}\nexport function safeFilter(instance, predicate) {\n    if (extractFilter(instance) === untouchedFilter) {\n        return instance.filter(predicate);\n    }\n    return safeApply(untouchedFilter, instance, [predicate]);\n}\nexport function safePush(instance, ...args) {\n    if (extractPush(instance) === untouchedPush) {\n        return instance.push(...args);\n    }\n    return safeApply(untouchedPush, instance, args);\n}\nexport function safePop(instance) {\n    if (extractPop(instance) === untouchedPop) {\n        return instance.pop();\n    }\n    return safeApply(untouchedPop, instance, []);\n}\nexport function safeSplice(instance, ...args) {\n    if (extractSplice(instance) === untouchedSplice) {\n        return instance.splice(...args);\n    }\n    return safeApply(untouchedSplice, instance, args);\n}\nexport function safeSlice(instance, ...args) {\n    if (extractSlice(instance) === untouchedSlice) {\n        return instance.slice(...args);\n    }\n    return safeApply(untouchedSlice, instance, args);\n}\nexport function safeSort(instance, ...args) {\n    if (extractSort(instance) === untouchedSort) {\n        return instance.sort(...args);\n    }\n    return safeApply(untouchedSort, instance, args);\n}\nexport function safeEvery(instance, ...args) {\n    if (extractEvery(instance) === untouchedEvery) {\n        return instance.every(...args);\n    }\n    return safeApply(untouchedEvery, instance, args);\n}\nconst untouchedGetTime = Date.prototype.getTime;\nconst untouchedToISOString = Date.prototype.toISOString;\nfunction extractGetTime(instance) {\n    try {\n        return instance.getTime;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractToISOString(instance) {\n    try {\n        return instance.toISOString;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nexport function safeGetTime(instance) {\n    if (extractGetTime(instance) === untouchedGetTime) {\n        return instance.getTime();\n    }\n    return safeApply(untouchedGetTime, instance, []);\n}\nexport function safeToISOString(instance) {\n    if (extractToISOString(instance) === untouchedToISOString) {\n        return instance.toISOString();\n    }\n    return safeApply(untouchedToISOString, instance, []);\n}\nconst untouchedAdd = Set.prototype.add;\nconst untouchedHas = Set.prototype.has;\nfunction extractAdd(instance) {\n    try {\n        return instance.add;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractHas(instance) {\n    try {\n        return instance.has;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nexport function safeAdd(instance, value) {\n    if (extractAdd(instance) === untouchedAdd) {\n        return instance.add(value);\n    }\n    return safeApply(untouchedAdd, instance, [value]);\n}\nexport function safeHas(instance, value) {\n    if (extractHas(instance) === untouchedHas) {\n        return instance.has(value);\n    }\n    return safeApply(untouchedHas, instance, [value]);\n}\nconst untouchedSet = WeakMap.prototype.set;\nconst untouchedGet = WeakMap.prototype.get;\nfunction extractSet(instance) {\n    try {\n        return instance.set;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractGet(instance) {\n    try {\n        return instance.get;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nexport function safeSet(instance, key, value) {\n    if (extractSet(instance) === untouchedSet) {\n        return instance.set(key, value);\n    }\n    return safeApply(untouchedSet, instance, [key, value]);\n}\nexport function safeGet(instance, key) {\n    if (extractGet(instance) === untouchedGet) {\n        return instance.get(key);\n    }\n    return safeApply(untouchedGet, instance, [key]);\n}\nconst untouchedMapSet = Map.prototype.set;\nconst untouchedMapGet = Map.prototype.get;\nfunction extractMapSet(instance) {\n    try {\n        return instance.set;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractMapGet(instance) {\n    try {\n        return instance.get;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nexport function safeMapSet(instance, key, value) {\n    if (extractMapSet(instance) === untouchedMapSet) {\n        return instance.set(key, value);\n    }\n    return safeApply(untouchedMapSet, instance, [key, value]);\n}\nexport function safeMapGet(instance, key) {\n    if (extractMapGet(instance) === untouchedMapGet) {\n        return instance.get(key);\n    }\n    return safeApply(untouchedMapGet, instance, [key]);\n}\nconst untouchedSplit = String.prototype.split;\nconst untouchedStartsWith = String.prototype.startsWith;\nconst untouchedEndsWith = String.prototype.endsWith;\nconst untouchedSubstring = String.prototype.substring;\nconst untouchedToLowerCase = String.prototype.toLowerCase;\nconst untouchedToUpperCase = String.prototype.toUpperCase;\nconst untouchedPadStart = String.prototype.padStart;\nconst untouchedCharCodeAt = String.prototype.charCodeAt;\nconst untouchedNormalize = String.prototype.normalize;\nconst untouchedReplace = String.prototype.replace;\nfunction extractSplit(instance) {\n    try {\n        return instance.split;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractStartsWith(instance) {\n    try {\n        return instance.startsWith;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractEndsWith(instance) {\n    try {\n        return instance.endsWith;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractSubstring(instance) {\n    try {\n        return instance.substring;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractToLowerCase(instance) {\n    try {\n        return instance.toLowerCase;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractToUpperCase(instance) {\n    try {\n        return instance.toUpperCase;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractPadStart(instance) {\n    try {\n        return instance.padStart;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractCharCodeAt(instance) {\n    try {\n        return instance.charCodeAt;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractNormalize(instance) {\n    try {\n        return instance.normalize;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nfunction extractReplace(instance) {\n    try {\n        return instance.replace;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nexport function safeSplit(instance, ...args) {\n    if (extractSplit(instance) === untouchedSplit) {\n        return instance.split(...args);\n    }\n    return safeApply(untouchedSplit, instance, args);\n}\nexport function safeStartsWith(instance, ...args) {\n    if (extractStartsWith(instance) === untouchedStartsWith) {\n        return instance.startsWith(...args);\n    }\n    return safeApply(untouchedStartsWith, instance, args);\n}\nexport function safeEndsWith(instance, ...args) {\n    if (extractEndsWith(instance) === untouchedEndsWith) {\n        return instance.endsWith(...args);\n    }\n    return safeApply(untouchedEndsWith, instance, args);\n}\nexport function safeSubstring(instance, ...args) {\n    if (extractSubstring(instance) === untouchedSubstring) {\n        return instance.substring(...args);\n    }\n    return safeApply(untouchedSubstring, instance, args);\n}\nexport function safeToLowerCase(instance) {\n    if (extractToLowerCase(instance) === untouchedToLowerCase) {\n        return instance.toLowerCase();\n    }\n    return safeApply(untouchedToLowerCase, instance, []);\n}\nexport function safeToUpperCase(instance) {\n    if (extractToUpperCase(instance) === untouchedToUpperCase) {\n        return instance.toUpperCase();\n    }\n    return safeApply(untouchedToUpperCase, instance, []);\n}\nexport function safePadStart(instance, ...args) {\n    if (extractPadStart(instance) === untouchedPadStart) {\n        return instance.padStart(...args);\n    }\n    return safeApply(untouchedPadStart, instance, args);\n}\nexport function safeCharCodeAt(instance, index) {\n    if (extractCharCodeAt(instance) === untouchedCharCodeAt) {\n        return instance.charCodeAt(index);\n    }\n    return safeApply(untouchedCharCodeAt, instance, [index]);\n}\nexport function safeNormalize(instance, form) {\n    if (extractNormalize(instance) === untouchedNormalize) {\n        return instance.normalize(form);\n    }\n    return safeApply(untouchedNormalize, instance, [form]);\n}\nexport function safeReplace(instance, pattern, replacement) {\n    if (extractReplace(instance) === untouchedReplace) {\n        return instance.replace(pattern, replacement);\n    }\n    return safeApply(untouchedReplace, instance, [pattern, replacement]);\n}\nconst untouchedNumberToString = Number.prototype.toString;\nfunction extractNumberToString(instance) {\n    try {\n        return instance.toString;\n    }\n    catch (err) {\n        return undefined;\n    }\n}\nexport function safeNumberToString(instance, ...args) {\n    if (extractNumberToString(instance) === untouchedNumberToString) {\n        return instance.toString(...args);\n    }\n    return safeApply(untouchedNumberToString, instance, args);\n}\nconst untouchedHasOwnProperty = Object.prototype.hasOwnProperty;\nconst untouchedToString = Object.prototype.toString;\nexport function safeHasOwnProperty(instance, v) {\n    return safeApply(untouchedHasOwnProperty, instance, [v]);\n}\nexport function safeToString(instance) {\n    return safeApply(untouchedToString, instance, []);\n}\n","import { buildCharacterArbitrary } from './_internals/builders/CharacterArbitraryBuilder.js';\nfunction identity(v) {\n    return v;\n}\nexport function char() {\n    return buildCharacterArbitrary(0x20, 0x7e, identity, identity);\n}\n","import { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nexport class LazyArbitrary extends Arbitrary {\n    constructor(name) {\n        super();\n        this.name = name;\n        this.underlying = null;\n    }\n    generate(mrng, biasFactor) {\n        if (!this.underlying) {\n            throw new Error(`Lazy arbitrary ${JSON.stringify(this.name)} not correctly initialized`);\n        }\n        return this.underlying.generate(mrng, biasFactor);\n    }\n    canShrinkWithoutContext(value) {\n        if (!this.underlying) {\n            throw new Error(`Lazy arbitrary ${JSON.stringify(this.name)} not correctly initialized`);\n        }\n        return this.underlying.canShrinkWithoutContext(value);\n    }\n    shrink(value, context) {\n        if (!this.underlying) {\n            throw new Error(`Lazy arbitrary ${JSON.stringify(this.name)} not correctly initialized`);\n        }\n        return this.underlying.shrink(value, context);\n    }\n}\n","import { GeneratorArbitrary } from './_internals/GeneratorArbitrary.js';\nexport function gen() {\n    return new GeneratorArbitrary();\n}\n","import { unsafeUniformIntDistributionInternal } from './UnsafeUniformIntDistributionInternal.js';\nexport function unsafeUniformArrayIntDistributionInternal(out, rangeSize, rng) {\n    var rangeLength = rangeSize.length;\n    while (true) {\n        for (var index = 0; index !== rangeLength; ++index) {\n            var indexRangeSize = index === 0 ? rangeSize[0] + 1 : 0x100000000;\n            var g = unsafeUniformIntDistributionInternal(indexRangeSize, rng);\n            out[index] = g;\n        }\n        for (var index = 0; index !== rangeLength; ++index) {\n            var current = out[index];\n            var currentInRange = rangeSize[index];\n            if (current < currentInRange) {\n                return out;\n            }\n            else if (current > currentInRange) {\n                break;\n            }\n        }\n    }\n}\n","import { Value } from '../../../check/arbitrary/definition/Value.js';\nexport const UndefinedContextPlaceholder = Symbol('UndefinedContextPlaceholder');\nexport function noUndefinedAsContext(value) {\n    if (value.context !== undefined) {\n        return value;\n    }\n    if (value.hasToBeCloned) {\n        return new Value(value.value_, UndefinedContextPlaceholder, () => value.value);\n    }\n    return new Value(value.value_, UndefinedContextPlaceholder);\n}\n","import { safePush } from '../../../utils/globals.js';\nexport class CustomEqualSet {\n    constructor(isEqual) {\n        this.isEqual = isEqual;\n        this.data = [];\n    }\n    tryAdd(value) {\n        for (let idx = 0; idx !== this.data.length; ++idx) {\n            if (this.isEqual(this.data[idx], value)) {\n                return false;\n            }\n        }\n        safePush(this.data, value);\n        return true;\n    }\n    size() {\n        return this.data.length;\n    }\n    getData() {\n        return this.data;\n    }\n}\n","import { TupleArbitrary } from './_internals/TupleArbitrary.js';\nexport function tuple(...arbs) {\n    return new TupleArbitrary(arbs);\n}\n","import { Set, safeAdd, safePush } from '../../../utils/globals.js';\nexport class SameValueZeroSet {\n    constructor(selector) {\n        this.selector = selector;\n        this.selectedItems = new Set();\n        this.data = [];\n    }\n    tryAdd(value) {\n        const selected = this.selector(value);\n        const sizeBefore = this.selectedItems.size;\n        safeAdd(this.selectedItems, selected);\n        if (sizeBefore !== this.selectedItems.size) {\n            safePush(this.data, value);\n            return true;\n        }\n        return false;\n    }\n    size() {\n        return this.data.length;\n    }\n    getData() {\n        return this.data;\n    }\n}\n","import { safeCharCodeAt } from '../../../utils/globals.js';\nexport const indexToCharStringMapper = String.fromCodePoint;\nexport function indexToCharStringUnmapper(c) {\n    if (typeof c !== 'string') {\n        throw new Error('Cannot unmap non-string');\n    }\n    if (c.length === 0 || c.length > 2) {\n        throw new Error('Cannot unmap string with more or less than one character');\n    }\n    const c1 = safeCharCodeAt(c, 0);\n    if (c.length === 1) {\n        return c1;\n    }\n    const c2 = safeCharCodeAt(c, 1);\n    if (c1 < 0xd800 || c1 > 0xdbff || c2 < 0xdc00 || c2 > 0xdfff) {\n        throw new Error('Cannot unmap invalid surrogate pairs');\n    }\n    return c.codePointAt(0);\n}\n","import { safeJoin } from '../../../utils/globals.js';\nexport function codePointsToStringMapper(tab) {\n    return safeJoin(tab, '');\n}\nexport function codePointsToStringUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Cannot unmap the passed value');\n    }\n    return [...value];\n}\n","import { LimitedShrinkArbitrary } from './_internals/LimitedShrinkArbitrary.js';\nexport function limitShrink(arbitrary, maxShrinks) {\n    return new LimitedShrinkArbitrary(arbitrary, maxShrinks);\n}\n","import { safeJoin, safeMap, safePush, safeSplit, safeSubstring, safeToLowerCase, safeToUpperCase, } from '../../../utils/globals.js';\nexport function wordsToJoinedStringMapper(words) {\n    return safeJoin(safeMap(words, (w) => (w[w.length - 1] === ',' ? safeSubstring(w, 0, w.length - 1) : w)), ' ');\n}\nexport function wordsToJoinedStringUnmapperFor(wordsArbitrary) {\n    return function wordsToJoinedStringUnmapper(value) {\n        if (typeof value !== 'string') {\n            throw new Error('Unsupported type');\n        }\n        const words = [];\n        for (const candidate of safeSplit(value, ' ')) {\n            if (wordsArbitrary.canShrinkWithoutContext(candidate))\n                safePush(words, candidate);\n            else if (wordsArbitrary.canShrinkWithoutContext(candidate + ','))\n                safePush(words, candidate + ',');\n            else\n                throw new Error('Unsupported word');\n        }\n        return words;\n    };\n}\nexport function wordsToSentenceMapper(words) {\n    let sentence = safeJoin(words, ' ');\n    if (sentence[sentence.length - 1] === ',') {\n        sentence = safeSubstring(sentence, 0, sentence.length - 1);\n    }\n    return safeToUpperCase(sentence[0]) + safeSubstring(sentence, 1) + '.';\n}\nexport function wordsToSentenceUnmapperFor(wordsArbitrary) {\n    return function wordsToSentenceUnmapper(value) {\n        if (typeof value !== 'string') {\n            throw new Error('Unsupported type');\n        }\n        if (value.length < 2 ||\n            value[value.length - 1] !== '.' ||\n            value[value.length - 2] === ',' ||\n            safeToUpperCase(safeToLowerCase(value[0])) !== value[0]) {\n            throw new Error('Unsupported value');\n        }\n        const adaptedValue = safeToLowerCase(value[0]) + safeSubstring(value, 1, value.length - 1);\n        const words = [];\n        const candidates = safeSplit(adaptedValue, ' ');\n        for (let idx = 0; idx !== candidates.length; ++idx) {\n            const candidate = candidates[idx];\n            if (wordsArbitrary.canShrinkWithoutContext(candidate))\n                safePush(words, candidate);\n            else if (idx === candidates.length - 1 && wordsArbitrary.canShrinkWithoutContext(candidate + ','))\n                safePush(words, candidate + ',');\n            else\n                throw new Error('Unsupported word');\n        }\n        return words;\n    };\n}\nexport function sentencesToParagraphMapper(sentences) {\n    return safeJoin(sentences, ' ');\n}\nexport function sentencesToParagraphUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Unsupported type');\n    }\n    const sentences = safeSplit(value, '. ');\n    for (let idx = 0; idx < sentences.length - 1; ++idx) {\n        sentences[idx] += '.';\n    }\n    return sentences;\n}\n","import { BigInt, safePush } from '../../../utils/globals.js';\nexport function countToggledBits(n) {\n    let count = 0;\n    while (n > BigInt(0)) {\n        if (n & BigInt(1))\n            ++count;\n        n >>= BigInt(1);\n    }\n    return count;\n}\nexport function computeNextFlags(flags, nextSize) {\n    const allowedMask = (BigInt(1) << BigInt(nextSize)) - BigInt(1);\n    const preservedFlags = flags & allowedMask;\n    let numMissingFlags = countToggledBits(flags - preservedFlags);\n    let nFlags = preservedFlags;\n    for (let mask = BigInt(1); mask <= allowedMask && numMissingFlags !== 0; mask <<= BigInt(1)) {\n        if (!(nFlags & mask)) {\n            nFlags |= mask;\n            --numMissingFlags;\n        }\n    }\n    return nFlags;\n}\nexport function computeTogglePositions(chars, toggleCase) {\n    const positions = [];\n    for (let idx = chars.length - 1; idx !== -1; --idx) {\n        if (toggleCase(chars[idx]) !== chars[idx])\n            safePush(positions, idx);\n    }\n    return positions;\n}\nexport function computeFlagsFromChars(untoggledChars, toggledChars, togglePositions) {\n    let flags = BigInt(0);\n    for (let idx = 0, mask = BigInt(1); idx !== togglePositions.length; ++idx, mask <<= BigInt(1)) {\n        if (untoggledChars[togglePositions[idx]] !== toggledChars[togglePositions[idx]]) {\n            flags |= mask;\n        }\n    }\n    return flags;\n}\nexport function applyFlagsOnChars(chars, flags, togglePositions, toggleCase) {\n    for (let idx = 0, mask = BigInt(1); idx !== togglePositions.length; ++idx, mask <<= BigInt(1)) {\n        if (flags & mask)\n            chars[togglePositions[idx]] = toggleCase(chars[togglePositions[idx]]);\n    }\n}\n","import { PreconditionFailure } from './PreconditionFailure.js';\nexport function pre(expectTruthy) {\n    if (!expectTruthy) {\n        throw new PreconditionFailure();\n    }\n}\n","import { Boolean, Number, String } from '../../../utils/globals.js';\nexport function unboxedToBoxedMapper(value) {\n    switch (typeof value) {\n        case 'boolean':\n            return new Boolean(value);\n        case 'number':\n            return new Number(value);\n        case 'string':\n            return new String(value);\n        default:\n            return value;\n    }\n}\nexport function unboxedToBoxedUnmapper(value) {\n    if (typeof value !== 'object' || value === null || !('constructor' in value)) {\n        return value;\n    }\n    return value.constructor === Boolean || value.constructor === Number || value.constructor === String\n        ? value.valueOf()\n        : value;\n}\n","import { unboxedToBoxedMapper, unboxedToBoxedUnmapper } from '../mappers/UnboxedToBoxed.js';\nexport function boxedArbitraryBuilder(arb) {\n    return arb.map(unboxedToBoxedMapper, unboxedToBoxedUnmapper);\n}\n","import { ConstantArbitrary } from './_internals/ConstantArbitrary.js';\nexport function constant(value) {\n    return new ConstantArbitrary([value]);\n}\n","import { unicodeJsonValue } from './unicodeJsonValue.js';\nexport function unicodeJson(constraints = {}) {\n    const arb = unicodeJsonValue(constraints);\n    return arb.map(JSON.stringify);\n}\n","import { safePop, safePush, safeSubstring } from '../../../utils/globals.js';\nexport function tokenizeString(patternsArb, value, minLength, maxLength) {\n    if (value.length === 0) {\n        if (minLength > 0) {\n            return undefined;\n        }\n        return [];\n    }\n    if (maxLength <= 0) {\n        return undefined;\n    }\n    const stack = [{ endIndexChunks: 0, nextStartIndex: 1, chunks: [] }];\n    while (stack.length > 0) {\n        const last = safePop(stack);\n        for (let index = last.nextStartIndex; index <= value.length; ++index) {\n            const chunk = safeSubstring(value, last.endIndexChunks, index);\n            if (patternsArb.canShrinkWithoutContext(chunk)) {\n                const newChunks = [...last.chunks, chunk];\n                if (index === value.length) {\n                    if (newChunks.length < minLength) {\n                        break;\n                    }\n                    return newChunks;\n                }\n                safePush(stack, { endIndexChunks: last.endIndexChunks, nextStartIndex: index + 1, chunks: last.chunks });\n                if (newChunks.length < maxLength) {\n                    safePush(stack, { endIndexChunks: index, nextStartIndex: index + 1, chunks: newChunks });\n                }\n                break;\n            }\n        }\n    }\n    return undefined;\n}\n","import { safeSubstring } from '../../../utils/globals.js';\nexport function stringToBase64Mapper(s) {\n    switch (s.length % 4) {\n        case 0:\n            return s;\n        case 3:\n            return `${s}=`;\n        case 2:\n            return `${s}==`;\n        default:\n            return safeSubstring(s, 1);\n    }\n}\nexport function stringToBase64Unmapper(value) {\n    if (typeof value !== 'string' || value.length % 4 !== 0) {\n        throw new Error('Invalid string received');\n    }\n    const lastTrailingIndex = value.indexOf('=');\n    if (lastTrailingIndex === -1) {\n        return value;\n    }\n    const numTrailings = value.length - lastTrailingIndex;\n    if (numTrailings > 2) {\n        throw new Error('Cannot unmap the passed value');\n    }\n    return safeSubstring(value, 0, lastTrailingIndex);\n}\n","import { safeJoin, safeSplit } from '../../../utils/globals.js';\nexport function charsToStringMapper(tab) {\n    return safeJoin(tab, '');\n}\nexport function charsToStringUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Cannot unmap the passed value');\n    }\n    return safeSplit(value, '');\n}\n","import { SubarrayArbitrary } from './_internals/SubarrayArbitrary.js';\nexport function subarray(originalArray, constraints = {}) {\n    const { minLength = 0, maxLength = originalArray.length } = constraints;\n    return new SubarrayArbitrary(originalArray, true, minLength, maxLength);\n}\n","import { SubarrayArbitrary } from './_internals/SubarrayArbitrary.js';\nexport function shuffledSubarray(originalArray, constraints = {}) {\n    const { minLength = 0, maxLength = originalArray.length } = constraints;\n    return new SubarrayArbitrary(originalArray, false, minLength, maxLength);\n}\n","import { safeNumberToString, safePadStart } from '../../../utils/globals.js';\nexport function numberToPaddedEightMapper(n) {\n    return safePadStart(safeNumberToString(n, 16), 8, '0');\n}\nexport function numberToPaddedEightUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Unsupported type');\n    }\n    if (value.length !== 8) {\n        throw new Error('Unsupported value: invalid length');\n    }\n    const n = parseInt(value, 16);\n    if (value !== numberToPaddedEightMapper(n)) {\n        throw new Error('Unsupported value: invalid content');\n    }\n    return n;\n}\n","import { safeSubstring } from '../../../utils/globals.js';\nexport function paddedEightsToUuidMapper(t) {\n    return `${t[0]}-${safeSubstring(t[1], 4)}-${safeSubstring(t[1], 0, 4)}-${safeSubstring(t[2], 0, 4)}-${safeSubstring(t[2], 4)}${t[3]}`;\n}\nconst UuidRegex = /^([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})$/;\nexport function paddedEightsToUuidUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Unsupported type');\n    }\n    const m = UuidRegex.exec(value);\n    if (m === null) {\n        throw new Error('Unsupported type');\n    }\n    return [m[1], m[3] + m[2], m[4] + safeSubstring(m[5], 0, 4), safeSubstring(m[5], 4)];\n}\n","import { buildUriQueryOrFragmentArbitrary } from './_internals/builders/UriQueryOrFragmentArbitraryBuilder.js';\nexport function webFragments(constraints = {}) {\n    return buildUriQueryOrFragmentArbitrary(constraints.size);\n}\n","import { safeJoin, safeMap, safeSplice, safeSplit } from '../../../utils/globals.js';\nexport function segmentsToPathMapper(segments) {\n    return safeJoin(safeMap(segments, (v) => `/${v}`), '');\n}\nexport function segmentsToPathUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Incompatible value received: type');\n    }\n    if (value.length !== 0 && value[0] !== '/') {\n        throw new Error('Incompatible value received: start');\n    }\n    return safeSplice(safeSplit(value, '/'), 1);\n}\n","import { buildUriQueryOrFragmentArbitrary } from './_internals/builders/UriQueryOrFragmentArbitraryBuilder.js';\nexport function webQueryParameters(constraints = {}) {\n    return buildUriQueryOrFragmentArbitrary(constraints.size);\n}\n","import { cloneMethod } from '../../symbols.js';\nexport class CommandsIterable {\n    constructor(commands, metadataForReplay) {\n        this.commands = commands;\n        this.metadataForReplay = metadataForReplay;\n    }\n    [Symbol.iterator]() {\n        return this.commands[Symbol.iterator]();\n    }\n    [cloneMethod]() {\n        return new CommandsIterable(this.commands.map((c) => c.clone()), this.metadataForReplay);\n    }\n    toString() {\n        const serializedCommands = this.commands\n            .filter((c) => c.hasRan)\n            .map((c) => c.toString())\n            .join(',');\n        const metadata = this.metadataForReplay();\n        return metadata.length !== 0 ? `${serializedCommands} /*${metadata}*/` : serializedCommands;\n    }\n}\n","import { unsafeUniformArrayIntDistribution, unsafeUniformBigIntDistribution, unsafeUniformIntDistribution, } from 'pure-rand';\nexport class Random {\n    constructor(sourceRng) {\n        this.internalRng = sourceRng.clone();\n    }\n    clone() {\n        return new Random(this.internalRng);\n    }\n    next(bits) {\n        return unsafeUniformIntDistribution(0, (1 << bits) - 1, this.internalRng);\n    }\n    nextBoolean() {\n        return unsafeUniformIntDistribution(0, 1, this.internalRng) == 1;\n    }\n    nextInt(min, max) {\n        return unsafeUniformIntDistribution(min == null ? Random.MIN_INT : min, max == null ? Random.MAX_INT : max, this.internalRng);\n    }\n    nextBigInt(min, max) {\n        return unsafeUniformBigIntDistribution(min, max, this.internalRng);\n    }\n    nextArrayInt(min, max) {\n        return unsafeUniformArrayIntDistribution(min, max, this.internalRng);\n    }\n    nextDouble() {\n        const a = this.next(26);\n        const b = this.next(27);\n        return (a * Random.DBL_FACTOR + b) * Random.DBL_DIVISOR;\n    }\n    getState() {\n        if ('getState' in this.internalRng && typeof this.internalRng.getState === 'function') {\n            return this.internalRng.getState();\n        }\n        return undefined;\n    }\n}\nRandom.MIN_INT = 0x80000000 | 0;\nRandom.MAX_INT = 0x7fffffff | 0;\nRandom.DBL_FACTOR = Math.pow(2, 27);\nRandom.DBL_DIVISOR = Math.pow(2, -53);\n","import { jsonValue } from './jsonValue.js';\nexport function json(constraints = {}) {\n    const arb = jsonValue(constraints);\n    return arb.map(JSON.stringify);\n}\n","import { buildCharacterArbitrary } from './_internals/builders/CharacterArbitraryBuilder.js';\nimport { indexToPrintableIndexMapper, indexToPrintableIndexUnmapper } from './_internals/mappers/IndexToPrintableIndex.js';\nconst gapSize = 0xdfff + 1 - 0xd800;\nfunction unicodeMapper(v) {\n    if (v < 0xd800)\n        return indexToPrintableIndexMapper(v);\n    return v + gapSize;\n}\nfunction unicodeUnmapper(v) {\n    if (v < 0xd800)\n        return indexToPrintableIndexUnmapper(v);\n    if (v <= 0xdfff)\n        return -1;\n    return v - gapSize;\n}\nexport function unicode() {\n    return buildCharacterArbitrary(0x0000, 0xffff - gapSize, unicodeMapper, unicodeUnmapper);\n}\n","import { anyArbitraryBuilder } from './_internals/builders/AnyArbitraryBuilder.js';\nimport { toQualifiedObjectConstraints } from './_internals/helpers/QualifiedObjectConstraints.js';\nfunction anything(constraints) {\n    return anyArbitraryBuilder(toQualifiedObjectConstraints(constraints));\n}\nexport { anything };\n","import { MAX_VALUE_32 } from './FloatHelpers.js';\nimport { refineConstraintsForFloatingOnly } from './FloatingOnlyHelpers.js';\nconst safeNegativeInfinity = Number.NEGATIVE_INFINITY;\nconst safePositiveInfinity = Number.POSITIVE_INFINITY;\nconst safeMaxValue = MAX_VALUE_32;\nexport const maxNonIntegerValue = 8388607.5;\nexport const onlyIntegersAfterThisValue = 8388608;\nexport function refineConstraintsForFloatOnly(constraints) {\n    return refineConstraintsForFloatingOnly(constraints, safeMaxValue, maxNonIntegerValue, onlyIntegersAfterThisValue);\n}\nexport function floatOnlyMapper(value) {\n    return value === onlyIntegersAfterThisValue\n        ? safePositiveInfinity\n        : value === -onlyIntegersAfterThisValue\n            ? safeNegativeInfinity\n            : value;\n}\nexport function floatOnlyUnmapper(value) {\n    if (typeof value !== 'number')\n        throw new Error('Unsupported type');\n    return value === safePositiveInfinity\n        ? onlyIntegersAfterThisValue\n        : value === safeNegativeInfinity\n            ? -onlyIntegersAfterThisValue\n            : value;\n}\n","import { readConfigureGlobal } from '../../../check/runner/configuration/GlobalParameters.js';\nimport { safeIndexOf } from '../../../utils/globals.js';\nconst safeMathFloor = Math.floor;\nconst safeMathMin = Math.min;\nexport const MaxLengthUpperBound = 0x7fffffff;\nconst orderedSize = ['xsmall', 'small', 'medium', 'large', 'xlarge'];\nconst orderedRelativeSize = ['-4', '-3', '-2', '-1', '=', '+1', '+2', '+3', '+4'];\nexport const DefaultSize = 'small';\nexport function maxLengthFromMinLength(minLength, size) {\n    switch (size) {\n        case 'xsmall':\n            return safeMathFloor(1.1 * minLength) + 1;\n        case 'small':\n            return 2 * minLength + 10;\n        case 'medium':\n            return 11 * minLength + 100;\n        case 'large':\n            return 101 * minLength + 1000;\n        case 'xlarge':\n            return 1001 * minLength + 10000;\n        default:\n            throw new Error(`Unable to compute lengths based on received size: ${size}`);\n    }\n}\nexport function relativeSizeToSize(size, defaultSize) {\n    const sizeInRelative = safeIndexOf(orderedRelativeSize, size);\n    if (sizeInRelative === -1) {\n        return size;\n    }\n    const defaultSizeInSize = safeIndexOf(orderedSize, defaultSize);\n    if (defaultSizeInSize === -1) {\n        throw new Error(`Unable to offset size based on the unknown defaulted one: ${defaultSize}`);\n    }\n    const resultingSizeInSize = defaultSizeInSize + sizeInRelative - 4;\n    return resultingSizeInSize < 0\n        ? orderedSize[0]\n        : resultingSizeInSize >= orderedSize.length\n            ? orderedSize[orderedSize.length - 1]\n            : orderedSize[resultingSizeInSize];\n}\nexport function maxGeneratedLengthFromSizeForArbitrary(size, minLength, maxLength, specifiedMaxLength) {\n    const { baseSize: defaultSize = DefaultSize, defaultSizeToMaxWhenMaxSpecified } = readConfigureGlobal() || {};\n    const definedSize = size !== undefined ? size : specifiedMaxLength && defaultSizeToMaxWhenMaxSpecified ? 'max' : defaultSize;\n    if (definedSize === 'max') {\n        return maxLength;\n    }\n    const finalSize = relativeSizeToSize(definedSize, defaultSize);\n    return safeMathMin(maxLengthFromMinLength(minLength, finalSize), maxLength);\n}\nexport function depthBiasFromSizeForArbitrary(depthSizeOrSize, specifiedMaxDepth) {\n    if (typeof depthSizeOrSize === 'number') {\n        return 1 / depthSizeOrSize;\n    }\n    const { baseSize: defaultSize = DefaultSize, defaultSizeToMaxWhenMaxSpecified } = readConfigureGlobal() || {};\n    const definedSize = depthSizeOrSize !== undefined\n        ? depthSizeOrSize\n        : specifiedMaxDepth && defaultSizeToMaxWhenMaxSpecified\n            ? 'max'\n            : defaultSize;\n    if (definedSize === 'max') {\n        return 0;\n    }\n    const finalSize = relativeSizeToSize(definedSize, defaultSize);\n    switch (finalSize) {\n        case 'xsmall':\n            return 1;\n        case 'small':\n            return 0.5;\n        case 'medium':\n            return 0.25;\n        case 'large':\n            return 0.125;\n        case 'xlarge':\n            return 0.0625;\n    }\n}\nexport function resolveSize(size) {\n    const { baseSize: defaultSize = DefaultSize } = readConfigureGlobal() || {};\n    if (size === undefined) {\n        return defaultSize;\n    }\n    return relativeSizeToSize(size, defaultSize);\n}\n","import { buildCharacterArbitrary } from './_internals/builders/CharacterArbitraryBuilder.js';\nimport { indexToPrintableIndexMapper, indexToPrintableIndexUnmapper } from './_internals/mappers/IndexToPrintableIndex.js';\nconst gapSize = 0xdfff + 1 - 0xd800;\nfunction unicodeMapper(v) {\n    if (v < 0xd800)\n        return indexToPrintableIndexMapper(v);\n    return v + gapSize;\n}\nfunction unicodeUnmapper(v) {\n    if (v < 0xd800)\n        return indexToPrintableIndexUnmapper(v);\n    if (v <= 0xdfff)\n        return -1;\n    return v - gapSize;\n}\nexport function fullUnicode() {\n    return buildCharacterArbitrary(0x0000, 0x10ffff - gapSize, unicodeMapper, unicodeUnmapper);\n}\n","import { LazyArbitrary } from './_internals/LazyArbitrary.js';\nimport { safeHasOwnProperty } from '../utils/globals.js';\nconst safeObjectCreate = Object.create;\nexport function letrec(builder) {\n    const lazyArbs = safeObjectCreate(null);\n    const tie = (key) => {\n        if (!safeHasOwnProperty(lazyArbs, key)) {\n            lazyArbs[key] = new LazyArbitrary(String(key));\n        }\n        return lazyArbs[key];\n    };\n    const strictArbs = builder(tie);\n    for (const key in strictArbs) {\n        if (!safeHasOwnProperty(strictArbs, key)) {\n            continue;\n        }\n        const lazyAtKey = lazyArbs[key];\n        const lazyArb = lazyAtKey !== undefined ? lazyAtKey : new LazyArbitrary(key);\n        lazyArb.underlying = strictArbs[key];\n        lazyArbs[key] = lazyArb;\n    }\n    return strictArbs;\n}\n","import { ArrayArbitrary } from './_internals/ArrayArbitrary.js';\nimport { MaxLengthUpperBound, maxGeneratedLengthFromSizeForArbitrary, } from './_internals/helpers/MaxLengthFromMinLength.js';\nfunction array(arb, constraints = {}) {\n    const size = constraints.size;\n    const minLength = constraints.minLength || 0;\n    const maxLengthOrUnset = constraints.maxLength;\n    const depthIdentifier = constraints.depthIdentifier;\n    const maxLength = maxLengthOrUnset !== undefined ? maxLengthOrUnset : MaxLengthUpperBound;\n    const specifiedMaxLength = maxLengthOrUnset !== undefined;\n    const maxGeneratedLength = maxGeneratedLengthFromSizeForArbitrary(size, minLength, maxLength, specifiedMaxLength);\n    const customSlices = constraints.experimentalCustomSlices || [];\n    return new ArrayArbitrary(arb, minLength, maxGeneratedLength, maxLength, depthIdentifier, undefined, customSlices);\n}\nexport { array };\n","import { Value } from '../../../check/arbitrary/definition/Value.js';\nimport { stream } from '../../../stream/Stream.js';\nconst safeMathCeil = Math.ceil;\nconst safeMathFloor = Math.floor;\nfunction halvePosInteger(n) {\n    return safeMathFloor(n / 2);\n}\nfunction halveNegInteger(n) {\n    return safeMathCeil(n / 2);\n}\nexport function shrinkInteger(current, target, tryTargetAsap) {\n    const realGap = current - target;\n    function* shrinkDecr() {\n        let previous = tryTargetAsap ? undefined : target;\n        const gap = tryTargetAsap ? realGap : halvePosInteger(realGap);\n        for (let toremove = gap; toremove > 0; toremove = halvePosInteger(toremove)) {\n            const next = toremove === realGap ? target : current - toremove;\n            yield new Value(next, previous);\n            previous = next;\n        }\n    }\n    function* shrinkIncr() {\n        let previous = tryTargetAsap ? undefined : target;\n        const gap = tryTargetAsap ? realGap : halveNegInteger(realGap);\n        for (let toremove = gap; toremove < 0; toremove = halveNegInteger(toremove)) {\n            const next = toremove === realGap ? target : current - toremove;\n            yield new Value(next, previous);\n            previous = next;\n        }\n    }\n    return realGap > 0 ? stream(shrinkDecr()) : stream(shrinkIncr());\n}\n","import { cloneMethod } from '../check/symbols.js';\nimport { constant } from './constant.js';\nclass ContextImplem {\n    constructor() {\n        this.receivedLogs = [];\n    }\n    log(data) {\n        this.receivedLogs.push(data);\n    }\n    size() {\n        return this.receivedLogs.length;\n    }\n    toString() {\n        return JSON.stringify({ logs: this.receivedLogs });\n    }\n    [cloneMethod]() {\n        return new ContextImplem();\n    }\n}\nexport function context() {\n    return constant(new ContextImplem());\n}\n","import { Value } from '../../../check/arbitrary/definition/Value.js';\nimport { safePush } from '../../../utils/globals.js';\nconst safeMathMin = Math.min;\nconst safeMathMax = Math.max;\nexport class SlicedBasedGenerator {\n    constructor(arb, mrng, slices, biasFactor) {\n        this.arb = arb;\n        this.mrng = mrng;\n        this.slices = slices;\n        this.biasFactor = biasFactor;\n        this.activeSliceIndex = 0;\n        this.nextIndexInSlice = 0;\n        this.lastIndexInSlice = -1;\n    }\n    attemptExact(targetLength) {\n        if (targetLength !== 0 && this.mrng.nextInt(1, this.biasFactor) === 1) {\n            const eligibleIndices = [];\n            for (let index = 0; index !== this.slices.length; ++index) {\n                const slice = this.slices[index];\n                if (slice.length === targetLength) {\n                    safePush(eligibleIndices, index);\n                }\n            }\n            if (eligibleIndices.length === 0) {\n                return;\n            }\n            this.activeSliceIndex = eligibleIndices[this.mrng.nextInt(0, eligibleIndices.length - 1)];\n            this.nextIndexInSlice = 0;\n            this.lastIndexInSlice = targetLength - 1;\n        }\n    }\n    next() {\n        if (this.nextIndexInSlice <= this.lastIndexInSlice) {\n            return new Value(this.slices[this.activeSliceIndex][this.nextIndexInSlice++], undefined);\n        }\n        if (this.mrng.nextInt(1, this.biasFactor) !== 1) {\n            return this.arb.generate(this.mrng, this.biasFactor);\n        }\n        this.activeSliceIndex = this.mrng.nextInt(0, this.slices.length - 1);\n        const slice = this.slices[this.activeSliceIndex];\n        if (this.mrng.nextInt(1, this.biasFactor) !== 1) {\n            this.nextIndexInSlice = 1;\n            this.lastIndexInSlice = slice.length - 1;\n            return new Value(slice[0], undefined);\n        }\n        const rangeBoundaryA = this.mrng.nextInt(0, slice.length - 1);\n        const rangeBoundaryB = this.mrng.nextInt(0, slice.length - 1);\n        this.nextIndexInSlice = safeMathMin(rangeBoundaryA, rangeBoundaryB);\n        this.lastIndexInSlice = safeMathMax(rangeBoundaryA, rangeBoundaryB);\n        return new Value(slice[this.nextIndexInSlice++], undefined);\n    }\n}\n","import prand, { unsafeSkipN } from 'pure-rand';\nimport { VerbosityLevel } from './VerbosityLevel.js';\nconst safeDateNow = Date.now;\nconst safeMathMin = Math.min;\nconst safeMathRandom = Math.random;\nexport class QualifiedParameters {\n    constructor(op) {\n        const p = op || {};\n        this.seed = QualifiedParameters.readSeed(p);\n        this.randomType = QualifiedParameters.readRandomType(p);\n        this.numRuns = QualifiedParameters.readNumRuns(p);\n        this.verbose = QualifiedParameters.readVerbose(p);\n        this.maxSkipsPerRun = QualifiedParameters.readOrDefault(p, 'maxSkipsPerRun', 100);\n        this.timeout = QualifiedParameters.safeTimeout(QualifiedParameters.readOrDefault(p, 'timeout', null));\n        this.skipAllAfterTimeLimit = QualifiedParameters.safeTimeout(QualifiedParameters.readOrDefault(p, 'skipAllAfterTimeLimit', null));\n        this.interruptAfterTimeLimit = QualifiedParameters.safeTimeout(QualifiedParameters.readOrDefault(p, 'interruptAfterTimeLimit', null));\n        this.markInterruptAsFailure = QualifiedParameters.readBoolean(p, 'markInterruptAsFailure');\n        this.skipEqualValues = QualifiedParameters.readBoolean(p, 'skipEqualValues');\n        this.ignoreEqualValues = QualifiedParameters.readBoolean(p, 'ignoreEqualValues');\n        this.logger = QualifiedParameters.readOrDefault(p, 'logger', (v) => {\n            console.log(v);\n        });\n        this.path = QualifiedParameters.readOrDefault(p, 'path', '');\n        this.unbiased = QualifiedParameters.readBoolean(p, 'unbiased');\n        this.examples = QualifiedParameters.readOrDefault(p, 'examples', []);\n        this.endOnFailure = QualifiedParameters.readBoolean(p, 'endOnFailure');\n        this.reporter = QualifiedParameters.readOrDefault(p, 'reporter', null);\n        this.asyncReporter = QualifiedParameters.readOrDefault(p, 'asyncReporter', null);\n        this.errorWithCause = QualifiedParameters.readBoolean(p, 'errorWithCause');\n    }\n    toParameters() {\n        const orUndefined = (value) => (value !== null ? value : undefined);\n        const parameters = {\n            seed: this.seed,\n            randomType: this.randomType,\n            numRuns: this.numRuns,\n            maxSkipsPerRun: this.maxSkipsPerRun,\n            timeout: orUndefined(this.timeout),\n            skipAllAfterTimeLimit: orUndefined(this.skipAllAfterTimeLimit),\n            interruptAfterTimeLimit: orUndefined(this.interruptAfterTimeLimit),\n            markInterruptAsFailure: this.markInterruptAsFailure,\n            skipEqualValues: this.skipEqualValues,\n            ignoreEqualValues: this.ignoreEqualValues,\n            path: this.path,\n            logger: this.logger,\n            unbiased: this.unbiased,\n            verbose: this.verbose,\n            examples: this.examples,\n            endOnFailure: this.endOnFailure,\n            reporter: orUndefined(this.reporter),\n            asyncReporter: orUndefined(this.asyncReporter),\n            errorWithCause: this.errorWithCause,\n        };\n        return parameters;\n    }\n    static read(op) {\n        return new QualifiedParameters(op);\n    }\n}\nQualifiedParameters.createQualifiedRandomGenerator = (random) => {\n    return (seed) => {\n        const rng = random(seed);\n        if (rng.unsafeJump === undefined) {\n            rng.unsafeJump = () => unsafeSkipN(rng, 42);\n        }\n        return rng;\n    };\n};\nQualifiedParameters.readSeed = (p) => {\n    if (p.seed == null)\n        return safeDateNow() ^ (safeMathRandom() * 0x100000000);\n    const seed32 = p.seed | 0;\n    if (p.seed === seed32)\n        return seed32;\n    const gap = p.seed - seed32;\n    return seed32 ^ (gap * 0x100000000);\n};\nQualifiedParameters.readRandomType = (p) => {\n    if (p.randomType == null)\n        return prand.xorshift128plus;\n    if (typeof p.randomType === 'string') {\n        switch (p.randomType) {\n            case 'mersenne':\n                return QualifiedParameters.createQualifiedRandomGenerator(prand.mersenne);\n            case 'congruential':\n            case 'congruential32':\n                return QualifiedParameters.createQualifiedRandomGenerator(prand.congruential32);\n            case 'xorshift128plus':\n                return prand.xorshift128plus;\n            case 'xoroshiro128plus':\n                return prand.xoroshiro128plus;\n            default:\n                throw new Error(`Invalid random specified: '${p.randomType}'`);\n        }\n    }\n    const mrng = p.randomType(0);\n    if ('min' in mrng && mrng.min !== -0x80000000) {\n        throw new Error(`Invalid random number generator: min must equal -0x80000000, got ${String(mrng.min)}`);\n    }\n    if ('max' in mrng && mrng.max !== 0x7fffffff) {\n        throw new Error(`Invalid random number generator: max must equal 0x7fffffff, got ${String(mrng.max)}`);\n    }\n    if ('unsafeJump' in mrng) {\n        return p.randomType;\n    }\n    return QualifiedParameters.createQualifiedRandomGenerator(p.randomType);\n};\nQualifiedParameters.readNumRuns = (p) => {\n    const defaultValue = 100;\n    if (p.numRuns != null)\n        return p.numRuns;\n    if (p.num_runs != null)\n        return p.num_runs;\n    return defaultValue;\n};\nQualifiedParameters.readVerbose = (p) => {\n    if (p.verbose == null)\n        return VerbosityLevel.None;\n    if (typeof p.verbose === 'boolean') {\n        return p.verbose === true ? VerbosityLevel.Verbose : VerbosityLevel.None;\n    }\n    if (p.verbose <= VerbosityLevel.None) {\n        return VerbosityLevel.None;\n    }\n    if (p.verbose >= VerbosityLevel.VeryVerbose) {\n        return VerbosityLevel.VeryVerbose;\n    }\n    return p.verbose | 0;\n};\nQualifiedParameters.readBoolean = (p, key) => p[key] === true;\nQualifiedParameters.readOrDefault = (p, key, defaultValue) => {\n    const value = p[key];\n    return value != null ? value : defaultValue;\n};\nQualifiedParameters.safeTimeout = (value) => {\n    if (value === null) {\n        return null;\n    }\n    return safeMathMin(value, 0x7fffffff);\n};\n","import { safeToUpperCase, safeToLowerCase, BigInt, Error } from '../utils/globals.js';\nimport { MixedCaseArbitrary } from './_internals/MixedCaseArbitrary.js';\nfunction defaultToggleCase(rawChar) {\n    const upper = safeToUpperCase(rawChar);\n    if (upper !== rawChar)\n        return upper;\n    return safeToLowerCase(rawChar);\n}\nexport function mixedCase(stringArb, constraints) {\n    if (typeof BigInt === 'undefined') {\n        throw new Error(`mixedCase requires BigInt support`);\n    }\n    const toggleCase = (constraints && constraints.toggleCase) || defaultToggleCase;\n    const untoggleAll = constraints && constraints.untoggleAll;\n    return new MixedCaseArbitrary(stringArb, toggleCase, untoggleAll);\n}\n","import { BigInt } from '../utils/globals.js';\nimport { BigIntArbitrary } from './_internals/BigIntArbitrary.js';\nfunction buildCompleteBigIntConstraints(constraints) {\n    const DefaultPow = 256;\n    const DefaultMin = BigInt(-1) << BigInt(DefaultPow - 1);\n    const DefaultMax = (BigInt(1) << BigInt(DefaultPow - 1)) - BigInt(1);\n    const min = constraints.min;\n    const max = constraints.max;\n    return {\n        min: min !== undefined ? min : DefaultMin - (max !== undefined && max < BigInt(0) ? max * max : BigInt(0)),\n        max: max !== undefined ? max : DefaultMax + (min !== undefined && min > BigInt(0) ? min * min : BigInt(0)),\n    };\n}\nfunction extractBigIntConstraints(args) {\n    if (args[0] === undefined) {\n        return {};\n    }\n    if (args[1] === undefined) {\n        const constraints = args[0];\n        return constraints;\n    }\n    return { min: args[0], max: args[1] };\n}\nfunction bigInt(...args) {\n    const constraints = buildCompleteBigIntConstraints(extractBigIntConstraints(args));\n    if (constraints.min > constraints.max) {\n        throw new Error('fc.bigInt expects max to be greater than or equal to min');\n    }\n    return new BigIntArbitrary(constraints.min, constraints.max);\n}\nexport { bigInt };\n","import { BigInt } from '../utils/globals.js';\nimport { BigIntArbitrary } from './_internals/BigIntArbitrary.js';\nfunction computeDefaultMax() {\n    return (BigInt(1) << BigInt(256)) - BigInt(1);\n}\nfunction bigUint(constraints) {\n    const requestedMax = typeof constraints === 'object' ? constraints.max : constraints;\n    const max = requestedMax !== undefined ? requestedMax : computeDefaultMax();\n    if (max < 0) {\n        throw new Error('fc.bigUint expects max to be greater than or equal to zero');\n    }\n    return new BigIntArbitrary(BigInt(0), max);\n}\nexport { bigUint };\n","import { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nfunction isSafeContext(context) {\n    return context !== undefined;\n}\nfunction toGeneratorValue(value) {\n    if (value.hasToBeCloned) {\n        return new Value(value.value_, { generatorContext: value.context }, () => value.value);\n    }\n    return new Value(value.value_, { generatorContext: value.context });\n}\nfunction toShrinkerValue(value) {\n    if (value.hasToBeCloned) {\n        return new Value(value.value_, { shrinkerContext: value.context }, () => value.value);\n    }\n    return new Value(value.value_, { shrinkerContext: value.context });\n}\nexport class WithShrinkFromOtherArbitrary extends Arbitrary {\n    constructor(generatorArbitrary, shrinkerArbitrary) {\n        super();\n        this.generatorArbitrary = generatorArbitrary;\n        this.shrinkerArbitrary = shrinkerArbitrary;\n    }\n    generate(mrng, biasFactor) {\n        return toGeneratorValue(this.generatorArbitrary.generate(mrng, biasFactor));\n    }\n    canShrinkWithoutContext(value) {\n        return this.shrinkerArbitrary.canShrinkWithoutContext(value);\n    }\n    shrink(value, context) {\n        if (!isSafeContext(context)) {\n            return this.shrinkerArbitrary.shrink(value, undefined).map(toShrinkerValue);\n        }\n        if ('generatorContext' in context) {\n            return this.generatorArbitrary.shrink(value, context.generatorContext).map(toGeneratorValue);\n        }\n        return this.shrinkerArbitrary.shrink(value, context.shrinkerContext).map(toShrinkerValue);\n    }\n}\n","import { integer } from './integer.js';\nimport { noBias } from './noBias.js';\nfunction booleanMapper(v) {\n    return v === 1;\n}\nfunction booleanUnmapper(v) {\n    if (typeof v !== 'boolean')\n        throw new Error('Unsupported input type');\n    return v === true ? 1 : 0;\n}\nfunction boolean() {\n    return noBias(integer({ min: 0, max: 1 }).map(booleanMapper, booleanUnmapper));\n}\nexport { boolean };\n","import { stringify } from '../../utils/stringify.js';\nimport { PreconditionFailure } from '../precondition/PreconditionFailure.js';\nfunction fromSyncCached(cachedValue) {\n    return cachedValue === null ? new PreconditionFailure() : cachedValue;\n}\nfunction fromCached(...data) {\n    if (data[1])\n        return data[0].then(fromSyncCached);\n    return fromSyncCached(data[0]);\n}\nfunction fromCachedUnsafe(cachedValue, isAsync) {\n    return fromCached(cachedValue, isAsync);\n}\nexport class IgnoreEqualValuesProperty {\n    constructor(property, skipRuns) {\n        this.property = property;\n        this.skipRuns = skipRuns;\n        this.coveredCases = new Map();\n        if (this.property.runBeforeEach !== undefined && this.property.runAfterEach !== undefined) {\n            this.runBeforeEach = () => this.property.runBeforeEach();\n            this.runAfterEach = () => this.property.runAfterEach();\n        }\n    }\n    isAsync() {\n        return this.property.isAsync();\n    }\n    generate(mrng, runId) {\n        return this.property.generate(mrng, runId);\n    }\n    shrink(value) {\n        return this.property.shrink(value);\n    }\n    run(v, dontRunHook) {\n        const stringifiedValue = stringify(v);\n        if (this.coveredCases.has(stringifiedValue)) {\n            const lastOutput = this.coveredCases.get(stringifiedValue);\n            if (!this.skipRuns) {\n                return lastOutput;\n            }\n            return fromCachedUnsafe(lastOutput, this.property.isAsync());\n        }\n        const out = this.property.run(v, dontRunHook);\n        this.coveredCases.set(stringifiedValue, out);\n        return out;\n    }\n}\n","import { safeIndexOf } from '../../../utils/globals.js';\nimport { TokenizerBlockMode, readFrom } from './ReadRegex.js';\nconst safeStringFromCodePoint = String.fromCodePoint;\nfunction safePop(tokens) {\n    const previous = tokens.pop();\n    if (previous === undefined) {\n        throw new Error('Unable to extract token preceeding the currently parsed one');\n    }\n    return previous;\n}\nfunction isDigit(char) {\n    return char >= '0' && char <= '9';\n}\nfunction simpleChar(char, escaped) {\n    return {\n        type: 'Char',\n        kind: 'simple',\n        symbol: char,\n        value: char,\n        codePoint: char.codePointAt(0) || -1,\n        escaped,\n    };\n}\nfunction metaEscapedChar(block, symbol) {\n    return {\n        type: 'Char',\n        kind: 'meta',\n        symbol,\n        value: block,\n        codePoint: symbol.codePointAt(0) || -1,\n    };\n}\nfunction toSingleToken(tokens, allowEmpty) {\n    if (tokens.length > 1) {\n        return {\n            type: 'Alternative',\n            expressions: tokens,\n        };\n    }\n    if (!allowEmpty && tokens.length === 0) {\n        throw new Error(`Unsupported no token`);\n    }\n    return tokens[0];\n}\nfunction blockToCharToken(block) {\n    if (block[0] === '\\\\') {\n        const next = block[1];\n        switch (next) {\n            case 'x': {\n                const allDigits = block.substring(2);\n                const codePoint = Number.parseInt(allDigits, 16);\n                const symbol = safeStringFromCodePoint(codePoint);\n                return { type: 'Char', kind: 'hex', symbol, value: block, codePoint };\n            }\n            case 'u': {\n                if (block === '\\\\u') {\n                    return simpleChar('u', true);\n                }\n                const allDigits = block[2] === '{' ? block.substring(3, block.length - 1) : block.substring(2);\n                const codePoint = Number.parseInt(allDigits, 16);\n                const symbol = safeStringFromCodePoint(codePoint);\n                return { type: 'Char', kind: 'unicode', symbol, value: block, codePoint };\n            }\n            case '0': {\n                return metaEscapedChar(block, '\\0');\n            }\n            case 'n': {\n                return metaEscapedChar(block, '\\n');\n            }\n            case 'f': {\n                return metaEscapedChar(block, '\\f');\n            }\n            case 'r': {\n                return metaEscapedChar(block, '\\r');\n            }\n            case 't': {\n                return metaEscapedChar(block, '\\t');\n            }\n            case 'v': {\n                return metaEscapedChar(block, '\\v');\n            }\n            case 'w':\n            case 'W':\n            case 'd':\n            case 'D':\n            case 's':\n            case 'S':\n            case 'b':\n            case 'B': {\n                return { type: 'Char', kind: 'meta', symbol: undefined, value: block, codePoint: Number.NaN };\n            }\n            default: {\n                if (isDigit(next)) {\n                    const allDigits = block.substring(1);\n                    const codePoint = Number(allDigits);\n                    const symbol = safeStringFromCodePoint(codePoint);\n                    return { type: 'Char', kind: 'decimal', symbol, value: block, codePoint };\n                }\n                if (block.length > 2 && (next === 'p' || next === 'P')) {\n                    throw new Error(`UnicodeProperty not implemented yet!`);\n                }\n                const char = block.substring(1);\n                return simpleChar(char, true);\n            }\n        }\n    }\n    return simpleChar(block);\n}\nfunction pushTokens(tokens, regexSource, unicodeMode, groups) {\n    let disjunctions = null;\n    for (let index = 0, block = readFrom(regexSource, index, unicodeMode, TokenizerBlockMode.Full); index !== regexSource.length; index += block.length, block = readFrom(regexSource, index, unicodeMode, TokenizerBlockMode.Full)) {\n        const firstInBlock = block[0];\n        switch (firstInBlock) {\n            case '|': {\n                if (disjunctions === null) {\n                    disjunctions = [];\n                }\n                disjunctions.push(toSingleToken(tokens.splice(0), true) || null);\n                break;\n            }\n            case '.': {\n                tokens.push({ type: 'Char', kind: 'meta', symbol: block, value: block, codePoint: Number.NaN });\n                break;\n            }\n            case '*':\n            case '+': {\n                const previous = safePop(tokens);\n                tokens.push({\n                    type: 'Repetition',\n                    expression: previous,\n                    quantifier: { type: 'Quantifier', kind: firstInBlock, greedy: true },\n                });\n                break;\n            }\n            case '?': {\n                const previous = safePop(tokens);\n                if (previous.type === 'Repetition') {\n                    previous.quantifier.greedy = false;\n                    tokens.push(previous);\n                }\n                else {\n                    tokens.push({\n                        type: 'Repetition',\n                        expression: previous,\n                        quantifier: { type: 'Quantifier', kind: firstInBlock, greedy: true },\n                    });\n                }\n                break;\n            }\n            case '{': {\n                if (block === '{') {\n                    tokens.push(simpleChar(block));\n                    break;\n                }\n                const previous = safePop(tokens);\n                const quantifierText = block.substring(1, block.length - 1);\n                const quantifierTokens = quantifierText.split(',');\n                const from = Number(quantifierTokens[0]);\n                const to = quantifierTokens.length === 1\n                    ? from\n                    : quantifierTokens[1].length !== 0\n                        ? Number(quantifierTokens[1])\n                        : undefined;\n                tokens.push({\n                    type: 'Repetition',\n                    expression: previous,\n                    quantifier: { type: 'Quantifier', kind: 'Range', greedy: true, from, to },\n                });\n                break;\n            }\n            case '[': {\n                const blockContent = block.substring(1, block.length - 1);\n                const subTokens = [];\n                let negative = undefined;\n                let previousWasSimpleDash = false;\n                for (let subIndex = 0, subBlock = readFrom(blockContent, subIndex, unicodeMode, TokenizerBlockMode.Character); subIndex !== blockContent.length; subIndex += subBlock.length,\n                    subBlock = readFrom(blockContent, subIndex, unicodeMode, TokenizerBlockMode.Character)) {\n                    if (subIndex === 0 && subBlock === '^') {\n                        negative = true;\n                        continue;\n                    }\n                    const newToken = blockToCharToken(subBlock);\n                    if (subBlock === '-') {\n                        subTokens.push(newToken);\n                        previousWasSimpleDash = true;\n                    }\n                    else {\n                        const operand1Token = subTokens.length >= 2 ? subTokens[subTokens.length - 2] : undefined;\n                        if (previousWasSimpleDash && operand1Token !== undefined && operand1Token.type === 'Char') {\n                            subTokens.pop();\n                            subTokens.pop();\n                            subTokens.push({ type: 'ClassRange', from: operand1Token, to: newToken });\n                        }\n                        else {\n                            subTokens.push(newToken);\n                        }\n                        previousWasSimpleDash = false;\n                    }\n                }\n                tokens.push({ type: 'CharacterClass', expressions: subTokens, negative });\n                break;\n            }\n            case '(': {\n                const blockContent = block.substring(1, block.length - 1);\n                const subTokens = [];\n                if (blockContent[0] === '?') {\n                    if (blockContent[1] === ':') {\n                        pushTokens(subTokens, blockContent.substring(2), unicodeMode, groups);\n                        tokens.push({\n                            type: 'Group',\n                            capturing: false,\n                            expression: toSingleToken(subTokens),\n                        });\n                    }\n                    else if (blockContent[1] === '=' || blockContent[1] === '!') {\n                        pushTokens(subTokens, blockContent.substring(2), unicodeMode, groups);\n                        tokens.push({\n                            type: 'Assertion',\n                            kind: 'Lookahead',\n                            negative: blockContent[1] === '!' ? true : undefined,\n                            assertion: toSingleToken(subTokens),\n                        });\n                    }\n                    else if (blockContent[1] === '<' && (blockContent[2] === '=' || blockContent[2] === '!')) {\n                        pushTokens(subTokens, blockContent.substring(3), unicodeMode, groups);\n                        tokens.push({\n                            type: 'Assertion',\n                            kind: 'Lookbehind',\n                            negative: blockContent[2] === '!' ? true : undefined,\n                            assertion: toSingleToken(subTokens),\n                        });\n                    }\n                    else {\n                        const chunks = blockContent.split('>');\n                        if (chunks.length < 2 || chunks[0][1] !== '<') {\n                            throw new Error(`Unsupported regex content found at ${JSON.stringify(block)}`);\n                        }\n                        const groupIndex = ++groups.lastIndex;\n                        const nameRaw = chunks[0].substring(2);\n                        groups.named.set(nameRaw, groupIndex);\n                        pushTokens(subTokens, chunks.slice(1).join('>'), unicodeMode, groups);\n                        tokens.push({\n                            type: 'Group',\n                            capturing: true,\n                            nameRaw,\n                            name: nameRaw,\n                            number: groupIndex,\n                            expression: toSingleToken(subTokens),\n                        });\n                    }\n                }\n                else {\n                    const groupIndex = ++groups.lastIndex;\n                    pushTokens(subTokens, blockContent, unicodeMode, groups);\n                    tokens.push({\n                        type: 'Group',\n                        capturing: true,\n                        number: groupIndex,\n                        expression: toSingleToken(subTokens),\n                    });\n                }\n                break;\n            }\n            default: {\n                if (block === '^') {\n                    tokens.push({ type: 'Assertion', kind: block });\n                }\n                else if (block === '$') {\n                    tokens.push({ type: 'Assertion', kind: block });\n                }\n                else if (block[0] === '\\\\' && isDigit(block[1])) {\n                    const reference = Number(block.substring(1));\n                    if (unicodeMode || reference <= groups.lastIndex) {\n                        tokens.push({ type: 'Backreference', kind: 'number', number: reference, reference });\n                    }\n                    else {\n                        tokens.push(blockToCharToken(block));\n                    }\n                }\n                else if (block[0] === '\\\\' && block[1] === 'k' && block.length !== 2) {\n                    const referenceRaw = block.substring(3, block.length - 1);\n                    tokens.push({\n                        type: 'Backreference',\n                        kind: 'name',\n                        number: groups.named.get(referenceRaw) || 0,\n                        referenceRaw,\n                        reference: referenceRaw,\n                    });\n                }\n                else {\n                    tokens.push(blockToCharToken(block));\n                }\n                break;\n            }\n        }\n    }\n    if (disjunctions !== null) {\n        disjunctions.push(toSingleToken(tokens.splice(0), true) || null);\n        let currentDisjunction = {\n            type: 'Disjunction',\n            left: disjunctions[0],\n            right: disjunctions[1],\n        };\n        for (let index = 2; index < disjunctions.length; ++index) {\n            currentDisjunction = {\n                type: 'Disjunction',\n                left: currentDisjunction,\n                right: disjunctions[index],\n            };\n        }\n        tokens.push(currentDisjunction);\n    }\n}\nexport function tokenizeRegex(regex) {\n    const unicodeMode = safeIndexOf([...regex.flags], 'u') !== -1;\n    const regexSource = regex.source;\n    const tokens = [];\n    pushTokens(tokens, regexSource, unicodeMode, { lastIndex: 0, named: new Map() });\n    return toSingleToken(tokens);\n}\n","import { CommandsArbitrary } from './_internals/CommandsArbitrary.js';\nimport { maxGeneratedLengthFromSizeForArbitrary, MaxLengthUpperBound, } from './_internals/helpers/MaxLengthFromMinLength.js';\nfunction commands(commandArbs, constraints = {}) {\n    const { size, maxCommands = MaxLengthUpperBound, disableReplayLog = false, replayPath = null } = constraints;\n    const specifiedMaxCommands = constraints.maxCommands !== undefined;\n    const maxGeneratedCommands = maxGeneratedLengthFromSizeForArbitrary(size, 0, maxCommands, specifiedMaxCommands);\n    return new CommandsArbitrary(commandArbs, maxGeneratedCommands, maxCommands, replayPath, disableReplayLog);\n}\nexport { commands };\n","import { integer } from '../../integer.js';\nimport { indexToCharStringMapper, indexToCharStringUnmapper } from '../mappers/IndexToCharString.js';\nexport function buildCharacterArbitrary(min, max, mapToCode, unmapFromCode) {\n    return integer({ min, max }).map((n) => indexToCharStringMapper(mapToCode(n)), (c) => unmapFromCode(indexToCharStringUnmapper(c)));\n}\n","import { integer } from '../../integer.js';\nimport { numberToPaddedEightMapper, numberToPaddedEightUnmapper } from '../mappers/NumberToPaddedEight.js';\nexport function buildPaddedNumberArbitrary(min, max) {\n    return integer({ min, max }).map(numberToPaddedEightMapper, numberToPaddedEightUnmapper);\n}\n","import { getOrCreateAlphaNumericPercentArbitrary } from './CharacterRangeArbitraryBuilder.js';\nimport { string } from '../../string.js';\nexport function buildUriQueryOrFragmentArbitrary(size) {\n    return string({ unit: getOrCreateAlphaNumericPercentArbitrary(\"-._~!$&'()*+,;=:@/?\"), size });\n}\n","import { getOrCreateAlphaNumericPercentArbitrary } from './_internals/builders/CharacterRangeArbitraryBuilder.js';\nimport { string } from './string.js';\nexport function webSegment(constraints = {}) {\n    return string({ unit: getOrCreateAlphaNumericPercentArbitrary(\"-._~!$&'()*+,;=:@\"), size: constraints.size });\n}\n","import { resolveSize } from './_internals/helpers/MaxLengthFromMinLength.js';\nimport { buildUriPathArbitrary } from './_internals/builders/UriPathArbitraryBuilder.js';\nexport function webPath(constraints) {\n    const c = constraints || {};\n    const resolvedSize = resolveSize(c.size);\n    return buildUriPathArbitrary(resolvedSize);\n}\n","import { BigInt } from '../utils/globals.js';\nimport { BigIntArbitrary } from './_internals/BigIntArbitrary.js';\nexport function bigIntN(n) {\n    if (n < 1) {\n        throw new Error('fc.bigIntN expects requested number of bits to be superior or equal to 1');\n    }\n    const min = BigInt(-1) << BigInt(n - 1);\n    const max = (BigInt(1) << BigInt(n - 1)) - BigInt(1);\n    return new BigIntArbitrary(min, max);\n}\n","import { buildCharacterArbitrary } from './_internals/builders/CharacterArbitraryBuilder.js';\nimport { indexToPrintableIndexMapper, indexToPrintableIndexUnmapper } from './_internals/mappers/IndexToPrintableIndex.js';\nexport function ascii() {\n    return buildCharacterArbitrary(0x00, 0x7f, indexToPrintableIndexMapper, indexToPrintableIndexUnmapper);\n}\n","import { asyncToStringMethod, hasAsyncToStringMethod, hasToStringMethod, toStringMethod, } from '../../../utils/stringify.js';\nimport { cloneMethod, hasCloneMethod } from '../../symbols.js';\nexport class CommandWrapper {\n    constructor(cmd) {\n        this.cmd = cmd;\n        this.hasRan = false;\n        if (hasToStringMethod(cmd)) {\n            const method = cmd[toStringMethod];\n            this[toStringMethod] = function toStringMethod() {\n                return method.call(cmd);\n            };\n        }\n        if (hasAsyncToStringMethod(cmd)) {\n            const method = cmd[asyncToStringMethod];\n            this[asyncToStringMethod] = function asyncToStringMethod() {\n                return method.call(cmd);\n            };\n        }\n    }\n    check(m) {\n        return this.cmd.check(m);\n    }\n    run(m, r) {\n        this.hasRan = true;\n        return this.cmd.run(m, r);\n    }\n    clone() {\n        if (hasCloneMethod(this.cmd))\n            return new CommandWrapper(this.cmd[cloneMethod]());\n        return new CommandWrapper(this.cmd);\n    }\n    toString() {\n        return this.cmd.toString();\n    }\n}\n","import { buildSchedulerFor } from './_internals/helpers/BuildSchedulerFor.js';\nimport { SchedulerArbitrary } from './_internals/SchedulerArbitrary.js';\nexport function scheduler(constraints) {\n    const { act = (f) => f() } = constraints || {};\n    return new SchedulerArbitrary(act);\n}\nfunction schedulerFor(customOrderingOrConstraints, constraintsOrUndefined) {\n    const { act = (f) => f() } = Array.isArray(customOrderingOrConstraints)\n        ? constraintsOrUndefined || {}\n        : customOrderingOrConstraints || {};\n    if (Array.isArray(customOrderingOrConstraints)) {\n        return buildSchedulerFor(act, customOrderingOrConstraints);\n    }\n    return function (_strs, ...ordering) {\n        return buildSchedulerFor(act, ordering);\n    };\n}\nexport { schedulerFor };\n","import { buildCharacterArbitrary } from './_internals/builders/CharacterArbitraryBuilder.js';\nimport { indexToPrintableIndexMapper, indexToPrintableIndexUnmapper } from './_internals/mappers/IndexToPrintableIndex.js';\nexport function char16bits() {\n    return buildCharacterArbitrary(0x0000, 0xffff, indexToPrintableIndexMapper, indexToPrintableIndexUnmapper);\n}\n","import { BigInt } from '../utils/globals.js';\nimport { BigIntArbitrary } from './_internals/BigIntArbitrary.js';\nexport function bigUintN(n) {\n    if (n < 0) {\n        throw new Error('fc.bigUintN expects requested number of bits to be superior or equal to 0');\n    }\n    const min = BigInt(0);\n    const max = (BigInt(1) << BigInt(n)) - BigInt(1);\n    return new BigIntArbitrary(min, max);\n}\n","import { NoopSlicedGenerator } from '../implementations/NoopSlicedGenerator.js';\nimport { SlicedBasedGenerator } from '../implementations/SlicedBasedGenerator.js';\nexport function buildSlicedGenerator(arb, mrng, slices, biasFactor) {\n    if (biasFactor === undefined || slices.length === 0 || mrng.nextInt(1, biasFactor) !== 1) {\n        return new NoopSlicedGenerator(arb, mrng, biasFactor);\n    }\n    return new SlicedBasedGenerator(arb, mrng, slices, biasFactor);\n}\n","import { BigInt } from '../utils/globals.js';\nimport { constantFrom } from './constantFrom.js';\nexport function falsy(constraints) {\n    if (!constraints || !constraints.withBigInt) {\n        return constantFrom(false, null, undefined, 0, '', NaN);\n    }\n    return constantFrom(false, null, undefined, 0, '', NaN, BigInt(0));\n}\n","import { addArrayIntToNew, addOneToPositiveArrayInt, substractArrayIntToNew, trimArrayIntInplace, } from './internals/ArrayInt.js';\nimport { unsafeUniformArrayIntDistributionInternal } from './internals/UnsafeUniformArrayIntDistributionInternal.js';\nexport function unsafeUniformArrayIntDistribution(from, to, rng) {\n    var rangeSize = trimArrayIntInplace(addOneToPositiveArrayInt(substractArrayIntToNew(to, from)));\n    var emptyArrayIntData = rangeSize.data.slice(0);\n    var g = unsafeUniformArrayIntDistributionInternal(emptyArrayIntData, rangeSize.data, rng);\n    return trimArrayIntInplace(addArrayIntToNew({ sign: 1, data: g }, from));\n}\n","import { PreconditionFailure } from '../precondition/PreconditionFailure.js';\nimport { RunExecution } from './reporter/RunExecution.js';\nexport class RunnerIterator {\n    constructor(sourceValues, shrink, verbose, interruptedAsFailure) {\n        this.sourceValues = sourceValues;\n        this.shrink = shrink;\n        this.runExecution = new RunExecution(verbose, interruptedAsFailure);\n        this.currentIdx = -1;\n        this.nextValues = sourceValues;\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next() {\n        const nextValue = this.nextValues.next();\n        if (nextValue.done || this.runExecution.interrupted) {\n            return { done: true, value: undefined };\n        }\n        this.currentValue = nextValue.value;\n        ++this.currentIdx;\n        return { done: false, value: nextValue.value.value_ };\n    }\n    handleResult(result) {\n        if (result != null && typeof result === 'object' && !PreconditionFailure.isFailure(result)) {\n            this.runExecution.fail(this.currentValue.value_, this.currentIdx, result);\n            this.currentIdx = -1;\n            this.nextValues = this.shrink(this.currentValue);\n        }\n        else if (result != null) {\n            if (!result.interruptExecution) {\n                this.runExecution.skip(this.currentValue.value_);\n                this.sourceValues.skippedOne();\n            }\n            else {\n                this.runExecution.interrupt();\n            }\n        }\n        else {\n            this.runExecution.success(this.currentValue.value_);\n        }\n    }\n}\n","import { integer } from '../../integer.js';\nimport { WithShrinkFromOtherArbitrary } from '../WithShrinkFromOtherArbitrary.js';\nexport function restrictedIntegerArbitraryBuilder(min, maxGenerated, max) {\n    const generatorArbitrary = integer({ min, max: maxGenerated });\n    if (maxGenerated === max) {\n        return generatorArbitrary;\n    }\n    const shrinkerArbitrary = integer({ min, max });\n    return new WithShrinkFromOtherArbitrary(generatorArbitrary, shrinkerArbitrary);\n}\n","import type * as Encoding from \"../../Encoding.js\"\nimport { hasProperty, isString } from \"../../Predicate.js\"\nimport type { Mutable } from \"../../Types.js\"\n\n/** @internal */\nexport const DecodeExceptionTypeId: Encoding.DecodeExceptionTypeId = Symbol.for(\n  \"effect/Encoding/errors/Decode\"\n) as Encoding.DecodeExceptionTypeId\n\n/** @internal */\nexport const DecodeException = (input: string, message?: string): Encoding.DecodeException => {\n  const out: Mutable<Encoding.DecodeException> = {\n    _tag: \"DecodeException\",\n    [DecodeExceptionTypeId]: DecodeExceptionTypeId,\n    input\n  }\n  if (isString(message)) {\n    out.message = message\n  }\n  return out\n}\n\n/** @internal */\nexport const isDecodeException = (u: unknown): u is Encoding.DecodeException => hasProperty(u, DecodeExceptionTypeId)\n\n/** @internal */\nexport const EncodeExceptionTypeId: Encoding.EncodeExceptionTypeId = Symbol.for(\n  \"effect/Encoding/errors/Encode\"\n) as Encoding.EncodeExceptionTypeId\n\n/** @internal */\nexport const EncodeException = (input: string, message?: string): Encoding.EncodeException => {\n  const out: Mutable<Encoding.EncodeException> = {\n    _tag: \"EncodeException\",\n    [EncodeExceptionTypeId]: EncodeExceptionTypeId,\n    input\n  }\n  if (isString(message)) {\n    out.message = message\n  }\n  return out\n}\n\n/** @internal */\nexport const isEncodeException = (u: unknown): u is Encoding.EncodeException => hasProperty(u, EncodeExceptionTypeId)\n\n/** @interal */\nexport const encoder = new TextEncoder()\n\n/** @interal */\nexport const decoder = new TextDecoder()\n","import { float } from './float.js';\nimport { array } from './array.js';\nimport { Float32Array } from '../utils/globals.js';\nfunction toTypedMapper(data) {\n    return Float32Array.from(data);\n}\nfunction fromTypedUnmapper(value) {\n    if (!(value instanceof Float32Array))\n        throw new Error('Unexpected type');\n    return [...value];\n}\nexport function float32Array(constraints = {}) {\n    return array(float(constraints), constraints).map(toTypedMapper, fromTypedUnmapper);\n}\n","import { tuple } from './tuple.js';\nimport { integer } from './integer.js';\nimport { paddedUintToBase32StringMapper, uintToBase32StringUnmapper } from './_internals/mappers/UintToBase32String.js';\nconst padded10Mapper = paddedUintToBase32StringMapper(10);\nconst padded8Mapper = paddedUintToBase32StringMapper(8);\nfunction ulidMapper(parts) {\n    return (padded10Mapper(parts[0]) +\n        padded8Mapper(parts[1]) +\n        padded8Mapper(parts[2]));\n}\nfunction ulidUnmapper(value) {\n    if (typeof value !== 'string' || value.length !== 26) {\n        throw new Error('Unsupported type');\n    }\n    return [\n        uintToBase32StringUnmapper(value.slice(0, 10)),\n        uintToBase32StringUnmapper(value.slice(10, 18)),\n        uintToBase32StringUnmapper(value.slice(18)),\n    ];\n}\nexport function ulid() {\n    const timestampPartArbitrary = integer({ min: 0, max: 0xffffffffffff });\n    const randomnessPartOneArbitrary = integer({ min: 0, max: 0xffffffffff });\n    const randomnessPartTwoArbitrary = integer({ min: 0, max: 0xffffffffff });\n    return tuple(timestampPartArbitrary, randomnessPartOneArbitrary, randomnessPartTwoArbitrary).map(ulidMapper, ulidUnmapper);\n}\n","import { double } from './double.js';\nimport { array } from './array.js';\nimport { Float64Array } from '../utils/globals.js';\nfunction toTypedMapper(data) {\n    return Float64Array.from(data);\n}\nfunction fromTypedUnmapper(value) {\n    if (!(value instanceof Float64Array))\n        throw new Error('Unexpected type');\n    return [...value];\n}\nexport function float64Array(constraints = {}) {\n    return array(double(constraints), constraints).map(toTypedMapper, fromTypedUnmapper);\n}\n","import { unsafeUniformIntDistributionInternal } from './internals/UnsafeUniformIntDistributionInternal.js';\nimport { fromNumberToArrayInt64, substractArrayInt64 } from './internals/ArrayInt.js';\nimport { unsafeUniformArrayIntDistributionInternal } from './internals/UnsafeUniformArrayIntDistributionInternal.js';\nvar safeNumberMaxSafeInteger = Number.MAX_SAFE_INTEGER;\nvar sharedA = { sign: 1, data: [0, 0] };\nvar sharedB = { sign: 1, data: [0, 0] };\nvar sharedC = { sign: 1, data: [0, 0] };\nvar sharedData = [0, 0];\nfunction uniformLargeIntInternal(from, to, rangeSize, rng) {\n    var rangeSizeArrayIntValue = rangeSize <= safeNumberMaxSafeInteger\n        ? fromNumberToArrayInt64(sharedC, rangeSize)\n        : substractArrayInt64(sharedC, fromNumberToArrayInt64(sharedA, to), fromNumberToArrayInt64(sharedB, from));\n    if (rangeSizeArrayIntValue.data[1] === 0xffffffff) {\n        rangeSizeArrayIntValue.data[0] += 1;\n        rangeSizeArrayIntValue.data[1] = 0;\n    }\n    else {\n        rangeSizeArrayIntValue.data[1] += 1;\n    }\n    unsafeUniformArrayIntDistributionInternal(sharedData, rangeSizeArrayIntValue.data, rng);\n    return sharedData[0] * 0x100000000 + sharedData[1] + from;\n}\nexport function unsafeUniformIntDistribution(from, to, rng) {\n    var rangeSize = to - from;\n    if (rangeSize <= 0xffffffff) {\n        var g = unsafeUniformIntDistributionInternal(rangeSize + 1, rng);\n        return g + from;\n    }\n    return uniformLargeIntInternal(from, to, rangeSize, rng);\n}\n","import { dictionary } from './dictionary.js';\nimport { anyArbitraryBuilder } from './_internals/builders/AnyArbitraryBuilder.js';\nimport { toQualifiedObjectConstraints } from './_internals/helpers/QualifiedObjectConstraints.js';\nfunction objectInternal(constraints) {\n    return dictionary(constraints.key, anyArbitraryBuilder(constraints), {\n        maxKeys: constraints.maxKeys,\n        noNullPrototype: !constraints.withNullPrototype,\n        size: constraints.size,\n    });\n}\nfunction object(constraints) {\n    return objectInternal(toQualifiedObjectConstraints(constraints));\n}\nexport { object };\n","import { isArbitrary } from '../check/arbitrary/definition/Arbitrary.js';\nimport { safeMap, safeSlice } from '../utils/globals.js';\nimport { FrequencyArbitrary } from './_internals/FrequencyArbitrary.js';\nfunction isOneOfContraints(param) {\n    return (param != null &&\n        typeof param === 'object' &&\n        !('generate' in param) &&\n        !('arbitrary' in param) &&\n        !('weight' in param));\n}\nfunction toWeightedArbitrary(maybeWeightedArbitrary) {\n    if (isArbitrary(maybeWeightedArbitrary)) {\n        return { arbitrary: maybeWeightedArbitrary, weight: 1 };\n    }\n    return maybeWeightedArbitrary;\n}\nfunction oneof(...args) {\n    const constraints = args[0];\n    if (isOneOfContraints(constraints)) {\n        const weightedArbs = safeMap(safeSlice(args, 1), toWeightedArbitrary);\n        return FrequencyArbitrary.from(weightedArbs, constraints, 'fc.oneof');\n    }\n    const weightedArbs = safeMap(args, toWeightedArbitrary);\n    return FrequencyArbitrary.from(weightedArbs, {}, 'fc.oneof');\n}\nexport { oneof };\n","import { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { Stream } from '../../stream/Stream.js';\nconst AdaptedValue = Symbol('adapted-value');\nfunction toAdapterValue(rawValue, adapter) {\n    const adapted = adapter(rawValue.value_);\n    if (!adapted.adapted) {\n        return rawValue;\n    }\n    return new Value(adapted.value, AdaptedValue);\n}\nclass AdapterArbitrary extends Arbitrary {\n    constructor(sourceArb, adapter) {\n        super();\n        this.sourceArb = sourceArb;\n        this.adapter = adapter;\n        this.adaptValue = (rawValue) => toAdapterValue(rawValue, adapter);\n    }\n    generate(mrng, biasFactor) {\n        const rawValue = this.sourceArb.generate(mrng, biasFactor);\n        return this.adaptValue(rawValue);\n    }\n    canShrinkWithoutContext(value) {\n        return this.sourceArb.canShrinkWithoutContext(value) && !this.adapter(value).adapted;\n    }\n    shrink(value, context) {\n        if (context === AdaptedValue) {\n            if (!this.sourceArb.canShrinkWithoutContext(value)) {\n                return Stream.nil();\n            }\n            return this.sourceArb.shrink(value, undefined).map(this.adaptValue);\n        }\n        return this.sourceArb.shrink(value, context).map(this.adaptValue);\n    }\n}\nexport function adapter(sourceArb, adapter) {\n    return new AdapterArbitrary(sourceArb, adapter);\n}\n","import { nat } from './nat.js';\nimport { indexToMappedConstantMapperFor, indexToMappedConstantUnmapperFor, } from './_internals/mappers/IndexToMappedConstant.js';\nimport { Error } from '../utils/globals.js';\nfunction computeNumChoices(options) {\n    if (options.length === 0)\n        throw new Error(`fc.mapToConstant expects at least one option`);\n    let numChoices = 0;\n    for (let idx = 0; idx !== options.length; ++idx) {\n        if (options[idx].num < 0)\n            throw new Error(`fc.mapToConstant expects all options to have a number of entries greater or equal to zero`);\n        numChoices += options[idx].num;\n    }\n    if (numChoices === 0)\n        throw new Error(`fc.mapToConstant expects at least one choice among options`);\n    return numChoices;\n}\nexport function mapToConstant(...entries) {\n    const numChoices = computeNumChoices(entries);\n    return nat({ max: numChoices - 1 }).map(indexToMappedConstantMapperFor(entries), indexToMappedConstantUnmapperFor(entries));\n}\n","import { escapeForTemplateString } from '../helpers/TextEscaper.js';\nimport { cloneMethod } from '../../../check/symbols.js';\nimport { stringify } from '../../../utils/stringify.js';\nconst defaultSchedulerAct = (f) => f();\nexport class SchedulerImplem {\n    constructor(act, taskSelector) {\n        this.act = act;\n        this.taskSelector = taskSelector;\n        this.lastTaskId = 0;\n        this.sourceTaskSelector = taskSelector.clone();\n        this.scheduledTasks = [];\n        this.triggeredTasks = [];\n        this.scheduledWatchers = [];\n    }\n    static buildLog(reportItem) {\n        return `[task\\${${reportItem.taskId}}] ${reportItem.label.length !== 0 ? `${reportItem.schedulingType}::${reportItem.label}` : reportItem.schedulingType} ${reportItem.status}${reportItem.outputValue !== undefined ? ` with value ${escapeForTemplateString(reportItem.outputValue)}` : ''}`;\n    }\n    log(schedulingType, taskId, label, metadata, status, data) {\n        this.triggeredTasks.push({\n            status,\n            schedulingType,\n            taskId,\n            label,\n            metadata,\n            outputValue: data !== undefined ? stringify(data) : undefined,\n        });\n    }\n    scheduleInternal(schedulingType, label, task, metadata, customAct, thenTaskToBeAwaited) {\n        let trigger = null;\n        const taskId = ++this.lastTaskId;\n        const scheduledPromise = new Promise((resolve, reject) => {\n            trigger = () => {\n                (thenTaskToBeAwaited ? task.then(() => thenTaskToBeAwaited()) : task).then((data) => {\n                    this.log(schedulingType, taskId, label, metadata, 'resolved', data);\n                    return resolve(data);\n                }, (err) => {\n                    this.log(schedulingType, taskId, label, metadata, 'rejected', err);\n                    return reject(err);\n                });\n            };\n        });\n        this.scheduledTasks.push({\n            original: task,\n            scheduled: scheduledPromise,\n            trigger: trigger,\n            schedulingType,\n            taskId,\n            label,\n            metadata,\n            customAct,\n        });\n        if (this.scheduledWatchers.length !== 0) {\n            this.scheduledWatchers[0]();\n        }\n        return scheduledPromise;\n    }\n    schedule(task, label, metadata, customAct) {\n        return this.scheduleInternal('promise', label || '', task, metadata, customAct || defaultSchedulerAct);\n    }\n    scheduleFunction(asyncFunction, customAct) {\n        return (...args) => this.scheduleInternal('function', `${asyncFunction.name}(${args.map(stringify).join(',')})`, asyncFunction(...args), undefined, customAct || defaultSchedulerAct);\n    }\n    scheduleSequence(sequenceBuilders, customAct) {\n        const status = { done: false, faulty: false };\n        const dummyResolvedPromise = { then: (f) => f() };\n        let resolveSequenceTask = () => { };\n        const sequenceTask = new Promise((resolve) => (resolveSequenceTask = resolve));\n        sequenceBuilders\n            .reduce((previouslyScheduled, item) => {\n            const [builder, label, metadata] = typeof item === 'function' ? [item, item.name, undefined] : [item.builder, item.label, item.metadata];\n            return previouslyScheduled.then(() => {\n                const scheduled = this.scheduleInternal('sequence', label, dummyResolvedPromise, metadata, customAct || defaultSchedulerAct, () => builder());\n                scheduled.catch(() => {\n                    status.faulty = true;\n                    resolveSequenceTask();\n                });\n                return scheduled;\n            });\n        }, dummyResolvedPromise)\n            .then(() => {\n            status.done = true;\n            resolveSequenceTask();\n        }, () => {\n        });\n        return Object.assign(status, {\n            task: Promise.resolve(sequenceTask).then(() => {\n                return { done: status.done, faulty: status.faulty };\n            }),\n        });\n    }\n    count() {\n        return this.scheduledTasks.length;\n    }\n    internalWaitOne() {\n        if (this.scheduledTasks.length === 0) {\n            throw new Error('No task scheduled');\n        }\n        const taskIndex = this.taskSelector.nextTaskIndex(this.scheduledTasks);\n        const [scheduledTask] = this.scheduledTasks.splice(taskIndex, 1);\n        return scheduledTask.customAct(async () => {\n            scheduledTask.trigger();\n            try {\n                await scheduledTask.scheduled;\n            }\n            catch (_err) {\n            }\n        });\n    }\n    async waitOne(customAct) {\n        const waitAct = customAct || defaultSchedulerAct;\n        await this.act(() => waitAct(async () => await this.internalWaitOne()));\n    }\n    async waitAll(customAct) {\n        while (this.scheduledTasks.length > 0) {\n            await this.waitOne(customAct);\n        }\n    }\n    async waitFor(unscheduledTask, customAct) {\n        let taskResolved = false;\n        let awaiterPromise = null;\n        const awaiter = async () => {\n            while (!taskResolved && this.scheduledTasks.length > 0) {\n                await this.waitOne(customAct);\n            }\n            awaiterPromise = null;\n        };\n        const handleNotified = () => {\n            if (awaiterPromise !== null) {\n                return;\n            }\n            awaiterPromise = Promise.resolve().then(awaiter);\n        };\n        const clearAndReplaceWatcher = () => {\n            const handleNotifiedIndex = this.scheduledWatchers.indexOf(handleNotified);\n            if (handleNotifiedIndex !== -1) {\n                this.scheduledWatchers.splice(handleNotifiedIndex, 1);\n            }\n            if (handleNotifiedIndex === 0 && this.scheduledWatchers.length !== 0) {\n                this.scheduledWatchers[0]();\n            }\n        };\n        const rewrappedTask = unscheduledTask.then((ret) => {\n            taskResolved = true;\n            if (awaiterPromise === null) {\n                clearAndReplaceWatcher();\n                return ret;\n            }\n            return awaiterPromise.then(() => {\n                clearAndReplaceWatcher();\n                return ret;\n            });\n        }, (err) => {\n            taskResolved = true;\n            if (awaiterPromise === null) {\n                clearAndReplaceWatcher();\n                throw err;\n            }\n            return awaiterPromise.then(() => {\n                clearAndReplaceWatcher();\n                throw err;\n            });\n        });\n        if (this.scheduledTasks.length > 0 && this.scheduledWatchers.length === 0) {\n            handleNotified();\n        }\n        this.scheduledWatchers.push(handleNotified);\n        return rewrappedTask;\n    }\n    report() {\n        return [\n            ...this.triggeredTasks,\n            ...this.scheduledTasks.map((t) => ({\n                status: 'pending',\n                schedulingType: t.schedulingType,\n                taskId: t.taskId,\n                label: t.label,\n                metadata: t.metadata,\n            })),\n        ];\n    }\n    toString() {\n        return ('schedulerFor()`\\n' +\n            this.report()\n                .map(SchedulerImplem.buildLog)\n                .map((log) => `-> ${log}`)\n                .join('\\n') +\n            '`');\n    }\n    [cloneMethod]() {\n        return new SchedulerImplem(this.act, this.sourceTaskSelector);\n    }\n}\n","import { integer } from './integer.js';\nimport { floatToIndex, indexToFloat, MAX_VALUE_32 } from './_internals/helpers/FloatHelpers.js';\nimport { floatOnlyMapper, floatOnlyUnmapper, refineConstraintsForFloatOnly, } from './_internals/helpers/FloatOnlyHelpers.js';\nconst safeNumberIsInteger = Number.isInteger;\nconst safeNumberIsNaN = Number.isNaN;\nconst safeMathFround = Math.fround;\nconst safeNegativeInfinity = Number.NEGATIVE_INFINITY;\nconst safePositiveInfinity = Number.POSITIVE_INFINITY;\nconst safeNaN = Number.NaN;\nfunction safeFloatToIndex(f, constraintsLabel) {\n    const conversionTrick = 'you can convert any double to a 32-bit float by using `Math.fround(myDouble)`';\n    const errorMessage = 'fc.float constraints.' + constraintsLabel + ' must be a 32-bit float - ' + conversionTrick;\n    if (safeNumberIsNaN(f) || safeMathFround(f) !== f) {\n        throw new Error(errorMessage);\n    }\n    return floatToIndex(f);\n}\nfunction unmapperFloatToIndex(value) {\n    if (typeof value !== 'number')\n        throw new Error('Unsupported type');\n    return floatToIndex(value);\n}\nfunction numberIsNotInteger(value) {\n    return !safeNumberIsInteger(value);\n}\nfunction anyFloat(constraints) {\n    const { noDefaultInfinity = false, noNaN = false, minExcluded = false, maxExcluded = false, min = noDefaultInfinity ? -MAX_VALUE_32 : safeNegativeInfinity, max = noDefaultInfinity ? MAX_VALUE_32 : safePositiveInfinity, } = constraints;\n    const minIndexRaw = safeFloatToIndex(min, 'min');\n    const minIndex = minExcluded ? minIndexRaw + 1 : minIndexRaw;\n    const maxIndexRaw = safeFloatToIndex(max, 'max');\n    const maxIndex = maxExcluded ? maxIndexRaw - 1 : maxIndexRaw;\n    if (minIndex > maxIndex) {\n        throw new Error('fc.float constraints.min must be smaller or equal to constraints.max');\n    }\n    if (noNaN) {\n        return integer({ min: minIndex, max: maxIndex }).map(indexToFloat, unmapperFloatToIndex);\n    }\n    const minIndexWithNaN = maxIndex > 0 ? minIndex : minIndex - 1;\n    const maxIndexWithNaN = maxIndex > 0 ? maxIndex + 1 : maxIndex;\n    return integer({ min: minIndexWithNaN, max: maxIndexWithNaN }).map((index) => {\n        if (index > maxIndex || index < minIndex)\n            return safeNaN;\n        else\n            return indexToFloat(index);\n    }, (value) => {\n        if (typeof value !== 'number')\n            throw new Error('Unsupported type');\n        if (safeNumberIsNaN(value))\n            return maxIndex !== maxIndexWithNaN ? maxIndexWithNaN : minIndexWithNaN;\n        return floatToIndex(value);\n    });\n}\nexport function float(constraints = {}) {\n    if (!constraints.noInteger) {\n        return anyFloat(constraints);\n    }\n    return anyFloat(refineConstraintsForFloatOnly(constraints))\n        .map(floatOnlyMapper, floatOnlyUnmapper)\n        .filter(numberIsNotInteger);\n}\n","import { array } from './array.js';\nimport { patternsToStringMapper, patternsToStringUnmapperFor } from './_internals/mappers/PatternsToString.js';\nimport { createSlicesForStringLegacy } from './_internals/helpers/SlicesForStringBuilder.js';\nconst safeObjectAssign = Object.assign;\nexport function stringOf(charArb, constraints = {}) {\n    const unmapper = patternsToStringUnmapperFor(charArb, constraints);\n    const experimentalCustomSlices = createSlicesForStringLegacy(charArb, unmapper);\n    const enrichedConstraints = safeObjectAssign(safeObjectAssign({}, constraints), {\n        experimentalCustomSlices,\n    });\n    return array(charArb, enrichedConstraints).map(patternsToStringMapper, unmapper);\n}\n","import { safeGetTime } from '../utils/globals.js';\nimport { integer } from './integer.js';\nimport { timeToDateMapper, timeToDateMapperWithNaN, timeToDateUnmapper, timeToDateUnmapperWithNaN, } from './_internals/mappers/TimeToDate.js';\nconst safeNumberIsNaN = Number.isNaN;\nexport function date(constraints = {}) {\n    const intMin = constraints.min !== undefined ? safeGetTime(constraints.min) : -8640000000000000;\n    const intMax = constraints.max !== undefined ? safeGetTime(constraints.max) : 8640000000000000;\n    const noInvalidDate = constraints.noInvalidDate === undefined || constraints.noInvalidDate;\n    if (safeNumberIsNaN(intMin))\n        throw new Error('fc.date min must be valid instance of Date');\n    if (safeNumberIsNaN(intMax))\n        throw new Error('fc.date max must be valid instance of Date');\n    if (intMin > intMax)\n        throw new Error('fc.date max must be greater or equal to min');\n    if (noInvalidDate) {\n        return integer({ min: intMin, max: intMax }).map(timeToDateMapper, timeToDateUnmapper);\n    }\n    const valueForNaN = intMax + 1;\n    return integer({ min: intMin, max: intMax + 1 }).map(timeToDateMapperWithNaN(valueForNaN), timeToDateUnmapperWithNaN(valueForNaN));\n}\n","import { Stream } from '../../../stream/Stream.js';\nimport { cloneMethod, hasCloneMethod } from '../../symbols.js';\nimport { Value } from './Value.js';\nconst safeObjectAssign = Object.assign;\nexport class Arbitrary {\n    filter(refinement) {\n        return new FilterArbitrary(this, refinement);\n    }\n    map(mapper, unmapper) {\n        return new MapArbitrary(this, mapper, unmapper);\n    }\n    chain(chainer) {\n        return new ChainArbitrary(this, chainer);\n    }\n    noShrink() {\n        return new NoShrinkArbitrary(this);\n    }\n    noBias() {\n        return new NoBiasArbitrary(this);\n    }\n}\nclass ChainArbitrary extends Arbitrary {\n    constructor(arb, chainer) {\n        super();\n        this.arb = arb;\n        this.chainer = chainer;\n    }\n    generate(mrng, biasFactor) {\n        const clonedMrng = mrng.clone();\n        const src = this.arb.generate(mrng, biasFactor);\n        return this.valueChainer(src, mrng, clonedMrng, biasFactor);\n    }\n    canShrinkWithoutContext(value) {\n        return false;\n    }\n    shrink(value, context) {\n        if (this.isSafeContext(context)) {\n            return (!context.stoppedForOriginal\n                ? this.arb\n                    .shrink(context.originalValue, context.originalContext)\n                    .map((v) => this.valueChainer(v, context.clonedMrng.clone(), context.clonedMrng, context.originalBias))\n                : Stream.nil()).join(context.chainedArbitrary.shrink(value, context.chainedContext).map((dst) => {\n                const newContext = safeObjectAssign(safeObjectAssign({}, context), {\n                    chainedContext: dst.context,\n                    stoppedForOriginal: true,\n                });\n                return new Value(dst.value_, newContext);\n            }));\n        }\n        return Stream.nil();\n    }\n    valueChainer(v, generateMrng, clonedMrng, biasFactor) {\n        const chainedArbitrary = this.chainer(v.value_);\n        const dst = chainedArbitrary.generate(generateMrng, biasFactor);\n        const context = {\n            originalBias: biasFactor,\n            originalValue: v.value_,\n            originalContext: v.context,\n            stoppedForOriginal: false,\n            chainedArbitrary,\n            chainedContext: dst.context,\n            clonedMrng,\n        };\n        return new Value(dst.value_, context);\n    }\n    isSafeContext(context) {\n        return (context != null &&\n            typeof context === 'object' &&\n            'originalBias' in context &&\n            'originalValue' in context &&\n            'originalContext' in context &&\n            'stoppedForOriginal' in context &&\n            'chainedArbitrary' in context &&\n            'chainedContext' in context &&\n            'clonedMrng' in context);\n    }\n}\nclass MapArbitrary extends Arbitrary {\n    constructor(arb, mapper, unmapper) {\n        super();\n        this.arb = arb;\n        this.mapper = mapper;\n        this.unmapper = unmapper;\n        this.bindValueMapper = (v) => this.valueMapper(v);\n    }\n    generate(mrng, biasFactor) {\n        const g = this.arb.generate(mrng, biasFactor);\n        return this.valueMapper(g);\n    }\n    canShrinkWithoutContext(value) {\n        if (this.unmapper !== undefined) {\n            try {\n                const unmapped = this.unmapper(value);\n                return this.arb.canShrinkWithoutContext(unmapped);\n            }\n            catch (_err) {\n                return false;\n            }\n        }\n        return false;\n    }\n    shrink(value, context) {\n        if (this.isSafeContext(context)) {\n            return this.arb.shrink(context.originalValue, context.originalContext).map(this.bindValueMapper);\n        }\n        if (this.unmapper !== undefined) {\n            const unmapped = this.unmapper(value);\n            return this.arb.shrink(unmapped, undefined).map(this.bindValueMapper);\n        }\n        return Stream.nil();\n    }\n    mapperWithCloneIfNeeded(v) {\n        const sourceValue = v.value;\n        const mappedValue = this.mapper(sourceValue);\n        if (v.hasToBeCloned &&\n            ((typeof mappedValue === 'object' && mappedValue !== null) || typeof mappedValue === 'function') &&\n            Object.isExtensible(mappedValue) &&\n            !hasCloneMethod(mappedValue)) {\n            Object.defineProperty(mappedValue, cloneMethod, { get: () => () => this.mapperWithCloneIfNeeded(v)[0] });\n        }\n        return [mappedValue, sourceValue];\n    }\n    valueMapper(v) {\n        const [mappedValue, sourceValue] = this.mapperWithCloneIfNeeded(v);\n        const context = { originalValue: sourceValue, originalContext: v.context };\n        return new Value(mappedValue, context);\n    }\n    isSafeContext(context) {\n        return (context != null &&\n            typeof context === 'object' &&\n            'originalValue' in context &&\n            'originalContext' in context);\n    }\n}\nclass FilterArbitrary extends Arbitrary {\n    constructor(arb, refinement) {\n        super();\n        this.arb = arb;\n        this.refinement = refinement;\n        this.bindRefinementOnValue = (v) => this.refinementOnValue(v);\n    }\n    generate(mrng, biasFactor) {\n        while (true) {\n            const g = this.arb.generate(mrng, biasFactor);\n            if (this.refinementOnValue(g)) {\n                return g;\n            }\n        }\n    }\n    canShrinkWithoutContext(value) {\n        return this.arb.canShrinkWithoutContext(value) && this.refinement(value);\n    }\n    shrink(value, context) {\n        return this.arb.shrink(value, context).filter(this.bindRefinementOnValue);\n    }\n    refinementOnValue(v) {\n        return this.refinement(v.value);\n    }\n}\nclass NoShrinkArbitrary extends Arbitrary {\n    constructor(arb) {\n        super();\n        this.arb = arb;\n    }\n    generate(mrng, biasFactor) {\n        return this.arb.generate(mrng, biasFactor);\n    }\n    canShrinkWithoutContext(value) {\n        return this.arb.canShrinkWithoutContext(value);\n    }\n    shrink(_value, _context) {\n        return Stream.nil();\n    }\n    noShrink() {\n        return this;\n    }\n}\nclass NoBiasArbitrary extends Arbitrary {\n    constructor(arb) {\n        super();\n        this.arb = arb;\n    }\n    generate(mrng, _biasFactor) {\n        return this.arb.generate(mrng, undefined);\n    }\n    canShrinkWithoutContext(value) {\n        return this.arb.canShrinkWithoutContext(value);\n    }\n    shrink(value, context) {\n        return this.arb.shrink(value, context);\n    }\n    noBias() {\n        return this;\n    }\n}\nexport function isArbitrary(instance) {\n    return (typeof instance === 'object' &&\n        instance !== null &&\n        'generate' in instance &&\n        'shrink' in instance &&\n        'canShrinkWithoutContext' in instance);\n}\nexport function assertIsArbitrary(instance) {\n    if (!isArbitrary(instance)) {\n        throw new Error('Unexpected value received: not an instance of Arbitrary');\n    }\n}\n","import { stream } from '../../../stream/Stream.js';\nimport { Value } from '../../../check/arbitrary/definition/Value.js';\nimport { BigInt } from '../../../utils/globals.js';\nfunction halveBigInt(n) {\n    return n / BigInt(2);\n}\nexport function shrinkBigInt(current, target, tryTargetAsap) {\n    const realGap = current - target;\n    function* shrinkDecr() {\n        let previous = tryTargetAsap ? undefined : target;\n        const gap = tryTargetAsap ? realGap : halveBigInt(realGap);\n        for (let toremove = gap; toremove > 0; toremove = halveBigInt(toremove)) {\n            const next = current - toremove;\n            yield new Value(next, previous);\n            previous = next;\n        }\n    }\n    function* shrinkIncr() {\n        let previous = tryTargetAsap ? undefined : target;\n        const gap = tryTargetAsap ? realGap : halveBigInt(realGap);\n        for (let toremove = gap; toremove < 0; toremove = halveBigInt(toremove)) {\n            const next = current - toremove;\n            yield new Value(next, previous);\n            previous = next;\n        }\n    }\n    return realGap > 0 ? stream(shrinkDecr()) : stream(shrinkIncr());\n}\n","import { BigInt, BigInt64Array } from '../utils/globals.js';\nimport { bigInt } from './bigInt.js';\nimport { typedIntArrayArbitraryArbitraryBuilder } from './_internals/builders/TypedIntArrayArbitraryBuilder.js';\nexport function bigInt64Array(constraints = {}) {\n    return typedIntArrayArbitraryArbitraryBuilder(constraints, BigInt('-9223372036854775808'), BigInt('9223372036854775807'), BigInt64Array, bigInt);\n}\n","import { Uint32Array } from '../utils/globals.js';\nimport { integer } from './integer.js';\nimport { typedIntArrayArbitraryArbitraryBuilder } from './_internals/builders/TypedIntArrayArbitraryBuilder.js';\nexport function uint32Array(constraints = {}) {\n    return typedIntArrayArbitraryArbitraryBuilder(constraints, 0, 0xffffffff, Uint32Array, integer);\n}\n","import { Uint8Array } from '../utils/globals.js';\nimport { integer } from './integer.js';\nimport { typedIntArrayArbitraryArbitraryBuilder } from './_internals/builders/TypedIntArrayArbitraryBuilder.js';\nexport function uint8Array(constraints = {}) {\n    return typedIntArrayArbitraryArbitraryBuilder(constraints, 0, 255, Uint8Array, integer);\n}\n","import { tuple } from './tuple.js';\nimport { buildPaddedNumberArbitrary } from './_internals/builders/PaddedNumberArbitraryBuilder.js';\nimport { paddedEightsToUuidMapper, paddedEightsToUuidUnmapper } from './_internals/mappers/PaddedEightsToUuid.js';\nexport function uuidV(versionNumber) {\n    const padded = buildPaddedNumberArbitrary(0, 0xffffffff);\n    const offsetSecond = versionNumber * 0x10000000;\n    const secondPadded = buildPaddedNumberArbitrary(offsetSecond, offsetSecond + 0x0fffffff);\n    const thirdPadded = buildPaddedNumberArbitrary(0x80000000, 0xbfffffff);\n    return tuple(padded, secondPadded, thirdPadded, padded).map(paddedEightsToUuidMapper, paddedEightsToUuidUnmapper);\n}\n","import { Uint8ClampedArray } from '../utils/globals.js';\nimport { integer } from './integer.js';\nimport { typedIntArrayArbitraryArbitraryBuilder } from './_internals/builders/TypedIntArrayArbitraryBuilder.js';\nexport function uint8ClampedArray(constraints = {}) {\n    return typedIntArrayArbitraryArbitraryBuilder(constraints, 0, 255, Uint8ClampedArray, integer);\n}\n","import { VerbosityLevel } from '../configuration/VerbosityLevel.js';\nimport { ExecutionStatus } from './ExecutionStatus.js';\nimport { safeSplit } from '../../../utils/globals.js';\nexport class RunExecution {\n    constructor(verbosity, interruptedAsFailure) {\n        this.verbosity = verbosity;\n        this.interruptedAsFailure = interruptedAsFailure;\n        this.isSuccess = () => this.pathToFailure == null;\n        this.firstFailure = () => (this.pathToFailure ? +safeSplit(this.pathToFailure, ':')[0] : -1);\n        this.numShrinks = () => (this.pathToFailure ? safeSplit(this.pathToFailure, ':').length - 1 : 0);\n        this.rootExecutionTrees = [];\n        this.currentLevelExecutionTrees = this.rootExecutionTrees;\n        this.failure = null;\n        this.numSkips = 0;\n        this.numSuccesses = 0;\n        this.interrupted = false;\n    }\n    appendExecutionTree(status, value) {\n        const currentTree = { status, value, children: [] };\n        this.currentLevelExecutionTrees.push(currentTree);\n        return currentTree;\n    }\n    fail(value, id, failure) {\n        if (this.verbosity >= VerbosityLevel.Verbose) {\n            const currentTree = this.appendExecutionTree(ExecutionStatus.Failure, value);\n            this.currentLevelExecutionTrees = currentTree.children;\n        }\n        if (this.pathToFailure == null)\n            this.pathToFailure = `${id}`;\n        else\n            this.pathToFailure += `:${id}`;\n        this.value = value;\n        this.failure = failure;\n    }\n    skip(value) {\n        if (this.verbosity >= VerbosityLevel.VeryVerbose) {\n            this.appendExecutionTree(ExecutionStatus.Skipped, value);\n        }\n        if (this.pathToFailure == null) {\n            ++this.numSkips;\n        }\n    }\n    success(value) {\n        if (this.verbosity >= VerbosityLevel.VeryVerbose) {\n            this.appendExecutionTree(ExecutionStatus.Success, value);\n        }\n        if (this.pathToFailure == null) {\n            ++this.numSuccesses;\n        }\n    }\n    interrupt() {\n        this.interrupted = true;\n    }\n    extractFailures() {\n        if (this.isSuccess()) {\n            return [];\n        }\n        const failures = [];\n        let cursor = this.rootExecutionTrees;\n        while (cursor.length > 0 && cursor[cursor.length - 1].status === ExecutionStatus.Failure) {\n            const failureTree = cursor[cursor.length - 1];\n            failures.push(failureTree.value);\n            cursor = failureTree.children;\n        }\n        return failures;\n    }\n    toRunDetails(seed, basePath, maxSkips, qParams) {\n        if (!this.isSuccess()) {\n            return {\n                failed: true,\n                interrupted: this.interrupted,\n                numRuns: this.firstFailure() + 1 - this.numSkips,\n                numSkips: this.numSkips,\n                numShrinks: this.numShrinks(),\n                seed,\n                counterexample: this.value,\n                counterexamplePath: RunExecution.mergePaths(basePath, this.pathToFailure),\n                error: this.failure.errorMessage,\n                errorInstance: this.failure.error,\n                failures: this.extractFailures(),\n                executionSummary: this.rootExecutionTrees,\n                verbose: this.verbosity,\n                runConfiguration: qParams.toParameters(),\n            };\n        }\n        const considerInterruptedAsFailure = this.interruptedAsFailure || this.numSuccesses === 0;\n        const failed = this.numSkips > maxSkips || (this.interrupted && considerInterruptedAsFailure);\n        const out = {\n            failed,\n            interrupted: this.interrupted,\n            numRuns: this.numSuccesses,\n            numSkips: this.numSkips,\n            numShrinks: 0,\n            seed,\n            counterexample: null,\n            counterexamplePath: null,\n            error: null,\n            errorInstance: null,\n            failures: [],\n            executionSummary: this.rootExecutionTrees,\n            verbose: this.verbosity,\n            runConfiguration: qParams.toParameters(),\n        };\n        return out;\n    }\n}\nRunExecution.mergePaths = (offsetPath, path) => {\n    if (offsetPath.length === 0)\n        return path;\n    const offsetItems = offsetPath.split(':');\n    const remainingItems = path.split(':');\n    const middle = +offsetItems[offsetItems.length - 1] + +remainingItems[0];\n    return [...offsetItems.slice(0, offsetItems.length - 1), `${middle}`, ...remainingItems.slice(1)].join(':');\n};\n","import { constant } from './constant.js';\nimport { FrequencyArbitrary } from './_internals/FrequencyArbitrary.js';\nimport { safeHasOwnProperty } from '../utils/globals.js';\nexport function option(arb, constraints = {}) {\n    const freq = constraints.freq == null ? 5 : constraints.freq;\n    const nilValue = safeHasOwnProperty(constraints, 'nil') ? constraints.nil : null;\n    const nilArb = constant(nilValue);\n    const weightedArbs = [\n        { arbitrary: nilArb, weight: 1, fallbackValue: { default: nilValue } },\n        { arbitrary: arb, weight: freq },\n    ];\n    const frequencyConstraints = {\n        withCrossShrink: true,\n        depthSize: constraints.depthSize,\n        maxDepth: constraints.maxDepth,\n        depthIdentifier: constraints.depthIdentifier,\n    };\n    return FrequencyArbitrary.from(weightedArbs, frequencyConstraints, 'fc.option');\n}\n","import { boolean } from '../../boolean.js';\nimport { constant } from '../../constant.js';\nimport { double } from '../../double.js';\nexport function jsonConstraintsBuilder(stringArbitrary, constraints) {\n    const { depthSize, maxDepth } = constraints;\n    const key = stringArbitrary;\n    const values = [\n        boolean(),\n        double({ noDefaultInfinity: true, noNaN: true }),\n        stringArbitrary,\n        constant(null),\n    ];\n    return { key, values, depthSize, maxDepth };\n}\n","import { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Stream } from '../../stream/Stream.js';\nimport { noUndefinedAsContext, UndefinedContextPlaceholder } from './helpers/NoUndefinedAsContext.js';\nexport class AlwaysShrinkableArbitrary extends Arbitrary {\n    constructor(arb) {\n        super();\n        this.arb = arb;\n    }\n    generate(mrng, biasFactor) {\n        const value = this.arb.generate(mrng, biasFactor);\n        return noUndefinedAsContext(value);\n    }\n    canShrinkWithoutContext(value) {\n        return true;\n    }\n    shrink(value, context) {\n        if (context === undefined && !this.arb.canShrinkWithoutContext(value)) {\n            return Stream.nil();\n        }\n        const safeContext = context !== UndefinedContextPlaceholder ? context : undefined;\n        return this.arb.shrink(value, safeContext).map(noUndefinedAsContext);\n    }\n}\n","import { Uint16Array } from '../utils/globals.js';\nimport { integer } from './integer.js';\nimport { typedIntArrayArbitraryArbitraryBuilder } from './_internals/builders/TypedIntArrayArbitraryBuilder.js';\nexport function uint16Array(constraints = {}) {\n    return typedIntArrayArbitraryArbitraryBuilder(constraints, 0, 65535, Uint16Array, integer);\n}\n","import { MaxLengthUpperBound } from '../helpers/MaxLengthFromMinLength.js';\nimport { safeJoin, Error } from '../../../utils/globals.js';\nimport { tokenizeString } from '../helpers/TokenizeString.js';\nexport function patternsToStringMapper(tab) {\n    return safeJoin(tab, '');\n}\nfunction minLengthFrom(constraints) {\n    return constraints.minLength !== undefined ? constraints.minLength : 0;\n}\nfunction maxLengthFrom(constraints) {\n    return constraints.maxLength !== undefined ? constraints.maxLength : MaxLengthUpperBound;\n}\nexport function patternsToStringUnmapperIsValidLength(tokens, constraints) {\n    return minLengthFrom(constraints) <= tokens.length && tokens.length <= maxLengthFrom(constraints);\n}\nexport function patternsToStringUnmapperFor(patternsArb, constraints) {\n    return function patternsToStringUnmapper(value) {\n        if (typeof value !== 'string') {\n            throw new Error('Unsupported value');\n        }\n        const tokens = tokenizeString(patternsArb, value, minLengthFrom(constraints), maxLengthFrom(constraints));\n        if (tokens === undefined) {\n            throw new Error('Unable to unmap received string');\n        }\n        return tokens;\n    };\n}\n","import { unicodeString } from './unicodeString.js';\nimport { jsonConstraintsBuilder } from './_internals/helpers/JsonConstraintsBuilder.js';\nimport { anything } from './anything.js';\nexport function unicodeJsonValue(constraints = {}) {\n    return anything(jsonConstraintsBuilder(unicodeString(), constraints));\n}\n","import { BigInt, BigUint64Array } from '../utils/globals.js';\nimport { bigInt } from './bigInt.js';\nimport { typedIntArrayArbitraryArbitraryBuilder } from './_internals/builders/TypedIntArrayArbitraryBuilder.js';\nexport function bigUint64Array(constraints = {}) {\n    return typedIntArrayArbitraryArbitraryBuilder(constraints, BigInt(0), BigInt('18446744073709551615'), BigUint64Array, bigInt);\n}\n","import { Int16Array } from '../utils/globals.js';\nimport { integer } from './integer.js';\nimport { typedIntArrayArbitraryArbitraryBuilder } from './_internals/builders/TypedIntArrayArbitraryBuilder.js';\nexport function int16Array(constraints = {}) {\n    return typedIntArrayArbitraryArbitraryBuilder(constraints, -32768, 32767, Int16Array, integer);\n}\n","import { Int32Array } from '../utils/globals.js';\nimport { integer } from './integer.js';\nimport { typedIntArrayArbitraryArbitraryBuilder } from './_internals/builders/TypedIntArrayArbitraryBuilder.js';\nexport function int32Array(constraints = {}) {\n    return typedIntArrayArbitraryArbitraryBuilder(constraints, -0x80000000, 0x7fffffff, Int32Array, integer);\n}\n","import { Int8Array } from '../utils/globals.js';\nimport { integer } from './integer.js';\nimport { typedIntArrayArbitraryArbitraryBuilder } from './_internals/builders/TypedIntArrayArbitraryBuilder.js';\nexport function int8Array(constraints = {}) {\n    return typedIntArrayArbitraryArbitraryBuilder(constraints, -128, 127, Int8Array, integer);\n}\n","import { array } from './array.js';\nimport { unicode } from './unicode.js';\nimport { codePointsToStringMapper, codePointsToStringUnmapper } from './_internals/mappers/CodePointsToString.js';\nimport { createSlicesForStringLegacy } from './_internals/helpers/SlicesForStringBuilder.js';\nconst safeObjectAssign = Object.assign;\nexport function unicodeString(constraints = {}) {\n    const charArbitrary = unicode();\n    const experimentalCustomSlices = createSlicesForStringLegacy(charArbitrary, codePointsToStringUnmapper);\n    const enrichedConstraints = safeObjectAssign(safeObjectAssign({}, constraints), {\n        experimentalCustomSlices,\n    });\n    return array(charArbitrary, enrichedConstraints).map(codePointsToStringMapper, codePointsToStringUnmapper);\n}\n","import { webSegment } from '../../webSegment.js';\nimport { array } from '../../array.js';\nimport { segmentsToPathMapper, segmentsToPathUnmapper } from '../mappers/SegmentsToPath.js';\nimport { oneof } from '../../oneof.js';\nfunction sqrtSize(size) {\n    switch (size) {\n        case 'xsmall':\n            return ['xsmall', 'xsmall'];\n        case 'small':\n            return ['small', 'xsmall'];\n        case 'medium':\n            return ['small', 'small'];\n        case 'large':\n            return ['medium', 'small'];\n        case 'xlarge':\n            return ['medium', 'medium'];\n    }\n}\nfunction buildUriPathArbitraryInternal(segmentSize, numSegmentSize) {\n    return array(webSegment({ size: segmentSize }), { size: numSegmentSize }).map(segmentsToPathMapper, segmentsToPathUnmapper);\n}\nexport function buildUriPathArbitrary(resolvedSize) {\n    const [segmentSize, numSegmentSize] = sqrtSize(resolvedSize);\n    if (segmentSize === numSegmentSize) {\n        return buildUriPathArbitraryInternal(segmentSize, numSegmentSize);\n    }\n    return oneof(buildUriPathArbitraryInternal(segmentSize, numSegmentSize), buildUriPathArbitraryInternal(numSegmentSize, segmentSize));\n}\n","import { array } from './array.js';\nimport { constant } from './constant.js';\nimport { oneof } from './oneof.js';\nimport { sentencesToParagraphMapper, sentencesToParagraphUnmapper, wordsToJoinedStringMapper, wordsToJoinedStringUnmapperFor, wordsToSentenceMapper, wordsToSentenceUnmapperFor, } from './_internals/mappers/WordsToLorem.js';\nconst h = (v, w) => {\n    return { arbitrary: constant(v), weight: w };\n};\nfunction loremWord() {\n    return oneof(h('non', 6), h('adipiscing', 5), h('ligula', 5), h('enim', 5), h('pellentesque', 5), h('in', 5), h('augue', 5), h('et', 5), h('nulla', 5), h('lorem', 4), h('sit', 4), h('sed', 4), h('diam', 4), h('fermentum', 4), h('ut', 4), h('eu', 4), h('aliquam', 4), h('mauris', 4), h('vitae', 4), h('felis', 4), h('ipsum', 3), h('dolor', 3), h('amet,', 3), h('elit', 3), h('euismod', 3), h('mi', 3), h('orci', 3), h('erat', 3), h('praesent', 3), h('egestas', 3), h('leo', 3), h('vel', 3), h('sapien', 3), h('integer', 3), h('curabitur', 3), h('convallis', 3), h('purus', 3), h('risus', 2), h('suspendisse', 2), h('lectus', 2), h('nec,', 2), h('ultricies', 2), h('sed,', 2), h('cras', 2), h('elementum', 2), h('ultrices', 2), h('maecenas', 2), h('massa,', 2), h('varius', 2), h('a,', 2), h('semper', 2), h('proin', 2), h('nec', 2), h('nisl', 2), h('amet', 2), h('duis', 2), h('congue', 2), h('libero', 2), h('vestibulum', 2), h('pede', 2), h('blandit', 2), h('sodales', 2), h('ante', 2), h('nibh', 2), h('ac', 2), h('aenean', 2), h('massa', 2), h('suscipit', 2), h('sollicitudin', 2), h('fusce', 2), h('tempus', 2), h('aliquam,', 2), h('nunc', 2), h('ullamcorper', 2), h('rhoncus', 2), h('metus', 2), h('faucibus,', 2), h('justo', 2), h('magna', 2), h('at', 2), h('tincidunt', 2), h('consectetur', 1), h('tortor,', 1), h('dignissim', 1), h('congue,', 1), h('non,', 1), h('porttitor,', 1), h('nonummy', 1), h('molestie,', 1), h('est', 1), h('eleifend', 1), h('mi,', 1), h('arcu', 1), h('scelerisque', 1), h('vitae,', 1), h('consequat', 1), h('in,', 1), h('pretium', 1), h('volutpat', 1), h('pharetra', 1), h('tempor', 1), h('bibendum', 1), h('odio', 1), h('dui', 1), h('primis', 1), h('faucibus', 1), h('luctus', 1), h('posuere', 1), h('cubilia', 1), h('curae,', 1), h('hendrerit', 1), h('velit', 1), h('mauris,', 1), h('gravida', 1), h('ornare', 1), h('ut,', 1), h('pulvinar', 1), h('varius,', 1), h('turpis', 1), h('nibh,', 1), h('eros', 1), h('id', 1), h('aliquet', 1), h('quis', 1), h('lobortis', 1), h('consectetuer', 1), h('morbi', 1), h('vehicula', 1), h('tortor', 1), h('tellus,', 1), h('id,', 1), h('eu,', 1), h('quam', 1), h('feugiat,', 1), h('posuere,', 1), h('iaculis', 1), h('lectus,', 1), h('tristique', 1), h('mollis,', 1), h('nisl,', 1), h('vulputate', 1), h('sem', 1), h('vivamus', 1), h('placerat', 1), h('imperdiet', 1), h('cursus', 1), h('rutrum', 1), h('iaculis,', 1), h('augue,', 1), h('lacus', 1));\n}\nexport function lorem(constraints = {}) {\n    const { maxCount, mode = 'words', size } = constraints;\n    if (maxCount !== undefined && maxCount < 1) {\n        throw new Error(`lorem has to produce at least one word/sentence`);\n    }\n    const wordArbitrary = loremWord();\n    if (mode === 'sentences') {\n        const sentence = array(wordArbitrary, { minLength: 1, size: 'small' }).map(wordsToSentenceMapper, wordsToSentenceUnmapperFor(wordArbitrary));\n        return array(sentence, { minLength: 1, maxLength: maxCount, size }).map(sentencesToParagraphMapper, sentencesToParagraphUnmapper);\n    }\n    else {\n        return array(wordArbitrary, { minLength: 1, maxLength: maxCount, size }).map(wordsToJoinedStringMapper, wordsToJoinedStringUnmapperFor(wordArbitrary));\n    }\n}\n","import { SkipAfterProperty } from '../property/SkipAfterProperty.js';\nimport { TimeoutProperty } from '../property/TimeoutProperty.js';\nimport { UnbiasedProperty } from '../property/UnbiasedProperty.js';\nimport { IgnoreEqualValuesProperty } from '../property/IgnoreEqualValuesProperty.js';\nconst safeDateNow = Date.now;\nconst safeSetTimeout = setTimeout;\nconst safeClearTimeout = clearTimeout;\nexport function decorateProperty(rawProperty, qParams) {\n    let prop = rawProperty;\n    if (rawProperty.isAsync() && qParams.timeout != null) {\n        prop = new TimeoutProperty(prop, qParams.timeout, safeSetTimeout, safeClearTimeout);\n    }\n    if (qParams.unbiased) {\n        prop = new UnbiasedProperty(prop);\n    }\n    if (qParams.skipAllAfterTimeLimit != null) {\n        prop = new SkipAfterProperty(prop, safeDateNow, qParams.skipAllAfterTimeLimit, false, safeSetTimeout, safeClearTimeout);\n    }\n    if (qParams.interruptAfterTimeLimit != null) {\n        prop = new SkipAfterProperty(prop, safeDateNow, qParams.interruptAfterTimeLimit, true, safeSetTimeout, safeClearTimeout);\n    }\n    if (qParams.skipEqualValues) {\n        prop = new IgnoreEqualValuesProperty(prop, true);\n    }\n    if (qParams.ignoreEqualValues) {\n        prop = new IgnoreEqualValuesProperty(prop, false);\n    }\n    return prop;\n}\n","import { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { Stream } from '../../stream/Stream.js';\nimport { SchedulerImplem } from './implementations/SchedulerImplem.js';\nfunction buildNextTaskIndex(mrng) {\n    const clonedMrng = mrng.clone();\n    return {\n        clone: () => buildNextTaskIndex(clonedMrng),\n        nextTaskIndex: (scheduledTasks) => {\n            return mrng.nextInt(0, scheduledTasks.length - 1);\n        },\n    };\n}\nexport class SchedulerArbitrary extends Arbitrary {\n    constructor(act) {\n        super();\n        this.act = act;\n    }\n    generate(mrng, _biasFactor) {\n        return new Value(new SchedulerImplem(this.act, buildNextTaskIndex(mrng.clone())), undefined);\n    }\n    canShrinkWithoutContext(value) {\n        return false;\n    }\n    shrink(_value, _context) {\n        return Stream.nil();\n    }\n}\n","import { array } from './array.js';\nimport { char16bits } from './char16bits.js';\nimport { charsToStringMapper, charsToStringUnmapper } from './_internals/mappers/CharsToString.js';\nimport { createSlicesForStringLegacy } from './_internals/helpers/SlicesForStringBuilder.js';\nconst safeObjectAssign = Object.assign;\nexport function string16bits(constraints = {}) {\n    const charArbitrary = char16bits();\n    const experimentalCustomSlices = createSlicesForStringLegacy(charArbitrary, charsToStringUnmapper);\n    const enrichedConstraints = safeObjectAssign(safeObjectAssign({}, constraints), {\n        experimentalCustomSlices,\n    });\n    return array(charArbitrary, enrichedConstraints).map(charsToStringMapper, charsToStringUnmapper);\n}\n","import { fullUnicode } from '../../fullUnicode.js';\nimport { oneof } from '../../oneof.js';\nimport { mapToConstant } from '../../mapToConstant.js';\nimport { safeCharCodeAt, safeNumberToString, encodeURIComponent, safeMapGet, safeMapSet } from '../../../utils/globals.js';\nconst SMap = Map;\nconst safeStringFromCharCode = String.fromCharCode;\nconst lowerCaseMapper = { num: 26, build: (v) => safeStringFromCharCode(v + 0x61) };\nconst upperCaseMapper = { num: 26, build: (v) => safeStringFromCharCode(v + 0x41) };\nconst numericMapper = { num: 10, build: (v) => safeStringFromCharCode(v + 0x30) };\nfunction percentCharArbMapper(c) {\n    const encoded = encodeURIComponent(c);\n    return c !== encoded ? encoded : `%${safeNumberToString(safeCharCodeAt(c, 0), 16)}`;\n}\nfunction percentCharArbUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Unsupported');\n    }\n    const decoded = decodeURIComponent(value);\n    return decoded;\n}\nconst percentCharArb = fullUnicode().map(percentCharArbMapper, percentCharArbUnmapper);\nlet lowerAlphaArbitrary = undefined;\nexport function getOrCreateLowerAlphaArbitrary() {\n    if (lowerAlphaArbitrary === undefined) {\n        lowerAlphaArbitrary = mapToConstant(lowerCaseMapper);\n    }\n    return lowerAlphaArbitrary;\n}\nlet lowerAlphaNumericArbitraries = undefined;\nexport function getOrCreateLowerAlphaNumericArbitrary(others) {\n    if (lowerAlphaNumericArbitraries === undefined) {\n        lowerAlphaNumericArbitraries = new SMap();\n    }\n    let match = safeMapGet(lowerAlphaNumericArbitraries, others);\n    if (match === undefined) {\n        match = mapToConstant(lowerCaseMapper, numericMapper, {\n            num: others.length,\n            build: (v) => others[v],\n        });\n        safeMapSet(lowerAlphaNumericArbitraries, others, match);\n    }\n    return match;\n}\nfunction buildAlphaNumericArbitrary(others) {\n    return mapToConstant(lowerCaseMapper, upperCaseMapper, numericMapper, {\n        num: others.length,\n        build: (v) => others[v],\n    });\n}\nlet alphaNumericPercentArbitraries = undefined;\nexport function getOrCreateAlphaNumericPercentArbitrary(others) {\n    if (alphaNumericPercentArbitraries === undefined) {\n        alphaNumericPercentArbitraries = new SMap();\n    }\n    let match = safeMapGet(alphaNumericPercentArbitraries, others);\n    if (match === undefined) {\n        match = oneof({ weight: 10, arbitrary: buildAlphaNumericArbitrary(others) }, { weight: 1, arbitrary: percentCharArb });\n        safeMapSet(alphaNumericPercentArbitraries, others, match);\n    }\n    return match;\n}\n","import { safeGet, safePush, safeSet } from '../../../utils/globals.js';\nimport { patternsToStringUnmapperIsValidLength } from '../mappers/PatternsToString.js';\nimport { MaxLengthUpperBound } from './MaxLengthFromMinLength.js';\nimport { tokenizeString } from './TokenizeString.js';\nconst dangerousStrings = [\n    '__defineGetter__',\n    '__defineSetter__',\n    '__lookupGetter__',\n    '__lookupSetter__',\n    '__proto__',\n    'constructor',\n    'hasOwnProperty',\n    'isPrototypeOf',\n    'propertyIsEnumerable',\n    'toLocaleString',\n    'toString',\n    'valueOf',\n    'apply',\n    'arguments',\n    'bind',\n    'call',\n    'caller',\n    'length',\n    'name',\n    'prototype',\n    'key',\n    'ref',\n];\nfunction computeCandidateStringLegacy(dangerous, charArbitrary, stringSplitter) {\n    let candidate;\n    try {\n        candidate = stringSplitter(dangerous);\n    }\n    catch (err) {\n        return undefined;\n    }\n    for (const entry of candidate) {\n        if (!charArbitrary.canShrinkWithoutContext(entry)) {\n            return undefined;\n        }\n    }\n    return candidate;\n}\nexport function createSlicesForStringLegacy(charArbitrary, stringSplitter) {\n    const slicesForString = [];\n    for (const dangerous of dangerousStrings) {\n        const candidate = computeCandidateStringLegacy(dangerous, charArbitrary, stringSplitter);\n        if (candidate !== undefined) {\n            safePush(slicesForString, candidate);\n        }\n    }\n    return slicesForString;\n}\nconst slicesPerArbitrary = new WeakMap();\nfunction createSlicesForStringNoConstraints(charArbitrary) {\n    const slicesForString = [];\n    for (const dangerous of dangerousStrings) {\n        const candidate = tokenizeString(charArbitrary, dangerous, 0, MaxLengthUpperBound);\n        if (candidate !== undefined) {\n            safePush(slicesForString, candidate);\n        }\n    }\n    return slicesForString;\n}\nexport function createSlicesForString(charArbitrary, constraints) {\n    let slices = safeGet(slicesPerArbitrary, charArbitrary);\n    if (slices === undefined) {\n        slices = createSlicesForStringNoConstraints(charArbitrary);\n        safeSet(slicesPerArbitrary, charArbitrary, slices);\n    }\n    const slicesForConstraints = [];\n    for (const slice of slices) {\n        if (patternsToStringUnmapperIsValidLength(slice, constraints)) {\n            safePush(slicesForConstraints, slice);\n        }\n    }\n    return slicesForConstraints;\n}\n","import { skipN } from 'pure-rand';\nimport { Random } from '../../random/generator/Random.js';\nimport { Value } from '../arbitrary/definition/Value.js';\nimport { safeMap } from '../../utils/globals.js';\nfunction tossNext(generator, rng, index) {\n    rng.unsafeJump();\n    return generator.generate(new Random(rng), index);\n}\nexport function* toss(generator, seed, random, examples) {\n    for (let idx = 0; idx !== examples.length; ++idx) {\n        yield new Value(examples[idx], undefined);\n    }\n    for (let idx = 0, rng = random(seed);; ++idx) {\n        yield tossNext(generator, rng, idx);\n    }\n}\nfunction lazyGenerate(generator, rng, idx) {\n    return () => generator.generate(new Random(rng), idx);\n}\nexport function* lazyToss(generator, seed, random, examples) {\n    yield* safeMap(examples, (e) => () => new Value(e, undefined));\n    let idx = 0;\n    let rng = random(seed);\n    for (;;) {\n        rng = rng.jump ? rng.jump() : skipN(rng, 42);\n        yield lazyGenerate(generator, rng, idx++);\n    }\n}\n","import { Value } from '../../../check/arbitrary/definition/Value.js';\nimport { cloneMethod } from '../../../check/symbols.js';\nimport { safeMap, safePush } from '../../../utils/globals.js';\nimport { stringify, toStringMethod } from '../../../utils/stringify.js';\nconst safeObjectAssign = Object.assign;\nexport function buildGeneratorValue(mrng, biasFactor, computePreBuiltValues, arbitraryCache) {\n    const preBuiltValues = computePreBuiltValues();\n    let localMrng = mrng.clone();\n    const context = { mrng: mrng.clone(), biasFactor, history: [] };\n    const valueFunction = (arb) => {\n        const preBuiltValue = preBuiltValues[context.history.length];\n        if (preBuiltValue !== undefined && preBuiltValue.arb === arb) {\n            const value = preBuiltValue.value;\n            safePush(context.history, { arb, value, context: preBuiltValue.context, mrng: preBuiltValue.mrng });\n            localMrng = preBuiltValue.mrng.clone();\n            return value;\n        }\n        const g = arb.generate(localMrng, biasFactor);\n        safePush(context.history, { arb, value: g.value_, context: g.context, mrng: localMrng.clone() });\n        return g.value;\n    };\n    const memoedValueFunction = (arb, ...args) => {\n        return valueFunction(arbitraryCache(arb, args));\n    };\n    const valueMethods = {\n        values() {\n            return safeMap(context.history, (c) => c.value);\n        },\n        [cloneMethod]() {\n            return buildGeneratorValue(mrng, biasFactor, computePreBuiltValues, arbitraryCache).value;\n        },\n        [toStringMethod]() {\n            return stringify(safeMap(context.history, (c) => c.value));\n        },\n    };\n    const value = safeObjectAssign(memoedValueFunction, valueMethods);\n    return new Value(value, context);\n}\n","import { Error, safeMapGet, Map, safePush, safeReplace } from '../../../utils/globals.js';\nimport { stringify, possiblyAsyncStringify } from '../../../utils/stringify.js';\nimport { VerbosityLevel } from '../configuration/VerbosityLevel.js';\nimport { ExecutionStatus } from '../reporter/ExecutionStatus.js';\nconst safeObjectAssign = Object.assign;\nfunction formatHints(hints) {\n    if (hints.length === 1) {\n        return `Hint: ${hints[0]}`;\n    }\n    return hints.map((h, idx) => `Hint (${idx + 1}): ${h}`).join('\\n');\n}\nfunction formatFailures(failures, stringifyOne) {\n    return `Encountered failures were:\\n- ${failures.map(stringifyOne).join('\\n- ')}`;\n}\nfunction formatExecutionSummary(executionTrees, stringifyOne) {\n    const summaryLines = [];\n    const remainingTreesAndDepth = [];\n    for (const tree of executionTrees.slice().reverse()) {\n        remainingTreesAndDepth.push({ depth: 1, tree });\n    }\n    while (remainingTreesAndDepth.length !== 0) {\n        const currentTreeAndDepth = remainingTreesAndDepth.pop();\n        const currentTree = currentTreeAndDepth.tree;\n        const currentDepth = currentTreeAndDepth.depth;\n        const statusIcon = currentTree.status === ExecutionStatus.Success\n            ? '\\x1b[32m\\u221A\\x1b[0m'\n            : currentTree.status === ExecutionStatus.Failure\n                ? '\\x1b[31m\\xD7\\x1b[0m'\n                : '\\x1b[33m!\\x1b[0m';\n        const leftPadding = Array(currentDepth).join('. ');\n        summaryLines.push(`${leftPadding}${statusIcon} ${stringifyOne(currentTree.value)}`);\n        for (const tree of currentTree.children.slice().reverse()) {\n            remainingTreesAndDepth.push({ depth: currentDepth + 1, tree });\n        }\n    }\n    return `Execution summary:\\n${summaryLines.join('\\n')}`;\n}\nfunction preFormatTooManySkipped(out, stringifyOne) {\n    const message = `Failed to run property, too many pre-condition failures encountered\\n{ seed: ${out.seed} }\\n\\nRan ${out.numRuns} time(s)\\nSkipped ${out.numSkips} time(s)`;\n    let details = null;\n    const hints = [\n        'Try to reduce the number of rejected values by combining map, flatMap and built-in arbitraries',\n        'Increase failure tolerance by setting maxSkipsPerRun to an higher value',\n    ];\n    if (out.verbose >= VerbosityLevel.VeryVerbose) {\n        details = formatExecutionSummary(out.executionSummary, stringifyOne);\n    }\n    else {\n        safePush(hints, 'Enable verbose mode at level VeryVerbose in order to check all generated values and their associated status');\n    }\n    return { message, details, hints };\n}\nfunction preFormatFailure(out, stringifyOne) {\n    const noErrorInMessage = out.runConfiguration.errorWithCause;\n    const messageErrorPart = noErrorInMessage ? '' : `\\nGot ${safeReplace(out.error, /^Error: /, 'error: ')}`;\n    const message = `Property failed after ${out.numRuns} tests\\n{ seed: ${out.seed}, path: \"${out.counterexamplePath}\", endOnFailure: true }\\nCounterexample: ${stringifyOne(out.counterexample)}\\nShrunk ${out.numShrinks} time(s)${messageErrorPart}`;\n    let details = null;\n    const hints = [];\n    if (out.verbose >= VerbosityLevel.VeryVerbose) {\n        details = formatExecutionSummary(out.executionSummary, stringifyOne);\n    }\n    else if (out.verbose === VerbosityLevel.Verbose) {\n        details = formatFailures(out.failures, stringifyOne);\n    }\n    else {\n        safePush(hints, 'Enable verbose mode in order to have the list of all failing values encountered during the run');\n    }\n    return { message, details, hints };\n}\nfunction preFormatEarlyInterrupted(out, stringifyOne) {\n    const message = `Property interrupted after ${out.numRuns} tests\\n{ seed: ${out.seed} }`;\n    let details = null;\n    const hints = [];\n    if (out.verbose >= VerbosityLevel.VeryVerbose) {\n        details = formatExecutionSummary(out.executionSummary, stringifyOne);\n    }\n    else {\n        safePush(hints, 'Enable verbose mode at level VeryVerbose in order to check all generated values and their associated status');\n    }\n    return { message, details, hints };\n}\nfunction defaultReportMessageInternal(out, stringifyOne) {\n    if (!out.failed)\n        return;\n    const { message, details, hints } = out.counterexamplePath === null\n        ? out.interrupted\n            ? preFormatEarlyInterrupted(out, stringifyOne)\n            : preFormatTooManySkipped(out, stringifyOne)\n        : preFormatFailure(out, stringifyOne);\n    let errorMessage = message;\n    if (details != null)\n        errorMessage += `\\n\\n${details}`;\n    if (hints.length > 0)\n        errorMessage += `\\n\\n${formatHints(hints)}`;\n    return errorMessage;\n}\nfunction defaultReportMessage(out) {\n    return defaultReportMessageInternal(out, stringify);\n}\nasync function asyncDefaultReportMessage(out) {\n    const pendingStringifieds = [];\n    function stringifyOne(value) {\n        const stringified = possiblyAsyncStringify(value);\n        if (typeof stringified === 'string') {\n            return stringified;\n        }\n        pendingStringifieds.push(Promise.all([value, stringified]));\n        return '\\u2026';\n    }\n    const firstTryMessage = defaultReportMessageInternal(out, stringifyOne);\n    if (pendingStringifieds.length === 0) {\n        return firstTryMessage;\n    }\n    const registeredValues = new Map(await Promise.all(pendingStringifieds));\n    function stringifySecond(value) {\n        const asyncStringifiedIfRegistered = safeMapGet(registeredValues, value);\n        if (asyncStringifiedIfRegistered !== undefined) {\n            return asyncStringifiedIfRegistered;\n        }\n        return stringify(value);\n    }\n    return defaultReportMessageInternal(out, stringifySecond);\n}\nfunction buildError(errorMessage, out) {\n    if (!out.runConfiguration.errorWithCause) {\n        throw new Error(errorMessage);\n    }\n    const ErrorWithCause = Error;\n    const error = new ErrorWithCause(errorMessage, { cause: out.errorInstance });\n    if (!('cause' in error)) {\n        safeObjectAssign(error, { cause: out.errorInstance });\n    }\n    return error;\n}\nfunction throwIfFailed(out) {\n    if (!out.failed)\n        return;\n    throw buildError(defaultReportMessage(out), out);\n}\nasync function asyncThrowIfFailed(out) {\n    if (!out.failed)\n        return;\n    throw buildError(await asyncDefaultReportMessage(out), out);\n}\nexport function reportRunDetails(out) {\n    if (out.runConfiguration.asyncReporter)\n        return out.runConfiguration.asyncReporter(out);\n    else if (out.runConfiguration.reporter)\n        return out.runConfiguration.reporter(out);\n    else\n        return throwIfFailed(out);\n}\nexport async function asyncReportRunDetails(out) {\n    if (out.runConfiguration.asyncReporter)\n        return out.runConfiguration.asyncReporter(out);\n    else if (out.runConfiguration.reporter)\n        return out.runConfiguration.reporter(out);\n    else\n        return asyncThrowIfFailed(out);\n}\nexport { defaultReportMessage, asyncDefaultReportMessage };\n","import { array } from './array.js';\nimport { ascii } from './ascii.js';\nimport { codePointsToStringMapper, codePointsToStringUnmapper } from './_internals/mappers/CodePointsToString.js';\nimport { createSlicesForStringLegacy } from './_internals/helpers/SlicesForStringBuilder.js';\nconst safeObjectAssign = Object.assign;\nexport function asciiString(constraints = {}) {\n    const charArbitrary = ascii();\n    const experimentalCustomSlices = createSlicesForStringLegacy(charArbitrary, codePointsToStringUnmapper);\n    const enrichedConstraints = safeObjectAssign(safeObjectAssign({}, constraints), {\n        experimentalCustomSlices,\n    });\n    return array(charArbitrary, enrichedConstraints).map(codePointsToStringMapper, codePointsToStringUnmapper);\n}\n","import { array } from './array.js';\nimport { fullUnicode } from './fullUnicode.js';\nimport { codePointsToStringMapper, codePointsToStringUnmapper } from './_internals/mappers/CodePointsToString.js';\nimport { createSlicesForStringLegacy } from './_internals/helpers/SlicesForStringBuilder.js';\nconst safeObjectAssign = Object.assign;\nexport function fullUnicodeString(constraints = {}) {\n    const charArbitrary = fullUnicode();\n    const experimentalCustomSlices = createSlicesForStringLegacy(charArbitrary, codePointsToStringUnmapper);\n    const enrichedConstraints = safeObjectAssign(safeObjectAssign({}, constraints), {\n        experimentalCustomSlices,\n    });\n    return array(charArbitrary, enrichedConstraints).map(codePointsToStringMapper, codePointsToStringUnmapper);\n}\n","import { stream, Stream } from '../../stream/Stream.js';\nimport { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { add64, halve64, isEqual64, isStrictlyNegative64, isStrictlyPositive64, isStrictlySmaller64, isZero64, logLike64, substract64, Unit64, Zero64, } from './helpers/ArrayInt64.js';\nclass ArrayInt64Arbitrary extends Arbitrary {\n    constructor(min, max) {\n        super();\n        this.min = min;\n        this.max = max;\n        this.biasedRanges = null;\n    }\n    generate(mrng, biasFactor) {\n        const range = this.computeGenerateRange(mrng, biasFactor);\n        const uncheckedValue = mrng.nextArrayInt(range.min, range.max);\n        if (uncheckedValue.data.length === 1) {\n            uncheckedValue.data.unshift(0);\n        }\n        return new Value(uncheckedValue, undefined);\n    }\n    computeGenerateRange(mrng, biasFactor) {\n        if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n            return { min: this.min, max: this.max };\n        }\n        const ranges = this.retrieveBiasedRanges();\n        if (ranges.length === 1) {\n            return ranges[0];\n        }\n        const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n        return id < 0 ? ranges[0] : ranges[id + 1];\n    }\n    canShrinkWithoutContext(value) {\n        const unsafeValue = value;\n        return (typeof value === 'object' &&\n            value !== null &&\n            (unsafeValue.sign === -1 || unsafeValue.sign === 1) &&\n            Array.isArray(unsafeValue.data) &&\n            unsafeValue.data.length === 2 &&\n            ((isStrictlySmaller64(this.min, unsafeValue) && isStrictlySmaller64(unsafeValue, this.max)) ||\n                isEqual64(this.min, unsafeValue) ||\n                isEqual64(this.max, unsafeValue)));\n    }\n    shrinkArrayInt64(value, target, tryTargetAsap) {\n        const realGap = substract64(value, target);\n        function* shrinkGen() {\n            let previous = tryTargetAsap ? undefined : target;\n            const gap = tryTargetAsap ? realGap : halve64(realGap);\n            for (let toremove = gap; !isZero64(toremove); toremove = halve64(toremove)) {\n                const next = substract64(value, toremove);\n                yield new Value(next, previous);\n                previous = next;\n            }\n        }\n        return stream(shrinkGen());\n    }\n    shrink(current, context) {\n        if (!ArrayInt64Arbitrary.isValidContext(current, context)) {\n            const target = this.defaultTarget();\n            return this.shrinkArrayInt64(current, target, true);\n        }\n        if (this.isLastChanceTry(current, context)) {\n            return Stream.of(new Value(context, undefined));\n        }\n        return this.shrinkArrayInt64(current, context, false);\n    }\n    defaultTarget() {\n        if (!isStrictlyPositive64(this.min) && !isStrictlyNegative64(this.max)) {\n            return Zero64;\n        }\n        return isStrictlyNegative64(this.min) ? this.max : this.min;\n    }\n    isLastChanceTry(current, context) {\n        if (isZero64(current)) {\n            return false;\n        }\n        if (current.sign === 1) {\n            return isEqual64(current, add64(context, Unit64)) && isStrictlyPositive64(substract64(current, this.min));\n        }\n        else {\n            return isEqual64(current, substract64(context, Unit64)) && isStrictlyNegative64(substract64(current, this.max));\n        }\n    }\n    static isValidContext(_current, context) {\n        if (context === undefined) {\n            return false;\n        }\n        if (typeof context !== 'object' || context === null || !('sign' in context) || !('data' in context)) {\n            throw new Error(`Invalid context type passed to ArrayInt64Arbitrary (#1)`);\n        }\n        return true;\n    }\n    retrieveBiasedRanges() {\n        if (this.biasedRanges != null) {\n            return this.biasedRanges;\n        }\n        if (isEqual64(this.min, this.max)) {\n            this.biasedRanges = [{ min: this.min, max: this.max }];\n            return this.biasedRanges;\n        }\n        const minStrictlySmallerZero = isStrictlyNegative64(this.min);\n        const maxStrictlyGreaterZero = isStrictlyPositive64(this.max);\n        if (minStrictlySmallerZero && maxStrictlyGreaterZero) {\n            const logMin = logLike64(this.min);\n            const logMax = logLike64(this.max);\n            this.biasedRanges = [\n                { min: logMin, max: logMax },\n                { min: substract64(this.max, logMax), max: this.max },\n                { min: this.min, max: substract64(this.min, logMin) },\n            ];\n        }\n        else {\n            const logGap = logLike64(substract64(this.max, this.min));\n            const arbCloseToMin = { min: this.min, max: add64(this.min, logGap) };\n            const arbCloseToMax = { min: substract64(this.max, logGap), max: this.max };\n            this.biasedRanges = minStrictlySmallerZero\n                ? [arbCloseToMax, arbCloseToMin]\n                : [arbCloseToMin, arbCloseToMax];\n        }\n        return this.biasedRanges;\n    }\n}\nexport function arrayInt64(min, max) {\n    const arb = new ArrayInt64Arbitrary(min, max);\n    return arb;\n}\n","import { safeJoin, safeMap, safeSplit } from '../utils/globals.js';\nimport { nat } from './nat.js';\nimport { tuple } from './tuple.js';\nimport { tryParseStringifiedNat } from './_internals/mappers/NatToStringifiedNat.js';\nfunction dotJoinerMapper(data) {\n    return safeJoin(data, '.');\n}\nfunction dotJoinerUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Invalid type');\n    }\n    return safeMap(safeSplit(value, '.'), (v) => tryParseStringifiedNat(v, 10));\n}\nexport function ipV4() {\n    return tuple(nat(255), nat(255), nat(255), nat(255)).map(dotJoinerMapper, dotJoinerUnmapper);\n}\n","import { safeJoin, safeSplit } from '../utils/globals.js';\nimport { oneof } from './oneof.js';\nimport { tuple } from './tuple.js';\nimport { buildStringifiedNatArbitrary } from './_internals/builders/StringifiedNatArbitraryBuilder.js';\nfunction dotJoinerMapper(data) {\n    return safeJoin(data, '.');\n}\nfunction dotJoinerUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Invalid type');\n    }\n    return safeSplit(value, '.');\n}\nexport function ipV4Extended() {\n    return oneof(tuple(buildStringifiedNatArbitrary(255), buildStringifiedNatArbitrary(255), buildStringifiedNatArbitrary(255), buildStringifiedNatArbitrary(255)).map(dotJoinerMapper, dotJoinerUnmapper), tuple(buildStringifiedNatArbitrary(255), buildStringifiedNatArbitrary(255), buildStringifiedNatArbitrary(65535)).map(dotJoinerMapper, dotJoinerUnmapper), tuple(buildStringifiedNatArbitrary(255), buildStringifiedNatArbitrary(16777215)).map(dotJoinerMapper, dotJoinerUnmapper), buildStringifiedNatArbitrary(4294967295));\n}\n","import { array } from './array.js';\nimport { createSlicesForString } from './_internals/helpers/SlicesForStringBuilder.js';\nimport { stringUnit } from './_internals/StringUnitArbitrary.js';\nimport { patternsToStringMapper, patternsToStringUnmapperFor } from './_internals/mappers/PatternsToString.js';\nconst safeObjectAssign = Object.assign;\nfunction extractUnitArbitrary(constraints) {\n    if (typeof constraints.unit === 'object') {\n        return constraints.unit;\n    }\n    switch (constraints.unit) {\n        case 'grapheme':\n            return stringUnit('grapheme', 'full');\n        case 'grapheme-composite':\n            return stringUnit('composite', 'full');\n        case 'grapheme-ascii':\n        case undefined:\n            return stringUnit('grapheme', 'ascii');\n        case 'binary':\n            return stringUnit('binary', 'full');\n        case 'binary-ascii':\n            return stringUnit('binary', 'ascii');\n    }\n}\nexport function string(constraints = {}) {\n    const charArbitrary = extractUnitArbitrary(constraints);\n    const unmapper = patternsToStringUnmapperFor(charArbitrary, constraints);\n    const experimentalCustomSlices = createSlicesForString(charArbitrary, constraints);\n    const enrichedConstraints = safeObjectAssign(safeObjectAssign({}, constraints), {\n        experimentalCustomSlices,\n    });\n    return array(charArbitrary, enrichedConstraints).map(patternsToStringMapper, unmapper);\n}\n","import { safeNormalize, safePush } from '../../utils/globals.js';\nimport { mapToConstant } from '../mapToConstant.js';\nimport { asciiAlphabetRanges, autonomousDecomposableGraphemeRanges, autonomousGraphemeRanges, fullAlphabetRanges, } from './data/GraphemeRanges.js';\nimport { convertGraphemeRangeToMapToConstantEntry, intersectGraphemeRanges } from './helpers/GraphemeRangesHelpers.js';\nconst registeredStringUnitInstancesMap = Object.create(null);\nfunction getAlphabetRanges(alphabet) {\n    switch (alphabet) {\n        case 'full':\n            return fullAlphabetRanges;\n        case 'ascii':\n            return asciiAlphabetRanges;\n    }\n}\nfunction getOrCreateStringUnitInstance(type, alphabet) {\n    const key = `${type}:${alphabet}`;\n    const registered = registeredStringUnitInstancesMap[key];\n    if (registered !== undefined) {\n        return registered;\n    }\n    const alphabetRanges = getAlphabetRanges(alphabet);\n    const ranges = type === 'binary' ? alphabetRanges : intersectGraphemeRanges(alphabetRanges, autonomousGraphemeRanges);\n    const entries = [];\n    for (const range of ranges) {\n        safePush(entries, convertGraphemeRangeToMapToConstantEntry(range));\n    }\n    if (type === 'grapheme') {\n        const decomposedRanges = intersectGraphemeRanges(alphabetRanges, autonomousDecomposableGraphemeRanges);\n        for (const range of decomposedRanges) {\n            const rawEntry = convertGraphemeRangeToMapToConstantEntry(range);\n            safePush(entries, {\n                num: rawEntry.num,\n                build: (idInGroup) => safeNormalize(rawEntry.build(idInGroup), 'NFD'),\n            });\n        }\n    }\n    const stringUnitInstance = mapToConstant(...entries);\n    registeredStringUnitInstancesMap[key] = stringUnitInstance;\n    return stringUnitInstance;\n}\nexport function stringUnit(type, alphabet) {\n    return getOrCreateStringUnitInstance(type, alphabet);\n}\n","import { add64, isEqual64, isStrictlyPositive64, isStrictlySmaller64, substract64, Unit64, } from './_internals/helpers/ArrayInt64.js';\nimport { arrayInt64 } from './_internals/ArrayInt64Arbitrary.js';\nimport { doubleToIndex, indexToDouble } from './_internals/helpers/DoubleHelpers.js';\nimport { doubleOnlyMapper, doubleOnlyUnmapper, refineConstraintsForDoubleOnly, } from './_internals/helpers/DoubleOnlyHelpers.js';\nconst safeNumberIsInteger = Number.isInteger;\nconst safeNumberIsNaN = Number.isNaN;\nconst safeNegativeInfinity = Number.NEGATIVE_INFINITY;\nconst safePositiveInfinity = Number.POSITIVE_INFINITY;\nconst safeMaxValue = Number.MAX_VALUE;\nconst safeNaN = Number.NaN;\nfunction safeDoubleToIndex(d, constraintsLabel) {\n    if (safeNumberIsNaN(d)) {\n        throw new Error('fc.double constraints.' + constraintsLabel + ' must be a 64-bit float');\n    }\n    return doubleToIndex(d);\n}\nfunction unmapperDoubleToIndex(value) {\n    if (typeof value !== 'number')\n        throw new Error('Unsupported type');\n    return doubleToIndex(value);\n}\nfunction numberIsNotInteger(value) {\n    return !safeNumberIsInteger(value);\n}\nfunction anyDouble(constraints) {\n    const { noDefaultInfinity = false, noNaN = false, minExcluded = false, maxExcluded = false, min = noDefaultInfinity ? -safeMaxValue : safeNegativeInfinity, max = noDefaultInfinity ? safeMaxValue : safePositiveInfinity, } = constraints;\n    const minIndexRaw = safeDoubleToIndex(min, 'min');\n    const minIndex = minExcluded ? add64(minIndexRaw, Unit64) : minIndexRaw;\n    const maxIndexRaw = safeDoubleToIndex(max, 'max');\n    const maxIndex = maxExcluded ? substract64(maxIndexRaw, Unit64) : maxIndexRaw;\n    if (isStrictlySmaller64(maxIndex, minIndex)) {\n        throw new Error('fc.double constraints.min must be smaller or equal to constraints.max');\n    }\n    if (noNaN) {\n        return arrayInt64(minIndex, maxIndex).map(indexToDouble, unmapperDoubleToIndex);\n    }\n    const positiveMaxIdx = isStrictlyPositive64(maxIndex);\n    const minIndexWithNaN = positiveMaxIdx ? minIndex : substract64(minIndex, Unit64);\n    const maxIndexWithNaN = positiveMaxIdx ? add64(maxIndex, Unit64) : maxIndex;\n    return arrayInt64(minIndexWithNaN, maxIndexWithNaN).map((index) => {\n        if (isStrictlySmaller64(maxIndex, index) || isStrictlySmaller64(index, minIndex))\n            return safeNaN;\n        else\n            return indexToDouble(index);\n    }, (value) => {\n        if (typeof value !== 'number')\n            throw new Error('Unsupported type');\n        if (safeNumberIsNaN(value))\n            return !isEqual64(maxIndex, maxIndexWithNaN) ? maxIndexWithNaN : minIndexWithNaN;\n        return doubleToIndex(value);\n    });\n}\nexport function double(constraints = {}) {\n    if (!constraints.noInteger) {\n        return anyDouble(constraints);\n    }\n    return anyDouble(refineConstraintsForDoubleOnly(constraints))\n        .map(doubleOnlyMapper, doubleOnlyUnmapper)\n        .filter(numberIsNotInteger);\n}\n","import { array } from './array.js';\nimport { hexa } from './hexa.js';\nimport { codePointsToStringMapper, codePointsToStringUnmapper } from './_internals/mappers/CodePointsToString.js';\nimport { createSlicesForStringLegacy } from './_internals/helpers/SlicesForStringBuilder.js';\nconst safeObjectAssign = Object.assign;\nfunction hexaString(constraints = {}) {\n    const charArbitrary = hexa();\n    const experimentalCustomSlices = createSlicesForStringLegacy(charArbitrary, codePointsToStringUnmapper);\n    const enrichedConstraints = safeObjectAssign(safeObjectAssign({}, constraints), {\n        experimentalCustomSlices,\n    });\n    return array(charArbitrary, enrichedConstraints).map(codePointsToStringMapper, codePointsToStringUnmapper);\n}\nexport { hexaString };\n","import { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { Stream } from '../../stream/Stream.js';\nimport { zipIterableIterators } from './helpers/ZipIterableIterators.js';\nfunction* iotaFrom(startValue) {\n    let value = startValue;\n    while (true) {\n        yield value;\n        ++value;\n    }\n}\nexport class LimitedShrinkArbitrary extends Arbitrary {\n    constructor(arb, maxShrinks) {\n        super();\n        this.arb = arb;\n        this.maxShrinks = maxShrinks;\n    }\n    generate(mrng, biasFactor) {\n        const value = this.arb.generate(mrng, biasFactor);\n        return this.valueMapper(value, 0);\n    }\n    canShrinkWithoutContext(value) {\n        return this.arb.canShrinkWithoutContext(value);\n    }\n    shrink(value, context) {\n        if (this.isSafeContext(context)) {\n            return this.safeShrink(value, context.originalContext, context.length);\n        }\n        return this.safeShrink(value, undefined, 0);\n    }\n    safeShrink(value, originalContext, currentLength) {\n        const remaining = this.maxShrinks - currentLength;\n        if (remaining <= 0) {\n            return Stream.nil();\n        }\n        return new Stream(zipIterableIterators(this.arb.shrink(value, originalContext), iotaFrom(currentLength + 1)))\n            .take(remaining)\n            .map((valueAndLength) => this.valueMapper(valueAndLength[0], valueAndLength[1]));\n    }\n    valueMapper(v, newLength) {\n        const context = { originalContext: v.context, length: newLength };\n        return new Value(v.value, context);\n    }\n    isSafeContext(context) {\n        return (context != null &&\n            typeof context === 'object' &&\n            'originalContext' in context &&\n            'length' in context);\n    }\n}\n","import * as Either from \"../../Either.js\"\nimport type * as Encoding from \"../../Encoding.js\"\nimport { DecodeException } from \"./common.js\"\n\n/** @internal */\nexport const encode = (bytes: Uint8Array) => {\n  let result = \"\"\n  for (let i = 0; i < bytes.length; ++i) {\n    result += bytesToHex[bytes[i]]\n  }\n\n  return result\n}\n\n/** @internal */\nexport const decode = (str: string): Either.Either<Uint8Array, Encoding.DecodeException> => {\n  const bytes = new TextEncoder().encode(str)\n  if (bytes.length % 2 !== 0) {\n    return Either.left(DecodeException(str, `Length must be a multiple of 2, but is ${bytes.length}`))\n  }\n\n  try {\n    const length = bytes.length / 2\n    const result = new Uint8Array(length)\n    for (let i = 0; i < length; i++) {\n      const a = fromHexChar(bytes[i * 2])\n      const b = fromHexChar(bytes[i * 2 + 1])\n      result[i] = (a << 4) | b\n    }\n\n    return Either.right(result)\n  } catch (e) {\n    return Either.left(DecodeException(str, e instanceof Error ? e.message : \"Invalid input\"))\n  }\n}\n\n/** @internal */\nconst bytesToHex = [\n  \"00\",\n  \"01\",\n  \"02\",\n  \"03\",\n  \"04\",\n  \"05\",\n  \"06\",\n  \"07\",\n  \"08\",\n  \"09\",\n  \"0a\",\n  \"0b\",\n  \"0c\",\n  \"0d\",\n  \"0e\",\n  \"0f\",\n  \"10\",\n  \"11\",\n  \"12\",\n  \"13\",\n  \"14\",\n  \"15\",\n  \"16\",\n  \"17\",\n  \"18\",\n  \"19\",\n  \"1a\",\n  \"1b\",\n  \"1c\",\n  \"1d\",\n  \"1e\",\n  \"1f\",\n  \"20\",\n  \"21\",\n  \"22\",\n  \"23\",\n  \"24\",\n  \"25\",\n  \"26\",\n  \"27\",\n  \"28\",\n  \"29\",\n  \"2a\",\n  \"2b\",\n  \"2c\",\n  \"2d\",\n  \"2e\",\n  \"2f\",\n  \"30\",\n  \"31\",\n  \"32\",\n  \"33\",\n  \"34\",\n  \"35\",\n  \"36\",\n  \"37\",\n  \"38\",\n  \"39\",\n  \"3a\",\n  \"3b\",\n  \"3c\",\n  \"3d\",\n  \"3e\",\n  \"3f\",\n  \"40\",\n  \"41\",\n  \"42\",\n  \"43\",\n  \"44\",\n  \"45\",\n  \"46\",\n  \"47\",\n  \"48\",\n  \"49\",\n  \"4a\",\n  \"4b\",\n  \"4c\",\n  \"4d\",\n  \"4e\",\n  \"4f\",\n  \"50\",\n  \"51\",\n  \"52\",\n  \"53\",\n  \"54\",\n  \"55\",\n  \"56\",\n  \"57\",\n  \"58\",\n  \"59\",\n  \"5a\",\n  \"5b\",\n  \"5c\",\n  \"5d\",\n  \"5e\",\n  \"5f\",\n  \"60\",\n  \"61\",\n  \"62\",\n  \"63\",\n  \"64\",\n  \"65\",\n  \"66\",\n  \"67\",\n  \"68\",\n  \"69\",\n  \"6a\",\n  \"6b\",\n  \"6c\",\n  \"6d\",\n  \"6e\",\n  \"6f\",\n  \"70\",\n  \"71\",\n  \"72\",\n  \"73\",\n  \"74\",\n  \"75\",\n  \"76\",\n  \"77\",\n  \"78\",\n  \"79\",\n  \"7a\",\n  \"7b\",\n  \"7c\",\n  \"7d\",\n  \"7e\",\n  \"7f\",\n  \"80\",\n  \"81\",\n  \"82\",\n  \"83\",\n  \"84\",\n  \"85\",\n  \"86\",\n  \"87\",\n  \"88\",\n  \"89\",\n  \"8a\",\n  \"8b\",\n  \"8c\",\n  \"8d\",\n  \"8e\",\n  \"8f\",\n  \"90\",\n  \"91\",\n  \"92\",\n  \"93\",\n  \"94\",\n  \"95\",\n  \"96\",\n  \"97\",\n  \"98\",\n  \"99\",\n  \"9a\",\n  \"9b\",\n  \"9c\",\n  \"9d\",\n  \"9e\",\n  \"9f\",\n  \"a0\",\n  \"a1\",\n  \"a2\",\n  \"a3\",\n  \"a4\",\n  \"a5\",\n  \"a6\",\n  \"a7\",\n  \"a8\",\n  \"a9\",\n  \"aa\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"ae\",\n  \"af\",\n  \"b0\",\n  \"b1\",\n  \"b2\",\n  \"b3\",\n  \"b4\",\n  \"b5\",\n  \"b6\",\n  \"b7\",\n  \"b8\",\n  \"b9\",\n  \"ba\",\n  \"bb\",\n  \"bc\",\n  \"bd\",\n  \"be\",\n  \"bf\",\n  \"c0\",\n  \"c1\",\n  \"c2\",\n  \"c3\",\n  \"c4\",\n  \"c5\",\n  \"c6\",\n  \"c7\",\n  \"c8\",\n  \"c9\",\n  \"ca\",\n  \"cb\",\n  \"cc\",\n  \"cd\",\n  \"ce\",\n  \"cf\",\n  \"d0\",\n  \"d1\",\n  \"d2\",\n  \"d3\",\n  \"d4\",\n  \"d5\",\n  \"d6\",\n  \"d7\",\n  \"d8\",\n  \"d9\",\n  \"da\",\n  \"db\",\n  \"dc\",\n  \"dd\",\n  \"de\",\n  \"df\",\n  \"e0\",\n  \"e1\",\n  \"e2\",\n  \"e3\",\n  \"e4\",\n  \"e5\",\n  \"e6\",\n  \"e7\",\n  \"e8\",\n  \"e9\",\n  \"ea\",\n  \"eb\",\n  \"ec\",\n  \"ed\",\n  \"ee\",\n  \"ef\",\n  \"f0\",\n  \"f1\",\n  \"f2\",\n  \"f3\",\n  \"f4\",\n  \"f5\",\n  \"f6\",\n  \"f7\",\n  \"f8\",\n  \"f9\",\n  \"fa\",\n  \"fb\",\n  \"fc\",\n  \"fd\",\n  \"fe\",\n  \"ff\"\n]\n\n/** @internal */\nconst fromHexChar = (byte: number) => {\n  // '0' <= byte && byte <= '9'\n  if (48 <= byte && byte <= 57) {\n    return byte - 48\n  }\n\n  // 'a' <= byte && byte <= 'f'\n  if (97 <= byte && byte <= 102) {\n    return byte - 97 + 10\n  }\n\n  // 'A' <= byte && byte <= 'F'\n  if (65 <= byte && byte <= 70) {\n    return byte - 65 + 10\n  }\n\n  throw new TypeError(\"Invalid input\")\n}\n","import { string } from './string.js';\nimport { jsonConstraintsBuilder } from './_internals/helpers/JsonConstraintsBuilder.js';\nimport { anything } from './anything.js';\nimport { fullUnicodeString } from './fullUnicodeString.js';\nexport function jsonValue(constraints = {}) {\n    const noUnicodeString = constraints.noUnicodeString === undefined || constraints.noUnicodeString === true;\n    const stringArbitrary = 'stringUnit' in constraints\n        ? string({ unit: constraints.stringUnit })\n        : noUnicodeString\n            ? string()\n            : fullUnicodeString();\n    return anything(jsonConstraintsBuilder(stringArbitrary, constraints));\n}\n","import { constantFrom } from '../../constantFrom.js';\nimport { nat } from '../../nat.js';\nimport { tuple } from '../../tuple.js';\nimport { natToStringifiedNatMapper, natToStringifiedNatUnmapper } from '../mappers/NatToStringifiedNat.js';\nexport function buildStringifiedNatArbitrary(maxValue) {\n    return tuple(constantFrom('dec', 'oct', 'hex'), nat(maxValue)).map(natToStringifiedNatMapper, natToStringifiedNatUnmapper);\n}\n","import * as Either from \"../../Either.js\"\nimport type * as Encoding from \"../../Encoding.js\"\nimport * as Base64 from \"./base64.js\"\nimport { DecodeException } from \"./common.js\"\n\n/** @internal */\nexport const encode = (data: Uint8Array) =>\n  Base64.encode(data).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\")\n\n/** @internal */\nexport const decode = (str: string): Either.Either<Uint8Array, Encoding.DecodeException> => {\n  const stripped = Base64.stripCrlf(str)\n  const length = stripped.length\n  if (length % 4 === 1) {\n    return Either.left(\n      DecodeException(stripped, `Length should be a multiple of 4, but is ${length}`)\n    )\n  }\n\n  if (!/^[-_A-Z0-9]*?={0,2}$/i.test(stripped)) {\n    return Either.left(DecodeException(stripped, \"Invalid input\"))\n  }\n\n  // Some variants allow or require omitting the padding '=' signs\n  let sanitized = length % 4 === 2 ? `${stripped}==` : length % 4 === 3 ? `${stripped}=` : stripped\n  sanitized = sanitized.replace(/-/g, \"+\").replace(/_/g, \"/\")\n\n  return Base64.decode(sanitized)\n}\n","import { tuple } from './tuple.js';\nimport { buildPaddedNumberArbitrary } from './_internals/builders/PaddedNumberArbitraryBuilder.js';\nimport { paddedEightsToUuidMapper, paddedEightsToUuidUnmapper } from './_internals/mappers/PaddedEightsToUuid.js';\nimport { Error } from '../utils/globals.js';\nimport { buildVersionsAppliersForUuid } from './_internals/mappers/VersionsApplierForUuid.js';\nfunction assertValidVersions(versions) {\n    const found = {};\n    for (const version of versions) {\n        if (found[version]) {\n            throw new Error(`Version ${version} has been requested at least twice for uuid`);\n        }\n        found[version] = true;\n        if (version < 1 || version > 15) {\n            throw new Error(`Version must be a value in [1-15] for uuid, but received ${version}`);\n        }\n        if (~~version !== version) {\n            throw new Error(`Version must be an integer value for uuid, but received ${version}`);\n        }\n    }\n    if (versions.length === 0) {\n        throw new Error(`Must provide at least one version for uuid`);\n    }\n}\nexport function uuid(constraints = {}) {\n    const padded = buildPaddedNumberArbitrary(0, 0xffffffff);\n    const version = constraints.version !== undefined\n        ? typeof constraints.version === 'number'\n            ? [constraints.version]\n            : constraints.version\n        : [1, 2, 3, 4, 5];\n    assertValidVersions(version);\n    const { versionsApplierMapper, versionsApplierUnmapper } = buildVersionsAppliersForUuid(version);\n    const secondPadded = buildPaddedNumberArbitrary(0, 0x10000000 * version.length - 1).map(versionsApplierMapper, versionsApplierUnmapper);\n    const thirdPadded = buildPaddedNumberArbitrary(0x80000000, 0xbfffffff);\n    return tuple(padded, secondPadded, thirdPadded, padded).map(paddedEightsToUuidMapper, paddedEightsToUuidUnmapper);\n}\n","import { assertIsArbitrary } from '../arbitrary/definition/Arbitrary.js';\nimport { tuple } from '../../arbitrary/tuple.js';\nimport { AsyncProperty } from './AsyncProperty.generic.js';\nimport { AlwaysShrinkableArbitrary } from '../../arbitrary/_internals/AlwaysShrinkableArbitrary.js';\nimport { safeForEach, safeMap, safeSlice } from '../../utils/globals.js';\nfunction asyncProperty(...args) {\n    if (args.length < 2) {\n        throw new Error('asyncProperty expects at least two parameters');\n    }\n    const arbs = safeSlice(args, 0, args.length - 1);\n    const p = args[args.length - 1];\n    safeForEach(arbs, assertIsArbitrary);\n    const mappedArbs = safeMap(arbs, (arb) => new AlwaysShrinkableArbitrary(arb));\n    return new AsyncProperty(tuple(...mappedArbs), (t) => p(...t));\n}\nexport { asyncProperty };\n","import { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { Stream } from '../../stream/Stream.js';\nimport { integerLogLike, biasNumericRange } from './helpers/BiasNumericRange.js';\nimport { shrinkInteger } from './helpers/ShrinkInteger.js';\nconst safeMathSign = Math.sign;\nconst safeNumberIsInteger = Number.isInteger;\nconst safeObjectIs = Object.is;\nexport class IntegerArbitrary extends Arbitrary {\n    constructor(min, max) {\n        super();\n        this.min = min;\n        this.max = max;\n    }\n    generate(mrng, biasFactor) {\n        const range = this.computeGenerateRange(mrng, biasFactor);\n        return new Value(mrng.nextInt(range.min, range.max), undefined);\n    }\n    canShrinkWithoutContext(value) {\n        return (typeof value === 'number' &&\n            safeNumberIsInteger(value) &&\n            !safeObjectIs(value, -0) &&\n            this.min <= value &&\n            value <= this.max);\n    }\n    shrink(current, context) {\n        if (!IntegerArbitrary.isValidContext(current, context)) {\n            const target = this.defaultTarget();\n            return shrinkInteger(current, target, true);\n        }\n        if (this.isLastChanceTry(current, context)) {\n            return Stream.of(new Value(context, undefined));\n        }\n        return shrinkInteger(current, context, false);\n    }\n    defaultTarget() {\n        if (this.min <= 0 && this.max >= 0) {\n            return 0;\n        }\n        return this.min < 0 ? this.max : this.min;\n    }\n    computeGenerateRange(mrng, biasFactor) {\n        if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n            return { min: this.min, max: this.max };\n        }\n        const ranges = biasNumericRange(this.min, this.max, integerLogLike);\n        if (ranges.length === 1) {\n            return ranges[0];\n        }\n        const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n        return id < 0 ? ranges[0] : ranges[id + 1];\n    }\n    isLastChanceTry(current, context) {\n        if (current > 0)\n            return current === context + 1 && current > this.min;\n        if (current < 0)\n            return current === context - 1 && current < this.max;\n        return false;\n    }\n    static isValidContext(current, context) {\n        if (context === undefined) {\n            return false;\n        }\n        if (typeof context !== 'number') {\n            throw new Error(`Invalid context type passed to IntegerArbitrary (#1)`);\n        }\n        if (context !== 0 && safeMathSign(current) !== safeMathSign(context)) {\n            throw new Error(`Invalid context value passed to IntegerArbitrary (#2)`);\n        }\n        return true;\n    }\n}\n","import { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { cloneMethod } from '../../check/symbols.js';\nimport { Stream } from '../../stream/Stream.js';\nimport { safeMap, safePush } from '../../utils/globals.js';\nconst safeSymbolIterator = Symbol.iterator;\nconst safeIsArray = Array.isArray;\nconst safeObjectIs = Object.is;\nexport class CloneArbitrary extends Arbitrary {\n    constructor(arb, numValues) {\n        super();\n        this.arb = arb;\n        this.numValues = numValues;\n    }\n    generate(mrng, biasFactor) {\n        const items = [];\n        if (this.numValues <= 0) {\n            return this.wrapper(items);\n        }\n        for (let idx = 0; idx !== this.numValues - 1; ++idx) {\n            safePush(items, this.arb.generate(mrng.clone(), biasFactor));\n        }\n        safePush(items, this.arb.generate(mrng, biasFactor));\n        return this.wrapper(items);\n    }\n    canShrinkWithoutContext(value) {\n        if (!safeIsArray(value) || value.length !== this.numValues) {\n            return false;\n        }\n        if (value.length === 0) {\n            return true;\n        }\n        for (let index = 1; index < value.length; ++index) {\n            if (!safeObjectIs(value[0], value[index])) {\n                return false;\n            }\n        }\n        return this.arb.canShrinkWithoutContext(value[0]);\n    }\n    shrink(value, context) {\n        if (value.length === 0) {\n            return Stream.nil();\n        }\n        return new Stream(this.shrinkImpl(value, context !== undefined ? context : [])).map((v) => this.wrapper(v));\n    }\n    *shrinkImpl(value, contexts) {\n        const its = safeMap(value, (v, idx) => this.arb.shrink(v, contexts[idx])[safeSymbolIterator]());\n        let cur = safeMap(its, (it) => it.next());\n        while (!cur[0].done) {\n            yield safeMap(cur, (c) => c.value);\n            cur = safeMap(its, (it) => it.next());\n        }\n    }\n    static makeItCloneable(vs, shrinkables) {\n        vs[cloneMethod] = () => {\n            const cloned = [];\n            for (let idx = 0; idx !== shrinkables.length; ++idx) {\n                safePush(cloned, shrinkables[idx].value);\n            }\n            this.makeItCloneable(cloned, shrinkables);\n            return cloned;\n        };\n        return vs;\n    }\n    wrapper(items) {\n        let cloneable = false;\n        const vs = [];\n        const contexts = [];\n        for (let idx = 0; idx !== items.length; ++idx) {\n            const s = items[idx];\n            cloneable = cloneable || s.hasToBeCloned;\n            safePush(vs, s.value);\n            safePush(contexts, s.context);\n        }\n        if (cloneable) {\n            CloneArbitrary.makeItCloneable(vs, items);\n        }\n        return new Value(vs, contexts);\n    }\n}\n","import { assertIsArbitrary } from '../arbitrary/definition/Arbitrary.js';\nimport { tuple } from '../../arbitrary/tuple.js';\nimport { Property } from './Property.generic.js';\nimport { AlwaysShrinkableArbitrary } from '../../arbitrary/_internals/AlwaysShrinkableArbitrary.js';\nimport { safeForEach, safeMap, safeSlice } from '../../utils/globals.js';\nfunction property(...args) {\n    if (args.length < 2) {\n        throw new Error('property expects at least two parameters');\n    }\n    const arbs = safeSlice(args, 0, args.length - 1);\n    const p = args[args.length - 1];\n    safeForEach(arbs, assertIsArbitrary);\n    const mappedArbs = safeMap(arbs, (arb) => new AlwaysShrinkableArbitrary(arb));\n    return new Property(tuple(...mappedArbs), (t) => p(...t));\n}\nexport { property };\n","import { Stream } from '../../stream/Stream.js';\nimport { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { cloneMethod, hasCloneMethod } from '../../check/symbols.js';\nimport { Set, safeHas } from '../../utils/globals.js';\nconst safeObjectIs = Object.is;\nexport class ConstantArbitrary extends Arbitrary {\n    constructor(values) {\n        super();\n        this.values = values;\n    }\n    generate(mrng, _biasFactor) {\n        const idx = this.values.length === 1 ? 0 : mrng.nextInt(0, this.values.length - 1);\n        const value = this.values[idx];\n        if (!hasCloneMethod(value)) {\n            return new Value(value, idx);\n        }\n        return new Value(value, idx, () => value[cloneMethod]());\n    }\n    canShrinkWithoutContext(value) {\n        if (this.values.length === 1) {\n            return safeObjectIs(this.values[0], value);\n        }\n        if (this.fastValues === undefined) {\n            this.fastValues = new FastConstantValuesLookup(this.values);\n        }\n        return this.fastValues.has(value);\n    }\n    shrink(value, context) {\n        if (context === 0 || safeObjectIs(value, this.values[0])) {\n            return Stream.nil();\n        }\n        return Stream.of(new Value(this.values[0], 0));\n    }\n}\nclass FastConstantValuesLookup {\n    constructor(values) {\n        this.values = values;\n        this.fastValues = new Set(this.values);\n        let hasMinusZero = false;\n        let hasPlusZero = false;\n        if (safeHas(this.fastValues, 0)) {\n            for (let idx = 0; idx !== this.values.length; ++idx) {\n                const value = this.values[idx];\n                hasMinusZero = hasMinusZero || safeObjectIs(value, -0);\n                hasPlusZero = hasPlusZero || safeObjectIs(value, 0);\n            }\n        }\n        this.hasMinusZero = hasMinusZero;\n        this.hasPlusZero = hasPlusZero;\n    }\n    has(value) {\n        if (value === 0) {\n            if (safeObjectIs(value, 0)) {\n                return this.hasPlusZero;\n            }\n            return this.hasMinusZero;\n        }\n        return safeHas(this.fastValues, value);\n    }\n}\n","import { Array, safeMap, safeSlice } from '../utils/globals.js';\nimport { tuple } from './tuple.js';\nimport { uniqueArray } from './uniqueArray.js';\nimport { restrictedIntegerArbitraryBuilder } from './_internals/builders/RestrictedIntegerArbitraryBuilder.js';\nimport { maxGeneratedLengthFromSizeForArbitrary, MaxLengthUpperBound, } from './_internals/helpers/MaxLengthFromMinLength.js';\nconst safeMathMin = Math.min;\nconst safeMathMax = Math.max;\nconst safeArrayIsArray = Array.isArray;\nconst safeObjectEntries = Object.entries;\nfunction extractMaxIndex(indexesAndValues) {\n    let maxIndex = -1;\n    for (let index = 0; index !== indexesAndValues.length; ++index) {\n        maxIndex = safeMathMax(maxIndex, indexesAndValues[index][0]);\n    }\n    return maxIndex;\n}\nfunction arrayFromItems(length, indexesAndValues) {\n    const array = Array(length);\n    for (let index = 0; index !== indexesAndValues.length; ++index) {\n        const it = indexesAndValues[index];\n        if (it[0] < length)\n            array[it[0]] = it[1];\n    }\n    return array;\n}\nexport function sparseArray(arb, constraints = {}) {\n    const { size, minNumElements = 0, maxLength = MaxLengthUpperBound, maxNumElements = maxLength, noTrailingHole, depthIdentifier, } = constraints;\n    const maxGeneratedNumElements = maxGeneratedLengthFromSizeForArbitrary(size, minNumElements, maxNumElements, constraints.maxNumElements !== undefined);\n    const maxGeneratedLength = maxGeneratedLengthFromSizeForArbitrary(size, maxGeneratedNumElements, maxLength, constraints.maxLength !== undefined);\n    if (minNumElements > maxLength) {\n        throw new Error(`The minimal number of non-hole elements cannot be higher than the maximal length of the array`);\n    }\n    if (minNumElements > maxNumElements) {\n        throw new Error(`The minimal number of non-hole elements cannot be higher than the maximal number of non-holes`);\n    }\n    const resultedMaxNumElements = safeMathMin(maxNumElements, maxLength);\n    const resultedSizeMaxNumElements = constraints.maxNumElements !== undefined || size !== undefined ? size : '=';\n    const maxGeneratedIndexAuthorized = safeMathMax(maxGeneratedLength - 1, 0);\n    const maxIndexAuthorized = safeMathMax(maxLength - 1, 0);\n    const sparseArrayNoTrailingHole = uniqueArray(tuple(restrictedIntegerArbitraryBuilder(0, maxGeneratedIndexAuthorized, maxIndexAuthorized), arb), {\n        size: resultedSizeMaxNumElements,\n        minLength: minNumElements,\n        maxLength: resultedMaxNumElements,\n        selector: (item) => item[0],\n        depthIdentifier,\n    }).map((items) => {\n        const lastIndex = extractMaxIndex(items);\n        return arrayFromItems(lastIndex + 1, items);\n    }, (value) => {\n        if (!safeArrayIsArray(value)) {\n            throw new Error('Not supported entry type');\n        }\n        if (noTrailingHole && value.length !== 0 && !(value.length - 1 in value)) {\n            throw new Error('No trailing hole');\n        }\n        return safeMap(safeObjectEntries(value), (entry) => [Number(entry[0]), entry[1]]);\n    });\n    if (noTrailingHole || maxLength === minNumElements) {\n        return sparseArrayNoTrailingHole;\n    }\n    return tuple(sparseArrayNoTrailingHole, restrictedIntegerArbitraryBuilder(minNumElements, maxGeneratedLength, maxLength)).map((data) => {\n        const sparse = data[0];\n        const targetLength = data[1];\n        if (sparse.length >= targetLength) {\n            return sparse;\n        }\n        const longerSparse = safeSlice(sparse);\n        longerSparse.length = targetLength;\n        return longerSparse;\n    }, (value) => {\n        if (!safeArrayIsArray(value)) {\n            throw new Error('Not supported entry type');\n        }\n        return [value, value.length];\n    });\n}\n","import { tuple } from './tuple.js';\nimport { uniqueArray } from './uniqueArray.js';\nimport { keyValuePairsToObjectMapper, keyValuePairsToObjectUnmapper } from './_internals/mappers/KeyValuePairsToObject.js';\nimport { constant } from './constant.js';\nimport { boolean } from './boolean.js';\nfunction dictionaryKeyExtractor(entry) {\n    return entry[0];\n}\nexport function dictionary(keyArb, valueArb, constraints = {}) {\n    const noNullPrototype = constraints.noNullPrototype !== false;\n    return tuple(uniqueArray(tuple(keyArb, valueArb), {\n        minLength: constraints.minKeys,\n        maxLength: constraints.maxKeys,\n        size: constraints.size,\n        selector: dictionaryKeyExtractor,\n        depthIdentifier: constraints.depthIdentifier,\n    }), noNullPrototype ? constant(false) : boolean()).map(keyValuePairsToObjectMapper, keyValuePairsToObjectUnmapper);\n}\n","import { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { cloneMethod } from '../../check/symbols.js';\nimport { Stream } from '../../stream/Stream.js';\nimport { safeJoin, safePush } from '../../utils/globals.js';\nimport { asyncStringify, asyncToStringMethod, stringify, toStringMethod } from '../../utils/stringify.js';\nconst safeObjectDefineProperties = Object.defineProperties;\nfunction prettyPrint(seenValuesStrings) {\n    return `Stream(${safeJoin(seenValuesStrings, ',')}…)`;\n}\nexport class StreamArbitrary extends Arbitrary {\n    constructor(arb) {\n        super();\n        this.arb = arb;\n    }\n    generate(mrng, biasFactor) {\n        const appliedBiasFactor = biasFactor !== undefined && mrng.nextInt(1, biasFactor) === 1 ? biasFactor : undefined;\n        const enrichedProducer = () => {\n            const seenValues = [];\n            const g = function* (arb, clonedMrng) {\n                while (true) {\n                    const value = arb.generate(clonedMrng, appliedBiasFactor).value;\n                    safePush(seenValues, value);\n                    yield value;\n                }\n            };\n            const s = new Stream(g(this.arb, mrng.clone()));\n            return safeObjectDefineProperties(s, {\n                toString: { value: () => prettyPrint(seenValues.map(stringify)) },\n                [toStringMethod]: { value: () => prettyPrint(seenValues.map(stringify)) },\n                [asyncToStringMethod]: { value: async () => prettyPrint(await Promise.all(seenValues.map(asyncStringify))) },\n                [cloneMethod]: { value: enrichedProducer, enumerable: true },\n            });\n        };\n        return new Value(enrichedProducer(), undefined);\n    }\n    canShrinkWithoutContext(value) {\n        return false;\n    }\n    shrink(_value, _context) {\n        return Stream.nil();\n    }\n}\n","import { array } from './array.js';\nimport { oneof } from './oneof.js';\nimport { hexaString } from './hexaString.js';\nimport { tuple } from './tuple.js';\nimport { ipV4 } from './ipV4.js';\nimport { fullySpecifiedMapper, fullySpecifiedUnmapper, onlyTrailingMapper, onlyTrailingUnmapper, multiTrailingMapper, multiTrailingUnmapper, multiTrailingMapperOne, multiTrailingUnmapperOne, singleTrailingMapper, singleTrailingUnmapper, noTrailingMapper, noTrailingUnmapper, } from './_internals/mappers/EntitiesToIPv6.js';\nfunction h16sTol32Mapper([a, b]) {\n    return `${a}:${b}`;\n}\nfunction h16sTol32Unmapper(value) {\n    if (typeof value !== 'string')\n        throw new Error('Invalid type');\n    if (!value.includes(':'))\n        throw new Error('Invalid value');\n    return value.split(':', 2);\n}\nexport function ipV6() {\n    const h16Arb = hexaString({ minLength: 1, maxLength: 4, size: 'max' });\n    const ls32Arb = oneof(tuple(h16Arb, h16Arb).map(h16sTol32Mapper, h16sTol32Unmapper), ipV4());\n    return oneof(tuple(array(h16Arb, { minLength: 6, maxLength: 6, size: 'max' }), ls32Arb).map(fullySpecifiedMapper, fullySpecifiedUnmapper), tuple(array(h16Arb, { minLength: 5, maxLength: 5, size: 'max' }), ls32Arb).map(onlyTrailingMapper, onlyTrailingUnmapper), tuple(array(h16Arb, { minLength: 0, maxLength: 1, size: 'max' }), array(h16Arb, { minLength: 4, maxLength: 4, size: 'max' }), ls32Arb).map(multiTrailingMapper, multiTrailingUnmapper), tuple(array(h16Arb, { minLength: 0, maxLength: 2, size: 'max' }), array(h16Arb, { minLength: 3, maxLength: 3, size: 'max' }), ls32Arb).map(multiTrailingMapper, multiTrailingUnmapper), tuple(array(h16Arb, { minLength: 0, maxLength: 3, size: 'max' }), array(h16Arb, { minLength: 2, maxLength: 2, size: 'max' }), ls32Arb).map(multiTrailingMapper, multiTrailingUnmapper), tuple(array(h16Arb, { minLength: 0, maxLength: 4, size: 'max' }), h16Arb, ls32Arb).map(multiTrailingMapperOne, multiTrailingUnmapperOne), tuple(array(h16Arb, { minLength: 0, maxLength: 5, size: 'max' }), ls32Arb).map(singleTrailingMapper, singleTrailingUnmapper), tuple(array(h16Arb, { minLength: 0, maxLength: 6, size: 'max' }), h16Arb).map(singleTrailingMapper, singleTrailingUnmapper), tuple(array(h16Arb, { minLength: 0, maxLength: 7, size: 'max' })).map(noTrailingMapper, noTrailingUnmapper));\n}\n","import { Stream } from '../../stream/Stream.js';\nimport { cloneIfNeeded, cloneMethod } from '../../check/symbols.js';\nimport { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { safeMap, safePush, safeSlice } from '../../utils/globals.js';\nimport { makeLazy } from '../../stream/LazyIterableIterator.js';\nconst safeArrayIsArray = Array.isArray;\nconst safeObjectDefineProperty = Object.defineProperty;\nfunction tupleMakeItCloneable(vs, values) {\n    return safeObjectDefineProperty(vs, cloneMethod, {\n        value: () => {\n            const cloned = [];\n            for (let idx = 0; idx !== values.length; ++idx) {\n                safePush(cloned, values[idx].value);\n            }\n            tupleMakeItCloneable(cloned, values);\n            return cloned;\n        },\n    });\n}\nfunction tupleWrapper(values) {\n    let cloneable = false;\n    const vs = [];\n    const ctxs = [];\n    for (let idx = 0; idx !== values.length; ++idx) {\n        const v = values[idx];\n        cloneable = cloneable || v.hasToBeCloned;\n        safePush(vs, v.value);\n        safePush(ctxs, v.context);\n    }\n    if (cloneable) {\n        tupleMakeItCloneable(vs, values);\n    }\n    return new Value(vs, ctxs);\n}\nexport function tupleShrink(arbs, value, context) {\n    const shrinks = [];\n    const safeContext = safeArrayIsArray(context) ? context : [];\n    for (let idx = 0; idx !== arbs.length; ++idx) {\n        safePush(shrinks, makeLazy(() => arbs[idx]\n            .shrink(value[idx], safeContext[idx])\n            .map((v) => {\n            const nextValues = safeMap(value, (v, idx) => new Value(cloneIfNeeded(v), safeContext[idx]));\n            return [...safeSlice(nextValues, 0, idx), v, ...safeSlice(nextValues, idx + 1)];\n        })\n            .map(tupleWrapper)));\n    }\n    return Stream.nil().join(...shrinks);\n}\nexport class TupleArbitrary extends Arbitrary {\n    constructor(arbs) {\n        super();\n        this.arbs = arbs;\n        for (let idx = 0; idx !== arbs.length; ++idx) {\n            const arb = arbs[idx];\n            if (arb == null || arb.generate == null)\n                throw new Error(`Invalid parameter encountered at index ${idx}: expecting an Arbitrary`);\n        }\n    }\n    generate(mrng, biasFactor) {\n        const mapped = [];\n        for (let idx = 0; idx !== this.arbs.length; ++idx) {\n            safePush(mapped, this.arbs[idx].generate(mrng, biasFactor));\n        }\n        return tupleWrapper(mapped);\n    }\n    canShrinkWithoutContext(value) {\n        if (!safeArrayIsArray(value) || value.length !== this.arbs.length) {\n            return false;\n        }\n        for (let index = 0; index !== this.arbs.length; ++index) {\n            if (!this.arbs[index].canShrinkWithoutContext(value[index])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    shrink(value, context) {\n        return tupleShrink(this.arbs, value, context);\n    }\n}\n","import { array } from './array.js';\nimport { base64 } from './base64.js';\nimport { MaxLengthUpperBound } from './_internals/helpers/MaxLengthFromMinLength.js';\nimport { codePointsToStringMapper, codePointsToStringUnmapper } from './_internals/mappers/CodePointsToString.js';\nimport { stringToBase64Mapper, stringToBase64Unmapper } from './_internals/mappers/StringToBase64.js';\nimport { createSlicesForStringLegacy } from './_internals/helpers/SlicesForStringBuilder.js';\nfunction base64String(constraints = {}) {\n    const { minLength: unscaledMinLength = 0, maxLength: unscaledMaxLength = MaxLengthUpperBound, size } = constraints;\n    const minLength = unscaledMinLength + 3 - ((unscaledMinLength + 3) % 4);\n    const maxLength = unscaledMaxLength - (unscaledMaxLength % 4);\n    const requestedSize = constraints.maxLength === undefined && size === undefined ? '=' : size;\n    if (minLength > maxLength)\n        throw new Error('Minimal length should be inferior or equal to maximal length');\n    if (minLength % 4 !== 0)\n        throw new Error('Minimal length of base64 strings must be a multiple of 4');\n    if (maxLength % 4 !== 0)\n        throw new Error('Maximal length of base64 strings must be a multiple of 4');\n    const charArbitrary = base64();\n    const experimentalCustomSlices = createSlicesForStringLegacy(charArbitrary, codePointsToStringUnmapper);\n    const enrichedConstraints = {\n        minLength,\n        maxLength,\n        size: requestedSize,\n        experimentalCustomSlices,\n    };\n    return array(charArbitrary, enrichedConstraints)\n        .map(codePointsToStringMapper, codePointsToStringUnmapper)\n        .map(stringToBase64Mapper, stringToBase64Unmapper);\n}\nexport { base64String };\n","import { ArrayArbitrary } from './_internals/ArrayArbitrary.js';\nimport { maxGeneratedLengthFromSizeForArbitrary, MaxLengthUpperBound, } from './_internals/helpers/MaxLengthFromMinLength.js';\nimport { CustomEqualSet } from './_internals/helpers/CustomEqualSet.js';\nimport { StrictlyEqualSet } from './_internals/helpers/StrictlyEqualSet.js';\nimport { SameValueSet } from './_internals/helpers/SameValueSet.js';\nimport { SameValueZeroSet } from './_internals/helpers/SameValueZeroSet.js';\nfunction buildUniqueArraySetBuilder(constraints) {\n    if (typeof constraints.comparator === 'function') {\n        if (constraints.selector === undefined) {\n            const comparator = constraints.comparator;\n            const isEqualForBuilder = (nextA, nextB) => comparator(nextA.value_, nextB.value_);\n            return () => new CustomEqualSet(isEqualForBuilder);\n        }\n        const comparator = constraints.comparator;\n        const selector = constraints.selector;\n        const refinedSelector = (next) => selector(next.value_);\n        const isEqualForBuilder = (nextA, nextB) => comparator(refinedSelector(nextA), refinedSelector(nextB));\n        return () => new CustomEqualSet(isEqualForBuilder);\n    }\n    const selector = constraints.selector || ((v) => v);\n    const refinedSelector = (next) => selector(next.value_);\n    switch (constraints.comparator) {\n        case 'IsStrictlyEqual':\n            return () => new StrictlyEqualSet(refinedSelector);\n        case 'SameValueZero':\n            return () => new SameValueZeroSet(refinedSelector);\n        case 'SameValue':\n        case undefined:\n            return () => new SameValueSet(refinedSelector);\n    }\n}\nexport function uniqueArray(arb, constraints = {}) {\n    const minLength = constraints.minLength !== undefined ? constraints.minLength : 0;\n    const maxLength = constraints.maxLength !== undefined ? constraints.maxLength : MaxLengthUpperBound;\n    const maxGeneratedLength = maxGeneratedLengthFromSizeForArbitrary(constraints.size, minLength, maxLength, constraints.maxLength !== undefined);\n    const depthIdentifier = constraints.depthIdentifier;\n    const setBuilder = buildUniqueArraySetBuilder(constraints);\n    const arrayArb = new ArrayArbitrary(arb, minLength, maxGeneratedLength, maxLength, depthIdentifier, setBuilder, []);\n    if (minLength === 0)\n        return arrayArb;\n    return arrayArb.filter((tab) => tab.length >= minLength);\n}\n","import { Stream } from '../../stream/Stream.js';\nimport { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { getDepthContextFor } from './helpers/DepthContext.js';\nimport { depthBiasFromSizeForArbitrary } from './helpers/MaxLengthFromMinLength.js';\nimport { safePush } from '../../utils/globals.js';\nconst safePositiveInfinity = Number.POSITIVE_INFINITY;\nconst safeMaxSafeInteger = Number.MAX_SAFE_INTEGER;\nconst safeNumberIsInteger = Number.isInteger;\nconst safeMathFloor = Math.floor;\nconst safeMathPow = Math.pow;\nconst safeMathMin = Math.min;\nexport class FrequencyArbitrary extends Arbitrary {\n    static from(warbs, constraints, label) {\n        if (warbs.length === 0) {\n            throw new Error(`${label} expects at least one weighted arbitrary`);\n        }\n        let totalWeight = 0;\n        for (let idx = 0; idx !== warbs.length; ++idx) {\n            const currentArbitrary = warbs[idx].arbitrary;\n            if (currentArbitrary === undefined) {\n                throw new Error(`${label} expects arbitraries to be specified`);\n            }\n            const currentWeight = warbs[idx].weight;\n            totalWeight += currentWeight;\n            if (!safeNumberIsInteger(currentWeight)) {\n                throw new Error(`${label} expects weights to be integer values`);\n            }\n            if (currentWeight < 0) {\n                throw new Error(`${label} expects weights to be superior or equal to 0`);\n            }\n        }\n        if (totalWeight <= 0) {\n            throw new Error(`${label} expects the sum of weights to be strictly superior to 0`);\n        }\n        const sanitizedConstraints = {\n            depthBias: depthBiasFromSizeForArbitrary(constraints.depthSize, constraints.maxDepth !== undefined),\n            maxDepth: constraints.maxDepth != undefined ? constraints.maxDepth : safePositiveInfinity,\n            withCrossShrink: !!constraints.withCrossShrink,\n        };\n        return new FrequencyArbitrary(warbs, sanitizedConstraints, getDepthContextFor(constraints.depthIdentifier));\n    }\n    constructor(warbs, constraints, context) {\n        super();\n        this.warbs = warbs;\n        this.constraints = constraints;\n        this.context = context;\n        let currentWeight = 0;\n        this.cumulatedWeights = [];\n        for (let idx = 0; idx !== warbs.length; ++idx) {\n            currentWeight += warbs[idx].weight;\n            safePush(this.cumulatedWeights, currentWeight);\n        }\n        this.totalWeight = currentWeight;\n    }\n    generate(mrng, biasFactor) {\n        if (this.mustGenerateFirst()) {\n            return this.safeGenerateForIndex(mrng, 0, biasFactor);\n        }\n        const selected = mrng.nextInt(this.computeNegDepthBenefit(), this.totalWeight - 1);\n        for (let idx = 0; idx !== this.cumulatedWeights.length; ++idx) {\n            if (selected < this.cumulatedWeights[idx]) {\n                return this.safeGenerateForIndex(mrng, idx, biasFactor);\n            }\n        }\n        throw new Error(`Unable to generate from fc.frequency`);\n    }\n    canShrinkWithoutContext(value) {\n        return this.canShrinkWithoutContextIndex(value) !== -1;\n    }\n    shrink(value, context) {\n        if (context !== undefined) {\n            const safeContext = context;\n            const selectedIndex = safeContext.selectedIndex;\n            const originalBias = safeContext.originalBias;\n            const originalArbitrary = this.warbs[selectedIndex].arbitrary;\n            const originalShrinks = originalArbitrary\n                .shrink(value, safeContext.originalContext)\n                .map((v) => this.mapIntoValue(selectedIndex, v, null, originalBias));\n            if (safeContext.clonedMrngForFallbackFirst !== null) {\n                if (safeContext.cachedGeneratedForFirst === undefined) {\n                    safeContext.cachedGeneratedForFirst = this.safeGenerateForIndex(safeContext.clonedMrngForFallbackFirst, 0, originalBias);\n                }\n                const valueFromFirst = safeContext.cachedGeneratedForFirst;\n                return Stream.of(valueFromFirst).join(originalShrinks);\n            }\n            return originalShrinks;\n        }\n        const potentialSelectedIndex = this.canShrinkWithoutContextIndex(value);\n        if (potentialSelectedIndex === -1) {\n            return Stream.nil();\n        }\n        return this.defaultShrinkForFirst(potentialSelectedIndex).join(this.warbs[potentialSelectedIndex].arbitrary\n            .shrink(value, undefined)\n            .map((v) => this.mapIntoValue(potentialSelectedIndex, v, null, undefined)));\n    }\n    defaultShrinkForFirst(selectedIndex) {\n        ++this.context.depth;\n        try {\n            if (!this.mustFallbackToFirstInShrink(selectedIndex) || this.warbs[0].fallbackValue === undefined) {\n                return Stream.nil();\n            }\n        }\n        finally {\n            --this.context.depth;\n        }\n        const rawShrinkValue = new Value(this.warbs[0].fallbackValue.default, undefined);\n        return Stream.of(this.mapIntoValue(0, rawShrinkValue, null, undefined));\n    }\n    canShrinkWithoutContextIndex(value) {\n        if (this.mustGenerateFirst()) {\n            return this.warbs[0].arbitrary.canShrinkWithoutContext(value) ? 0 : -1;\n        }\n        try {\n            ++this.context.depth;\n            for (let idx = 0; idx !== this.warbs.length; ++idx) {\n                const warb = this.warbs[idx];\n                if (warb.weight !== 0 && warb.arbitrary.canShrinkWithoutContext(value)) {\n                    return idx;\n                }\n            }\n            return -1;\n        }\n        finally {\n            --this.context.depth;\n        }\n    }\n    mapIntoValue(idx, value, clonedMrngForFallbackFirst, biasFactor) {\n        const context = {\n            selectedIndex: idx,\n            originalBias: biasFactor,\n            originalContext: value.context,\n            clonedMrngForFallbackFirst,\n        };\n        return new Value(value.value, context);\n    }\n    safeGenerateForIndex(mrng, idx, biasFactor) {\n        ++this.context.depth;\n        try {\n            const value = this.warbs[idx].arbitrary.generate(mrng, biasFactor);\n            const clonedMrngForFallbackFirst = this.mustFallbackToFirstInShrink(idx) ? mrng.clone() : null;\n            return this.mapIntoValue(idx, value, clonedMrngForFallbackFirst, biasFactor);\n        }\n        finally {\n            --this.context.depth;\n        }\n    }\n    mustGenerateFirst() {\n        return this.constraints.maxDepth <= this.context.depth;\n    }\n    mustFallbackToFirstInShrink(idx) {\n        return idx !== 0 && this.constraints.withCrossShrink && this.warbs[0].weight !== 0;\n    }\n    computeNegDepthBenefit() {\n        const depthBias = this.constraints.depthBias;\n        if (depthBias <= 0 || this.warbs[0].weight === 0) {\n            return 0;\n        }\n        const depthBenefit = safeMathFloor(safeMathPow(1 + depthBias, this.context.depth)) - 1;\n        return -safeMathMin(this.totalWeight * depthBenefit, safeMaxSafeInteger) || 0;\n    }\n}\n","import * as Either from \"../../Either.js\"\nimport type * as Encoding from \"../../Encoding.js\"\nimport { DecodeException } from \"./common.js\"\n\n/** @internal */\nexport const encode = (bytes: Uint8Array) => {\n  const length = bytes.length\n\n  let result = \"\"\n  let i: number\n\n  for (i = 2; i < length; i += 3) {\n    result += base64abc[bytes[i - 2] >> 2]\n    result += base64abc[((bytes[i - 2] & 0x03) << 4) | (bytes[i - 1] >> 4)]\n    result += base64abc[((bytes[i - 1] & 0x0f) << 2) | (bytes[i] >> 6)]\n    result += base64abc[bytes[i] & 0x3f]\n  }\n\n  if (i === length + 1) {\n    // 1 octet yet to write\n    result += base64abc[bytes[i - 2] >> 2]\n    result += base64abc[(bytes[i - 2] & 0x03) << 4]\n    result += \"==\"\n  }\n\n  if (i === length) {\n    // 2 octets yet to write\n    result += base64abc[bytes[i - 2] >> 2]\n    result += base64abc[((bytes[i - 2] & 0x03) << 4) | (bytes[i - 1] >> 4)]\n    result += base64abc[(bytes[i - 1] & 0x0f) << 2]\n    result += \"=\"\n  }\n\n  return result\n}\n\n/** @internal */\nexport const decode = (str: string): Either.Either<Uint8Array, Encoding.DecodeException> => {\n  const stripped = stripCrlf(str)\n  const length = stripped.length\n  if (length % 4 !== 0) {\n    return Either.left(\n      DecodeException(stripped, `Length must be a multiple of 4, but is ${length}`)\n    )\n  }\n\n  const index = stripped.indexOf(\"=\")\n  if (index !== -1 && ((index < length - 2) || (index === length - 2 && stripped[length - 1] !== \"=\"))) {\n    return Either.left(\n      DecodeException(stripped, \"Found a '=' character, but it is not at the end\")\n    )\n  }\n\n  try {\n    const missingOctets = stripped.endsWith(\"==\") ? 2 : stripped.endsWith(\"=\") ? 1 : 0\n    const result = new Uint8Array(3 * (length / 4) - missingOctets)\n    for (let i = 0, j = 0; i < length; i += 4, j += 3) {\n      const buffer = getBase64Code(stripped.charCodeAt(i)) << 18 |\n        getBase64Code(stripped.charCodeAt(i + 1)) << 12 |\n        getBase64Code(stripped.charCodeAt(i + 2)) << 6 |\n        getBase64Code(stripped.charCodeAt(i + 3))\n\n      result[j] = buffer >> 16\n      result[j + 1] = (buffer >> 8) & 0xff\n      result[j + 2] = buffer & 0xff\n    }\n\n    return Either.right(result)\n  } catch (e) {\n    return Either.left(\n      DecodeException(stripped, e instanceof Error ? e.message : \"Invalid input\")\n    )\n  }\n}\n\n/** @internal */\nexport const stripCrlf = (str: string) => str.replace(/[\\n\\r]/g, \"\")\n\n/** @internal */\nfunction getBase64Code(charCode: number) {\n  if (charCode >= base64codes.length) {\n    throw new TypeError(`Invalid character ${String.fromCharCode(charCode)}`)\n  }\n\n  const code = base64codes[charCode]\n  if (code === 255) {\n    throw new TypeError(`Invalid character ${String.fromCharCode(charCode)}`)\n  }\n\n  return code\n}\n\n/** @internal */\nconst base64abc = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"+\",\n  \"/\"\n]\n\n/** @internal */\nconst base64codes = [\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  62,\n  255,\n  255,\n  255,\n  63,\n  52,\n  53,\n  54,\n  55,\n  56,\n  57,\n  58,\n  59,\n  60,\n  61,\n  255,\n  255,\n  255,\n  0,\n  255,\n  255,\n  255,\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  16,\n  17,\n  18,\n  19,\n  20,\n  21,\n  22,\n  23,\n  24,\n  25,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  26,\n  27,\n  28,\n  29,\n  30,\n  31,\n  32,\n  33,\n  34,\n  35,\n  36,\n  37,\n  38,\n  39,\n  40,\n  41,\n  42,\n  43,\n  44,\n  45,\n  46,\n  47,\n  48,\n  49,\n  50,\n  51\n]\n","import { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Stream } from '../../stream/Stream.js';\nimport { safeMap } from '../../utils/globals.js';\nimport { buildGeneratorValue } from './builders/GeneratorValueBuilder.js';\nimport { buildStableArbitraryGeneratorCache, naiveIsEqual } from './builders/StableArbitraryGeneratorCache.js';\nimport { tupleShrink } from './TupleArbitrary.js';\nexport class GeneratorArbitrary extends Arbitrary {\n    constructor() {\n        super(...arguments);\n        this.arbitraryCache = buildStableArbitraryGeneratorCache(naiveIsEqual);\n    }\n    generate(mrng, biasFactor) {\n        return buildGeneratorValue(mrng, biasFactor, () => [], this.arbitraryCache);\n    }\n    canShrinkWithoutContext(value) {\n        return false;\n    }\n    shrink(_value, context) {\n        if (context === undefined) {\n            return Stream.nil();\n        }\n        const safeContext = context;\n        const mrng = safeContext.mrng;\n        const biasFactor = safeContext.biasFactor;\n        const history = safeContext.history;\n        return tupleShrink(history.map((c) => c.arb), history.map((c) => c.value), history.map((c) => c.context)).map((shrink) => {\n            function computePreBuiltValues() {\n                const subValues = shrink.value;\n                const subContexts = shrink.context;\n                return safeMap(history, (entry, index) => ({\n                    arb: entry.arb,\n                    value: subValues[index],\n                    context: subContexts[index],\n                    mrng: entry.mrng,\n                }));\n            }\n            return buildGeneratorValue(mrng, biasFactor, computePreBuiltValues, this.arbitraryCache);\n        });\n    }\n}\n","import { Stream } from '../../stream/Stream.js';\nimport { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { biasNumericRange, bigIntLogLike } from './helpers/BiasNumericRange.js';\nimport { shrinkBigInt } from './helpers/ShrinkBigInt.js';\nimport { BigInt } from '../../utils/globals.js';\nexport class BigIntArbitrary extends Arbitrary {\n    constructor(min, max) {\n        super();\n        this.min = min;\n        this.max = max;\n    }\n    generate(mrng, biasFactor) {\n        const range = this.computeGenerateRange(mrng, biasFactor);\n        return new Value(mrng.nextBigInt(range.min, range.max), undefined);\n    }\n    computeGenerateRange(mrng, biasFactor) {\n        if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n            return { min: this.min, max: this.max };\n        }\n        const ranges = biasNumericRange(this.min, this.max, bigIntLogLike);\n        if (ranges.length === 1) {\n            return ranges[0];\n        }\n        const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n        return id < 0 ? ranges[0] : ranges[id + 1];\n    }\n    canShrinkWithoutContext(value) {\n        return typeof value === 'bigint' && this.min <= value && value <= this.max;\n    }\n    shrink(current, context) {\n        if (!BigIntArbitrary.isValidContext(current, context)) {\n            const target = this.defaultTarget();\n            return shrinkBigInt(current, target, true);\n        }\n        if (this.isLastChanceTry(current, context)) {\n            return Stream.of(new Value(context, undefined));\n        }\n        return shrinkBigInt(current, context, false);\n    }\n    defaultTarget() {\n        if (this.min <= 0 && this.max >= 0) {\n            return BigInt(0);\n        }\n        return this.min < 0 ? this.max : this.min;\n    }\n    isLastChanceTry(current, context) {\n        if (current > 0)\n            return current === context + BigInt(1) && current > this.min;\n        if (current < 0)\n            return current === context - BigInt(1) && current < this.max;\n        return false;\n    }\n    static isValidContext(current, context) {\n        if (context === undefined) {\n            return false;\n        }\n        if (typeof context !== 'bigint') {\n            throw new Error(`Invalid context type passed to BigIntArbitrary (#1)`);\n        }\n        const differentSigns = (current > 0 && context < 0) || (current < 0 && context > 0);\n        if (context !== BigInt(0) && differentSigns) {\n            throw new Error(`Invalid context value passed to BigIntArbitrary (#2)`);\n        }\n        return true;\n    }\n}\n","import { PreconditionFailure } from '../precondition/PreconditionFailure.js';\nimport { runIdToFrequency } from './IRawProperty.js';\nimport { readConfigureGlobal } from '../runner/configuration/GlobalParameters.js';\nimport { Stream } from '../../stream/Stream.js';\nimport { noUndefinedAsContext, UndefinedContextPlaceholder, } from '../../arbitrary/_internals/helpers/NoUndefinedAsContext.js';\nimport { Error, String } from '../../utils/globals.js';\nexport class Property {\n    constructor(arb, predicate) {\n        this.arb = arb;\n        this.predicate = predicate;\n        const { beforeEach = Property.dummyHook, afterEach = Property.dummyHook, asyncBeforeEach, asyncAfterEach, } = readConfigureGlobal() || {};\n        if (asyncBeforeEach !== undefined) {\n            throw Error('\"asyncBeforeEach\" can\\'t be set when running synchronous properties');\n        }\n        if (asyncAfterEach !== undefined) {\n            throw Error('\"asyncAfterEach\" can\\'t be set when running synchronous properties');\n        }\n        this.beforeEachHook = beforeEach;\n        this.afterEachHook = afterEach;\n    }\n    isAsync() {\n        return false;\n    }\n    generate(mrng, runId) {\n        const value = this.arb.generate(mrng, runId != null ? runIdToFrequency(runId) : undefined);\n        return noUndefinedAsContext(value);\n    }\n    shrink(value) {\n        if (value.context === undefined && !this.arb.canShrinkWithoutContext(value.value_)) {\n            return Stream.nil();\n        }\n        const safeContext = value.context !== UndefinedContextPlaceholder ? value.context : undefined;\n        return this.arb.shrink(value.value_, safeContext).map(noUndefinedAsContext);\n    }\n    runBeforeEach() {\n        this.beforeEachHook();\n    }\n    runAfterEach() {\n        this.afterEachHook();\n    }\n    run(v, dontRunHook) {\n        if (!dontRunHook) {\n            this.beforeEachHook();\n        }\n        try {\n            const output = this.predicate(v);\n            return output == null || output === true\n                ? null\n                : {\n                    error: new Error('Property failed by returning false'),\n                    errorMessage: 'Error: Property failed by returning false',\n                };\n        }\n        catch (err) {\n            if (PreconditionFailure.isFailure(err))\n                return err;\n            if (err instanceof Error && err.stack) {\n                return { error: err, errorMessage: err.stack };\n            }\n            return { error: err, errorMessage: String(err) };\n        }\n        finally {\n            if (!dontRunHook) {\n                this.afterEachHook();\n            }\n        }\n    }\n    beforeEach(hookFunction) {\n        const previousBeforeEachHook = this.beforeEachHook;\n        this.beforeEachHook = () => hookFunction(previousBeforeEachHook);\n        return this;\n    }\n    afterEach(hookFunction) {\n        const previousAfterEachHook = this.afterEachHook;\n        this.afterEachHook = () => hookFunction(previousAfterEachHook);\n        return this;\n    }\n}\nProperty.dummyHook = () => { };\n","import { PreconditionFailure } from '../precondition/PreconditionFailure.js';\nimport { runIdToFrequency } from './IRawProperty.js';\nimport { readConfigureGlobal } from '../runner/configuration/GlobalParameters.js';\nimport { Stream } from '../../stream/Stream.js';\nimport { noUndefinedAsContext, UndefinedContextPlaceholder, } from '../../arbitrary/_internals/helpers/NoUndefinedAsContext.js';\nimport { Error, String } from '../../utils/globals.js';\nexport class AsyncProperty {\n    constructor(arb, predicate) {\n        this.arb = arb;\n        this.predicate = predicate;\n        const { asyncBeforeEach, asyncAfterEach, beforeEach, afterEach } = readConfigureGlobal() || {};\n        if (asyncBeforeEach !== undefined && beforeEach !== undefined) {\n            throw Error('Global \"asyncBeforeEach\" and \"beforeEach\" parameters can\\'t be set at the same time when running async properties');\n        }\n        if (asyncAfterEach !== undefined && afterEach !== undefined) {\n            throw Error('Global \"asyncAfterEach\" and \"afterEach\" parameters can\\'t be set at the same time when running async properties');\n        }\n        this.beforeEachHook = asyncBeforeEach || beforeEach || AsyncProperty.dummyHook;\n        this.afterEachHook = asyncAfterEach || afterEach || AsyncProperty.dummyHook;\n    }\n    isAsync() {\n        return true;\n    }\n    generate(mrng, runId) {\n        const value = this.arb.generate(mrng, runId != null ? runIdToFrequency(runId) : undefined);\n        return noUndefinedAsContext(value);\n    }\n    shrink(value) {\n        if (value.context === undefined && !this.arb.canShrinkWithoutContext(value.value_)) {\n            return Stream.nil();\n        }\n        const safeContext = value.context !== UndefinedContextPlaceholder ? value.context : undefined;\n        return this.arb.shrink(value.value_, safeContext).map(noUndefinedAsContext);\n    }\n    async runBeforeEach() {\n        await this.beforeEachHook();\n    }\n    async runAfterEach() {\n        await this.afterEachHook();\n    }\n    async run(v, dontRunHook) {\n        if (!dontRunHook) {\n            await this.beforeEachHook();\n        }\n        try {\n            const output = await this.predicate(v);\n            return output == null || output === true\n                ? null\n                : {\n                    error: new Error('Property failed by returning false'),\n                    errorMessage: 'Error: Property failed by returning false',\n                };\n        }\n        catch (err) {\n            if (PreconditionFailure.isFailure(err))\n                return err;\n            if (err instanceof Error && err.stack) {\n                return { error: err, errorMessage: err.stack };\n            }\n            return { error: err, errorMessage: String(err) };\n        }\n        finally {\n            if (!dontRunHook) {\n                await this.afterEachHook();\n            }\n        }\n    }\n    beforeEach(hookFunction) {\n        const previousBeforeEachHook = this.beforeEachHook;\n        this.beforeEachHook = () => hookFunction(previousBeforeEachHook);\n        return this;\n    }\n    afterEach(hookFunction) {\n        const previousAfterEachHook = this.afterEachHook;\n        this.afterEachHook = () => hookFunction(previousAfterEachHook);\n        return this;\n    }\n}\nAsyncProperty.dummyHook = () => { };\n","import { stream } from '../../stream/Stream.js';\nimport { Property } from '../property/Property.generic.js';\nimport { UnbiasedProperty } from '../property/UnbiasedProperty.js';\nimport { readConfigureGlobal } from './configuration/GlobalParameters.js';\nimport { QualifiedParameters } from './configuration/QualifiedParameters.js';\nimport { lazyToss, toss } from './Tosser.js';\nimport { pathWalk } from './utils/PathWalker.js';\nfunction toProperty(generator, qParams) {\n    const prop = !Object.prototype.hasOwnProperty.call(generator, 'isAsync')\n        ? new Property(generator, () => true)\n        : generator;\n    return qParams.unbiased === true ? new UnbiasedProperty(prop) : prop;\n}\nfunction streamSample(generator, params) {\n    const extendedParams = typeof params === 'number'\n        ? Object.assign(Object.assign({}, readConfigureGlobal()), { numRuns: params }) : Object.assign(Object.assign({}, readConfigureGlobal()), params);\n    const qParams = QualifiedParameters.read(extendedParams);\n    const nextProperty = toProperty(generator, qParams);\n    const shrink = nextProperty.shrink.bind(nextProperty);\n    const tossedValues = qParams.path.length === 0\n        ? stream(toss(nextProperty, qParams.seed, qParams.randomType, qParams.examples))\n        : pathWalk(qParams.path, stream(lazyToss(nextProperty, qParams.seed, qParams.randomType, qParams.examples)), shrink);\n    return tossedValues.take(qParams.numRuns).map((s) => s.value_);\n}\nfunction sample(generator, params) {\n    return [...streamSample(generator, params)];\n}\nfunction round2(n) {\n    return (Math.round(n * 100) / 100).toFixed(2);\n}\nfunction statistics(generator, classify, params) {\n    const extendedParams = typeof params === 'number'\n        ? Object.assign(Object.assign({}, readConfigureGlobal()), { numRuns: params }) : Object.assign(Object.assign({}, readConfigureGlobal()), params);\n    const qParams = QualifiedParameters.read(extendedParams);\n    const recorded = {};\n    for (const g of streamSample(generator, params)) {\n        const out = classify(g);\n        const categories = Array.isArray(out) ? out : [out];\n        for (const c of categories) {\n            recorded[c] = (recorded[c] || 0) + 1;\n        }\n    }\n    const data = Object.entries(recorded)\n        .sort((a, b) => b[1] - a[1])\n        .map((i) => [i[0], `${round2((i[1] * 100.0) / qParams.numRuns)}%`]);\n    const longestName = data.map((i) => i[0].length).reduce((p, c) => Math.max(p, c), 0);\n    const longestPercent = data.map((i) => i[1].length).reduce((p, c) => Math.max(p, c), 0);\n    for (const item of data) {\n        qParams.logger(`${item[0].padEnd(longestName, '.')}..${item[1].padStart(longestPercent, '.')}`);\n    }\n}\nexport { sample, statistics };\n","import { safeIndexOf, safePush } from '../../../utils/globals.js';\nimport { boolean } from '../../boolean.js';\nimport { constant } from '../../constant.js';\nimport { option } from '../../option.js';\nimport { tuple } from '../../tuple.js';\nimport { extractEnumerableKeys } from '../helpers/EnumerableKeysExtractor.js';\nimport { buildValuesAndSeparateKeysToObjectMapper, buildValuesAndSeparateKeysToObjectUnmapper, } from '../mappers/ValuesAndSeparateKeysToObject.js';\nconst noKeyValue = Symbol('no-key');\nexport function buildPartialRecordArbitrary(recordModel, requiredKeys, noNullPrototype) {\n    const keys = extractEnumerableKeys(recordModel);\n    const arbs = [];\n    for (let index = 0; index !== keys.length; ++index) {\n        const k = keys[index];\n        const requiredArbitrary = recordModel[k];\n        if (requiredKeys === undefined || safeIndexOf(requiredKeys, k) !== -1) {\n            safePush(arbs, requiredArbitrary);\n        }\n        else {\n            safePush(arbs, option(requiredArbitrary, { nil: noKeyValue }));\n        }\n    }\n    return tuple(tuple(...arbs), noNullPrototype ? constant(false) : boolean()).map(buildValuesAndSeparateKeysToObjectMapper(keys, noKeyValue), buildValuesAndSeparateKeysToObjectUnmapper(keys, noKeyValue));\n}\n","import { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { makeLazy } from '../../stream/LazyIterableIterator.js';\nimport { Stream } from '../../stream/Stream.js';\nimport { safeMap, safePush, safeSlice, safeSort, safeSplice } from '../../utils/globals.js';\nimport { isSubarrayOf } from './helpers/IsSubarrayOf.js';\nimport { IntegerArbitrary } from './IntegerArbitrary.js';\nconst safeMathFloor = Math.floor;\nconst safeMathLog = Math.log;\nconst safeArrayIsArray = Array.isArray;\nexport class SubarrayArbitrary extends Arbitrary {\n    constructor(originalArray, isOrdered, minLength, maxLength) {\n        super();\n        this.originalArray = originalArray;\n        this.isOrdered = isOrdered;\n        this.minLength = minLength;\n        this.maxLength = maxLength;\n        if (minLength < 0 || minLength > originalArray.length)\n            throw new Error('fc.*{s|S}ubarrayOf expects the minimal length to be between 0 and the size of the original array');\n        if (maxLength < 0 || maxLength > originalArray.length)\n            throw new Error('fc.*{s|S}ubarrayOf expects the maximal length to be between 0 and the size of the original array');\n        if (minLength > maxLength)\n            throw new Error('fc.*{s|S}ubarrayOf expects the minimal length to be inferior or equal to the maximal length');\n        this.lengthArb = new IntegerArbitrary(minLength, maxLength);\n        this.biasedLengthArb =\n            minLength !== maxLength\n                ? new IntegerArbitrary(minLength, minLength + safeMathFloor(safeMathLog(maxLength - minLength) / safeMathLog(2)))\n                : this.lengthArb;\n    }\n    generate(mrng, biasFactor) {\n        const lengthArb = biasFactor !== undefined && mrng.nextInt(1, biasFactor) === 1 ? this.biasedLengthArb : this.lengthArb;\n        const size = lengthArb.generate(mrng, undefined);\n        const sizeValue = size.value;\n        const remainingElements = safeMap(this.originalArray, (_v, idx) => idx);\n        const ids = [];\n        for (let index = 0; index !== sizeValue; ++index) {\n            const selectedIdIndex = mrng.nextInt(0, remainingElements.length - 1);\n            safePush(ids, remainingElements[selectedIdIndex]);\n            safeSplice(remainingElements, selectedIdIndex, 1);\n        }\n        if (this.isOrdered) {\n            safeSort(ids, (a, b) => a - b);\n        }\n        return new Value(safeMap(ids, (i) => this.originalArray[i]), size.context);\n    }\n    canShrinkWithoutContext(value) {\n        if (!safeArrayIsArray(value)) {\n            return false;\n        }\n        if (!this.lengthArb.canShrinkWithoutContext(value.length)) {\n            return false;\n        }\n        return isSubarrayOf(this.originalArray, value);\n    }\n    shrink(value, context) {\n        if (value.length === 0) {\n            return Stream.nil();\n        }\n        return this.lengthArb\n            .shrink(value.length, context)\n            .map((newSize) => {\n            return new Value(safeSlice(value, value.length - newSize.value), newSize.context);\n        })\n            .join(value.length > this.minLength\n            ? makeLazy(() => this.shrink(safeSlice(value, 1), undefined)\n                .filter((newValue) => this.minLength <= newValue.value.length + 1)\n                .map((newValue) => new Value([value[0], ...newValue.value], undefined)))\n            : Stream.nil());\n    }\n}\n","import { array } from './array.js';\nimport { getOrCreateLowerAlphaNumericArbitrary } from './_internals/builders/CharacterRangeArbitraryBuilder.js';\nimport { domain } from './domain.js';\nimport { string } from './string.js';\nimport { tuple } from './tuple.js';\nimport { adapter } from './_internals/AdapterArbitrary.js';\nimport { safeJoin, safeSlice, safeSplit } from '../utils/globals.js';\nfunction dotAdapter(a) {\n    let currentLength = a[0].length;\n    for (let index = 1; index !== a.length; ++index) {\n        currentLength += 1 + a[index].length;\n        if (currentLength > 64) {\n            return { adapted: true, value: safeSlice(a, 0, index) };\n        }\n    }\n    return { adapted: false, value: a };\n}\nfunction dotMapper(a) {\n    return safeJoin(a, '.');\n}\nfunction dotUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Unsupported');\n    }\n    return safeSplit(value, '.');\n}\nfunction atMapper(data) {\n    return `${data[0]}@${data[1]}`;\n}\nfunction atUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Unsupported');\n    }\n    return safeSplit(value, '@', 2);\n}\nexport function emailAddress(constraints = {}) {\n    const atextArb = getOrCreateLowerAlphaNumericArbitrary(\"!#$%&'*+-/=?^_`{|}~\");\n    const localPartArb = adapter(array(string({\n        unit: atextArb,\n        minLength: 1,\n        maxLength: 64,\n        size: constraints.size,\n    }), { minLength: 1, maxLength: 32, size: constraints.size }), dotAdapter).map(dotMapper, dotUnmapper);\n    return tuple(localPartArb, domain({ size: constraints.size })).map(atMapper, atUnmapper);\n}\n","import { bigUintN } from '../bigUintN.js';\nimport { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { makeLazy } from '../../stream/LazyIterableIterator.js';\nimport { applyFlagsOnChars, computeFlagsFromChars, computeNextFlags, computeTogglePositions, } from './helpers/ToggleFlags.js';\nimport { safeJoin, safeSlice } from '../../utils/globals.js';\nimport { BigInt } from '../../utils/globals.js';\nexport class MixedCaseArbitrary extends Arbitrary {\n    constructor(stringArb, toggleCase, untoggleAll) {\n        super();\n        this.stringArb = stringArb;\n        this.toggleCase = toggleCase;\n        this.untoggleAll = untoggleAll;\n    }\n    buildContextFor(rawStringValue, flagsValue) {\n        return {\n            rawString: rawStringValue.value,\n            rawStringContext: rawStringValue.context,\n            flags: flagsValue.value,\n            flagsContext: flagsValue.context,\n        };\n    }\n    generate(mrng, biasFactor) {\n        const rawStringValue = this.stringArb.generate(mrng, biasFactor);\n        const chars = [...rawStringValue.value];\n        const togglePositions = computeTogglePositions(chars, this.toggleCase);\n        const flagsArb = bigUintN(togglePositions.length);\n        const flagsValue = flagsArb.generate(mrng, undefined);\n        applyFlagsOnChars(chars, flagsValue.value, togglePositions, this.toggleCase);\n        return new Value(safeJoin(chars, ''), this.buildContextFor(rawStringValue, flagsValue));\n    }\n    canShrinkWithoutContext(value) {\n        if (typeof value !== 'string') {\n            return false;\n        }\n        return this.untoggleAll !== undefined\n            ? this.stringArb.canShrinkWithoutContext(this.untoggleAll(value))\n            :\n                this.stringArb.canShrinkWithoutContext(value);\n    }\n    shrink(value, context) {\n        let contextSafe;\n        if (context !== undefined) {\n            contextSafe = context;\n        }\n        else {\n            if (this.untoggleAll !== undefined) {\n                const untoggledValue = this.untoggleAll(value);\n                const valueChars = [...value];\n                const untoggledValueChars = [...untoggledValue];\n                const togglePositions = computeTogglePositions(untoggledValueChars, this.toggleCase);\n                contextSafe = {\n                    rawString: untoggledValue,\n                    rawStringContext: undefined,\n                    flags: computeFlagsFromChars(untoggledValueChars, valueChars, togglePositions),\n                    flagsContext: undefined,\n                };\n            }\n            else {\n                contextSafe = {\n                    rawString: value,\n                    rawStringContext: undefined,\n                    flags: BigInt(0),\n                    flagsContext: undefined,\n                };\n            }\n        }\n        const rawString = contextSafe.rawString;\n        const flags = contextSafe.flags;\n        return this.stringArb\n            .shrink(rawString, contextSafe.rawStringContext)\n            .map((nRawStringValue) => {\n            const nChars = [...nRawStringValue.value];\n            const nTogglePositions = computeTogglePositions(nChars, this.toggleCase);\n            const nFlags = computeNextFlags(flags, nTogglePositions.length);\n            applyFlagsOnChars(nChars, nFlags, nTogglePositions, this.toggleCase);\n            return new Value(safeJoin(nChars, ''), this.buildContextFor(nRawStringValue, new Value(nFlags, undefined)));\n        })\n            .join(makeLazy(() => {\n            const chars = [...rawString];\n            const togglePositions = computeTogglePositions(chars, this.toggleCase);\n            return bigUintN(togglePositions.length)\n                .shrink(flags, contextSafe.flagsContext)\n                .map((nFlagsValue) => {\n                const nChars = safeSlice(chars);\n                applyFlagsOnChars(nChars, nFlagsValue.value, togglePositions, this.toggleCase);\n                return new Value(safeJoin(nChars, ''), this.buildContextFor(new Value(rawString, contextSafe.rawStringContext), nFlagsValue));\n            });\n        }));\n    }\n}\n","import { boolean } from '../../boolean.js';\nimport { constant } from '../../constant.js';\nimport { double } from '../../double.js';\nimport { fullUnicodeString } from '../../fullUnicodeString.js';\nimport { maxSafeInteger } from '../../maxSafeInteger.js';\nimport { oneof } from '../../oneof.js';\nimport { string } from '../../string.js';\nimport { boxedArbitraryBuilder } from '../builders/BoxedArbitraryBuilder.js';\nfunction defaultValues(constraints, stringArbitrary) {\n    return [\n        boolean(),\n        maxSafeInteger(),\n        double(),\n        stringArbitrary(constraints),\n        oneof(stringArbitrary(constraints), constant(null), constant(undefined)),\n    ];\n}\nfunction boxArbitraries(arbs) {\n    return arbs.map((arb) => boxedArbitraryBuilder(arb));\n}\nfunction boxArbitrariesIfNeeded(arbs, boxEnabled) {\n    return boxEnabled ? boxArbitraries(arbs).concat(arbs) : arbs;\n}\nexport function toQualifiedObjectConstraints(settings = {}) {\n    function orDefault(optionalValue, defaultValue) {\n        return optionalValue !== undefined ? optionalValue : defaultValue;\n    }\n    const stringArbitrary = 'stringUnit' in settings ? string : settings.withUnicodeString ? fullUnicodeString : string;\n    const valueConstraints = { size: settings.size, unit: settings.stringUnit };\n    return {\n        key: orDefault(settings.key, stringArbitrary(valueConstraints)),\n        values: boxArbitrariesIfNeeded(orDefault(settings.values, defaultValues(valueConstraints, stringArbitrary)), orDefault(settings.withBoxedValues, false)),\n        depthSize: settings.depthSize,\n        maxDepth: settings.maxDepth,\n        maxKeys: settings.maxKeys,\n        size: settings.size,\n        withSet: orDefault(settings.withSet, false),\n        withMap: orDefault(settings.withMap, false),\n        withObjectString: orDefault(settings.withObjectString, false),\n        withNullPrototype: orDefault(settings.withNullPrototype, false),\n        withBigInt: orDefault(settings.withBigInt, false),\n        withDate: orDefault(settings.withDate, false),\n        withTypedArray: orDefault(settings.withTypedArray, false),\n        withSparseArray: orDefault(settings.withSparseArray, false),\n    };\n}\n","import { escapeForMultilineComments } from '../helpers/TextEscaper.js';\nimport { cloneMethod } from '../../../check/symbols.js';\nimport { hash } from '../../../utils/hash.js';\nimport { stringify } from '../../../utils/stringify.js';\nimport { integer } from '../../integer.js';\nimport { noShrink } from '../../noShrink.js';\nimport { tuple } from '../../tuple.js';\nimport { safeJoin } from '../../../utils/globals.js';\nconst safeObjectAssign = Object.assign;\nconst safeObjectKeys = Object.keys;\nexport function buildCompareFunctionArbitrary(cmp) {\n    return tuple(noShrink(integer()), noShrink(integer({ min: 1, max: 0xffffffff }))).map(([seed, hashEnvSize]) => {\n        const producer = () => {\n            const recorded = {};\n            const f = (a, b) => {\n                const reprA = stringify(a);\n                const reprB = stringify(b);\n                const hA = hash(`${seed}${reprA}`) % hashEnvSize;\n                const hB = hash(`${seed}${reprB}`) % hashEnvSize;\n                const val = cmp(hA, hB);\n                recorded[`[${reprA},${reprB}]`] = val;\n                return val;\n            };\n            return safeObjectAssign(f, {\n                toString: () => {\n                    const seenValues = safeObjectKeys(recorded)\n                        .sort()\n                        .map((k) => `${k} => ${stringify(recorded[k])}`)\n                        .map((line) => `/* ${escapeForMultilineComments(line)} */`);\n                    return `function(a, b) {\n  // With hash and stringify coming from fast-check${seenValues.length !== 0 ? `\\n  ${safeJoin(seenValues, '\\n  ')}` : ''}\n  const cmp = ${cmp};\n  const hA = hash('${seed}' + stringify(a)) % ${hashEnvSize};\n  const hB = hash('${seed}' + stringify(b)) % ${hashEnvSize};\n  return cmp(hA, hB);\n}`;\n                },\n                [cloneMethod]: producer,\n            });\n        };\n        return producer();\n    });\n}\n","import * as Equal from \"../Equal.js\"\nimport { pipe } from \"../Function.js\"\nimport { globalValue } from \"../GlobalValue.js\"\nimport * as Hash from \"../Hash.js\"\nimport { NodeInspectSymbol } from \"../Inspectable.js\"\nimport { pipeArguments } from \"../Pipeable.js\"\nimport { hasProperty } from \"../Predicate.js\"\nimport type * as Redacted from \"../Redacted.js\"\n\n/** @internal */\nconst RedactedSymbolKey = \"effect/Redacted\"\n\n/** @internal */\nexport const redactedRegistry = globalValue(\n  \"effect/Redacted/redactedRegistry\",\n  () => new WeakMap<Redacted.Redacted<any>, any>()\n)\n\n/** @internal */\nexport const RedactedTypeId: Redacted.RedactedTypeId = Symbol.for(\n  RedactedSymbolKey\n) as Redacted.RedactedTypeId\n\n/** @internal */\nexport const proto = {\n  [RedactedTypeId]: {\n    _A: (_: never) => _\n  },\n  pipe() {\n    return pipeArguments(this, arguments)\n  },\n  toString() {\n    return \"<redacted>\"\n  },\n  toJSON() {\n    return \"<redacted>\"\n  },\n  [NodeInspectSymbol]() {\n    return \"<redacted>\"\n  },\n  [Hash.symbol]<T>(this: Redacted.Redacted<T>): number {\n    return pipe(\n      Hash.hash(RedactedSymbolKey),\n      Hash.combine(Hash.hash(redactedRegistry.get(this))),\n      Hash.cached(this)\n    )\n  },\n  [Equal.symbol]<T>(this: Redacted.Redacted<T>, that: unknown): boolean {\n    return isRedacted(that) && Equal.equals(redactedRegistry.get(this), redactedRegistry.get(that))\n  }\n}\n\n/** @internal */\nexport const isRedacted = (u: unknown): u is Redacted.Redacted<unknown> => hasProperty(u, RedactedTypeId)\n\n/** @internal */\nexport const make = <T>(value: T): Redacted.Redacted<T> => {\n  const redacted = Object.create(proto)\n  redactedRegistry.set(redacted, value)\n  return redacted\n}\n\n/** @internal */\nexport const value = <T>(self: Redacted.Redacted<T>): T => {\n  if (redactedRegistry.has(self)) {\n    return redactedRegistry.get(self)\n  } else {\n    throw new Error(\"Unable to get redacted value\")\n  }\n}\n\n/** @internal */\nexport const unsafeWipe = <T>(self: Redacted.Redacted<T>): boolean => redactedRegistry.delete(self)\n","import { hash } from '../utils/hash.js';\nimport { asyncStringify, asyncToStringMethod, stringify, toStringMethod } from '../utils/stringify.js';\nimport { cloneMethod, hasCloneMethod } from '../check/symbols.js';\nimport { array } from './array.js';\nimport { integer } from './integer.js';\nimport { noShrink } from './noShrink.js';\nimport { tuple } from './tuple.js';\nimport { escapeForMultilineComments } from './_internals/helpers/TextEscaper.js';\nimport { safeMap, safeSort } from '../utils/globals.js';\nconst safeObjectDefineProperties = Object.defineProperties;\nconst safeObjectKeys = Object.keys;\nexport function func(arb) {\n    return tuple(array(arb, { minLength: 1 }), noShrink(integer())).map(([outs, seed]) => {\n        const producer = () => {\n            const recorded = {};\n            const f = (...args) => {\n                const repr = stringify(args);\n                const val = outs[hash(`${seed}${repr}`) % outs.length];\n                recorded[repr] = val;\n                return hasCloneMethod(val) ? val[cloneMethod]() : val;\n            };\n            function prettyPrint(stringifiedOuts) {\n                const seenValues = safeMap(safeMap(safeSort(safeObjectKeys(recorded)), (k) => `${k} => ${stringify(recorded[k])}`), (line) => `/* ${escapeForMultilineComments(line)} */`);\n                return `function(...args) {\n  // With hash and stringify coming from fast-check${seenValues.length !== 0 ? `\\n  ${seenValues.join('\\n  ')}` : ''}\n  const outs = ${stringifiedOuts};\n  return outs[hash('${seed}' + stringify(args)) % outs.length];\n}`;\n            }\n            return safeObjectDefineProperties(f, {\n                toString: { value: () => prettyPrint(stringify(outs)) },\n                [toStringMethod]: { value: () => prettyPrint(stringify(outs)) },\n                [asyncToStringMethod]: { value: async () => prettyPrint(await asyncStringify(outs)) },\n                [cloneMethod]: { value: producer, configurable: true },\n            });\n        };\n        return producer();\n    });\n}\n","import { Stream } from '../../stream/Stream.js';\nimport { cloneIfNeeded, cloneMethod } from '../../check/symbols.js';\nimport { integer } from '../integer.js';\nimport { makeLazy } from '../../stream/LazyIterableIterator.js';\nimport { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { getDepthContextFor } from './helpers/DepthContext.js';\nimport { buildSlicedGenerator } from './helpers/BuildSlicedGenerator.js';\nimport { safeMap, safePush, safeSlice } from '../../utils/globals.js';\nconst safeMathFloor = Math.floor;\nconst safeMathLog = Math.log;\nconst safeMathMax = Math.max;\nconst safeArrayIsArray = Array.isArray;\nfunction biasedMaxLength(minLength, maxLength) {\n    if (minLength === maxLength) {\n        return minLength;\n    }\n    return minLength + safeMathFloor(safeMathLog(maxLength - minLength) / safeMathLog(2));\n}\nexport class ArrayArbitrary extends Arbitrary {\n    constructor(arb, minLength, maxGeneratedLength, maxLength, depthIdentifier, setBuilder, customSlices) {\n        super();\n        this.arb = arb;\n        this.minLength = minLength;\n        this.maxGeneratedLength = maxGeneratedLength;\n        this.maxLength = maxLength;\n        this.setBuilder = setBuilder;\n        this.customSlices = customSlices;\n        this.lengthArb = integer({ min: minLength, max: maxGeneratedLength });\n        this.depthContext = getDepthContextFor(depthIdentifier);\n    }\n    preFilter(tab) {\n        if (this.setBuilder === undefined) {\n            return tab;\n        }\n        const s = this.setBuilder();\n        for (let index = 0; index !== tab.length; ++index) {\n            s.tryAdd(tab[index]);\n        }\n        return s.getData();\n    }\n    static makeItCloneable(vs, shrinkables) {\n        vs[cloneMethod] = () => {\n            const cloned = [];\n            for (let idx = 0; idx !== shrinkables.length; ++idx) {\n                safePush(cloned, shrinkables[idx].value);\n            }\n            this.makeItCloneable(cloned, shrinkables);\n            return cloned;\n        };\n        return vs;\n    }\n    generateNItemsNoDuplicates(setBuilder, N, mrng, biasFactorItems) {\n        let numSkippedInRow = 0;\n        const s = setBuilder();\n        const slicedGenerator = buildSlicedGenerator(this.arb, mrng, this.customSlices, biasFactorItems);\n        while (s.size() < N && numSkippedInRow < this.maxGeneratedLength) {\n            const current = slicedGenerator.next();\n            if (s.tryAdd(current)) {\n                numSkippedInRow = 0;\n            }\n            else {\n                numSkippedInRow += 1;\n            }\n        }\n        return s.getData();\n    }\n    safeGenerateNItemsNoDuplicates(setBuilder, N, mrng, biasFactorItems) {\n        const depthImpact = safeMathMax(0, N - biasedMaxLength(this.minLength, this.maxGeneratedLength));\n        this.depthContext.depth += depthImpact;\n        try {\n            return this.generateNItemsNoDuplicates(setBuilder, N, mrng, biasFactorItems);\n        }\n        finally {\n            this.depthContext.depth -= depthImpact;\n        }\n    }\n    generateNItems(N, mrng, biasFactorItems) {\n        const items = [];\n        const slicedGenerator = buildSlicedGenerator(this.arb, mrng, this.customSlices, biasFactorItems);\n        slicedGenerator.attemptExact(N);\n        for (let index = 0; index !== N; ++index) {\n            const current = slicedGenerator.next();\n            safePush(items, current);\n        }\n        return items;\n    }\n    safeGenerateNItems(N, mrng, biasFactorItems) {\n        const depthImpact = safeMathMax(0, N - biasedMaxLength(this.minLength, this.maxGeneratedLength));\n        this.depthContext.depth += depthImpact;\n        try {\n            return this.generateNItems(N, mrng, biasFactorItems);\n        }\n        finally {\n            this.depthContext.depth -= depthImpact;\n        }\n    }\n    wrapper(itemsRaw, shrunkOnce, itemsRawLengthContext, startIndex) {\n        const items = shrunkOnce ? this.preFilter(itemsRaw) : itemsRaw;\n        let cloneable = false;\n        const vs = [];\n        const itemsContexts = [];\n        for (let idx = 0; idx !== items.length; ++idx) {\n            const s = items[idx];\n            cloneable = cloneable || s.hasToBeCloned;\n            safePush(vs, s.value);\n            safePush(itemsContexts, s.context);\n        }\n        if (cloneable) {\n            ArrayArbitrary.makeItCloneable(vs, items);\n        }\n        const context = {\n            shrunkOnce,\n            lengthContext: itemsRaw.length === items.length && itemsRawLengthContext !== undefined\n                ? itemsRawLengthContext\n                : undefined,\n            itemsContexts,\n            startIndex,\n        };\n        return new Value(vs, context);\n    }\n    generate(mrng, biasFactor) {\n        const biasMeta = this.applyBias(mrng, biasFactor);\n        const targetSize = biasMeta.size;\n        const items = this.setBuilder !== undefined\n            ? this.safeGenerateNItemsNoDuplicates(this.setBuilder, targetSize, mrng, biasMeta.biasFactorItems)\n            : this.safeGenerateNItems(targetSize, mrng, biasMeta.biasFactorItems);\n        return this.wrapper(items, false, undefined, 0);\n    }\n    applyBias(mrng, biasFactor) {\n        if (biasFactor === undefined) {\n            return { size: this.lengthArb.generate(mrng, undefined).value };\n        }\n        if (this.minLength === this.maxGeneratedLength) {\n            return { size: this.lengthArb.generate(mrng, undefined).value, biasFactorItems: biasFactor };\n        }\n        if (mrng.nextInt(1, biasFactor) !== 1) {\n            return { size: this.lengthArb.generate(mrng, undefined).value };\n        }\n        if (mrng.nextInt(1, biasFactor) !== 1 || this.minLength === this.maxGeneratedLength) {\n            return { size: this.lengthArb.generate(mrng, undefined).value, biasFactorItems: biasFactor };\n        }\n        const maxBiasedLength = biasedMaxLength(this.minLength, this.maxGeneratedLength);\n        const targetSizeValue = integer({ min: this.minLength, max: maxBiasedLength }).generate(mrng, undefined);\n        return { size: targetSizeValue.value, biasFactorItems: biasFactor };\n    }\n    canShrinkWithoutContext(value) {\n        if (!safeArrayIsArray(value) || this.minLength > value.length || value.length > this.maxLength) {\n            return false;\n        }\n        for (let index = 0; index !== value.length; ++index) {\n            if (!(index in value)) {\n                return false;\n            }\n            if (!this.arb.canShrinkWithoutContext(value[index])) {\n                return false;\n            }\n        }\n        const filtered = this.preFilter(safeMap(value, (item) => new Value(item, undefined)));\n        return filtered.length === value.length;\n    }\n    shrinkItemByItem(value, safeContext, endIndex) {\n        const shrinks = [];\n        for (let index = safeContext.startIndex; index < endIndex; ++index) {\n            safePush(shrinks, makeLazy(() => this.arb.shrink(value[index], safeContext.itemsContexts[index]).map((v) => {\n                const beforeCurrent = safeMap(safeSlice(value, 0, index), (v, i) => new Value(cloneIfNeeded(v), safeContext.itemsContexts[i]));\n                const afterCurrent = safeMap(safeSlice(value, index + 1), (v, i) => new Value(cloneIfNeeded(v), safeContext.itemsContexts[i + index + 1]));\n                return [\n                    [...beforeCurrent, v, ...afterCurrent],\n                    undefined,\n                    index,\n                ];\n            })));\n        }\n        return Stream.nil().join(...shrinks);\n    }\n    shrinkImpl(value, context) {\n        if (value.length === 0) {\n            return Stream.nil();\n        }\n        const safeContext = context !== undefined\n            ? context\n            : { shrunkOnce: false, lengthContext: undefined, itemsContexts: [], startIndex: 0 };\n        return (this.lengthArb\n            .shrink(value.length, safeContext.lengthContext)\n            .drop(safeContext.shrunkOnce && safeContext.lengthContext === undefined && value.length > this.minLength + 1\n            ? 1\n            : 0)\n            .map((lengthValue) => {\n            const sliceStart = value.length - lengthValue.value;\n            return [\n                safeMap(safeSlice(value, sliceStart), (v, index) => new Value(cloneIfNeeded(v), safeContext.itemsContexts[index + sliceStart])),\n                lengthValue.context,\n                0,\n            ];\n        })\n            .join(makeLazy(() => value.length > this.minLength\n            ? this.shrinkItemByItem(value, safeContext, 1)\n            : this.shrinkItemByItem(value, safeContext, value.length)))\n            .join(value.length > this.minLength\n            ? makeLazy(() => {\n                const subContext = {\n                    shrunkOnce: false,\n                    lengthContext: undefined,\n                    itemsContexts: safeSlice(safeContext.itemsContexts, 1),\n                    startIndex: 0,\n                };\n                return this.shrinkImpl(safeSlice(value, 1), subContext)\n                    .filter((v) => this.minLength <= v[0].length + 1)\n                    .map((v) => {\n                    return [[new Value(cloneIfNeeded(value[0]), safeContext.itemsContexts[0]), ...v[0]], undefined, 0];\n                });\n            })\n            : Stream.nil()));\n    }\n    shrink(value, context) {\n        return this.shrinkImpl(value, context).map((contextualValue) => this.wrapper(contextualValue[0], true, contextualValue[1], contextualValue[2]));\n    }\n}\n","import { array } from './array.js';\nimport { getOrCreateLowerAlphaArbitrary, getOrCreateLowerAlphaNumericArbitrary, } from './_internals/builders/CharacterRangeArbitraryBuilder.js';\nimport { option } from './option.js';\nimport { string } from './string.js';\nimport { tuple } from './tuple.js';\nimport { filterInvalidSubdomainLabel } from './_internals/helpers/InvalidSubdomainLabelFiIter.js';\nimport { resolveSize, relativeSizeToSize } from './_internals/helpers/MaxLengthFromMinLength.js';\nimport { adapter } from './_internals/AdapterArbitrary.js';\nimport { safeJoin, safeSlice, safeSplit, safeSubstring } from '../utils/globals.js';\nfunction toSubdomainLabelMapper([f, d]) {\n    return d === null ? f : `${f}${d[0]}${d[1]}`;\n}\nfunction toSubdomainLabelUnmapper(value) {\n    if (typeof value !== 'string' || value.length === 0) {\n        throw new Error('Unsupported');\n    }\n    if (value.length === 1) {\n        return [value[0], null];\n    }\n    return [value[0], [safeSubstring(value, 1, value.length - 1), value[value.length - 1]]];\n}\nfunction subdomainLabel(size) {\n    const alphaNumericArb = getOrCreateLowerAlphaNumericArbitrary('');\n    const alphaNumericHyphenArb = getOrCreateLowerAlphaNumericArbitrary('-');\n    return tuple(alphaNumericArb, option(tuple(string({ unit: alphaNumericHyphenArb, size, maxLength: 61 }), alphaNumericArb)))\n        .map(toSubdomainLabelMapper, toSubdomainLabelUnmapper)\n        .filter(filterInvalidSubdomainLabel);\n}\nfunction labelsMapper(elements) {\n    return `${safeJoin(elements[0], '.')}.${elements[1]}`;\n}\nfunction labelsUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Unsupported type');\n    }\n    const lastDotIndex = value.lastIndexOf('.');\n    return [safeSplit(safeSubstring(value, 0, lastDotIndex), '.'), safeSubstring(value, lastDotIndex + 1)];\n}\nfunction labelsAdapter(labels) {\n    const [subDomains, suffix] = labels;\n    let lengthNotIncludingIndex = suffix.length;\n    for (let index = 0; index !== subDomains.length; ++index) {\n        lengthNotIncludingIndex += 1 + subDomains[index].length;\n        if (lengthNotIncludingIndex > 255) {\n            return { adapted: true, value: [safeSlice(subDomains, 0, index), suffix] };\n        }\n    }\n    return { adapted: false, value: labels };\n}\nexport function domain(constraints = {}) {\n    const resolvedSize = resolveSize(constraints.size);\n    const resolvedSizeMinusOne = relativeSizeToSize('-1', resolvedSize);\n    const lowerAlphaArb = getOrCreateLowerAlphaArbitrary();\n    const publicSuffixArb = string({ unit: lowerAlphaArb, minLength: 2, maxLength: 63, size: resolvedSizeMinusOne });\n    return (adapter(tuple(array(subdomainLabel(resolvedSize), { size: resolvedSizeMinusOne, minLength: 1, maxLength: 127 }), publicSuffixArb), labelsAdapter).map(labelsMapper, labelsUnmapper));\n}\n","import { Stream, stream } from '../../stream/Stream.js';\nimport { readConfigureGlobal } from './configuration/GlobalParameters.js';\nimport { QualifiedParameters } from './configuration/QualifiedParameters.js';\nimport { decorateProperty } from './DecorateProperty.js';\nimport { RunnerIterator } from './RunnerIterator.js';\nimport { SourceValuesIterator } from './SourceValuesIterator.js';\nimport { lazyToss, toss } from './Tosser.js';\nimport { pathWalk } from './utils/PathWalker.js';\nimport { asyncReportRunDetails, reportRunDetails } from './utils/RunDetailsFormatter.js';\nconst safeObjectAssign = Object.assign;\nfunction runIt(property, shrink, sourceValues, verbose, interruptedAsFailure) {\n    const isModernProperty = property.runBeforeEach !== undefined && property.runAfterEach !== undefined;\n    const runner = new RunnerIterator(sourceValues, shrink, verbose, interruptedAsFailure);\n    for (const v of runner) {\n        if (isModernProperty) {\n            property.runBeforeEach();\n        }\n        const out = property.run(v, isModernProperty);\n        if (isModernProperty) {\n            property.runAfterEach();\n        }\n        runner.handleResult(out);\n    }\n    return runner.runExecution;\n}\nasync function asyncRunIt(property, shrink, sourceValues, verbose, interruptedAsFailure) {\n    const isModernProperty = property.runBeforeEach !== undefined && property.runAfterEach !== undefined;\n    const runner = new RunnerIterator(sourceValues, shrink, verbose, interruptedAsFailure);\n    for (const v of runner) {\n        if (isModernProperty) {\n            await property.runBeforeEach();\n        }\n        const out = await property.run(v, isModernProperty);\n        if (isModernProperty) {\n            await property.runAfterEach();\n        }\n        runner.handleResult(out);\n    }\n    return runner.runExecution;\n}\nfunction check(rawProperty, params) {\n    if (rawProperty == null || rawProperty.generate == null)\n        throw new Error('Invalid property encountered, please use a valid property');\n    if (rawProperty.run == null)\n        throw new Error('Invalid property encountered, please use a valid property not an arbitrary');\n    const qParams = QualifiedParameters.read(safeObjectAssign(safeObjectAssign({}, readConfigureGlobal()), params));\n    if (qParams.reporter !== null && qParams.asyncReporter !== null)\n        throw new Error('Invalid parameters encountered, reporter and asyncReporter cannot be specified together');\n    if (qParams.asyncReporter !== null && !rawProperty.isAsync())\n        throw new Error('Invalid parameters encountered, only asyncProperty can be used when asyncReporter specified');\n    const property = decorateProperty(rawProperty, qParams);\n    const maxInitialIterations = qParams.path.length === 0 || qParams.path.indexOf(':') === -1 ? qParams.numRuns : -1;\n    const maxSkips = qParams.numRuns * qParams.maxSkipsPerRun;\n    const shrink = (...args) => property.shrink(...args);\n    const initialValues = qParams.path.length === 0\n        ? toss(property, qParams.seed, qParams.randomType, qParams.examples)\n        : pathWalk(qParams.path, stream(lazyToss(property, qParams.seed, qParams.randomType, qParams.examples)), shrink);\n    const sourceValues = new SourceValuesIterator(initialValues, maxInitialIterations, maxSkips);\n    const finalShrink = !qParams.endOnFailure ? shrink : Stream.nil;\n    return property.isAsync()\n        ? asyncRunIt(property, finalShrink, sourceValues, qParams.verbose, qParams.markInterruptAsFailure).then((e) => e.toRunDetails(qParams.seed, qParams.path, maxSkips, qParams))\n        : runIt(property, finalShrink, sourceValues, qParams.verbose, qParams.markInterruptAsFailure).toRunDetails(qParams.seed, qParams.path, maxSkips, qParams);\n}\nfunction assert(property, params) {\n    const out = check(property, params);\n    if (property.isAsync())\n        return out.then(asyncReportRunDetails);\n    else\n        reportRunDetails(out);\n}\nexport { check, assert };\n","import { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { CommandsIterable } from '../../check/model/commands/CommandsIterable.js';\nimport { CommandWrapper } from '../../check/model/commands/CommandWrapper.js';\nimport { ReplayPath } from '../../check/model/ReplayPath.js';\nimport { makeLazy } from '../../stream/LazyIterableIterator.js';\nimport { Stream } from '../../stream/Stream.js';\nimport { oneof } from '../oneof.js';\nimport { restrictedIntegerArbitraryBuilder } from './builders/RestrictedIntegerArbitraryBuilder.js';\nexport class CommandsArbitrary extends Arbitrary {\n    constructor(commandArbs, maxGeneratedCommands, maxCommands, sourceReplayPath, disableReplayLog) {\n        super();\n        this.sourceReplayPath = sourceReplayPath;\n        this.disableReplayLog = disableReplayLog;\n        this.oneCommandArb = oneof(...commandArbs).map((c) => new CommandWrapper(c));\n        this.lengthArb = restrictedIntegerArbitraryBuilder(0, maxGeneratedCommands, maxCommands);\n        this.replayPath = [];\n        this.replayPathPosition = 0;\n    }\n    metadataForReplay() {\n        return this.disableReplayLog ? '' : `replayPath=${JSON.stringify(ReplayPath.stringify(this.replayPath))}`;\n    }\n    buildValueFor(items, shrunkOnce) {\n        const commands = items.map((item) => item.value_);\n        const context = { shrunkOnce, items };\n        return new Value(new CommandsIterable(commands, () => this.metadataForReplay()), context);\n    }\n    generate(mrng) {\n        const size = this.lengthArb.generate(mrng, undefined);\n        const sizeValue = size.value;\n        const items = Array(sizeValue);\n        for (let idx = 0; idx !== sizeValue; ++idx) {\n            const item = this.oneCommandArb.generate(mrng, undefined);\n            items[idx] = item;\n        }\n        this.replayPathPosition = 0;\n        return this.buildValueFor(items, false);\n    }\n    canShrinkWithoutContext(value) {\n        return false;\n    }\n    filterOnExecution(itemsRaw) {\n        const items = [];\n        for (const c of itemsRaw) {\n            if (c.value_.hasRan) {\n                this.replayPath.push(true);\n                items.push(c);\n            }\n            else\n                this.replayPath.push(false);\n        }\n        return items;\n    }\n    filterOnReplay(itemsRaw) {\n        return itemsRaw.filter((c, idx) => {\n            const state = this.replayPath[this.replayPathPosition + idx];\n            if (state === undefined)\n                throw new Error(`Too short replayPath`);\n            if (!state && c.value_.hasRan)\n                throw new Error(`Mismatch between replayPath and real execution`);\n            return state;\n        });\n    }\n    filterForShrinkImpl(itemsRaw) {\n        if (this.replayPathPosition === 0) {\n            this.replayPath = this.sourceReplayPath !== null ? ReplayPath.parse(this.sourceReplayPath) : [];\n        }\n        const items = this.replayPathPosition < this.replayPath.length\n            ? this.filterOnReplay(itemsRaw)\n            : this.filterOnExecution(itemsRaw);\n        this.replayPathPosition += itemsRaw.length;\n        return items;\n    }\n    shrink(_value, context) {\n        if (context === undefined) {\n            return Stream.nil();\n        }\n        const safeContext = context;\n        const shrunkOnce = safeContext.shrunkOnce;\n        const itemsRaw = safeContext.items;\n        const items = this.filterForShrinkImpl(itemsRaw);\n        if (items.length === 0) {\n            return Stream.nil();\n        }\n        const rootShrink = shrunkOnce\n            ? Stream.nil()\n            : new Stream([[]][Symbol.iterator]());\n        const nextShrinks = [];\n        for (let numToKeep = 0; numToKeep !== items.length; ++numToKeep) {\n            nextShrinks.push(makeLazy(() => {\n                const fixedStart = items.slice(0, numToKeep);\n                return this.lengthArb\n                    .shrink(items.length - 1 - numToKeep, undefined)\n                    .map((l) => fixedStart.concat(items.slice(items.length - (l.value + 1))));\n            }));\n        }\n        for (let itemAt = 0; itemAt !== items.length; ++itemAt) {\n            nextShrinks.push(makeLazy(() => this.oneCommandArb\n                .shrink(items[itemAt].value_, items[itemAt].context)\n                .map((v) => items.slice(0, itemAt).concat([v], items.slice(itemAt + 1)))));\n        }\n        return rootShrink.join(...nextShrinks).map((shrinkables) => {\n            return this.buildValueFor(shrinkables.map((c) => new Value(c.value_.clone(), c.context)), true);\n        });\n    }\n}\n","import { constantFrom } from './constantFrom.js';\nimport { constant } from './constant.js';\nimport { option } from './option.js';\nimport { tuple } from './tuple.js';\nimport { webQueryParameters } from './webQueryParameters.js';\nimport { webFragments } from './webFragments.js';\nimport { webAuthority } from './webAuthority.js';\nimport { partsToUrlMapper, partsToUrlUnmapper } from './_internals/mappers/PartsToUrl.js';\nimport { relativeSizeToSize, resolveSize } from './_internals/helpers/MaxLengthFromMinLength.js';\nimport { webPath } from './webPath.js';\nconst safeObjectAssign = Object.assign;\nexport function webUrl(constraints) {\n    const c = constraints || {};\n    const resolvedSize = resolveSize(c.size);\n    const resolvedAuthoritySettingsSize = c.authoritySettings !== undefined && c.authoritySettings.size !== undefined\n        ? relativeSizeToSize(c.authoritySettings.size, resolvedSize)\n        : resolvedSize;\n    const resolvedAuthoritySettings = safeObjectAssign(safeObjectAssign({}, c.authoritySettings), {\n        size: resolvedAuthoritySettingsSize,\n    });\n    const validSchemes = c.validSchemes || ['http', 'https'];\n    const schemeArb = constantFrom(...validSchemes);\n    const authorityArb = webAuthority(resolvedAuthoritySettings);\n    return tuple(schemeArb, authorityArb, webPath({ size: resolvedSize }), c.withQueryParameters === true ? option(webQueryParameters({ size: resolvedSize })) : constant(null), c.withFragments === true ? option(webFragments({ size: resolvedSize })) : constant(null)).map(partsToUrlMapper, partsToUrlUnmapper);\n}\n","import { generateN, skipN, unsafeGenerateN, unsafeSkipN } from './generator/RandomGenerator.js';\nimport { congruential32 } from './generator/LinearCongruential.js';\nimport mersenne from './generator/MersenneTwister.js';\nimport { xorshift128plus } from './generator/XorShift.js';\nimport { xoroshiro128plus } from './generator/XoroShiro.js';\nimport { uniformArrayIntDistribution } from './distribution/UniformArrayIntDistribution.js';\nimport { uniformBigIntDistribution } from './distribution/UniformBigIntDistribution.js';\nimport { uniformIntDistribution } from './distribution/UniformIntDistribution.js';\nimport { unsafeUniformArrayIntDistribution } from './distribution/UnsafeUniformArrayIntDistribution.js';\nimport { unsafeUniformBigIntDistribution } from './distribution/UnsafeUniformBigIntDistribution.js';\nimport { unsafeUniformIntDistribution } from './distribution/UnsafeUniformIntDistribution.js';\nvar __type = 'module';\nvar __version = '6.1.0';\nvar __commitHash = 'a413dd2b721516be2ef29adffb515c5ae67bfbad';\nexport { __type, __version, __commitHash, generateN, skipN, unsafeGenerateN, unsafeSkipN, congruential32, mersenne, xorshift128plus, xoroshiro128plus, uniformArrayIntDistribution, uniformBigIntDistribution, uniformIntDistribution, unsafeUniformArrayIntDistribution, unsafeUniformBigIntDistribution, unsafeUniformIntDistribution, };\n","import { getOrCreateAlphaNumericPercentArbitrary } from './_internals/builders/CharacterRangeArbitraryBuilder.js';\nimport { constant } from './constant.js';\nimport { domain } from './domain.js';\nimport { ipV4 } from './ipV4.js';\nimport { ipV4Extended } from './ipV4Extended.js';\nimport { ipV6 } from './ipV6.js';\nimport { nat } from './nat.js';\nimport { oneof } from './oneof.js';\nimport { option } from './option.js';\nimport { string } from './string.js';\nimport { tuple } from './tuple.js';\nfunction hostUserInfo(size) {\n    return string({ unit: getOrCreateAlphaNumericPercentArbitrary(\"-._~!$&'()*+,;=:\"), size });\n}\nfunction userHostPortMapper([u, h, p]) {\n    return (u === null ? '' : `${u}@`) + h + (p === null ? '' : `:${p}`);\n}\nfunction userHostPortUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Unsupported');\n    }\n    const atPosition = value.indexOf('@');\n    const user = atPosition !== -1 ? value.substring(0, atPosition) : null;\n    const portRegex = /:(\\d+)$/;\n    const m = portRegex.exec(value);\n    const port = m !== null ? Number(m[1]) : null;\n    const host = m !== null ? value.substring(atPosition + 1, value.length - m[1].length - 1) : value.substring(atPosition + 1);\n    return [user, host, port];\n}\nfunction bracketedMapper(s) {\n    return `[${s}]`;\n}\nfunction bracketedUnmapper(value) {\n    if (typeof value !== 'string' || value[0] !== '[' || value[value.length - 1] !== ']') {\n        throw new Error('Unsupported');\n    }\n    return value.substring(1, value.length - 1);\n}\nexport function webAuthority(constraints) {\n    const c = constraints || {};\n    const size = c.size;\n    const hostnameArbs = [\n        domain({ size }),\n        ...(c.withIPv4 === true ? [ipV4()] : []),\n        ...(c.withIPv6 === true ? [ipV6().map(bracketedMapper, bracketedUnmapper)] : []),\n        ...(c.withIPv4Extended === true ? [ipV4Extended()] : []),\n    ];\n    return tuple(c.withUserInfo === true ? option(hostUserInfo(size)) : constant(null), oneof(...hostnameArbs), c.withPort === true ? option(nat(65535)) : constant(null)).map(userHostPortMapper, userHostPortUnmapper);\n}\n","import { safeCharCodeAt, safeEvery, safeJoin, safeSubstring, Error, safeIndexOf, safeMap } from '../utils/globals.js';\nimport { stringify } from '../utils/stringify.js';\nimport { addMissingDotStar } from './_internals/helpers/SanitizeRegexAst.js';\nimport { tokenizeRegex } from './_internals/helpers/TokenizeRegex.js';\nimport { char } from './char.js';\nimport { constant } from './constant.js';\nimport { constantFrom } from './constantFrom.js';\nimport { integer } from './integer.js';\nimport { oneof } from './oneof.js';\nimport { stringOf } from './stringOf.js';\nimport { tuple } from './tuple.js';\nconst safeStringFromCodePoint = String.fromCodePoint;\nconst wordChars = [...'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_'];\nconst digitChars = [...'0123456789'];\nconst spaceChars = [...' \\t\\r\\n\\v\\f'];\nconst newLineChars = [...'\\r\\n'];\nconst terminatorChars = [...'\\x1E\\x15'];\nconst newLineAndTerminatorChars = [...newLineChars, ...terminatorChars];\nconst defaultChar = char();\nfunction raiseUnsupportedASTNode(astNode) {\n    return new Error(`Unsupported AST node! Received: ${stringify(astNode)}`);\n}\nfunction toMatchingArbitrary(astNode, constraints, flags) {\n    switch (astNode.type) {\n        case 'Char': {\n            if (astNode.kind === 'meta') {\n                switch (astNode.value) {\n                    case '\\\\w': {\n                        return constantFrom(...wordChars);\n                    }\n                    case '\\\\W': {\n                        return defaultChar.filter((c) => safeIndexOf(wordChars, c) === -1);\n                    }\n                    case '\\\\d': {\n                        return constantFrom(...digitChars);\n                    }\n                    case '\\\\D': {\n                        return defaultChar.filter((c) => safeIndexOf(digitChars, c) === -1);\n                    }\n                    case '\\\\s': {\n                        return constantFrom(...spaceChars);\n                    }\n                    case '\\\\S': {\n                        return defaultChar.filter((c) => safeIndexOf(spaceChars, c) === -1);\n                    }\n                    case '\\\\b':\n                    case '\\\\B': {\n                        throw new Error(`Meta character ${astNode.value} not implemented yet!`);\n                    }\n                    case '.': {\n                        const forbiddenChars = flags.dotAll ? terminatorChars : newLineAndTerminatorChars;\n                        return defaultChar.filter((c) => safeIndexOf(forbiddenChars, c) === -1);\n                    }\n                }\n            }\n            if (astNode.symbol === undefined) {\n                throw new Error(`Unexpected undefined symbol received for non-meta Char! Received: ${stringify(astNode)}`);\n            }\n            return constant(astNode.symbol);\n        }\n        case 'Repetition': {\n            const node = toMatchingArbitrary(astNode.expression, constraints, flags);\n            switch (astNode.quantifier.kind) {\n                case '*': {\n                    return stringOf(node, constraints);\n                }\n                case '+': {\n                    return stringOf(node, Object.assign(Object.assign({}, constraints), { minLength: 1 }));\n                }\n                case '?': {\n                    return stringOf(node, Object.assign(Object.assign({}, constraints), { minLength: 0, maxLength: 1 }));\n                }\n                case 'Range': {\n                    return stringOf(node, Object.assign(Object.assign({}, constraints), { minLength: astNode.quantifier.from, maxLength: astNode.quantifier.to }));\n                }\n                default: {\n                    throw raiseUnsupportedASTNode(astNode.quantifier);\n                }\n            }\n        }\n        case 'Quantifier': {\n            throw new Error(`Wrongly defined AST tree, Quantifier nodes not supposed to be scanned!`);\n        }\n        case 'Alternative': {\n            return tuple(...safeMap(astNode.expressions, (n) => toMatchingArbitrary(n, constraints, flags))).map((vs) => safeJoin(vs, ''));\n        }\n        case 'CharacterClass':\n            if (astNode.negative) {\n                const childrenArbitraries = safeMap(astNode.expressions, (n) => toMatchingArbitrary(n, constraints, flags));\n                return defaultChar.filter((c) => safeEvery(childrenArbitraries, (arb) => !arb.canShrinkWithoutContext(c)));\n            }\n            return oneof(...safeMap(astNode.expressions, (n) => toMatchingArbitrary(n, constraints, flags)));\n        case 'ClassRange': {\n            const min = astNode.from.codePoint;\n            const max = astNode.to.codePoint;\n            return integer({ min, max }).map((n) => safeStringFromCodePoint(n), (c) => {\n                if (typeof c !== 'string')\n                    throw new Error('Invalid type');\n                if ([...c].length !== 1)\n                    throw new Error('Invalid length');\n                return safeCharCodeAt(c, 0);\n            });\n        }\n        case 'Group': {\n            return toMatchingArbitrary(astNode.expression, constraints, flags);\n        }\n        case 'Disjunction': {\n            const left = astNode.left !== null ? toMatchingArbitrary(astNode.left, constraints, flags) : constant('');\n            const right = astNode.right !== null ? toMatchingArbitrary(astNode.right, constraints, flags) : constant('');\n            return oneof(left, right);\n        }\n        case 'Assertion': {\n            if (astNode.kind === '^' || astNode.kind === '$') {\n                if (flags.multiline) {\n                    if (astNode.kind === '^') {\n                        return oneof(constant(''), tuple(stringOf(defaultChar), constantFrom(...newLineChars)).map((t) => `${t[0]}${t[1]}`, (value) => {\n                            if (typeof value !== 'string' || value.length === 0)\n                                throw new Error('Invalid type');\n                            return [safeSubstring(value, 0, value.length - 1), value[value.length - 1]];\n                        }));\n                    }\n                    else {\n                        return oneof(constant(''), tuple(constantFrom(...newLineChars), stringOf(defaultChar)).map((t) => `${t[0]}${t[1]}`, (value) => {\n                            if (typeof value !== 'string' || value.length === 0)\n                                throw new Error('Invalid type');\n                            return [value[0], safeSubstring(value, 1)];\n                        }));\n                    }\n                }\n                return constant('');\n            }\n            throw new Error(`Assertions of kind ${astNode.kind} not implemented yet!`);\n        }\n        case 'Backreference': {\n            throw new Error(`Backreference nodes not implemented yet!`);\n        }\n        default: {\n            throw raiseUnsupportedASTNode(astNode);\n        }\n    }\n}\nexport function stringMatching(regex, constraints = {}) {\n    for (const flag of regex.flags) {\n        if (flag !== 'd' && flag !== 'g' && flag !== 'm' && flag !== 's' && flag !== 'u') {\n            throw new Error(`Unable to use \"stringMatching\" against a regex using the flag ${flag}`);\n        }\n    }\n    const sanitizedConstraints = { size: constraints.size };\n    const flags = { multiline: regex.multiline, dotAll: regex.dotAll };\n    const regexRootToken = addMissingDotStar(tokenizeRegex(regex));\n    return toMatchingArbitrary(regexRootToken, sanitizedConstraints, flags);\n}\n","import type * as ConfigProvider from \"../../ConfigProvider.js\"\nimport * as Context from \"../../Context.js\"\nimport type * as Effect from \"../../Effect.js\"\nimport type * as Exit from \"../../Exit.js\"\nimport { dual } from \"../../Function.js\"\nimport * as HashSet from \"../../HashSet.js\"\nimport type * as Layer from \"../../Layer.js\"\nimport type * as Logger from \"../../Logger.js\"\nimport type * as LogLevel from \"../../LogLevel.js\"\nimport type { Scope } from \"../../Scope.js\"\nimport type * as Supervisor from \"../../Supervisor.js\"\nimport type * as Tracer from \"../../Tracer.js\"\nimport * as core from \"../core.js\"\nimport * as fiberRuntime from \"../fiberRuntime.js\"\nimport * as layer from \"../layer.js\"\nimport * as runtimeFlags from \"../runtimeFlags.js\"\nimport * as runtimeFlagsPatch from \"../runtimeFlagsPatch.js\"\nimport * as supervisor_ from \"../supervisor.js\"\nimport * as tracer from \"../tracer.js\"\n\n// circular with Logger\n\n/** @internal */\nexport const minimumLogLevel = (level: LogLevel.LogLevel): Layer.Layer<never> =>\n  layer.scopedDiscard(\n    fiberRuntime.fiberRefLocallyScoped(\n      fiberRuntime.currentMinimumLogLevel,\n      level\n    )\n  )\n\n/** @internal */\nexport const withMinimumLogLevel = dual<\n  (level: LogLevel.LogLevel) => <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,\n  <A, E, R>(self: Effect.Effect<A, E, R>, level: LogLevel.LogLevel) => Effect.Effect<A, E, R>\n>(2, (self, level) =>\n  core.fiberRefLocally(\n    fiberRuntime.currentMinimumLogLevel,\n    level\n  )(self))\n\n/** @internal */\nexport const addLogger = <A>(logger: Logger.Logger<unknown, A>): Layer.Layer<never> =>\n  layer.scopedDiscard(\n    fiberRuntime.fiberRefLocallyScopedWith(\n      fiberRuntime.currentLoggers,\n      HashSet.add(logger)\n    )\n  )\n\n/** @internal */\nexport const addLoggerEffect = <A, E, R>(\n  effect: Effect.Effect<Logger.Logger<unknown, A>, E, R>\n): Layer.Layer<never, E, R> =>\n  layer.unwrapEffect(\n    core.map(effect, addLogger)\n  )\n\n/** @internal */\nexport const addLoggerScoped = <A, E, R>(\n  effect: Effect.Effect<Logger.Logger<unknown, A>, E, R>\n): Layer.Layer<never, E, Exclude<R, Scope>> =>\n  layer.unwrapScoped(\n    core.map(effect, addLogger)\n  )\n\n/** @internal */\nexport const removeLogger = <A>(logger: Logger.Logger<unknown, A>): Layer.Layer<never> =>\n  layer.scopedDiscard(\n    fiberRuntime.fiberRefLocallyScopedWith(\n      fiberRuntime.currentLoggers,\n      HashSet.remove(logger)\n    )\n  )\n\n/** @internal */\nexport const replaceLogger = dual<\n  <B>(that: Logger.Logger<unknown, B>) => <A>(self: Logger.Logger<unknown, A>) => Layer.Layer<never>,\n  <A, B>(self: Logger.Logger<unknown, A>, that: Logger.Logger<unknown, B>) => Layer.Layer<never>\n>(2, (self, that) => layer.flatMap(removeLogger(self), () => addLogger(that)))\n\n/** @internal */\nexport const replaceLoggerEffect = dual<\n  <B, E, R>(\n    that: Effect.Effect<Logger.Logger<unknown, B>, E, R>\n  ) => <A>(self: Logger.Logger<unknown, A>) => Layer.Layer<never, E, R>,\n  <A, B, E, R>(\n    self: Logger.Logger<unknown, A>,\n    that: Effect.Effect<Logger.Logger<unknown, B>, E, R>\n  ) => Layer.Layer<never, E, R>\n>(2, (self, that) => layer.flatMap(removeLogger(self), () => addLoggerEffect(that)))\n\n/** @internal */\nexport const replaceLoggerScoped = dual<\n  <B, E, R>(\n    that: Effect.Effect<Logger.Logger<unknown, B>, E, R>\n  ) => <A>(self: Logger.Logger<unknown, A>) => Layer.Layer<never, E, Exclude<R, Scope>>,\n  <A, B, E, R>(\n    self: Logger.Logger<unknown, A>,\n    that: Effect.Effect<Logger.Logger<unknown, B>, E, R>\n  ) => Layer.Layer<never, E, Exclude<R, Scope>>\n>(2, (self, that) => layer.flatMap(removeLogger(self), () => addLoggerScoped(that)))\n\n/** @internal */\nexport const addSupervisor = <A>(supervisor: Supervisor.Supervisor<A>): Layer.Layer<never> =>\n  layer.scopedDiscard(\n    fiberRuntime.fiberRefLocallyScopedWith(\n      fiberRuntime.currentSupervisor,\n      (current) => new supervisor_.Zip(current, supervisor)\n    )\n  )\n\n/** @internal */\nexport const enableCooperativeYielding: Layer.Layer<never> = layer.scopedDiscard(\n  fiberRuntime.withRuntimeFlagsScoped(\n    runtimeFlagsPatch.enable(runtimeFlags.CooperativeYielding)\n  )\n)\n\n/** @internal */\nexport const enableInterruption: Layer.Layer<never> = layer.scopedDiscard(\n  fiberRuntime.withRuntimeFlagsScoped(\n    runtimeFlagsPatch.enable(runtimeFlags.Interruption)\n  )\n)\n\n/** @internal */\nexport const enableOpSupervision: Layer.Layer<never> = layer.scopedDiscard(\n  fiberRuntime.withRuntimeFlagsScoped(\n    runtimeFlagsPatch.enable(runtimeFlags.OpSupervision)\n  )\n)\n\n/** @internal */\nexport const enableRuntimeMetrics: Layer.Layer<never> = layer.scopedDiscard(\n  fiberRuntime.withRuntimeFlagsScoped(\n    runtimeFlagsPatch.enable(runtimeFlags.RuntimeMetrics)\n  )\n)\n\n/** @internal */\nexport const enableWindDown: Layer.Layer<never> = layer.scopedDiscard(\n  fiberRuntime.withRuntimeFlagsScoped(\n    runtimeFlagsPatch.enable(runtimeFlags.WindDown)\n  )\n)\n\n/** @internal */\nexport const disableCooperativeYielding: Layer.Layer<never> = layer.scopedDiscard(\n  fiberRuntime.withRuntimeFlagsScoped(\n    runtimeFlagsPatch.disable(runtimeFlags.CooperativeYielding)\n  )\n)\n\n/** @internal */\nexport const disableInterruption: Layer.Layer<never> = layer.scopedDiscard(\n  fiberRuntime.withRuntimeFlagsScoped(\n    runtimeFlagsPatch.disable(runtimeFlags.Interruption)\n  )\n)\n\n/** @internal */\nexport const disableOpSupervision: Layer.Layer<never> = layer.scopedDiscard(\n  fiberRuntime.withRuntimeFlagsScoped(\n    runtimeFlagsPatch.disable(runtimeFlags.OpSupervision)\n  )\n)\n\n/** @internal */\nexport const disableRuntimeMetrics: Layer.Layer<never> = layer.scopedDiscard(\n  fiberRuntime.withRuntimeFlagsScoped(\n    runtimeFlagsPatch.disable(runtimeFlags.RuntimeMetrics)\n  )\n)\n\n/** @internal */\nexport const disableWindDown: Layer.Layer<never> = layer.scopedDiscard(\n  fiberRuntime.withRuntimeFlagsScoped(\n    runtimeFlagsPatch.disable(runtimeFlags.WindDown)\n  )\n)\n\n/** @internal */\nexport const setConfigProvider = (configProvider: ConfigProvider.ConfigProvider): Layer.Layer<never> =>\n  layer.scopedDiscard(fiberRuntime.withConfigProviderScoped(configProvider))\n\n/** @internal */\nexport const parentSpan = (span: Tracer.AnySpan): Layer.Layer<Tracer.ParentSpan> =>\n  layer.succeedContext(Context.make(tracer.spanTag, span))\n\n/** @internal */\nexport const span = (\n  name: string,\n  options?: Tracer.SpanOptions & {\n    readonly onEnd?:\n      | ((span: Tracer.Span, exit: Exit.Exit<unknown, unknown>) => Effect.Effect<void>)\n      | undefined\n  }\n): Layer.Layer<Tracer.ParentSpan> => {\n  options = tracer.addSpanStackTrace(options) as any\n  return layer.scoped(\n    tracer.spanTag,\n    options?.onEnd\n      ? core.tap(\n        fiberRuntime.makeSpanScoped(name, options),\n        (span) => fiberRuntime.addFinalizer((exit) => options.onEnd!(span, exit))\n      )\n      : fiberRuntime.makeSpanScoped(name, options)\n  )\n}\n\n/** @internal */\nexport const setTracer = (tracer: Tracer.Tracer): Layer.Layer<never> =>\n  layer.scopedDiscard(fiberRuntime.withTracerScoped(tracer))\n","/**\n * This module provides utility functions and type class instances for working with the `bigint` type in TypeScript.\n * It includes functions for basic arithmetic operations, as well as type class instances for\n * `Equivalence` and `Order`.\n *\n * @module BigInt\n * @since 2.0.0\n * @see {@link module:BigDecimal} for more similar operations on `BigDecimal` types\n * @see {@link module:Number} for more similar operations on `number` types\n */\n\nimport * as equivalence from \"./Equivalence.js\"\nimport { dual } from \"./Function.js\"\nimport * as Option from \"./Option.js\"\nimport * as order from \"./Order.js\"\nimport type { Ordering } from \"./Ordering.js\"\nimport * as predicate from \"./Predicate.js\"\n\nconst bigint0 = BigInt(0)\nconst bigint1 = BigInt(1)\nconst bigint2 = BigInt(2)\n\n/**\n * Tests if a value is a `bigint`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isBigInt } from \"effect/BigInt\"\n *\n * assert.deepStrictEqual(isBigInt(1n), true)\n * assert.deepStrictEqual(isBigInt(1), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isBigInt: (u: unknown) => u is bigint = predicate.isBigInt\n\n/**\n * Provides an addition operation on `bigint`s.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { sum } from \"effect/BigInt\"\n *\n * assert.deepStrictEqual(sum(2n, 3n), 5n)\n * ```\n *\n * @category math\n * @since 2.0.0\n */\nexport const sum: {\n  /**\n   * Provides an addition operation on `bigint`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { sum } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(sum(2n, 3n), 5n)\n   * ```\n   *\n   * @category math\n   * @since 2.0.0\n   */\n  (that: bigint): (self: bigint) => bigint\n  /**\n   * Provides an addition operation on `bigint`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { sum } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(sum(2n, 3n), 5n)\n   * ```\n   *\n   * @category math\n   * @since 2.0.0\n   */\n  (self: bigint, that: bigint): bigint\n} = dual(2, (self: bigint, that: bigint): bigint => self + that)\n\n/**\n * Provides a multiplication operation on `bigint`s.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { multiply } from \"effect/BigInt\"\n *\n * assert.deepStrictEqual(multiply(2n, 3n), 6n)\n * ```\n *\n * @category math\n * @since 2.0.0\n */\nexport const multiply: {\n  /**\n   * Provides a multiplication operation on `bigint`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { multiply } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(multiply(2n, 3n), 6n)\n   * ```\n   *\n   * @category math\n   * @since 2.0.0\n   */\n  (that: bigint): (self: bigint) => bigint\n  /**\n   * Provides a multiplication operation on `bigint`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { multiply } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(multiply(2n, 3n), 6n)\n   * ```\n   *\n   * @category math\n   * @since 2.0.0\n   */\n  (self: bigint, that: bigint): bigint\n} = dual(2, (self: bigint, that: bigint): bigint => self * that)\n\n/**\n * Provides a subtraction operation on `bigint`s.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { subtract } from \"effect/BigInt\"\n *\n * assert.deepStrictEqual(subtract(2n, 3n), -1n)\n * ```\n *\n * @category math\n * @since 2.0.0\n */\nexport const subtract: {\n  /**\n   * Provides a subtraction operation on `bigint`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { subtract } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(subtract(2n, 3n), -1n)\n   * ```\n   *\n   * @category math\n   * @since 2.0.0\n   */\n  (that: bigint): (self: bigint) => bigint\n  /**\n   * Provides a subtraction operation on `bigint`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { subtract } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(subtract(2n, 3n), -1n)\n   * ```\n   *\n   * @category math\n   * @since 2.0.0\n   */\n  (self: bigint, that: bigint): bigint\n} = dual(2, (self: bigint, that: bigint): bigint => self - that)\n\n/**\n * Provides a division operation on `bigint`s.\n *\n * If the dividend is not a multiple of the divisor the result will be a `bigint` value\n * which represents the integer division rounded down to the nearest integer.\n *\n * Returns `None` if the divisor is `0n`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { BigInt, Option } from \"effect\"\n *\n * assert.deepStrictEqual(BigInt.divide(6n, 3n), Option.some(2n))\n * assert.deepStrictEqual(BigInt.divide(6n, 0n), Option.none())\n * ```\n *\n * @category math\n * @since 2.0.0\n */\nexport const divide: {\n  /**\n   * Provides a division operation on `bigint`s.\n   *\n   * If the dividend is not a multiple of the divisor the result will be a `bigint` value\n   * which represents the integer division rounded down to the nearest integer.\n   *\n   * Returns `None` if the divisor is `0n`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { BigInt, Option } from \"effect\"\n   *\n   * assert.deepStrictEqual(BigInt.divide(6n, 3n), Option.some(2n))\n   * assert.deepStrictEqual(BigInt.divide(6n, 0n), Option.none())\n   * ```\n   *\n   * @category math\n   * @since 2.0.0\n   */\n  (that: bigint): (self: bigint) => Option.Option<bigint>\n  /**\n   * Provides a division operation on `bigint`s.\n   *\n   * If the dividend is not a multiple of the divisor the result will be a `bigint` value\n   * which represents the integer division rounded down to the nearest integer.\n   *\n   * Returns `None` if the divisor is `0n`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { BigInt, Option } from \"effect\"\n   *\n   * assert.deepStrictEqual(BigInt.divide(6n, 3n), Option.some(2n))\n   * assert.deepStrictEqual(BigInt.divide(6n, 0n), Option.none())\n   * ```\n   *\n   * @category math\n   * @since 2.0.0\n   */\n  (self: bigint, that: bigint): Option.Option<bigint>\n} = dual(\n  2,\n  (self: bigint, that: bigint): Option.Option<bigint> => that === bigint0 ? Option.none() : Option.some(self / that)\n)\n\n/**\n * Provides a division operation on `bigint`s.\n *\n * If the dividend is not a multiple of the divisor the result will be a `bigint` value\n * which represents the integer division rounded down to the nearest integer.\n *\n * Throws a `RangeError` if the divisor is `0n`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { unsafeDivide } from \"effect/BigInt\"\n *\n * assert.deepStrictEqual(unsafeDivide(6n, 3n), 2n)\n * assert.deepStrictEqual(unsafeDivide(6n, 4n), 1n)\n * ```\n *\n * @category math\n * @since 2.0.0\n */\nexport const unsafeDivide: {\n  /**\n   * Provides a division operation on `bigint`s.\n   *\n   * If the dividend is not a multiple of the divisor the result will be a `bigint` value\n   * which represents the integer division rounded down to the nearest integer.\n   *\n   * Throws a `RangeError` if the divisor is `0n`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { unsafeDivide } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(unsafeDivide(6n, 3n), 2n)\n   * assert.deepStrictEqual(unsafeDivide(6n, 4n), 1n)\n   * ```\n   *\n   * @category math\n   * @since 2.0.0\n   */\n  (that: bigint): (self: bigint) => bigint\n  /**\n   * Provides a division operation on `bigint`s.\n   *\n   * If the dividend is not a multiple of the divisor the result will be a `bigint` value\n   * which represents the integer division rounded down to the nearest integer.\n   *\n   * Throws a `RangeError` if the divisor is `0n`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { unsafeDivide } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(unsafeDivide(6n, 3n), 2n)\n   * assert.deepStrictEqual(unsafeDivide(6n, 4n), 1n)\n   * ```\n   *\n   * @category math\n   * @since 2.0.0\n   */\n  (self: bigint, that: bigint): bigint\n} = dual(2, (self: bigint, that: bigint): bigint => self / that)\n\n/**\n * Returns the result of adding `1n` to a given number.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { increment } from \"effect/BigInt\"\n *\n * assert.deepStrictEqual(increment(2n), 3n)\n * ```\n *\n * @category math\n * @since 2.0.0\n */\nexport const increment = (n: bigint): bigint => n + bigint1\n\n/**\n * Decrements a number by `1n`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { decrement } from \"effect/BigInt\"\n *\n * assert.deepStrictEqual(decrement(3n), 2n)\n * ```\n *\n * @category math\n * @since 2.0.0\n */\nexport const decrement = (n: bigint): bigint => n - bigint1\n\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const Equivalence: equivalence.Equivalence<bigint> = equivalence.bigint\n\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const Order: order.Order<bigint> = order.bigint\n\n/**\n * Returns `true` if the first argument is less than the second, otherwise `false`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { lessThan } from \"effect/BigInt\"\n *\n * assert.deepStrictEqual(lessThan(2n, 3n), true)\n * assert.deepStrictEqual(lessThan(3n, 3n), false)\n * assert.deepStrictEqual(lessThan(4n, 3n), false)\n * ```\n *\n * @category predicates\n * @since 2.0.0\n */\nexport const lessThan: {\n  /**\n   * Returns `true` if the first argument is less than the second, otherwise `false`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { lessThan } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(lessThan(2n, 3n), true)\n   * assert.deepStrictEqual(lessThan(3n, 3n), false)\n   * assert.deepStrictEqual(lessThan(4n, 3n), false)\n   * ```\n   *\n   * @category predicates\n   * @since 2.0.0\n   */\n  (that: bigint): (self: bigint) => boolean\n  /**\n   * Returns `true` if the first argument is less than the second, otherwise `false`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { lessThan } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(lessThan(2n, 3n), true)\n   * assert.deepStrictEqual(lessThan(3n, 3n), false)\n   * assert.deepStrictEqual(lessThan(4n, 3n), false)\n   * ```\n   *\n   * @category predicates\n   * @since 2.0.0\n   */\n  (self: bigint, that: bigint): boolean\n} = order.lessThan(Order)\n\n/**\n * Returns a function that checks if a given `bigint` is less than or equal to the provided one.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { lessThanOrEqualTo } from \"effect/BigInt\"\n *\n * assert.deepStrictEqual(lessThanOrEqualTo(2n, 3n), true)\n * assert.deepStrictEqual(lessThanOrEqualTo(3n, 3n), true)\n * assert.deepStrictEqual(lessThanOrEqualTo(4n, 3n), false)\n * ```\n *\n * @category predicates\n * @since 2.0.0\n */\nexport const lessThanOrEqualTo: {\n  /**\n   * Returns a function that checks if a given `bigint` is less than or equal to the provided one.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { lessThanOrEqualTo } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(lessThanOrEqualTo(2n, 3n), true)\n   * assert.deepStrictEqual(lessThanOrEqualTo(3n, 3n), true)\n   * assert.deepStrictEqual(lessThanOrEqualTo(4n, 3n), false)\n   * ```\n   *\n   * @category predicates\n   * @since 2.0.0\n   */\n  (that: bigint): (self: bigint) => boolean\n  /**\n   * Returns a function that checks if a given `bigint` is less than or equal to the provided one.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { lessThanOrEqualTo } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(lessThanOrEqualTo(2n, 3n), true)\n   * assert.deepStrictEqual(lessThanOrEqualTo(3n, 3n), true)\n   * assert.deepStrictEqual(lessThanOrEqualTo(4n, 3n), false)\n   * ```\n   *\n   * @category predicates\n   * @since 2.0.0\n   */\n  (self: bigint, that: bigint): boolean\n} = order.lessThanOrEqualTo(Order)\n\n/**\n * Returns `true` if the first argument is greater than the second, otherwise `false`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { greaterThan } from \"effect/BigInt\"\n *\n * assert.deepStrictEqual(greaterThan(2n, 3n), false)\n * assert.deepStrictEqual(greaterThan(3n, 3n), false)\n * assert.deepStrictEqual(greaterThan(4n, 3n), true)\n * ```\n *\n * @category predicates\n * @since 2.0.0\n */\nexport const greaterThan: {\n  /**\n   * Returns `true` if the first argument is greater than the second, otherwise `false`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { greaterThan } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(greaterThan(2n, 3n), false)\n   * assert.deepStrictEqual(greaterThan(3n, 3n), false)\n   * assert.deepStrictEqual(greaterThan(4n, 3n), true)\n   * ```\n   *\n   * @category predicates\n   * @since 2.0.0\n   */\n  (that: bigint): (self: bigint) => boolean\n  /**\n   * Returns `true` if the first argument is greater than the second, otherwise `false`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { greaterThan } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(greaterThan(2n, 3n), false)\n   * assert.deepStrictEqual(greaterThan(3n, 3n), false)\n   * assert.deepStrictEqual(greaterThan(4n, 3n), true)\n   * ```\n   *\n   * @category predicates\n   * @since 2.0.0\n   */\n  (self: bigint, that: bigint): boolean\n} = order.greaterThan(Order)\n\n/**\n * Returns a function that checks if a given `bigint` is greater than or equal to the provided one.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { greaterThanOrEqualTo } from \"effect/BigInt\"\n *\n * assert.deepStrictEqual(greaterThanOrEqualTo(2n, 3n), false)\n * assert.deepStrictEqual(greaterThanOrEqualTo(3n, 3n), true)\n * assert.deepStrictEqual(greaterThanOrEqualTo(4n, 3n), true)\n * ```\n *\n * @category predicates\n * @since 2.0.0\n */\nexport const greaterThanOrEqualTo: {\n  /**\n   * Returns a function that checks if a given `bigint` is greater than or equal to the provided one.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { greaterThanOrEqualTo } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(greaterThanOrEqualTo(2n, 3n), false)\n   * assert.deepStrictEqual(greaterThanOrEqualTo(3n, 3n), true)\n   * assert.deepStrictEqual(greaterThanOrEqualTo(4n, 3n), true)\n   * ```\n   *\n   * @category predicates\n   * @since 2.0.0\n   */\n  (that: bigint): (self: bigint) => boolean\n  /**\n   * Returns a function that checks if a given `bigint` is greater than or equal to the provided one.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { greaterThanOrEqualTo } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(greaterThanOrEqualTo(2n, 3n), false)\n   * assert.deepStrictEqual(greaterThanOrEqualTo(3n, 3n), true)\n   * assert.deepStrictEqual(greaterThanOrEqualTo(4n, 3n), true)\n   * ```\n   *\n   * @category predicates\n   * @since 2.0.0\n   */\n  (self: bigint, that: bigint): boolean\n} = order.greaterThanOrEqualTo(Order)\n\n/**\n * Checks if a `bigint` is between a `minimum` and `maximum` value (inclusive).\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { BigInt } from \"effect\"\n *\n * const between = BigInt.between({ minimum: 0n, maximum: 5n })\n *\n * assert.deepStrictEqual(between(3n), true)\n * assert.deepStrictEqual(between(-1n), false)\n * assert.deepStrictEqual(between(6n), false)\n * ```\n *\n * @category predicates\n * @since 2.0.0\n */\nexport const between: {\n  /**\n   * Checks if a `bigint` is between a `minimum` and `maximum` value (inclusive).\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { BigInt } from \"effect\"\n   *\n   * const between = BigInt.between({ minimum: 0n, maximum: 5n })\n   *\n   * assert.deepStrictEqual(between(3n), true)\n   * assert.deepStrictEqual(between(-1n), false)\n   * assert.deepStrictEqual(between(6n), false)\n   * ```\n   *\n   * @category predicates\n   * @since 2.0.0\n   */\n  (\n    options: {\n      minimum: bigint\n      maximum: bigint\n    }\n  ): (self: bigint) => boolean\n  /**\n   * Checks if a `bigint` is between a `minimum` and `maximum` value (inclusive).\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { BigInt } from \"effect\"\n   *\n   * const between = BigInt.between({ minimum: 0n, maximum: 5n })\n   *\n   * assert.deepStrictEqual(between(3n), true)\n   * assert.deepStrictEqual(between(-1n), false)\n   * assert.deepStrictEqual(between(6n), false)\n   * ```\n   *\n   * @category predicates\n   * @since 2.0.0\n   */\n  (\n    self: bigint,\n    options: {\n      minimum: bigint\n      maximum: bigint\n    }\n  ): boolean\n} = order.between(Order)\n\n/**\n * Restricts the given `bigint` to be within the range specified by the `minimum` and `maximum` values.\n *\n * - If the `bigint` is less than the `minimum` value, the function returns the `minimum` value.\n * - If the `bigint` is greater than the `maximum` value, the function returns the `maximum` value.\n * - Otherwise, it returns the original `bigint`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { BigInt } from \"effect\"\n *\n * const clamp = BigInt.clamp({ minimum: 1n, maximum: 5n })\n *\n * assert.equal(clamp(3n), 3n)\n * assert.equal(clamp(0n), 1n)\n * assert.equal(clamp(6n), 5n)\n * ```\n *\n * @since 2.0.0\n */\nexport const clamp: {\n  /**\n   * Restricts the given `bigint` to be within the range specified by the `minimum` and `maximum` values.\n   *\n   * - If the `bigint` is less than the `minimum` value, the function returns the `minimum` value.\n   * - If the `bigint` is greater than the `maximum` value, the function returns the `maximum` value.\n   * - Otherwise, it returns the original `bigint`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { BigInt } from \"effect\"\n   *\n   * const clamp = BigInt.clamp({ minimum: 1n, maximum: 5n })\n   *\n   * assert.equal(clamp(3n), 3n)\n   * assert.equal(clamp(0n), 1n)\n   * assert.equal(clamp(6n), 5n)\n   * ```\n   *\n   * @since 2.0.0\n   */\n  (\n    options: {\n      minimum: bigint\n      maximum: bigint\n    }\n  ): (self: bigint) => bigint\n  /**\n   * Restricts the given `bigint` to be within the range specified by the `minimum` and `maximum` values.\n   *\n   * - If the `bigint` is less than the `minimum` value, the function returns the `minimum` value.\n   * - If the `bigint` is greater than the `maximum` value, the function returns the `maximum` value.\n   * - Otherwise, it returns the original `bigint`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { BigInt } from \"effect\"\n   *\n   * const clamp = BigInt.clamp({ minimum: 1n, maximum: 5n })\n   *\n   * assert.equal(clamp(3n), 3n)\n   * assert.equal(clamp(0n), 1n)\n   * assert.equal(clamp(6n), 5n)\n   * ```\n   *\n   * @since 2.0.0\n   */\n  (\n    self: bigint,\n    options: {\n      minimum: bigint\n      maximum: bigint\n    }\n  ): bigint\n} = order.clamp(Order)\n\n/**\n * Returns the minimum between two `bigint`s.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { min } from \"effect/BigInt\"\n *\n * assert.deepStrictEqual(min(2n, 3n), 2n)\n * ```\n *\n * @since 2.0.0\n */\nexport const min: {\n  /**\n   * Returns the minimum between two `bigint`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { min } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(min(2n, 3n), 2n)\n   * ```\n   *\n   * @since 2.0.0\n   */\n  (that: bigint): (self: bigint) => bigint\n  /**\n   * Returns the minimum between two `bigint`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { min } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(min(2n, 3n), 2n)\n   * ```\n   *\n   * @since 2.0.0\n   */\n  (self: bigint, that: bigint): bigint\n} = order.min(Order)\n\n/**\n * Returns the maximum between two `bigint`s.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { max } from \"effect/BigInt\"\n *\n * assert.deepStrictEqual(max(2n, 3n), 3n)\n * ```\n *\n * @since 2.0.0\n */\nexport const max: {\n  /**\n   * Returns the maximum between two `bigint`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { max } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(max(2n, 3n), 3n)\n   * ```\n   *\n   * @since 2.0.0\n   */\n  (that: bigint): (self: bigint) => bigint\n  /**\n   * Returns the maximum between two `bigint`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { max } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(max(2n, 3n), 3n)\n   * ```\n   *\n   * @since 2.0.0\n   */\n  (self: bigint, that: bigint): bigint\n} = order.max(Order)\n\n/**\n * Determines the sign of a given `bigint`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { sign } from \"effect/BigInt\"\n *\n * assert.deepStrictEqual(sign(-5n), -1)\n * assert.deepStrictEqual(sign(0n), 0)\n * assert.deepStrictEqual(sign(5n), 1)\n * ```\n *\n * @category math\n * @since 2.0.0\n */\nexport const sign = (n: bigint): Ordering => Order(n, bigint0)\n\n/**\n * Determines the absolute value of a given `bigint`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { abs } from \"effect/BigInt\"\n *\n * assert.deepStrictEqual(abs(-5n), 5n)\n * assert.deepStrictEqual(abs(0n), 0n)\n * assert.deepStrictEqual(abs(5n), 5n)\n * ```\n *\n * @category math\n * @since 2.0.0\n */\nexport const abs = (n: bigint): bigint => (n < bigint0 ? -n : n)\n\n/**\n * Determines the greatest common divisor of two `bigint`s.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { gcd } from \"effect/BigInt\"\n *\n * assert.deepStrictEqual(gcd(2n, 3n), 1n)\n * assert.deepStrictEqual(gcd(2n, 4n), 2n)\n * assert.deepStrictEqual(gcd(16n, 24n), 8n)\n * ```\n *\n * @category math\n * @since 2.0.0\n */\nexport const gcd: {\n  /**\n   * Determines the greatest common divisor of two `bigint`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { gcd } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(gcd(2n, 3n), 1n)\n   * assert.deepStrictEqual(gcd(2n, 4n), 2n)\n   * assert.deepStrictEqual(gcd(16n, 24n), 8n)\n   * ```\n   *\n   * @category math\n   * @since 2.0.0\n   */\n  (that: bigint): (self: bigint) => bigint\n  /**\n   * Determines the greatest common divisor of two `bigint`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { gcd } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(gcd(2n, 3n), 1n)\n   * assert.deepStrictEqual(gcd(2n, 4n), 2n)\n   * assert.deepStrictEqual(gcd(16n, 24n), 8n)\n   * ```\n   *\n   * @category math\n   * @since 2.0.0\n   */\n  (self: bigint, that: bigint): bigint\n} = dual(2, (self: bigint, that: bigint): bigint => {\n  while (that !== bigint0) {\n    const t = that\n    that = self % that\n    self = t\n  }\n  return self\n})\n\n/**\n * Determines the least common multiple of two `bigint`s.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { lcm } from \"effect/BigInt\"\n *\n * assert.deepStrictEqual(lcm(2n, 3n), 6n)\n * assert.deepStrictEqual(lcm(2n, 4n), 4n)\n * assert.deepStrictEqual(lcm(16n, 24n), 48n)\n * ```\n *\n * @category math\n * @since 2.0.0\n */\nexport const lcm: {\n  /**\n   * Determines the least common multiple of two `bigint`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { lcm } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(lcm(2n, 3n), 6n)\n   * assert.deepStrictEqual(lcm(2n, 4n), 4n)\n   * assert.deepStrictEqual(lcm(16n, 24n), 48n)\n   * ```\n   *\n   * @category math\n   * @since 2.0.0\n   */\n  (that: bigint): (self: bigint) => bigint\n  /**\n   * Determines the least common multiple of two `bigint`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { lcm } from \"effect/BigInt\"\n   *\n   * assert.deepStrictEqual(lcm(2n, 3n), 6n)\n   * assert.deepStrictEqual(lcm(2n, 4n), 4n)\n   * assert.deepStrictEqual(lcm(16n, 24n), 48n)\n   * ```\n   *\n   * @category math\n   * @since 2.0.0\n   */\n  (self: bigint, that: bigint): bigint\n} = dual(2, (self: bigint, that: bigint): bigint => (self * that) / gcd(self, that))\n\n/**\n * Determines the square root of a given `bigint` unsafely. Throws if the given `bigint` is negative.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { unsafeSqrt } from \"effect/BigInt\"\n *\n * assert.deepStrictEqual(unsafeSqrt(4n), 2n)\n * assert.deepStrictEqual(unsafeSqrt(9n), 3n)\n * assert.deepStrictEqual(unsafeSqrt(16n), 4n)\n * ```\n *\n * @category math\n * @since 2.0.0\n */\nexport const unsafeSqrt = (n: bigint): bigint => {\n  if (n < bigint0) {\n    throw new RangeError(\"Cannot take the square root of a negative number\")\n  }\n  if (n < bigint2) {\n    return n\n  }\n  let x = n / bigint2\n  while (x * x > n) {\n    x = ((n / x) + x) / bigint2\n  }\n  return x\n}\n\n/**\n * Determines the square root of a given `bigint` safely. Returns `none` if the given `bigint` is negative.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { BigInt, Option } from \"effect\"\n *\n * assert.deepStrictEqual(BigInt.sqrt(4n), Option.some(2n))\n * assert.deepStrictEqual(BigInt.sqrt(9n), Option.some(3n))\n * assert.deepStrictEqual(BigInt.sqrt(16n), Option.some(4n))\n * assert.deepStrictEqual(BigInt.sqrt(-1n), Option.none())\n * ```\n *\n * @category math\n * @since 2.0.0\n */\nexport const sqrt = (n: bigint): Option.Option<bigint> =>\n  greaterThanOrEqualTo(n, bigint0) ? Option.some(unsafeSqrt(n)) : Option.none<bigint>()\n\n/**\n * Takes an `Iterable` of `bigint`s and returns their sum as a single `bigint\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { sumAll } from \"effect/BigInt\"\n *\n * assert.deepStrictEqual(sumAll([2n, 3n, 4n]), 9n)\n * ```\n *\n * @category math\n * @since 2.0.0\n */\nexport const sumAll = (collection: Iterable<bigint>): bigint => {\n  let out = bigint0\n  for (const n of collection) {\n    out += n\n  }\n  return out\n}\n\n/**\n * Takes an `Iterable` of `bigint`s and returns their multiplication as a single `number`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { multiplyAll } from \"effect/BigInt\"\n *\n * assert.deepStrictEqual(multiplyAll([2n, 3n, 4n]), 24n)\n * ```\n *\n * @category math\n * @since 2.0.0\n */\nexport const multiplyAll = (collection: Iterable<bigint>): bigint => {\n  let out = bigint1\n  for (const n of collection) {\n    if (n === bigint0) {\n      return bigint0\n    }\n    out *= n\n  }\n  return out\n}\n\n/**\n * Takes a `bigint` and returns an `Option` of `number`.\n *\n * If the `bigint` is outside the safe integer range for JavaScript (`Number.MAX_SAFE_INTEGER`\n * and `Number.MIN_SAFE_INTEGER`), it returns `Option.none()`. Otherwise, it converts the `bigint`\n * to a number and returns `Option.some(number)`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { BigInt as BI, Option } from \"effect\"\n *\n * assert.deepStrictEqual(BI.toNumber(BigInt(42)), Option.some(42))\n * assert.deepStrictEqual(BI.toNumber(BigInt(Number.MAX_SAFE_INTEGER) + BigInt(1)), Option.none())\n * assert.deepStrictEqual(BI.toNumber(BigInt(Number.MIN_SAFE_INTEGER) - BigInt(1)), Option.none())\n * ```\n *\n * @category conversions\n * @since 2.0.0\n */\nexport const toNumber = (b: bigint): Option.Option<number> => {\n  if (b > BigInt(Number.MAX_SAFE_INTEGER) || b < BigInt(Number.MIN_SAFE_INTEGER)) {\n    return Option.none()\n  }\n  return Option.some(Number(b))\n}\n\n/**\n * Takes a string and returns an `Option` of `bigint`.\n *\n * If the string is empty or contains characters that cannot be converted into a `bigint`,\n * it returns `Option.none()`, otherwise, it returns `Option.some(bigint)`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { BigInt as BI, Option } from \"effect\"\n *\n * assert.deepStrictEqual(BI.fromString(\"42\"), Option.some(BigInt(42)))\n * assert.deepStrictEqual(BI.fromString(\" \"), Option.none())\n * assert.deepStrictEqual(BI.fromString(\"a\"), Option.none())\n * ```\n *\n * @category conversions\n * @since 2.4.12\n */\nexport const fromString = (s: string): Option.Option<bigint> => {\n  try {\n    return s.trim() === \"\"\n      ? Option.none()\n      : Option.some(BigInt(s))\n  } catch {\n    return Option.none()\n  }\n}\n\n/**\n * Takes a number and returns an `Option` of `bigint`.\n *\n * If the number is outside the safe integer range for JavaScript (`Number.MAX_SAFE_INTEGER`\n * and `Number.MIN_SAFE_INTEGER`), it returns `Option.none()`. Otherwise, it attempts to\n * convert the number to a `bigint` and returns `Option.some(bigint)`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { BigInt as BI, Option } from \"effect\"\n *\n * assert.deepStrictEqual(BI.fromNumber(42), Option.some(BigInt(42)))\n * assert.deepStrictEqual(BI.fromNumber(Number.MAX_SAFE_INTEGER + 1), Option.none())\n * assert.deepStrictEqual(BI.fromNumber(Number.MIN_SAFE_INTEGER - 1), Option.none())\n * ```\n *\n * @category conversions\n * @since 2.4.12\n */\nexport const fromNumber = (n: number): Option.Option<bigint> => {\n  if (n > Number.MAX_SAFE_INTEGER || n < Number.MIN_SAFE_INTEGER) {\n    return Option.none()\n  }\n\n  try {\n    return Option.some(BigInt(n))\n  } catch {\n    return Option.none()\n  }\n}\n","import * as Arr from \"../Array.js\"\nimport { hasProperty } from \"../Predicate.js\"\nimport type * as Secret from \"../Secret.js\"\nimport * as redacted_ from \"./redacted.js\"\n\n/**\n * @internal\n * @deprecated\n */\nconst SecretSymbolKey = \"effect/Secret\"\n\n/**\n * @internal\n * @deprecated\n */\nexport const SecretTypeId: Secret.SecretTypeId = Symbol.for(\n  SecretSymbolKey\n) as Secret.SecretTypeId\n\n/**\n * @internal\n * @deprecated\n */\nexport const isSecret = (u: unknown): u is Secret.Secret => hasProperty(u, SecretTypeId)\n\nconst SecretProto = {\n  ...redacted_.proto,\n  [SecretTypeId]: SecretTypeId\n}\n\n/**\n * @internal\n * @deprecated\n */\nexport const make = (bytes: Array<number>): Secret.Secret => {\n  const secret = Object.create(SecretProto)\n  Object.defineProperty(secret, \"toString\", {\n    enumerable: false,\n    value() {\n      return \"Secret(<redacted>)\"\n    }\n  })\n  Object.defineProperty(secret, \"toJSON\", {\n    enumerable: false,\n    value() {\n      return \"<redacted>\"\n    }\n  })\n  Object.defineProperty(secret, \"raw\", {\n    enumerable: false,\n    value: bytes\n  })\n  redacted_.redactedRegistry.set(secret, bytes.map((byte) => String.fromCharCode(byte)).join(\"\"))\n  return secret\n}\n\n/**\n * @internal\n * @deprecated\n */\nexport const fromIterable = (iterable: Iterable<string>): Secret.Secret =>\n  make(Arr.fromIterable(iterable).map((char) => char.charCodeAt(0)))\n\n/**\n * @internal\n * @deprecated\n */\nexport const fromString = (text: string): Secret.Secret => {\n  return make(text.split(\"\").map((char) => char.charCodeAt(0)))\n}\n\n/**\n * @internal\n * @deprecated\n */\nexport const value = (self: Secret.Secret): string => {\n  return self.raw.map((byte) => String.fromCharCode(byte)).join(\"\")\n}\n\n/**\n * @internal\n * @deprecated\n */\nexport const unsafeWipe = (self: Secret.Secret): void => {\n  for (let i = 0; i < self.raw.length; i++) {\n    self.raw[i] = 0\n  }\n  redacted_.redactedRegistry.delete(self)\n}\n","import type * as Brand from \"../Brand.js\"\nimport * as Chunk from \"../Chunk.js\"\nimport type * as Config from \"../Config.js\"\nimport * as ConfigError from \"../ConfigError.js\"\nimport * as Duration from \"../Duration.js\"\nimport * as Either from \"../Either.js\"\nimport type { LazyArg } from \"../Function.js\"\nimport { constTrue, dual, pipe } from \"../Function.js\"\nimport type * as HashMap from \"../HashMap.js\"\nimport * as HashSet from \"../HashSet.js\"\nimport type * as LogLevel from \"../LogLevel.js\"\nimport * as Option from \"../Option.js\"\nimport { hasProperty, type Predicate, type Refinement } from \"../Predicate.js\"\nimport type * as Redacted from \"../Redacted.js\"\nimport type * as Secret from \"../Secret.js\"\nimport * as configError from \"./configError.js\"\nimport * as core from \"./core.js\"\nimport * as defaultServices from \"./defaultServices.js\"\nimport * as effectable from \"./effectable.js\"\nimport * as OpCodes from \"./opCodes/config.js\"\nimport * as redacted_ from \"./redacted.js\"\nimport * as InternalSecret from \"./secret.js\"\n\nconst ConfigSymbolKey = \"effect/Config\"\n\n/** @internal */\nexport const ConfigTypeId: Config.ConfigTypeId = Symbol.for(\n  ConfigSymbolKey\n) as Config.ConfigTypeId\n\n/** @internal */\nexport type ConfigPrimitive =\n  | Constant\n  | Described\n  | Fallback\n  | Fail\n  | Lazy\n  | MapOrFail\n  | Nested\n  | Primitive\n  | Sequence\n  | Table\n  | Zipped\n\nconst configVariance = {\n  /* c8 ignore next */\n  _A: (_: never) => _\n}\n\nconst proto = {\n  ...effectable.CommitPrototype,\n  [ConfigTypeId]: configVariance,\n  commit(this: Config.Config<unknown>) {\n    return defaultServices.config(this)\n  }\n}\n\n/** @internal */\nexport type Op<Tag extends string, Body = {}> = Config.Config<never> & Body & {\n  readonly _tag: Tag\n}\n\n/** @internal */\nexport interface Constant extends\n  Op<OpCodes.OP_CONSTANT, {\n    readonly value: unknown\n    parse(text: string): Either.Either<unknown, ConfigError.ConfigError>\n  }>\n{}\n\n/** @internal */\nexport interface Described extends\n  Op<OpCodes.OP_DESCRIBED, {\n    readonly config: Config.Config<unknown>\n    readonly description: string\n  }>\n{}\n\n/** @internal */\nexport interface Fallback extends\n  Op<OpCodes.OP_FALLBACK, {\n    readonly first: Config.Config<unknown>\n    readonly second: Config.Config<unknown>\n    readonly condition: Predicate<ConfigError.ConfigError>\n  }>\n{}\n\n/** @internal */\nexport interface Fail extends\n  Op<OpCodes.OP_FAIL, {\n    readonly message: string\n    parse(text: string): Either.Either<unknown, ConfigError.ConfigError>\n  }>\n{}\n\n/** @internal */\nexport interface Lazy extends\n  Op<OpCodes.OP_LAZY, {\n    config(): Config.Config<unknown>\n  }>\n{}\n\n/** @internal */\nexport interface MapOrFail extends\n  Op<OpCodes.OP_MAP_OR_FAIL, {\n    readonly original: Config.Config<unknown>\n    mapOrFail(value: unknown): Either.Either<unknown, ConfigError.ConfigError>\n  }>\n{}\n\n/** @internal */\nexport interface Nested extends\n  Op<OpCodes.OP_NESTED, {\n    readonly name: string\n    readonly config: Config.Config<unknown>\n  }>\n{}\n\n/** @internal */\nexport interface Primitive extends\n  Op<OpCodes.OP_PRIMITIVE, {\n    readonly description: string\n    parse(text: string): Either.Either<unknown, ConfigError.ConfigError>\n  }>\n{}\n\n/** @internal */\nexport interface Sequence extends\n  Op<OpCodes.OP_SEQUENCE, {\n    readonly config: Config.Config<unknown>\n  }>\n{}\n\n/** @internal */\nexport interface Table extends\n  Op<OpCodes.OP_HASHMAP, {\n    readonly op: OpCodes.OP_HASHMAP\n    readonly valueConfig: Config.Config<unknown>\n  }>\n{}\n\n/** @internal */\nexport interface Zipped extends\n  Op<OpCodes.OP_ZIP_WITH, {\n    readonly op: OpCodes.OP_ZIP_WITH\n    readonly left: Config.Config<unknown>\n    readonly right: Config.Config<unknown>\n    zip(a: unknown, b: unknown): unknown\n  }>\n{}\n\n/** @internal */\nexport const boolean = (name?: string): Config.Config<boolean> => {\n  const config = primitive(\n    \"a boolean property\",\n    (text) => {\n      switch (text) {\n        case \"true\":\n        case \"yes\":\n        case \"on\":\n        case \"1\": {\n          return Either.right(true)\n        }\n        case \"false\":\n        case \"no\":\n        case \"off\":\n        case \"0\": {\n          return Either.right(false)\n        }\n        default: {\n          const error = configError.InvalidData(\n            [],\n            `Expected a boolean value but received ${text}`\n          )\n          return Either.left(error)\n        }\n      }\n    }\n  )\n  return name === undefined ? config : nested(config, name)\n}\n\n/** @internal */\nexport const url = (name?: string): Config.Config<URL> => {\n  const config = primitive(\n    \"an URL property\",\n    (text) =>\n      Either.try({\n        try: () => new URL(text),\n        catch: (_) => configError.InvalidData([], `Expected an URL value but received ${text}`)\n      })\n  )\n  return name === undefined ? config : nested(config, name)\n}\n\n/** @internal */\nexport const port = (name?: string): Config.Config<number> => {\n  const config = primitive(\n    \"a network port property\",\n    (text) => {\n      const result = Number(text)\n\n      if (\n        Number.isNaN(result) ||\n        result.toString() !== text.toString() ||\n        !Number.isInteger(result) ||\n        result < 1 ||\n        result > 65535\n      ) {\n        return Either.left(\n          configError.InvalidData(\n            [],\n            `Expected a network port value but received ${text}`\n          )\n        )\n      }\n      return Either.right(result)\n    }\n  )\n  return name === undefined ? config : nested(config, name)\n}\n\n/** @internal */\nexport const array = <A>(config: Config.Config<A>, name?: string): Config.Config<Array<A>> => {\n  return pipe(chunk(config, name), map(Chunk.toArray))\n}\n\n/** @internal */\nexport const chunk = <A>(config: Config.Config<A>, name?: string): Config.Config<Chunk.Chunk<A>> => {\n  return map(name === undefined ? repeat(config) : nested(repeat(config), name), Chunk.unsafeFromArray)\n}\n\n/** @internal */\nexport const date = (name?: string): Config.Config<Date> => {\n  const config = primitive(\n    \"a date property\",\n    (text) => {\n      const result = Date.parse(text)\n      if (Number.isNaN(result)) {\n        return Either.left(\n          configError.InvalidData(\n            [],\n            `Expected a Date value but received ${text}`\n          )\n        )\n      }\n      return Either.right(new Date(result))\n    }\n  )\n  return name === undefined ? config : nested(config, name)\n}\n\n/** @internal */\nexport const fail = (message: string): Config.Config<never> => {\n  const fail = Object.create(proto)\n  fail._tag = OpCodes.OP_FAIL\n  fail.message = message\n  fail.parse = () => Either.left(configError.Unsupported([], message))\n  return fail\n}\n\n/** @internal */\nexport const number = (name?: string): Config.Config<number> => {\n  const config = primitive(\n    \"a number property\",\n    (text) => {\n      const result = Number(text)\n      if (Number.isNaN(result)) {\n        return Either.left(\n          configError.InvalidData(\n            [],\n            `Expected a number value but received ${text}`\n          )\n        )\n      }\n      return Either.right(result)\n    }\n  )\n  return name === undefined ? config : nested(config, name)\n}\n\n/** @internal */\nexport const integer = (name?: string): Config.Config<number> => {\n  const config = primitive(\n    \"an integer property\",\n    (text) => {\n      const result = Number(text)\n      if (!Number.isInteger(result)) {\n        return Either.left(\n          configError.InvalidData(\n            [],\n            `Expected an integer value but received ${text}`\n          )\n        )\n      }\n      return Either.right(result)\n    }\n  )\n  return name === undefined ? config : nested(config, name)\n}\n\n/** @internal */\nexport const literal = <Literals extends ReadonlyArray<Config.LiteralValue>>(...literals: Literals) =>\n(\n  name?: string\n): Config.Config<Literals[number]> => {\n  const valuesString = literals.map(String).join(\", \")\n  const config = primitive(`one of (${valuesString})`, (text) => {\n    const found = literals.find((value) => String(value) === text)\n    if (found === undefined) {\n      return Either.left(\n        configError.InvalidData(\n          [],\n          `Expected one of (${valuesString}) but received ${text}`\n        )\n      )\n    }\n    return Either.right(found)\n  })\n  return name === undefined ? config : nested(config, name)\n}\n\n/** @internal */\nexport const logLevel = (name?: string): Config.Config<LogLevel.LogLevel> => {\n  const config = mapOrFail(string(), (value) => {\n    const label = value.toUpperCase()\n    const level = core.allLogLevels.find((level) => level.label === label)\n    return level === undefined\n      ? Either.left(configError.InvalidData([], `Expected a log level but received ${value}`))\n      : Either.right(level)\n  })\n  return name === undefined ? config : nested(config, name)\n}\n\n/** @internal */\nexport const duration = (name?: string): Config.Config<Duration.Duration> => {\n  const config = mapOrFail(string(), (value) => {\n    const duration = Duration.decodeUnknown(value)\n    return Either.fromOption(duration, () => configError.InvalidData([], `Expected a duration but received ${value}`))\n  })\n  return name === undefined ? config : nested(config, name)\n}\n\n/** @internal */\nexport const map = dual<\n  <A, B>(f: (a: A) => B) => (self: Config.Config<A>) => Config.Config<B>,\n  <A, B>(self: Config.Config<A>, f: (a: A) => B) => Config.Config<B>\n>(2, (self, f) => mapOrFail(self, (a) => Either.right(f(a))))\n\n/** @internal */\nexport const mapAttempt = dual<\n  <A, B>(f: (a: A) => B) => (self: Config.Config<A>) => Config.Config<B>,\n  <A, B>(self: Config.Config<A>, f: (a: A) => B) => Config.Config<B>\n>(2, (self, f) =>\n  mapOrFail(self, (a) => {\n    try {\n      return Either.right(f(a))\n    } catch (error) {\n      return Either.left(\n        configError.InvalidData(\n          [],\n          error instanceof Error ? error.message : `${error}`\n        )\n      )\n    }\n  }))\n\n/** @internal */\nexport const mapOrFail = dual<\n  <A, B>(f: (a: A) => Either.Either<B, ConfigError.ConfigError>) => (self: Config.Config<A>) => Config.Config<B>,\n  <A, B>(self: Config.Config<A>, f: (a: A) => Either.Either<B, ConfigError.ConfigError>) => Config.Config<B>\n>(2, (self, f) => {\n  const mapOrFail = Object.create(proto)\n  mapOrFail._tag = OpCodes.OP_MAP_OR_FAIL\n  mapOrFail.original = self\n  mapOrFail.mapOrFail = f\n  return mapOrFail\n})\n\n/** @internal */\nexport const nested = dual<\n  (name: string) => <A>(self: Config.Config<A>) => Config.Config<A>,\n  <A>(self: Config.Config<A>, name: string) => Config.Config<A>\n>(2, (self, name) => {\n  const nested = Object.create(proto)\n  nested._tag = OpCodes.OP_NESTED\n  nested.name = name\n  nested.config = self\n  return nested\n})\n\n/** @internal */\nexport const orElse = dual<\n  <A2>(that: LazyArg<Config.Config<A2>>) => <A>(self: Config.Config<A>) => Config.Config<A | A2>,\n  <A, A2>(self: Config.Config<A>, that: LazyArg<Config.Config<A2>>) => Config.Config<A | A2>\n>(2, (self, that) => {\n  const fallback = Object.create(proto)\n  fallback._tag = OpCodes.OP_FALLBACK\n  fallback.first = self\n  fallback.second = suspend(that)\n  fallback.condition = constTrue\n  return fallback\n})\n\n/** @internal */\nexport const orElseIf = dual<\n  <A2>(\n    options: {\n      readonly if: Predicate<ConfigError.ConfigError>\n      readonly orElse: LazyArg<Config.Config<A2>>\n    }\n  ) => <A>(self: Config.Config<A>) => Config.Config<A>,\n  <A, A2>(\n    self: Config.Config<A>,\n    options: {\n      readonly if: Predicate<ConfigError.ConfigError>\n      readonly orElse: LazyArg<Config.Config<A2>>\n    }\n  ) => Config.Config<A>\n>(2, (self, options) => {\n  const fallback = Object.create(proto)\n  fallback._tag = OpCodes.OP_FALLBACK\n  fallback.first = self\n  fallback.second = suspend(options.orElse)\n  fallback.condition = options.if\n  return fallback\n})\n\n/** @internal */\nexport const option = <A>(self: Config.Config<A>): Config.Config<Option.Option<A>> => {\n  return pipe(\n    self,\n    map(Option.some),\n    orElseIf({ orElse: () => succeed(Option.none()), if: ConfigError.isMissingDataOnly })\n  )\n}\n\n/** @internal */\nexport const primitive = <A>(\n  description: string,\n  parse: (text: string) => Either.Either<A, ConfigError.ConfigError>\n): Config.Config<A> => {\n  const primitive = Object.create(proto)\n  primitive._tag = OpCodes.OP_PRIMITIVE\n  primitive.description = description\n  primitive.parse = parse\n  return primitive\n}\n\n/** @internal */\nexport const repeat = <A>(self: Config.Config<A>): Config.Config<Array<A>> => {\n  const repeat = Object.create(proto)\n  repeat._tag = OpCodes.OP_SEQUENCE\n  repeat.config = self\n  return repeat\n}\n\n/** @internal */\nexport const secret = (name?: string): Config.Config<Secret.Secret> => {\n  const config = primitive(\n    \"a secret property\",\n    (text) => Either.right(InternalSecret.fromString(text))\n  )\n  return name === undefined ? config : nested(config, name)\n}\n\n/** @internal */\nexport const redacted = <A>(\n  nameOrConfig?: string | Config.Config<A>\n): Config.Config<Redacted.Redacted<A | string>> => {\n  const config: Config.Config<A | string> = isConfig(nameOrConfig) ? nameOrConfig : string(nameOrConfig)\n  return map(config, redacted_.make)\n}\n\n/** @internal */\nexport const branded: {\n  <A, B extends Brand.Branded<A, any>>(\n    constructor: Brand.Brand.Constructor<B>\n  ): (config: Config.Config<A>) => Config.Config<B>\n  <B extends Brand.Branded<string, any>>(\n    name: string | undefined,\n    constructor: Brand.Brand.Constructor<B>\n  ): Config.Config<B>\n  <A, B extends Brand.Branded<A, any>>(\n    config: Config.Config<A>,\n    constructor: Brand.Brand.Constructor<B>\n  ): Config.Config<B>\n} = dual(2, <A, B extends Brand.Brand.Constructor<any>>(\n  nameOrConfig: Config.Config<NoInfer<A>> | string | undefined,\n  constructor: B\n) => {\n  const config: Config.Config<string | A> = isConfig(nameOrConfig) ? nameOrConfig : string(nameOrConfig)\n\n  return mapOrFail(config, (a) =>\n    constructor.either(a).pipe(\n      Either.mapLeft((brandErrors) =>\n        configError.InvalidData([], brandErrors.map((brandError) => brandError.message).join(\"\\n\"))\n      )\n    ))\n})\n\n/** @internal */\nexport const hashSet = <A>(config: Config.Config<A>, name?: string): Config.Config<HashSet.HashSet<A>> => {\n  const newConfig = map(chunk(config), HashSet.fromIterable)\n  return name === undefined ? newConfig : nested(newConfig, name)\n}\n\n/** @internal */\nexport const string = (name?: string): Config.Config<string> => {\n  const config = primitive(\n    \"a text property\",\n    Either.right\n  )\n  return name === undefined ? config : nested(config, name)\n}\n\n/** @internal */\nexport const nonEmptyString = (name?: string): Config.Config<string> => {\n  const config = primitive(\n    \"a non-empty text property\",\n    Either.liftPredicate((text) => text.length > 0, () => configError.MissingData([], \"Expected a non-empty string\"))\n  )\n\n  return name === undefined ? config : nested(config, name)\n}\n\n/** @internal */\nexport const all = <const Arg extends Iterable<Config.Config<any>> | Record<string, Config.Config<any>>>(\n  arg: Arg\n): Config.Config<\n  [Arg] extends [ReadonlyArray<Config.Config<any>>] ? {\n      -readonly [K in keyof Arg]: [Arg[K]] extends [Config.Config<infer A>] ? A : never\n    }\n    : [Arg] extends [Iterable<Config.Config<infer A>>] ? Array<A>\n    : [Arg] extends [Record<string, Config.Config<any>>] ? {\n        -readonly [K in keyof Arg]: [Arg[K]] extends [Config.Config<infer A>] ? A : never\n      }\n    : never\n> => {\n  if (Array.isArray(arg)) {\n    return tuple(arg) as any\n  } else if (Symbol.iterator in arg) {\n    return tuple([...(arg as Iterable<Config.Config<any>>)]) as any\n  }\n  return struct(arg) as any\n}\n\nconst struct = <NER extends Record<string, Config.Config<any>>>(r: NER): Config.Config<\n  {\n    [K in keyof NER]: [NER[K]] extends [{ [ConfigTypeId]: { _A: (_: never) => infer A } }] ? A : never\n  }\n> => {\n  const entries = Object.entries(r)\n  let result = pipe(entries[0][1], map((value) => ({ [entries[0][0]]: value })))\n  if (entries.length === 1) {\n    return result as any\n  }\n  const rest = entries.slice(1)\n  for (const [key, config] of rest) {\n    result = pipe(\n      result,\n      zipWith(config, (record, value) => ({ ...record, [key]: value }))\n    )\n  }\n  return result as any\n}\n\n/** @internal */\nexport const succeed = <A>(value: A): Config.Config<A> => {\n  const constant = Object.create(proto)\n  constant._tag = OpCodes.OP_CONSTANT\n  constant.value = value\n  constant.parse = () => Either.right(value)\n  return constant\n}\n\n/** @internal */\nexport const suspend = <A>(config: LazyArg<Config.Config<A>>): Config.Config<A> => {\n  const lazy = Object.create(proto)\n  lazy._tag = OpCodes.OP_LAZY\n  lazy.config = config\n  return lazy\n}\n\n/** @internal */\nexport const sync = <A>(value: LazyArg<A>): Config.Config<A> => {\n  return suspend(() => succeed(value()))\n}\n\n/** @internal */\nexport const hashMap = <A>(config: Config.Config<A>, name?: string): Config.Config<HashMap.HashMap<string, A>> => {\n  const table = Object.create(proto)\n  table._tag = OpCodes.OP_HASHMAP\n  table.valueConfig = config\n  return name === undefined ? table : nested(table, name)\n}\n\n/** @internal */\nexport const isConfig = (u: unknown): u is Config.Config<unknown> => hasProperty(u, ConfigTypeId)\n\n/** @internal */\nconst tuple = <T extends ArrayLike<Config.Config<any>>>(tuple: T): Config.Config<\n  {\n    [K in keyof T]: [T[K]] extends [Config.Config<infer A>] ? A : never\n  }\n> => {\n  if (tuple.length === 0) {\n    return succeed([]) as any\n  }\n  if (tuple.length === 1) {\n    return map(tuple[0], (x) => [x]) as any\n  }\n  let result = map(tuple[0], (x) => [x])\n  for (let i = 1; i < tuple.length; i++) {\n    const config = tuple[i]\n    result = pipe(\n      result,\n      zipWith(config, (tuple, value) => [...tuple, value])\n    ) as any\n  }\n  return result as any\n}\n\n/**\n * @internal\n */\nexport const unwrap = <A>(wrapped: Config.Config.Wrap<A>): Config.Config<A> => {\n  if (isConfig(wrapped)) {\n    return wrapped\n  }\n  return struct(\n    Object.fromEntries(\n      Object.entries(wrapped).map(([k, a]) => [k, unwrap(a as any)])\n    )\n  ) as any\n}\n\n/** @internal */\nexport const validate = dual<\n  {\n    <A, B extends A>(options: {\n      readonly message: string\n      readonly validation: Refinement<A, B>\n    }): (self: Config.Config<A>) => Config.Config<B>\n    <A>(options: {\n      readonly message: string\n      readonly validation: Predicate<A>\n    }): (self: Config.Config<A>) => Config.Config<A>\n  },\n  {\n    <A, B extends A>(self: Config.Config<A>, options: {\n      readonly message: string\n      readonly validation: Refinement<A, B>\n    }): Config.Config<B>\n    <A>(self: Config.Config<A>, options: {\n      readonly message: string\n      readonly validation: Predicate<A>\n    }): Config.Config<A>\n  }\n>(2, <A>(self: Config.Config<A>, { message, validation }: {\n  readonly message: string\n  readonly validation: Predicate<A>\n}) =>\n  mapOrFail(self, (a) => {\n    if (validation(a)) {\n      return Either.right(a)\n    }\n    return Either.left(configError.InvalidData([], message))\n  }))\n\n/** @internal */\nexport const withDefault = dual<\n  <const A2>(def: A2) => <A>(self: Config.Config<A>) => Config.Config<A | A2>,\n  <A, const A2>(self: Config.Config<A>, def: A2) => Config.Config<A | A2>\n>(2, (self, def) =>\n  orElseIf(self, {\n    orElse: () => succeed(def),\n    if: ConfigError.isMissingDataOnly\n  }))\n\n/** @internal */\nexport const withDescription = dual<\n  (description: string) => <A>(self: Config.Config<A>) => Config.Config<A>,\n  <A>(self: Config.Config<A>, description: string) => Config.Config<A>\n>(2, (self, description) => {\n  const described = Object.create(proto)\n  described._tag = OpCodes.OP_DESCRIBED\n  described.config = self\n  described.description = description\n  return described\n})\n\n/** @internal */\nexport const zip = dual<\n  <B>(that: Config.Config<B>) => <A>(self: Config.Config<A>) => Config.Config<[A, B]>,\n  <A, B>(self: Config.Config<A>, that: Config.Config<B>) => Config.Config<[A, B]>\n>(2, (self, that) => zipWith(self, that, (a, b) => [a, b]))\n\n/** @internal */\nexport const zipWith = dual<\n  <B, A, C>(that: Config.Config<B>, f: (a: A, b: B) => C) => (self: Config.Config<A>) => Config.Config<C>,\n  <A, B, C>(self: Config.Config<A>, that: Config.Config<B>, f: (a: A, b: B) => C) => Config.Config<C>\n>(3, (self, that, f) => {\n  const zipWith = Object.create(proto)\n  zipWith._tag = OpCodes.OP_ZIP_WITH\n  zipWith.left = self\n  zipWith.right = that\n  zipWith.zip = f\n  return zipWith\n})\n","/**\n * This module provides encoding & decoding functionality for:\n *\n * - base64 (RFC4648)\n * - base64 (URL)\n * - hex\n *\n * @since 2.0.0\n */\nimport * as Either from \"./Either.js\"\nimport * as Base64 from \"./internal/encoding/base64.js\"\nimport * as Base64Url from \"./internal/encoding/base64Url.js\"\nimport * as Common from \"./internal/encoding/common.js\"\nimport * as Hex from \"./internal/encoding/hex.js\"\n\n/**\n * Encodes the given value into a base64 (RFC4648) `string`.\n *\n * @category encoding\n * @since 2.0.0\n */\nexport const encodeBase64: (input: Uint8Array | string) => string = (input) =>\n  typeof input === \"string\" ? Base64.encode(Common.encoder.encode(input)) : Base64.encode(input)\n\n/**\n * Decodes a base64 (RFC4648) encoded `string` into a `Uint8Array`.\n *\n * @category decoding\n * @since 2.0.0\n */\nexport const decodeBase64 = (str: string): Either.Either<Uint8Array, DecodeException> => Base64.decode(str)\n\n/**\n * Decodes a base64 (RFC4648) encoded `string` into a UTF-8 `string`.\n *\n * @category decoding\n * @since 2.0.0\n */\nexport const decodeBase64String = (str: string) => Either.map(decodeBase64(str), (_) => Common.decoder.decode(_))\n\n/**\n * Encodes the given value into a base64 (URL) `string`.\n *\n * @category encoding\n * @since 2.0.0\n */\nexport const encodeBase64Url: (input: Uint8Array | string) => string = (input) =>\n  typeof input === \"string\" ? Base64Url.encode(Common.encoder.encode(input)) : Base64Url.encode(input)\n\n/**\n * Decodes a base64 (URL) encoded `string` into a `Uint8Array`.\n *\n * @category decoding\n * @since 2.0.0\n */\nexport const decodeBase64Url = (str: string): Either.Either<Uint8Array, DecodeException> => Base64Url.decode(str)\n\n/**\n * Decodes a base64 (URL) encoded `string` into a UTF-8 `string`.\n *\n * @category decoding\n * @since 2.0.0\n */\nexport const decodeBase64UrlString = (str: string) => Either.map(decodeBase64Url(str), (_) => Common.decoder.decode(_))\n\n/**\n * Encodes the given value into a hex `string`.\n *\n * @category encoding\n * @since 2.0.0\n */\nexport const encodeHex: (input: Uint8Array | string) => string = (input) =>\n  typeof input === \"string\" ? Hex.encode(Common.encoder.encode(input)) : Hex.encode(input)\n\n/**\n * Decodes a hex encoded `string` into a `Uint8Array`.\n *\n * @category decoding\n * @since 2.0.0\n */\nexport const decodeHex = (str: string): Either.Either<Uint8Array, DecodeException> => Hex.decode(str)\n\n/**\n * Decodes a hex encoded `string` into a UTF-8 `string`.\n *\n * @category decoding\n * @since 2.0.0\n */\nexport const decodeHexString = (str: string) => Either.map(decodeHex(str), (_) => Common.decoder.decode(_))\n\n/**\n * Encodes a UTF-8 `string` into a URI component `string`.\n *\n * @category encoding\n * @since 3.12.0\n */\nexport const encodeUriComponent = (str: string): Either.Either<string, EncodeException> =>\n  Either.try({\n    try: () => encodeURIComponent(str),\n    catch: (e) => EncodeException(str, e instanceof Error ? e.message : \"Invalid input\")\n  })\n\n/**\n * Decodes a URI component `string` into a UTF-8 `string`.\n *\n * @category decoding\n * @since 3.12.0\n */\nexport const decodeUriComponent = (str: string): Either.Either<string, DecodeException> =>\n  Either.try({\n    try: () => decodeURIComponent(str),\n    catch: (e) => DecodeException(str, e instanceof Error ? e.message : \"Invalid input\")\n  })\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport const DecodeExceptionTypeId: unique symbol = Common.DecodeExceptionTypeId\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport type DecodeExceptionTypeId = typeof DecodeExceptionTypeId\n\n/**\n * Represents a checked exception which occurs when decoding fails.\n *\n * @since 2.0.0\n * @category models\n */\nexport interface DecodeException {\n  readonly _tag: \"DecodeException\"\n  readonly [DecodeExceptionTypeId]: DecodeExceptionTypeId\n  readonly input: string\n  readonly message?: string\n}\n\n/**\n * Creates a checked exception which occurs when decoding fails.\n *\n * @since 2.0.0\n * @category errors\n */\nexport const DecodeException: (input: string, message?: string) => DecodeException = Common.DecodeException\n\n/**\n * Returns `true` if the specified value is an `DecodeException`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isDecodeException: (u: unknown) => u is DecodeException = Common.isDecodeException\n\n/**\n * @since 3.12.0\n * @category symbols\n */\nexport const EncodeExceptionTypeId: unique symbol = Common.EncodeExceptionTypeId\n\n/**\n * @since 3.12.0\n * @category symbols\n */\nexport type EncodeExceptionTypeId = typeof EncodeExceptionTypeId\n\n/**\n * Represents a checked exception which occurs when encoding fails.\n *\n * @since 3.12.0\n * @category models\n */\nexport interface EncodeException {\n  readonly _tag: \"EncodeException\"\n  readonly [EncodeExceptionTypeId]: EncodeExceptionTypeId\n  readonly input: string\n  readonly message?: string\n}\n\n/**\n * Creates a checked exception which occurs when encoding fails.\n *\n * @since 3.12.0\n * @category errors\n */\nexport const EncodeException: (input: string, message?: string) => EncodeException = Common.EncodeException\n\n/**\n * Returns `true` if the specified value is an `EncodeException`, `false` otherwise.\n *\n * @since 3.12.0\n * @category refinements\n */\nexport const isEncodeException: (u: unknown) => u is EncodeException = Common.isEncodeException\n","import { stringify } from '../../../utils/stringify.js';\nimport { array } from '../../array.js';\nimport { oneof } from '../../oneof.js';\nimport { tuple } from '../../tuple.js';\nimport { bigInt } from '../../bigInt.js';\nimport { date } from '../../date.js';\nimport { float32Array } from '../../float32Array.js';\nimport { float64Array } from '../../float64Array.js';\nimport { int16Array } from '../../int16Array.js';\nimport { int32Array } from '../../int32Array.js';\nimport { int8Array } from '../../int8Array.js';\nimport { uint16Array } from '../../uint16Array.js';\nimport { uint32Array } from '../../uint32Array.js';\nimport { uint8Array } from '../../uint8Array.js';\nimport { uint8ClampedArray } from '../../uint8ClampedArray.js';\nimport { sparseArray } from '../../sparseArray.js';\nimport { arrayToMapMapper, arrayToMapUnmapper } from '../mappers/ArrayToMap.js';\nimport { arrayToSetMapper, arrayToSetUnmapper } from '../mappers/ArrayToSet.js';\nimport { letrec } from '../../letrec.js';\nimport { uniqueArray } from '../../uniqueArray.js';\nimport { createDepthIdentifier } from '../helpers/DepthContext.js';\nimport { dictionary } from '../../dictionary.js';\nfunction mapOf(ka, va, maxKeys, size, depthIdentifier) {\n    return uniqueArray(tuple(ka, va), {\n        maxLength: maxKeys,\n        size,\n        comparator: 'SameValueZero',\n        selector: (t) => t[0],\n        depthIdentifier,\n    }).map(arrayToMapMapper, arrayToMapUnmapper);\n}\nfunction dictOf(ka, va, maxKeys, size, depthIdentifier, withNullPrototype) {\n    return dictionary(ka, va, {\n        maxKeys,\n        noNullPrototype: !withNullPrototype,\n        size,\n        depthIdentifier,\n    });\n}\nfunction setOf(va, maxKeys, size, depthIdentifier) {\n    return uniqueArray(va, { maxLength: maxKeys, size, comparator: 'SameValueZero', depthIdentifier }).map(arrayToSetMapper, arrayToSetUnmapper);\n}\nfunction typedArray(constraints) {\n    return oneof(int8Array(constraints), uint8Array(constraints), uint8ClampedArray(constraints), int16Array(constraints), uint16Array(constraints), int32Array(constraints), uint32Array(constraints), float32Array(constraints), float64Array(constraints));\n}\nexport function anyArbitraryBuilder(constraints) {\n    const arbitrariesForBase = constraints.values;\n    const depthSize = constraints.depthSize;\n    const depthIdentifier = createDepthIdentifier();\n    const maxDepth = constraints.maxDepth;\n    const maxKeys = constraints.maxKeys;\n    const size = constraints.size;\n    const baseArb = oneof(...arbitrariesForBase, ...(constraints.withBigInt ? [bigInt()] : []), ...(constraints.withDate ? [date()] : []));\n    return letrec((tie) => ({\n        anything: oneof({ maxDepth, depthSize, depthIdentifier }, baseArb, tie('array'), tie('object'), ...(constraints.withMap ? [tie('map')] : []), ...(constraints.withSet ? [tie('set')] : []), ...(constraints.withObjectString ? [tie('anything').map((o) => stringify(o))] : []), ...(constraints.withTypedArray ? [typedArray({ maxLength: maxKeys, size })] : []), ...(constraints.withSparseArray\n            ? [sparseArray(tie('anything'), { maxNumElements: maxKeys, size, depthIdentifier })]\n            : [])),\n        keys: constraints.withObjectString\n            ? oneof({ arbitrary: constraints.key, weight: 10 }, { arbitrary: tie('anything').map((o) => stringify(o)), weight: 1 })\n            : constraints.key,\n        array: array(tie('anything'), { maxLength: maxKeys, size, depthIdentifier }),\n        set: setOf(tie('anything'), maxKeys, size, depthIdentifier),\n        map: oneof(mapOf(tie('keys'), tie('anything'), maxKeys, size, depthIdentifier), mapOf(tie('anything'), tie('anything'), maxKeys, size, depthIdentifier)),\n        object: dictOf(tie('keys'), tie('anything'), maxKeys, size, depthIdentifier, constraints.withNullPrototype),\n    })).anything;\n}\n","/**\n * A `Layer<ROut, E, RIn>` describes how to build one or more services in your\n * application. Services can be injected into effects via\n * `Effect.provideService`. Effects can require services via `Effect.service`.\n *\n * Layer can be thought of as recipes for producing bundles of services, given\n * their dependencies (other services).\n *\n * Construction of services can be effectful and utilize resources that must be\n * acquired and safely released when the services are done being utilized.\n *\n * By default layers are shared, meaning that if the same layer is used twice\n * the layer will only be allocated a single time.\n *\n * Because of their excellent composition properties, layers are the idiomatic\n * way in Effect-TS to create services that depend on other services.\n *\n * @since 2.0.0\n */\nimport type * as Cause from \"./Cause.js\"\nimport type * as Clock from \"./Clock.js\"\nimport type { ConfigProvider } from \"./ConfigProvider.js\"\nimport * as Context from \"./Context.js\"\nimport type * as Effect from \"./Effect.js\"\nimport type * as Exit from \"./Exit.js\"\nimport type { FiberRef } from \"./FiberRef.js\"\nimport { dual, type LazyArg } from \"./Function.js\"\nimport { clockTag } from \"./internal/clock.js\"\nimport * as core from \"./internal/core.js\"\nimport * as defaultServices from \"./internal/defaultServices.js\"\nimport * as fiberRuntime from \"./internal/fiberRuntime.js\"\nimport * as internal from \"./internal/layer.js\"\nimport * as circularLayer from \"./internal/layer/circular.js\"\nimport * as query from \"./internal/query.js\"\nimport { randomTag } from \"./internal/random.js\"\nimport type { LogLevel } from \"./LogLevel.js\"\nimport type * as Option from \"./Option.js\"\nimport type { Pipeable } from \"./Pipeable.js\"\nimport type * as Random from \"./Random.js\"\nimport type * as Request from \"./Request.js\"\nimport type * as Runtime from \"./Runtime.js\"\nimport type * as Schedule from \"./Schedule.js\"\nimport * as Scheduler from \"./Scheduler.js\"\nimport type * as Scope from \"./Scope.js\"\nimport type * as Stream from \"./Stream.js\"\nimport type * as Tracer from \"./Tracer.js\"\nimport type * as Types from \"./Types.js\"\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport const LayerTypeId: unique symbol = internal.LayerTypeId\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport type LayerTypeId = typeof LayerTypeId\n\n/**\n * @since 2.0.0\n * @category models\n */\nexport interface Layer<in ROut, out E = never, out RIn = never> extends Layer.Variance<ROut, E, RIn>, Pipeable {}\n\n/**\n * @since 2.0.0\n */\nexport declare namespace Layer {\n  /**\n   * @since 2.0.0\n   * @category models\n   */\n  export interface Variance<in ROut, out E, out RIn> {\n    readonly [LayerTypeId]: {\n      readonly _ROut: Types.Contravariant<ROut>\n      readonly _E: Types.Covariant<E>\n      readonly _RIn: Types.Covariant<RIn>\n    }\n  }\n  /**\n   * @since 3.9.0\n   * @category type-level\n   */\n  export interface Any {\n    readonly [LayerTypeId]: {\n      readonly _ROut: Types.Contravariant<never>\n      readonly _E: Types.Covariant<any>\n      readonly _RIn: Types.Covariant<any>\n    }\n  }\n  /**\n   * @since 2.0.0\n   * @category type-level\n   */\n  export type Context<T extends Any> = [T] extends [Layer<infer _ROut, infer _E, infer _RIn>] ? _RIn\n    : never\n  /**\n   * @since 2.0.0\n   * @category type-level\n   */\n  export type Error<T extends Any> = [T] extends [Layer<infer _ROut, infer _E, infer _RIn>] ? _E\n    : never\n  /**\n   * @since 2.0.0\n   * @category type-level\n   */\n  export type Success<T extends Any> = [T] extends [Layer<infer _ROut, infer _E, infer _RIn>] ? _ROut\n    : never\n}\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport const MemoMapTypeId: unique symbol = internal.MemoMapTypeId\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport type MemoMapTypeId = typeof MemoMapTypeId\n\n/**\n * @since 2.0.0\n * @category models\n */\nexport interface MemoMap {\n  readonly [MemoMapTypeId]: MemoMapTypeId\n\n  /** @internal */\n  readonly getOrElseMemoize: <RIn, E, ROut>(\n    layer: Layer<ROut, E, RIn>,\n    scope: Scope.Scope\n  ) => Effect.Effect<Context.Context<ROut>, E, RIn>\n}\n\n/**\n * @since 3.13.0\n * @category models\n */\nexport interface CurrentMemoMap {\n  readonly _: unique symbol\n}\n\n/**\n * @since 3.13.0\n * @category models\n */\nexport const CurrentMemoMap: Context.Reference<CurrentMemoMap, MemoMap> = internal.CurrentMemoMap\n\n/**\n * Returns `true` if the specified value is a `Layer`, `false` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nexport const isLayer: (u: unknown) => u is Layer<unknown, unknown, unknown> = internal.isLayer\n\n/**\n * Returns `true` if the specified `Layer` is a fresh version that will not be\n * shared, `false` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nexport const isFresh: <RIn, E, ROut>(self: Layer<ROut, E, RIn>) => boolean = internal.isFresh\n\n/**\n * @since 3.3.0\n * @category tracing\n */\nexport const annotateLogs: {\n  /**\n   * @since 3.3.0\n   * @category tracing\n   */\n  (key: string, value: unknown): <A, E, R>(self: Layer<A, E, R>) => Layer<A, E, R>\n  /**\n   * @since 3.3.0\n   * @category tracing\n   */\n  (values: Record<string, unknown>): <A, E, R>(self: Layer<A, E, R>) => Layer<A, E, R>\n  /**\n   * @since 3.3.0\n   * @category tracing\n   */\n  <A, E, R>(self: Layer<A, E, R>, key: string, value: unknown): Layer<A, E, R>\n  /**\n   * @since 3.3.0\n   * @category tracing\n   */\n  <A, E, R>(self: Layer<A, E, R>, values: Record<string, unknown>): Layer<A, E, R>\n} = internal.annotateLogs\n\n/**\n * @since 3.3.0\n * @category tracing\n */\nexport const annotateSpans: {\n  /**\n   * @since 3.3.0\n   * @category tracing\n   */\n  (key: string, value: unknown): <A, E, R>(self: Layer<A, E, R>) => Layer<A, E, R>\n  /**\n   * @since 3.3.0\n   * @category tracing\n   */\n  (values: Record<string, unknown>): <A, E, R>(self: Layer<A, E, R>) => Layer<A, E, R>\n  /**\n   * @since 3.3.0\n   * @category tracing\n   */\n  <A, E, R>(self: Layer<A, E, R>, key: string, value: unknown): Layer<A, E, R>\n  /**\n   * @since 3.3.0\n   * @category tracing\n   */\n  <A, E, R>(self: Layer<A, E, R>, values: Record<string, unknown>): Layer<A, E, R>\n} = internal.annotateSpans\n\n/**\n * Builds a layer into a scoped value.\n *\n * @since 2.0.0\n * @category destructors\n */\nexport const build: <RIn, E, ROut>(\n  self: Layer<ROut, E, RIn>\n) => Effect.Effect<Context.Context<ROut>, E, Scope.Scope | RIn> = internal.build\n\n/**\n * Builds a layer into an `Effect` value. Any resources associated with this\n * layer will be released when the specified scope is closed unless their scope\n * has been extended. This allows building layers where the lifetime of some of\n * the services output by the layer exceed the lifetime of the effect the\n * layer is provided to.\n *\n * @since 2.0.0\n * @category destructors\n */\nexport const buildWithScope: {\n  /**\n   * Builds a layer into an `Effect` value. Any resources associated with this\n   * layer will be released when the specified scope is closed unless their scope\n   * has been extended. This allows building layers where the lifetime of some of\n   * the services output by the layer exceed the lifetime of the effect the\n   * layer is provided to.\n   *\n   * @since 2.0.0\n   * @category destructors\n   */\n  (scope: Scope.Scope): <RIn, E, ROut>(self: Layer<ROut, E, RIn>) => Effect.Effect<Context.Context<ROut>, E, RIn>\n  /**\n   * Builds a layer into an `Effect` value. Any resources associated with this\n   * layer will be released when the specified scope is closed unless their scope\n   * has been extended. This allows building layers where the lifetime of some of\n   * the services output by the layer exceed the lifetime of the effect the\n   * layer is provided to.\n   *\n   * @since 2.0.0\n   * @category destructors\n   */\n  <RIn, E, ROut>(self: Layer<ROut, E, RIn>, scope: Scope.Scope): Effect.Effect<Context.Context<ROut>, E, RIn>\n} = internal.buildWithScope\n\n/**\n * Recovers from all errors.\n *\n * @since 2.0.0\n * @category error handling\n */\nexport const catchAll: {\n  /**\n   * Recovers from all errors.\n   *\n   * @since 2.0.0\n   * @category error handling\n   */\n  <E, RIn2, E2, ROut2>(onError: (error: E) => Layer<ROut2, E2, RIn2>): <RIn, ROut>(self: Layer<ROut, E, RIn>) => Layer<ROut & ROut2, E2, RIn2 | RIn>\n  /**\n   * Recovers from all errors.\n   *\n   * @since 2.0.0\n   * @category error handling\n   */\n  <RIn, E, ROut, RIn2, E2, ROut2>(self: Layer<ROut, E, RIn>, onError: (error: E) => Layer<ROut2, E2, RIn2>): Layer<ROut & ROut2, E2, RIn | RIn2>\n} = internal.catchAll\n\n/**\n * Recovers from all errors.\n *\n * @since 2.0.0\n * @category error handling\n */\nexport const catchAllCause: {\n  /**\n   * Recovers from all errors.\n   *\n   * @since 2.0.0\n   * @category error handling\n   */\n  <E, RIn2, E2, ROut2>(onError: (cause: Cause.Cause<E>) => Layer<ROut2, E2, RIn2>): <RIn, ROut>(self: Layer<ROut, E, RIn>) => Layer<ROut & ROut2, E2, RIn2 | RIn>\n  /**\n   * Recovers from all errors.\n   *\n   * @since 2.0.0\n   * @category error handling\n   */\n  <RIn, E, ROut, RIn2, E2, ROut22>(\n    self: Layer<ROut, E, RIn>,\n    onError: (cause: Cause.Cause<E>) => Layer<ROut22, E2, RIn2>\n  ): Layer<ROut & ROut22, E2, RIn | RIn2>\n} = internal.catchAllCause\n\n/**\n * Constructs a `Layer` that passes along the specified context as an\n * output.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const context: <R>() => Layer<R, never, R> = internal.context\n\n/**\n * Constructs a layer that dies with the specified defect.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const die: (defect: unknown) => Layer<unknown> = internal.die\n\n/**\n * Constructs a layer that dies with the specified defect.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const dieSync: (evaluate: LazyArg<unknown>) => Layer<unknown> = internal.dieSync\n\n/**\n * Replaces the layer's output with `never` and includes the layer only for its\n * side-effects.\n *\n * @since 2.0.0\n * @category mapping\n */\nexport const discard: <RIn, E, ROut>(self: Layer<ROut, E, RIn>) => Layer<never, E, RIn> = internal.discard\n\n/**\n * Constructs a layer from the specified effect.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const effect: {\n  /**\n   * Constructs a layer from the specified effect.\n   *\n   * @since 2.0.0\n   * @category constructors\n   */\n  <I, S>(tag: Context.Tag<I, S>): <E, R>(effect: Effect.Effect<Types.NoInfer<S>, E, R>) => Layer<I, E, R>\n  /**\n   * Constructs a layer from the specified effect.\n   *\n   * @since 2.0.0\n   * @category constructors\n   */\n  <I, S, E, R>(tag: Context.Tag<I, S>, effect: Effect.Effect<Types.NoInfer<S>, E, R>): Layer<I, E, R>\n} = internal.fromEffect\n\n/**\n * Constructs a layer from the specified effect, discarding its output.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const effectDiscard: <X, E, R>(effect: Effect.Effect<X, E, R>) => Layer<never, E, R> = internal.fromEffectDiscard\n\n/**\n * Constructs a layer from the specified effect, which must return one or more\n * services.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const effectContext: <A, E, R>(effect: Effect.Effect<Context.Context<A>, E, R>) => Layer<A, E, R> =\n  internal.fromEffectContext\n\n/**\n * A Layer that constructs an empty Context.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const empty: Layer<never> = internal.empty\n\n/**\n * Extends the scope of this layer, returning a new layer that when provided\n * to an effect will not immediately release its associated resources when\n * that effect completes execution but instead when the scope the resulting\n * effect depends on is closed.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const extendScope: <RIn, E, ROut>(self: Layer<ROut, E, RIn>) => Layer<ROut, E, Scope.Scope | RIn> =\n  internal.extendScope\n\n/**\n * Constructs a layer that fails with the specified error.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const fail: <E>(error: E) => Layer<unknown, E> = internal.fail\n\n/**\n * Constructs a layer that fails with the specified error.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const failSync: <E>(evaluate: LazyArg<E>) => Layer<unknown, E> = internal.failSync\n\n/**\n * Constructs a layer that fails with the specified cause.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const failCause: <E>(cause: Cause.Cause<E>) => Layer<unknown, E> = internal.failCause\n\n/**\n * Constructs a layer that fails with the specified cause.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const failCauseSync: <E>(evaluate: LazyArg<Cause.Cause<E>>) => Layer<unknown, E> = internal.failCauseSync\n\n/**\n * Constructs a layer dynamically based on the output of this layer.\n *\n * @since 2.0.0\n * @category sequencing\n */\nexport const flatMap: {\n  /**\n   * Constructs a layer dynamically based on the output of this layer.\n   *\n   * @since 2.0.0\n   * @category sequencing\n   */\n  <A, A2, E2, R2>(f: (context: Context.Context<A>) => Layer<A2, E2, R2>): <E, R>(self: Layer<A, E, R>) => Layer<A2, E2 | E, R2 | R>\n  /**\n   * Constructs a layer dynamically based on the output of this layer.\n   *\n   * @since 2.0.0\n   * @category sequencing\n   */\n  <A, E, R, A2, E2, R2>(\n    self: Layer<A, E, R>,\n    f: (context: Context.Context<A>) => Layer<A2, E2, R2>\n  ): Layer<A2, E | E2, R | R2>\n} = internal.flatMap\n\n/**\n * Flattens layers nested in the context of an effect.\n *\n * @since 2.0.0\n * @category sequencing\n */\nexport const flatten: {\n  /**\n   * Flattens layers nested in the context of an effect.\n   *\n   * @since 2.0.0\n   * @category sequencing\n   */\n  <I, A, E2, R2>(tag: Context.Tag<I, Layer<A, E2, R2>>): <E, R>(self: Layer<I, E, R>) => Layer<A, E2 | E, R2 | R>\n  /**\n   * Flattens layers nested in the context of an effect.\n   *\n   * @since 2.0.0\n   * @category sequencing\n   */\n  <I, E, R, A, E2, R2>(self: Layer<I, E, R>, tag: Context.Tag<I, Layer<A, E2, R2>>): Layer<A, E | E2, R | R2>\n} = internal.flatten\n\n/**\n * Creates a fresh version of this layer that will not be shared.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const fresh: <A, E, R>(self: Layer<A, E, R>) => Layer<A, E, R> = internal.fresh\n\n/**\n * @since 3.17.0\n * @category Testing\n */\nexport type PartialEffectful<A extends object> = Types.Simplify<\n  & {\n    [\n      K in keyof A as A[K] extends\n        | Effect.Effect<any, any, any>\n        | Stream.Stream<any, any, any>\n        | ((...args: any) => Effect.Effect<any, any, any> | Stream.Stream<any, any, any>) ? K\n        : never\n    ]?: A[K]\n  }\n  & {\n    [\n      K in keyof A as A[K] extends\n        | Effect.Effect<any, any, any>\n        | Stream.Stream<any, any, any>\n        | ((...args: any) => Effect.Effect<any, any, any> | Stream.Stream<any, any, any>) ? never\n        : K\n    ]: A[K]\n  }\n>\n\n/**\n * Creates a mock layer for testing purposes. You can provide a partial\n * implementation of the service, and any methods not provided will\n * throw an `UnimplementedError` defect when called.\n *\n * **Example**\n *\n * ```ts\n * import { Context, Effect, Layer } from \"effect\"\n *\n * class MyService extends Context.Tag(\"MyService\")<\n *   MyService,\n *   {\n *     one: Effect.Effect<number>\n *     two(): Effect.Effect<number>\n *   }\n * >() {}\n *\n * const MyServiceTest = Layer.mock(MyService, {\n *   two: () => Effect.succeed(2)\n * })\n * ```\n *\n * @since 3.17.0\n * @category Testing\n */\nexport const mock: {\n  /**\n   * Creates a mock layer for testing purposes. You can provide a partial\n   * implementation of the service, and any methods not provided will\n   * throw an `UnimplementedError` defect when called.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Context, Effect, Layer } from \"effect\"\n   *\n   * class MyService extends Context.Tag(\"MyService\")<\n   *   MyService,\n   *   {\n   *     one: Effect.Effect<number>\n   *     two(): Effect.Effect<number>\n   *   }\n   * >() {}\n   *\n   * const MyServiceTest = Layer.mock(MyService, {\n   *   two: () => Effect.succeed(2)\n   * })\n   * ```\n   *\n   * @since 3.17.0\n   * @category Testing\n   */\n  <I, S extends object>(tag: Context.Tag<I, S>): (service: PartialEffectful<S>) => Layer<I>\n  /**\n   * Creates a mock layer for testing purposes. You can provide a partial\n   * implementation of the service, and any methods not provided will\n   * throw an `UnimplementedError` defect when called.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Context, Effect, Layer } from \"effect\"\n   *\n   * class MyService extends Context.Tag(\"MyService\")<\n   *   MyService,\n   *   {\n   *     one: Effect.Effect<number>\n   *     two(): Effect.Effect<number>\n   *   }\n   * >() {}\n   *\n   * const MyServiceTest = Layer.mock(MyService, {\n   *   two: () => Effect.succeed(2)\n   * })\n   * ```\n   *\n   * @since 3.17.0\n   * @category Testing\n   */\n  <I, S extends object>(tag: Context.Tag<I, S>, service: PartialEffectful<S>): Layer<I>\n} = internal.mock\n\nconst fromFunction: <I1, S1, I2, S2>(\n  tagA: Context.Tag<I1, S1>,\n  tagB: Context.Tag<I2, S2>,\n  f: (a: Types.NoInfer<S1>) => Types.NoInfer<S2>\n) => Layer<I2, never, I1> = internal.fromFunction\n\nexport {\n  /**\n   * Constructs a layer from the context using the specified function.\n   *\n   * @since 2.0.0\n   * @category constructors\n   */\n  fromFunction as function\n}\n\n/**\n * Builds this layer and uses it until it is interrupted. This is useful when\n * your entire application is a layer, such as an HTTP server.\n *\n * @since 2.0.0\n * @category conversions\n */\nexport const launch: <RIn, E, ROut>(self: Layer<ROut, E, RIn>) => Effect.Effect<never, E, RIn> = internal.launch\n\n/**\n * Returns a new layer whose output is mapped by the specified function.\n *\n * @since 2.0.0\n * @category mapping\n */\nexport const map: {\n  /**\n   * Returns a new layer whose output is mapped by the specified function.\n   *\n   * @since 2.0.0\n   * @category mapping\n   */\n  <A, B>(f: (context: Context.Context<A>) => Context.Context<B>): <E, R>(self: Layer<A, E, R>) => Layer<B, E, R>\n  /**\n   * Returns a new layer whose output is mapped by the specified function.\n   *\n   * @since 2.0.0\n   * @category mapping\n   */\n  <A, E, R, B>(\n    self: Layer<A, E, R>,\n    f: (context: Context.Context<A>) => Context.Context<B>\n  ): Layer<B, E, R>\n} = internal.map\n\n/**\n * Returns a layer with its error channel mapped using the specified function.\n *\n * @since 2.0.0\n * @category mapping\n */\nexport const mapError: {\n  /**\n   * Returns a layer with its error channel mapped using the specified function.\n   *\n   * @since 2.0.0\n   * @category mapping\n   */\n  <E, E2>(f: (error: E) => E2): <A, R>(self: Layer<A, E, R>) => Layer<A, E2, R>\n  /**\n   * Returns a layer with its error channel mapped using the specified function.\n   *\n   * @since 2.0.0\n   * @category mapping\n   */\n  <A, E, R, E2>(self: Layer<A, E, R>, f: (error: E) => E2): Layer<A, E2, R>\n} = internal.mapError\n\n/**\n * Feeds the error or output services of this layer into the input of either\n * the specified `failure` or `success` layers, resulting in a new layer with\n * the inputs of this layer, and the error or outputs of the specified layer.\n *\n * @since 2.0.0\n * @category folding\n */\nexport const match: {\n  /**\n   * Feeds the error or output services of this layer into the input of either\n   * the specified `failure` or `success` layers, resulting in a new layer with\n   * the inputs of this layer, and the error or outputs of the specified layer.\n   *\n   * @since 2.0.0\n   * @category folding\n   */\n  <E, A2, E2, R2, A, A3, E3, R3>(\n    options: {\n      readonly onFailure: (error: E) => Layer<A2, E2, R2>\n      readonly onSuccess: (context: Context.Context<A>) => Layer<A3, E3, R3>\n    }\n  ): <R>(self: Layer<A, E, R>) => Layer<A2 & A3, E2 | E3, R2 | R3 | R>\n  /**\n   * Feeds the error or output services of this layer into the input of either\n   * the specified `failure` or `success` layers, resulting in a new layer with\n   * the inputs of this layer, and the error or outputs of the specified layer.\n   *\n   * @since 2.0.0\n   * @category folding\n   */\n  <A, E, R, A2, E2, R2, A3, E3, R3>(\n    self: Layer<A, E, R>,\n    options: {\n      readonly onFailure: (error: E) => Layer<A2, E2, R2>\n      readonly onSuccess: (context: Context.Context<A>) => Layer<A3, E3, R3>\n    }\n  ): Layer<A2 & A3, E2 | E3, R | R2 | R3>\n} = internal.match\n\n/**\n * Feeds the error or output services of this layer into the input of either\n * the specified `failure` or `success` layers, resulting in a new layer with\n * the inputs of this layer, and the error or outputs of the specified layer.\n *\n * @since 2.0.0\n * @category folding\n */\nexport const matchCause: {\n  /**\n   * Feeds the error or output services of this layer into the input of either\n   * the specified `failure` or `success` layers, resulting in a new layer with\n   * the inputs of this layer, and the error or outputs of the specified layer.\n   *\n   * @since 2.0.0\n   * @category folding\n   */\n  <E, A2, E2, R2, A, A3, E3, R3>(\n    options: {\n      readonly onFailure: (cause: Cause.Cause<E>) => Layer<A2, E2, R2>\n      readonly onSuccess: (context: Context.Context<A>) => Layer<A3, E3, R3>\n    }\n  ): <R>(self: Layer<A, E, R>) => Layer<A2 & A3, E2 | E3, R2 | R3 | R>\n  /**\n   * Feeds the error or output services of this layer into the input of either\n   * the specified `failure` or `success` layers, resulting in a new layer with\n   * the inputs of this layer, and the error or outputs of the specified layer.\n   *\n   * @since 2.0.0\n   * @category folding\n   */\n  <A, E, R, A2, E2, R2, A3, E3, R3>(\n    self: Layer<A, E, R>,\n    options: {\n      readonly onFailure: (cause: Cause.Cause<E>) => Layer<A2, E2, R2>\n      readonly onSuccess: (context: Context.Context<A>) => Layer<A3, E3, R3>\n    }\n  ): Layer<A2 & A3, E2 | E3, R | R2 | R3>\n} = internal.matchCause\n\n/**\n * Returns a scoped effect that, if evaluated, will return the lazily computed\n * result of this layer.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const memoize: <RIn, E, ROut>(\n  self: Layer<ROut, E, RIn>\n) => Effect.Effect<Layer<ROut, E, RIn>, never, Scope.Scope> = internal.memoize\n\n/**\n * Merges this layer with the specified layer concurrently, producing a new layer with combined input and output types.\n *\n * @since 2.0.0\n * @category zipping\n */\nexport const merge: {\n  /**\n   * Merges this layer with the specified layer concurrently, producing a new layer with combined input and output types.\n   *\n   * @since 2.0.0\n   * @category zipping\n   */\n  <RIn2, E2, ROut2>(that: Layer<ROut2, E2, RIn2>): <RIn, E1, ROut>(self: Layer<ROut, E1, RIn>) => Layer<ROut2 | ROut, E2 | E1, RIn2 | RIn>\n  /**\n   * Merges this layer with the specified layer concurrently, producing a new layer with combined input and output types.\n   *\n   * @since 2.0.0\n   * @category zipping\n   */\n  <RIn, E1, ROut, RIn2, E2, ROut2>(self: Layer<ROut, E1, RIn>, that: Layer<ROut2, E2, RIn2>): Layer<ROut | ROut2, E1 | E2, RIn | RIn2>\n} = internal.merge\n\n/**\n * Combines all the provided layers concurrently, creating a new layer with merged input, error, and output types.\n *\n * @since 2.0.0\n * @category zipping\n */\nexport const mergeAll: <Layers extends readonly [Layer<never, any, any>, ...Array<Layer<never, any, any>>]>(\n  ...layers: Layers\n) => Layer<\n  { [k in keyof Layers]: Layer.Success<Layers[k]> }[number],\n  { [k in keyof Layers]: Layer.Error<Layers[k]> }[number],\n  { [k in keyof Layers]: Layer.Context<Layers[k]> }[number]\n> = internal.mergeAll\n\n/**\n * Translates effect failure into death of the fiber, making all failures\n * unchecked and not a part of the type of the layer.\n *\n * @since 2.0.0\n * @category error handling\n */\nexport const orDie: <A, E, R>(self: Layer<A, E, R>) => Layer<A, never, R> = internal.orDie\n\n/**\n * Executes this layer and returns its output, if it succeeds, but otherwise\n * executes the specified layer.\n *\n * @since 2.0.0\n * @category error handling\n */\nexport const orElse: {\n  /**\n   * Executes this layer and returns its output, if it succeeds, but otherwise\n   * executes the specified layer.\n   *\n   * @since 2.0.0\n   * @category error handling\n   */\n  <A2, E2, R2>(that: LazyArg<Layer<A2, E2, R2>>): <A, E, R>(self: Layer<A, E, R>) => Layer<A & A2, E2 | E, R2 | R>\n  /**\n   * Executes this layer and returns its output, if it succeeds, but otherwise\n   * executes the specified layer.\n   *\n   * @since 2.0.0\n   * @category error handling\n   */\n  <A, E, R, A2, E2, R2>(self: Layer<A, E, R>, that: LazyArg<Layer<A2, E2, R2>>): Layer<A & A2, E | E2, R | R2>\n} = internal.orElse\n\n/**\n * Returns a new layer that produces the outputs of this layer but also\n * passes through the inputs.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const passthrough: <RIn, E, ROut>(self: Layer<ROut, E, RIn>) => Layer<RIn | ROut, E, RIn> = internal.passthrough\n\n/**\n * Projects out part of one of the services output by this layer using the\n * specified function.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const project: {\n  /**\n   * Projects out part of one of the services output by this layer using the\n   * specified function.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <I1, S1, I2, S2>(\n    tagA: Context.Tag<I1, S1>,\n    tagB: Context.Tag<I2, S2>,\n    f: (a: Types.NoInfer<S1>) => Types.NoInfer<S2>\n  ): <RIn, E>(self: Layer<I1, E, RIn>) => Layer<I2, E, RIn>\n  /**\n   * Projects out part of one of the services output by this layer using the\n   * specified function.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <RIn, E, I1, S1, I2, S2>(\n    self: Layer<I1, E, RIn>,\n    tagA: Context.Tag<I1, S1>,\n    tagB: Context.Tag<I2, S2>,\n    f: (a: Types.NoInfer<S1>) => Types.NoInfer<S2>\n  ): Layer<I2, E, RIn>\n} = internal.project\n\n/**\n * @since 2.0.0\n * @category utils\n */\nexport const locallyEffect: {\n  /**\n   * @since 2.0.0\n   * @category utils\n   */\n  <RIn, E, ROut, RIn2, E2, ROut2>(\n    f: (_: Effect.Effect<RIn, E, Context.Context<ROut>>) => Effect.Effect<RIn2, E2, Context.Context<ROut2>>\n  ): (self: Layer<ROut, E, RIn>) => Layer<ROut2, E2, RIn2>\n  /**\n   * @since 2.0.0\n   * @category utils\n   */\n  <RIn, E, ROut, RIn2, E2, ROut2>(\n    self: Layer<ROut, E, RIn>,\n    f: (_: Effect.Effect<RIn, E, Context.Context<ROut>>) => Effect.Effect<RIn2, E2, Context.Context<ROut2>>\n  ): Layer<ROut2, E2, RIn2>\n} = internal.locallyEffect\n\n/**\n * @since 2.0.0\n * @category utils\n */\nexport const locally: {\n  /**\n   * @since 2.0.0\n   * @category utils\n   */\n  <X>(ref: FiberRef<X>, value: X): <A, E, R>(self: Layer<A, E, R>) => Layer<A, E, R>\n  /**\n   * @since 2.0.0\n   * @category utils\n   */\n  <A, E, R, X>(self: Layer<A, E, R>, ref: FiberRef<X>, value: X): Layer<A, E, R>\n} = internal.fiberRefLocally\n\n/**\n * @since 2.0.0\n * @category utils\n */\nexport const locallyWith: {\n  /**\n   * @since 2.0.0\n   * @category utils\n   */\n  <X>(ref: FiberRef<X>, value: (_: X) => X): <A, E, R>(self: Layer<A, E, R>) => Layer<A, E, R>\n  /**\n   * @since 2.0.0\n   * @category utils\n   */\n  <A, E, R, X>(self: Layer<A, E, R>, ref: FiberRef<X>, value: (_: X) => X): Layer<A, E, R>\n} = internal.fiberRefLocallyWith\n\n/**\n * @since 2.0.0\n * @category utils\n */\nexport const locallyScoped: <A>(self: FiberRef<A>, value: A) => Layer<never> = internal.fiberRefLocallyScoped\n\n/**\n * @since 2.0.0\n * @category utils\n */\nexport const fiberRefLocallyScopedWith: <A>(self: FiberRef<A>, value: (_: A) => A) => Layer<never> =\n  internal.fiberRefLocallyScopedWith\n\n/**\n * Retries constructing this layer according to the specified schedule.\n *\n * @since 2.0.0\n * @category retrying\n */\nexport const retry: {\n  /**\n   * Retries constructing this layer according to the specified schedule.\n   *\n   * @since 2.0.0\n   * @category retrying\n   */\n  <X, E, RIn2>(schedule: Schedule.Schedule<X, NoInfer<E>, RIn2>): <ROut, RIn>(self: Layer<ROut, E, RIn>) => Layer<ROut, E, RIn2 | RIn>\n  /**\n   * Retries constructing this layer according to the specified schedule.\n   *\n   * @since 2.0.0\n   * @category retrying\n   */\n  <ROut, E, RIn, X, RIn2>(self: Layer<ROut, E, RIn>, schedule: Schedule.Schedule<X, E, RIn2>): Layer<ROut, E, RIn | RIn2>\n} = internal.retry\n\n/**\n * A layer that constructs a scope and closes it when the workflow the layer\n * is provided to completes execution, whether by success, failure, or\n * interruption. This can be used to close a scope when providing a layer to a\n * workflow.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const scope: Layer<Scope.Scope> = internal.scope\n\n/**\n * Constructs a layer from the specified scoped effect.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const scoped: {\n  /**\n   * Constructs a layer from the specified scoped effect.\n   *\n   * @since 2.0.0\n   * @category constructors\n   */\n  <I, S>(tag: Context.Tag<I, S>): <E, R>(effect: Effect.Effect<Types.NoInfer<S>, E, R>) => Layer<I, E, Exclude<R, Scope.Scope>>\n  /**\n   * Constructs a layer from the specified scoped effect.\n   *\n   * @since 2.0.0\n   * @category constructors\n   */\n  <I, S, E, R>(tag: Context.Tag<I, S>, effect: Effect.Effect<Types.NoInfer<S>, E, R>): Layer<I, E, Exclude<R, Scope.Scope>>\n} = internal.scoped\n\n/**\n * Constructs a layer from the specified scoped effect.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const scopedDiscard: <X, E, R>(effect: Effect.Effect<X, E, R>) => Layer<never, E, Exclude<R, Scope.Scope>> =\n  internal.scopedDiscard\n\n/**\n * Constructs a layer from the specified scoped effect, which must return one\n * or more services.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const scopedContext: <A, E, R>(\n  effect: Effect.Effect<Context.Context<A>, E, R>\n) => Layer<A, E, Exclude<R, Scope.Scope>> = internal.scopedContext\n\n/**\n * Constructs a layer that accesses and returns the specified service from the\n * context.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const service: <I, S>(tag: Context.Tag<I, S>) => Layer<I, never, I> = internal.service\n\n/**\n * Constructs a layer from the specified value.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const succeed: {\n  /**\n   * Constructs a layer from the specified value.\n   *\n   * @since 2.0.0\n   * @category constructors\n   */\n  <I, S>(tag: Context.Tag<I, S>): (resource: Types.NoInfer<S>) => Layer<I>\n  /**\n   * Constructs a layer from the specified value.\n   *\n   * @since 2.0.0\n   * @category constructors\n   */\n  <I, S>(tag: Context.Tag<I, S>, resource: Types.NoInfer<S>): Layer<I>\n} = internal.succeed\n\n/**\n * Constructs a layer from the specified value, which must return one or more\n * services.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const succeedContext: <A>(context: Context.Context<A>) => Layer<A> = internal.succeedContext\n\n/**\n * Lazily constructs a layer. This is useful to avoid infinite recursion when\n * creating layers that refer to themselves.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const suspend: <RIn, E, ROut>(evaluate: LazyArg<Layer<ROut, E, RIn>>) => Layer<ROut, E, RIn> = internal.suspend\n\n/**\n * Lazily constructs a layer from the specified value.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const sync: {\n  /**\n   * Lazily constructs a layer from the specified value.\n   *\n   * @since 2.0.0\n   * @category constructors\n   */\n  <I, S>(tag: Context.Tag<I, S>): (evaluate: LazyArg<Types.NoInfer<S>>) => Layer<I>\n  /**\n   * Lazily constructs a layer from the specified value.\n   *\n   * @since 2.0.0\n   * @category constructors\n   */\n  <I, S>(tag: Context.Tag<I, S>, evaluate: LazyArg<Types.NoInfer<S>>): Layer<I>\n} = internal.sync\n\n/**\n * Lazily constructs a layer from the specified value, which must return one or more\n * services.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const syncContext: <A>(evaluate: LazyArg<Context.Context<A>>) => Layer<A> = internal.syncContext\n\n/**\n * Performs the specified effect if this layer succeeds.\n *\n * @since 2.0.0\n * @category sequencing\n */\nexport const tap: {\n  /**\n   * Performs the specified effect if this layer succeeds.\n   *\n   * @since 2.0.0\n   * @category sequencing\n   */\n  <ROut, XR extends ROut, RIn2, E2, X>(f: (context: Context.Context<XR>) => Effect.Effect<X, E2, RIn2>): <RIn, E>(self: Layer<ROut, E, RIn>) => Layer<ROut, E2 | E, RIn2 | RIn>\n  /**\n   * Performs the specified effect if this layer succeeds.\n   *\n   * @since 2.0.0\n   * @category sequencing\n   */\n  <RIn, E, ROut, XR extends ROut, RIn2, E2, X>(\n    self: Layer<ROut, E, RIn>,\n    f: (context: Context.Context<XR>) => Effect.Effect<X, E2, RIn2>\n  ): Layer<ROut, E | E2, RIn | RIn2>\n} = internal.tap\n\n/**\n * Performs the specified effect if this layer fails.\n *\n * @since 2.0.0\n * @category sequencing\n */\nexport const tapError: {\n  /**\n   * Performs the specified effect if this layer fails.\n   *\n   * @since 2.0.0\n   * @category sequencing\n   */\n  <E, XE extends E, RIn2, E2, X>(f: (e: XE) => Effect.Effect<X, E2, RIn2>): <RIn, ROut>(self: Layer<ROut, E, RIn>) => Layer<ROut, E | E2, RIn2 | RIn>\n  /**\n   * Performs the specified effect if this layer fails.\n   *\n   * @since 2.0.0\n   * @category sequencing\n   */\n  <RIn, E, XE extends E, ROut, RIn2, E2, X>(self: Layer<ROut, E, RIn>, f: (e: XE) => Effect.Effect<X, E2, RIn2>): Layer<ROut, E | E2, RIn | RIn2>\n} = internal.tapError\n\n/**\n * Performs the specified effect if this layer fails.\n *\n * @since 2.0.0\n * @category sequencing\n */\nexport const tapErrorCause: {\n  /**\n   * Performs the specified effect if this layer fails.\n   *\n   * @since 2.0.0\n   * @category sequencing\n   */\n  <E, XE extends E, RIn2, E2, X>(f: (cause: Cause.Cause<XE>) => Effect.Effect<X, E2, RIn2>): <RIn, ROut>(self: Layer<ROut, E, RIn>) => Layer<ROut, E | E2, RIn2 | RIn>\n  /**\n   * Performs the specified effect if this layer fails.\n   *\n   * @since 2.0.0\n   * @category sequencing\n   */\n  <RIn, E, XE extends E, ROut, RIn2, E2, X>(\n    self: Layer<ROut, E, RIn>,\n    f: (cause: Cause.Cause<XE>) => Effect.Effect<X, E2, RIn2>\n  ): Layer<ROut, E | E2, RIn | RIn2>\n} = internal.tapErrorCause\n\n/**\n * Converts a layer that requires no services into a scoped runtime, which can\n * be used to execute effects.\n *\n * @since 2.0.0\n * @category conversions\n */\nexport const toRuntime: <RIn, E, ROut>(\n  self: Layer<ROut, E, RIn>\n) => Effect.Effect<Runtime.Runtime<ROut>, E, Scope.Scope | RIn> = internal.toRuntime\n\n/**\n * Converts a layer that requires no services into a scoped runtime, which can\n * be used to execute effects.\n *\n * @since 2.0.0\n * @category conversions\n */\nexport const toRuntimeWithMemoMap: {\n  /**\n   * Converts a layer that requires no services into a scoped runtime, which can\n   * be used to execute effects.\n   *\n   * @since 2.0.0\n   * @category conversions\n   */\n  (memoMap: MemoMap): <RIn, E, ROut>(self: Layer<ROut, E, RIn>) => Effect.Effect<Runtime.Runtime<ROut>, E, Scope.Scope | RIn>\n  /**\n   * Converts a layer that requires no services into a scoped runtime, which can\n   * be used to execute effects.\n   *\n   * @since 2.0.0\n   * @category conversions\n   */\n  <RIn, E, ROut>(self: Layer<ROut, E, RIn>, memoMap: MemoMap): Effect.Effect<Runtime.Runtime<ROut>, E, Scope.Scope | RIn>\n} = internal.toRuntimeWithMemoMap\n\n/**\n * Feeds the output services of this builder into the input of the specified\n * builder, resulting in a new builder with the inputs of this builder as\n * well as any leftover inputs, and the outputs of the specified builder.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const provide: {\n  /**\n   * Feeds the output services of this builder into the input of the specified\n   * builder, resulting in a new builder with the inputs of this builder as\n   * well as any leftover inputs, and the outputs of the specified builder.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <RIn, E, ROut>(that: Layer<ROut, E, RIn>): <RIn2, E2, ROut2>(self: Layer<ROut2, E2, RIn2>) => Layer<ROut2, E | E2, RIn | Exclude<RIn2, ROut>>\n  /**\n   * Feeds the output services of this builder into the input of the specified\n   * builder, resulting in a new builder with the inputs of this builder as\n   * well as any leftover inputs, and the outputs of the specified builder.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <const Layers extends readonly [Layer.Any, ...Array<Layer.Any>]>(that: Layers): <A, E, R>(\n    self: Layer<A, E, R>\n  ) => Layer<\n    A,\n    E | { [k in keyof Layers]: Layer.Error<Layers[k]> }[number],\n    | { [k in keyof Layers]: Layer.Context<Layers[k]> }[number]\n    | Exclude<R, { [k in keyof Layers]: Layer.Success<Layers[k]> }[number]>\n  >\n  /**\n   * Feeds the output services of this builder into the input of the specified\n   * builder, resulting in a new builder with the inputs of this builder as\n   * well as any leftover inputs, and the outputs of the specified builder.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <RIn2, E2, ROut2, RIn, E, ROut>(self: Layer<ROut2, E2, RIn2>, that: Layer<ROut, E, RIn>): Layer<ROut2, E | E2, RIn | Exclude<RIn2, ROut>>\n  /**\n   * Feeds the output services of this builder into the input of the specified\n   * builder, resulting in a new builder with the inputs of this builder as\n   * well as any leftover inputs, and the outputs of the specified builder.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <A, E, R, const Layers extends readonly [Layer.Any, ...Array<Layer.Any>]>(self: Layer<A, E, R>, that: Layers): Layer<\n    A,\n    E | { [k in keyof Layers]: Layer.Error<Layers[k]> }[number],\n    | { [k in keyof Layers]: Layer.Context<Layers[k]> }[number]\n    | Exclude<R, { [k in keyof Layers]: Layer.Success<Layers[k]> }[number]>\n  >\n} = internal.provide\n\n/**\n * Feeds the output services of this layer into the input of the specified\n * layer, resulting in a new layer with the inputs of this layer, and the\n * outputs of both layers.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const provideMerge: {\n  /**\n   * Feeds the output services of this layer into the input of the specified\n   * layer, resulting in a new layer with the inputs of this layer, and the\n   * outputs of both layers.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <RIn, E, ROut>(self: Layer<ROut, E, RIn>): <RIn2, E2, ROut2>(that: Layer<ROut2, E2, RIn2>) => Layer<ROut | ROut2, E | E2, RIn | Exclude<RIn2, ROut>>\n  /**\n   * Feeds the output services of this layer into the input of the specified\n   * layer, resulting in a new layer with the inputs of this layer, and the\n   * outputs of both layers.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <RIn2, E2, ROut2, RIn, E, ROut>(that: Layer<ROut2, E2, RIn2>, self: Layer<ROut, E, RIn>): Layer<ROut2 | ROut, E2 | E, RIn | Exclude<RIn2, ROut>>\n} = internal.provideMerge\n\n/**\n * Combines this layer with the specified layer concurrently, creating a new layer with merged input types and\n * combined output types using the provided function.\n *\n * @since 2.0.0\n * @category zipping\n */\nexport const zipWith: {\n  /**\n   * Combines this layer with the specified layer concurrently, creating a new layer with merged input types and\n   * combined output types using the provided function.\n   *\n   * @since 2.0.0\n   * @category zipping\n   */\n  <B, E2, R2, A, C>(\n    that: Layer<B, E2, R2>,\n    f: (a: Context.Context<A>, b: Context.Context<B>) => Context.Context<C>\n  ): <E, R>(self: Layer<A, E, R>) => Layer<C, E2 | E, R2 | R>\n  /**\n   * Combines this layer with the specified layer concurrently, creating a new layer with merged input types and\n   * combined output types using the provided function.\n   *\n   * @since 2.0.0\n   * @category zipping\n   */\n  <A, E, R, B, E2, R2, C>(\n    self: Layer<A, E, R>,\n    that: Layer<B, E2, R2>,\n    f: (a: Context.Context<A>, b: Context.Context<B>) => Context.Context<C>\n  ): Layer<C, E | E2, R | R2>\n} = internal.zipWith\n\n/**\n * @since 2.0.0\n * @category utils\n */\nexport const unwrapEffect: <A, E1, R1, E, R>(self: Effect.Effect<Layer<A, E1, R1>, E, R>) => Layer<A, E | E1, R | R1> =\n  internal.unwrapEffect\n\n/**\n * @since 2.0.0\n * @category utils\n */\nexport const unwrapScoped: <A, E1, R1, E, R>(\n  self: Effect.Effect<Layer<A, E1, R1>, E, R>\n) => Layer<A, E | E1, R1 | Exclude<R, Scope.Scope>> = internal.unwrapScoped\n\n/**\n * @since 2.0.0\n * @category clock\n */\nexport const setClock: <A extends Clock.Clock>(clock: A) => Layer<never> = <A extends Clock.Clock>(\n  clock: A\n): Layer<never> =>\n  scopedDiscard(\n    fiberRuntime.fiberRefLocallyScopedWith(defaultServices.currentServices, Context.add(clockTag, clock))\n  )\n\n/**\n * Sets the current `ConfigProvider`.\n *\n * @since 2.0.0\n * @category config\n */\nexport const setConfigProvider: (configProvider: ConfigProvider) => Layer<never> = circularLayer.setConfigProvider\n\n/**\n * Adds the provided span to the span stack.\n *\n * @since 2.0.0\n * @category tracing\n */\nexport const parentSpan: (span: Tracer.AnySpan) => Layer<Tracer.ParentSpan> = circularLayer.parentSpan\n\n/**\n * @since 3.15.0\n * @category Random\n */\nexport const setRandom = <A extends Random.Random>(random: A): Layer<never> =>\n  scopedDiscard(\n    fiberRuntime.fiberRefLocallyScopedWith(defaultServices.currentServices, Context.add(randomTag, random))\n  )\n\n/**\n * @since 2.0.0\n * @category requests & batching\n */\nexport const setRequestBatching: (requestBatching: boolean) => Layer<never> = (\n  requestBatching: boolean\n) =>\n  scopedDiscard(\n    fiberRuntime.fiberRefLocallyScoped(core.currentRequestBatching, requestBatching)\n  )\n\n/**\n * @since 2.0.0\n * @category requests & batching\n */\nexport const setRequestCaching: (requestCaching: boolean) => Layer<never> = (\n  requestCaching: boolean\n) =>\n  scopedDiscard(\n    fiberRuntime.fiberRefLocallyScoped(query.currentCacheEnabled, requestCaching)\n  )\n\n/**\n * @since 2.0.0\n * @category requests & batching\n */\nexport const setRequestCache: {\n  /**\n   * @since 2.0.0\n   * @category requests & batching\n   */\n  <E, R>(cache: Effect.Effect<Request.Cache, E, R>): Layer<never, E, Exclude<R, Scope.Scope>>\n  /**\n   * @since 2.0.0\n   * @category requests & batching\n   */\n  (cache: Request.Cache): Layer<never>\n} = (<E, R>(cache: Request.Cache | Effect.Effect<Request.Cache, E, R>) =>\n  scopedDiscard(\n    core.isEffect(cache) ?\n      core.flatMap(cache, (x) => fiberRuntime.fiberRefLocallyScoped(query.currentCache as any, x)) :\n      fiberRuntime.fiberRefLocallyScoped(query.currentCache as any, cache)\n  )) as any\n\n/**\n * @since 2.0.0\n * @category scheduler\n */\nexport const setScheduler: (scheduler: Scheduler.Scheduler) => Layer<never> = (\n  scheduler: Scheduler.Scheduler\n): Layer<never> =>\n  scopedDiscard(\n    fiberRuntime.fiberRefLocallyScoped(Scheduler.currentScheduler, scheduler)\n  )\n\n/**\n * Create and add a span to the current span stack.\n *\n * The span is ended when the Layer is released.\n *\n * @since 2.0.0\n * @category tracing\n */\nexport const span: (\n  name: string,\n  options?: Tracer.SpanOptions & {\n    readonly onEnd?:\n      | ((span: Tracer.Span, exit: Exit.Exit<unknown, unknown>) => Effect.Effect<void>)\n      | undefined\n  }\n) => Layer<Tracer.ParentSpan> = circularLayer.span\n\n/**\n * Create a Layer that sets the current Tracer\n *\n * @since 2.0.0\n * @category tracing\n */\nexport const setTracer: (tracer: Tracer.Tracer) => Layer<never> = circularLayer.setTracer\n\n/**\n * @since 2.0.0\n * @category tracing\n */\nexport const setTracerEnabled: (enabled: boolean) => Layer<never> = (enabled: boolean) =>\n  scopedDiscard(\n    fiberRuntime.fiberRefLocallyScoped(core.currentTracerEnabled, enabled)\n  )\n\n/**\n * @since 2.0.0\n * @category tracing\n */\nexport const setTracerTiming: (enabled: boolean) => Layer<never> = (enabled: boolean) =>\n  scopedDiscard(\n    fiberRuntime.fiberRefLocallyScoped(core.currentTracerTimingEnabled, enabled)\n  )\n\n/**\n * @since 2.0.0\n * @category logging\n */\nexport const setUnhandledErrorLogLevel: (level: Option.Option<LogLevel>) => Layer<never> = (\n  level: Option.Option<LogLevel>\n): Layer<never> =>\n  scopedDiscard(\n    fiberRuntime.fiberRefLocallyScoped(core.currentUnhandledErrorLogLevel, level)\n  )\n\n/**\n * @since 3.17.0\n * @category logging\n */\nexport const setVersionMismatchErrorLogLevel: (level: Option.Option<LogLevel>) => Layer<never> = (\n  level: Option.Option<LogLevel>\n): Layer<never> =>\n  scopedDiscard(\n    fiberRuntime.fiberRefLocallyScoped(core.currentVersionMismatchErrorLogLevel, level)\n  )\n\n/**\n * @since 2.0.0\n * @category tracing\n */\nexport const withSpan: {\n  /**\n   * @since 2.0.0\n   * @category tracing\n   */\n  (\n    name: string,\n    options?: Tracer.SpanOptions & {\n      readonly onEnd?:\n        | ((span: Tracer.Span, exit: Exit.Exit<unknown, unknown>) => Effect.Effect<void>)\n        | undefined\n    }\n  ): <A, E, R>(self: Layer<A, E, R>) => Layer<A, E, Exclude<R, Tracer.ParentSpan>>\n  /**\n   * @since 2.0.0\n   * @category tracing\n   */\n  <A, E, R>(\n    self: Layer<A, E, R>,\n    name: string,\n    options?: Tracer.SpanOptions & {\n      readonly onEnd?:\n        | ((span: Tracer.Span, exit: Exit.Exit<unknown, unknown>) => Effect.Effect<void>)\n        | undefined\n    }\n  ): Layer<A, E, Exclude<R, Tracer.ParentSpan>>\n} = internal.withSpan\n\n/**\n * @since 2.0.0\n * @category tracing\n */\nexport const withParentSpan: {\n  /**\n   * @since 2.0.0\n   * @category tracing\n   */\n  (span: Tracer.AnySpan): <A, E, R>(self: Layer<A, E, R>) => Layer<A, E, Exclude<R, Tracer.ParentSpan>>\n  /**\n   * @since 2.0.0\n   * @category tracing\n   */\n  <A, E, R>(self: Layer<A, E, R>, span: Tracer.AnySpan): Layer<A, E, Exclude<R, Tracer.ParentSpan>>\n} = internal.withParentSpan\n\n// -----------------------------------------------------------------------------\n// memo map\n// -----------------------------------------------------------------------------\n\n/**\n * Constructs a `MemoMap` that can be used to build additional layers.\n *\n * @since 2.0.0\n * @category memo map\n */\nexport const makeMemoMap: Effect.Effect<MemoMap> = internal.makeMemoMap\n\n/**\n * Builds a layer into an `Effect` value, using the specified `MemoMap` to memoize\n * the layer construction.\n *\n * @since 2.0.0\n * @category memo map\n */\nexport const buildWithMemoMap: {\n  /**\n   * Builds a layer into an `Effect` value, using the specified `MemoMap` to memoize\n   * the layer construction.\n   *\n   * @since 2.0.0\n   * @category memo map\n   */\n  (memoMap: MemoMap, scope: Scope.Scope): <RIn, E, ROut>(self: Layer<ROut, E, RIn>) => Effect.Effect<Context.Context<ROut>, E, RIn>\n  /**\n   * Builds a layer into an `Effect` value, using the specified `MemoMap` to memoize\n   * the layer construction.\n   *\n   * @since 2.0.0\n   * @category memo map\n   */\n  <RIn, E, ROut>(self: Layer<ROut, E, RIn>, memoMap: MemoMap, scope: Scope.Scope): Effect.Effect<Context.Context<ROut>, E, RIn>\n} = internal.buildWithMemoMap\n\n/**\n * Updates a service in the context with a new implementation.\n *\n * **Details**\n *\n * This function modifies the existing implementation of a service in the\n * context. It retrieves the current service, applies the provided\n * transformation function `f`, and replaces the old service with the\n * transformed one.\n *\n * **When to Use**\n *\n * This is useful for adapting or extending a service's behavior during the\n * creation of a layer.\n *\n * @since 3.13.0\n * @category utils\n */\nexport const updateService = dual<\n  /**\n   * Updates a service in the context with a new implementation.\n   *\n   * **Details**\n   *\n   * This function modifies the existing implementation of a service in the\n   * context. It retrieves the current service, applies the provided\n   * transformation function `f`, and replaces the old service with the\n   * transformed one.\n   *\n   * **When to Use**\n   *\n   * This is useful for adapting or extending a service's behavior during the\n   * creation of a layer.\n   *\n   * @since 3.13.0\n   * @category utils\n   */\n  <I, A>(tag: Context.Tag<I, A>, f: (a: A) => A) => <A1, E1, R1>(layer: Layer<A1, E1, R1>) => Layer<A1, E1, I | R1>,\n  /**\n   * Updates a service in the context with a new implementation.\n   *\n   * **Details**\n   *\n   * This function modifies the existing implementation of a service in the\n   * context. It retrieves the current service, applies the provided\n   * transformation function `f`, and replaces the old service with the\n   * transformed one.\n   *\n   * **When to Use**\n   *\n   * This is useful for adapting or extending a service's behavior during the\n   * creation of a layer.\n   *\n   * @since 3.13.0\n   * @category utils\n   */\n  <A1, E1, R1, I, A>(layer: Layer<A1, E1, R1>, tag: Context.Tag<I, A>, f: (a: A) => A) => Layer<A1, E1, I | R1>\n>(3, (layer, tag, f) =>\n  provide(\n    layer,\n    map(context(), (c) => Context.add(c, tag, f(Context.unsafeGet(c, tag))))\n  ))\n","/**\n * This module provides utility functions and type class instances for working with the `BigDecimal` type in TypeScript.\n * It includes functions for basic arithmetic operations, as well as type class instances for `Equivalence` and `Order`.\n *\n * A `BigDecimal` allows storing any real number to arbitrary precision; which avoids common floating point errors\n * (such as 0.1 + 0.2 ≠ 0.3) at the cost of complexity.\n *\n * Internally, `BigDecimal` uses a `BigInt` object, paired with a 64-bit integer which determines the position of the\n * decimal point. Therefore, the precision *is not* actually arbitrary, but limited to 2<sup>63</sup> decimal places.\n *\n * It is not recommended to convert a floating point number to a decimal directly, as the floating point representation\n * may be unexpected.\n *\n * @module BigDecimal\n * @since 2.0.0\n * @see {@link module:BigInt} for more similar operations on `bigint` types\n * @see {@link module:Number} for more similar operations on `number` types\n */\n\nimport * as Equal from \"./Equal.js\"\nimport * as equivalence from \"./Equivalence.js\"\nimport { dual, pipe } from \"./Function.js\"\nimport * as Hash from \"./Hash.js\"\nimport { type Inspectable, NodeInspectSymbol } from \"./Inspectable.js\"\nimport * as Option from \"./Option.js\"\nimport * as order from \"./Order.js\"\nimport type { Ordering } from \"./Ordering.js\"\nimport { type Pipeable, pipeArguments } from \"./Pipeable.js\"\nimport { hasProperty } from \"./Predicate.js\"\n\nconst DEFAULT_PRECISION = 100\nconst FINITE_INT_REGEX = /^[+-]?\\d+$/\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport const TypeId: unique symbol = Symbol.for(\"effect/BigDecimal\")\n\n/**\n * @since 2.0.0\n * @category symbol\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 2.0.0\n * @category models\n */\nexport interface BigDecimal extends Equal.Equal, Pipeable, Inspectable {\n  readonly [TypeId]: TypeId\n  readonly value: bigint\n  readonly scale: number\n  /** @internal */\n  normalized?: BigDecimal\n}\n\nconst BigDecimalProto: Omit<BigDecimal, \"value\" | \"scale\" | \"normalized\"> = {\n  [TypeId]: TypeId,\n  [Hash.symbol](this: BigDecimal): number {\n    const normalized = normalize(this)\n    return pipe(\n      Hash.hash(normalized.value),\n      Hash.combine(Hash.number(normalized.scale)),\n      Hash.cached(this)\n    )\n  },\n  [Equal.symbol](this: BigDecimal, that: unknown): boolean {\n    return isBigDecimal(that) && equals(this, that)\n  },\n  toString(this: BigDecimal) {\n    return `BigDecimal(${format(this)})`\n  },\n  toJSON(this: BigDecimal) {\n    return {\n      _id: \"BigDecimal\",\n      value: String(this.value),\n      scale: this.scale\n    }\n  },\n  [NodeInspectSymbol](this: BigDecimal) {\n    return this.toJSON()\n  },\n  pipe() {\n    return pipeArguments(this, arguments)\n  }\n} as const\n\n/**\n * Checks if a given value is a `BigDecimal`.\n *\n * @since 2.0.0\n * @category guards\n */\nexport const isBigDecimal = (u: unknown): u is BigDecimal => hasProperty(u, TypeId)\n\n/**\n * Creates a `BigDecimal` from a `bigint` value and a scale.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const make = (value: bigint, scale: number): BigDecimal => {\n  const o = Object.create(BigDecimalProto)\n  o.value = value\n  o.scale = scale\n  return o\n}\n\n/**\n * Internal function used to create pre-normalized `BigDecimal`s.\n *\n * @internal\n */\nexport const unsafeMakeNormalized = (value: bigint, scale: number): BigDecimal => {\n  if (value !== bigint0 && value % bigint10 === bigint0) {\n    throw new RangeError(\"Value must be normalized\")\n  }\n\n  const o = make(value, scale)\n  o.normalized = o\n  return o\n}\n\nconst bigint0 = BigInt(0)\nconst bigint1 = BigInt(1)\nconst bigint10 = BigInt(10)\nconst zero = unsafeMakeNormalized(bigint0, 0)\n\n/**\n * Normalizes a given `BigDecimal` by removing trailing zeros.\n *\n * **Example**\n *\n * ```ts\n * import * as assert from \"node:assert\"\n * import { normalize, make, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(normalize(unsafeFromString(\"123.00000\")), normalize(make(123n, 0)))\n * assert.deepStrictEqual(normalize(unsafeFromString(\"12300000\")), normalize(make(123n, -5)))\n * ```\n *\n * @since 2.0.0\n * @category scaling\n */\nexport const normalize = (self: BigDecimal): BigDecimal => {\n  if (self.normalized === undefined) {\n    if (self.value === bigint0) {\n      self.normalized = zero\n    } else {\n      const digits = `${self.value}`\n\n      let trail = 0\n      for (let i = digits.length - 1; i >= 0; i--) {\n        if (digits[i] === \"0\") {\n          trail++\n        } else {\n          break\n        }\n      }\n\n      if (trail === 0) {\n        self.normalized = self\n      }\n\n      const value = BigInt(digits.substring(0, digits.length - trail))\n      const scale = self.scale - trail\n      self.normalized = unsafeMakeNormalized(value, scale)\n    }\n  }\n\n  return self.normalized\n}\n\n/**\n * Scales a given `BigDecimal` to the specified scale.\n *\n * If the given scale is smaller than the current scale, the value will be rounded down to\n * the nearest integer.\n *\n * @since 2.0.0\n * @category scaling\n */\nexport const scale: {\n  /**\n   * Scales a given `BigDecimal` to the specified scale.\n   *\n   * If the given scale is smaller than the current scale, the value will be rounded down to\n   * the nearest integer.\n   *\n   * @since 2.0.0\n   * @category scaling\n   */\n  (scale: number): (self: BigDecimal) => BigDecimal\n  /**\n   * Scales a given `BigDecimal` to the specified scale.\n   *\n   * If the given scale is smaller than the current scale, the value will be rounded down to\n   * the nearest integer.\n   *\n   * @since 2.0.0\n   * @category scaling\n   */\n  (self: BigDecimal, scale: number): BigDecimal\n} = dual(2, (self: BigDecimal, scale: number): BigDecimal => {\n  if (scale > self.scale) {\n    return make(self.value * bigint10 ** BigInt(scale - self.scale), scale)\n  }\n\n  if (scale < self.scale) {\n    return make(self.value / bigint10 ** BigInt(self.scale - scale), scale)\n  }\n\n  return self\n})\n\n/**\n * Provides an addition operation on `BigDecimal`s.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { sum, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(sum(unsafeFromString(\"2\"), unsafeFromString(\"3\")), unsafeFromString(\"5\"))\n * ```\n *\n * @since 2.0.0\n * @category math\n */\nexport const sum: {\n  /**\n   * Provides an addition operation on `BigDecimal`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { sum, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(sum(unsafeFromString(\"2\"), unsafeFromString(\"3\")), unsafeFromString(\"5\"))\n   * ```\n   *\n   * @since 2.0.0\n   * @category math\n   */\n  (that: BigDecimal): (self: BigDecimal) => BigDecimal\n  /**\n   * Provides an addition operation on `BigDecimal`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { sum, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(sum(unsafeFromString(\"2\"), unsafeFromString(\"3\")), unsafeFromString(\"5\"))\n   * ```\n   *\n   * @since 2.0.0\n   * @category math\n   */\n  (self: BigDecimal, that: BigDecimal): BigDecimal\n} = dual(2, (self: BigDecimal, that: BigDecimal): BigDecimal => {\n  if (that.value === bigint0) {\n    return self\n  }\n\n  if (self.value === bigint0) {\n    return that\n  }\n\n  if (self.scale > that.scale) {\n    return make(scale(that, self.scale).value + self.value, self.scale)\n  }\n\n  if (self.scale < that.scale) {\n    return make(scale(self, that.scale).value + that.value, that.scale)\n  }\n\n  return make(self.value + that.value, self.scale)\n})\n\n/**\n * Provides a multiplication operation on `BigDecimal`s.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { multiply, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(multiply(unsafeFromString(\"2\"), unsafeFromString(\"3\")), unsafeFromString(\"6\"))\n * ```\n *\n * @since 2.0.0\n * @category math\n */\nexport const multiply: {\n  /**\n   * Provides a multiplication operation on `BigDecimal`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { multiply, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(multiply(unsafeFromString(\"2\"), unsafeFromString(\"3\")), unsafeFromString(\"6\"))\n   * ```\n   *\n   * @since 2.0.0\n   * @category math\n   */\n  (that: BigDecimal): (self: BigDecimal) => BigDecimal\n  /**\n   * Provides a multiplication operation on `BigDecimal`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { multiply, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(multiply(unsafeFromString(\"2\"), unsafeFromString(\"3\")), unsafeFromString(\"6\"))\n   * ```\n   *\n   * @since 2.0.0\n   * @category math\n   */\n  (self: BigDecimal, that: BigDecimal): BigDecimal\n} = dual(2, (self: BigDecimal, that: BigDecimal): BigDecimal => {\n  if (that.value === bigint0 || self.value === bigint0) {\n    return zero\n  }\n\n  return make(self.value * that.value, self.scale + that.scale)\n})\n\n/**\n * Provides a subtraction operation on `BigDecimal`s.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { subtract, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(subtract(unsafeFromString(\"2\"), unsafeFromString(\"3\")), unsafeFromString(\"-1\"))\n * ```\n *\n * @since 2.0.0\n * @category math\n */\nexport const subtract: {\n  /**\n   * Provides a subtraction operation on `BigDecimal`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { subtract, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(subtract(unsafeFromString(\"2\"), unsafeFromString(\"3\")), unsafeFromString(\"-1\"))\n   * ```\n   *\n   * @since 2.0.0\n   * @category math\n   */\n  (that: BigDecimal): (self: BigDecimal) => BigDecimal\n  /**\n   * Provides a subtraction operation on `BigDecimal`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { subtract, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(subtract(unsafeFromString(\"2\"), unsafeFromString(\"3\")), unsafeFromString(\"-1\"))\n   * ```\n   *\n   * @since 2.0.0\n   * @category math\n   */\n  (self: BigDecimal, that: BigDecimal): BigDecimal\n} = dual(2, (self: BigDecimal, that: BigDecimal): BigDecimal => {\n  if (that.value === bigint0) {\n    return self\n  }\n\n  if (self.value === bigint0) {\n    return make(-that.value, that.scale)\n  }\n\n  if (self.scale > that.scale) {\n    return make(self.value - scale(that, self.scale).value, self.scale)\n  }\n\n  if (self.scale < that.scale) {\n    return make(scale(self, that.scale).value - that.value, that.scale)\n  }\n\n  return make(self.value - that.value, self.scale)\n})\n\n/**\n * Internal function used for arbitrary precision division.\n */\nconst divideWithPrecision = (\n  num: bigint,\n  den: bigint,\n  scale: number,\n  precision: number\n): BigDecimal => {\n  const numNegative = num < bigint0\n  const denNegative = den < bigint0\n  const negateResult = numNegative !== denNegative\n\n  num = numNegative ? -num : num\n  den = denNegative ? -den : den\n\n  // Shift digits until numerator is larger than denominator (set scale appropriately).\n  while (num < den) {\n    num *= bigint10\n    scale++\n  }\n\n  // First division.\n  let quotient = num / den\n  let remainder = num % den\n\n  if (remainder === bigint0) {\n    // No remainder, return immediately.\n    return make(negateResult ? -quotient : quotient, scale)\n  }\n\n  // The quotient is guaranteed to be non-negative at this point. No need to consider sign.\n  let count = `${quotient}`.length\n\n  // Shift the remainder by 1 decimal; The quotient will be 1 digit upon next division.\n  remainder *= bigint10\n  while (remainder !== bigint0 && count < precision) {\n    const q = remainder / den\n    const r = remainder % den\n    quotient = quotient * bigint10 + q\n    remainder = r * bigint10\n\n    count++\n    scale++\n  }\n\n  if (remainder !== bigint0) {\n    // Round final number with remainder.\n    quotient += roundTerminal(remainder / den)\n  }\n\n  return make(negateResult ? -quotient : quotient, scale)\n}\n\n/**\n * Internal function used for rounding.\n *\n * Returns 1 if the most significant digit is >= 5, otherwise 0.\n *\n * This is used after dividing a number by a power of ten and rounding the last digit.\n *\n * @internal\n */\nexport const roundTerminal = (n: bigint): bigint => {\n  const pos = n >= bigint0 ? 0 : 1\n  return Number(`${n}`[pos]) < 5 ? bigint0 : bigint1\n}\n\n/**\n * Provides a division operation on `BigDecimal`s.\n *\n * If the dividend is not a multiple of the divisor the result will be a `BigDecimal` value\n * which represents the integer division rounded down to the nearest integer.\n *\n * If the divisor is `0`, the result will be `None`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { BigDecimal, Option } from \"effect\"\n *\n * assert.deepStrictEqual(BigDecimal.divide(BigDecimal.unsafeFromString(\"6\"), BigDecimal.unsafeFromString(\"3\")), Option.some(BigDecimal.unsafeFromString(\"2\")))\n * assert.deepStrictEqual(BigDecimal.divide(BigDecimal.unsafeFromString(\"6\"), BigDecimal.unsafeFromString(\"4\")), Option.some(BigDecimal.unsafeFromString(\"1.5\")))\n * assert.deepStrictEqual(BigDecimal.divide(BigDecimal.unsafeFromString(\"6\"), BigDecimal.unsafeFromString(\"0\")), Option.none())\n * ```\n *\n * @since 2.0.0\n * @category math\n */\nexport const divide: {\n  /**\n   * Provides a division operation on `BigDecimal`s.\n   *\n   * If the dividend is not a multiple of the divisor the result will be a `BigDecimal` value\n   * which represents the integer division rounded down to the nearest integer.\n   *\n   * If the divisor is `0`, the result will be `None`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { BigDecimal, Option } from \"effect\"\n   *\n   * assert.deepStrictEqual(BigDecimal.divide(BigDecimal.unsafeFromString(\"6\"), BigDecimal.unsafeFromString(\"3\")), Option.some(BigDecimal.unsafeFromString(\"2\")))\n   * assert.deepStrictEqual(BigDecimal.divide(BigDecimal.unsafeFromString(\"6\"), BigDecimal.unsafeFromString(\"4\")), Option.some(BigDecimal.unsafeFromString(\"1.5\")))\n   * assert.deepStrictEqual(BigDecimal.divide(BigDecimal.unsafeFromString(\"6\"), BigDecimal.unsafeFromString(\"0\")), Option.none())\n   * ```\n   *\n   * @since 2.0.0\n   * @category math\n   */\n  (that: BigDecimal): (self: BigDecimal) => Option.Option<BigDecimal>\n  /**\n   * Provides a division operation on `BigDecimal`s.\n   *\n   * If the dividend is not a multiple of the divisor the result will be a `BigDecimal` value\n   * which represents the integer division rounded down to the nearest integer.\n   *\n   * If the divisor is `0`, the result will be `None`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { BigDecimal, Option } from \"effect\"\n   *\n   * assert.deepStrictEqual(BigDecimal.divide(BigDecimal.unsafeFromString(\"6\"), BigDecimal.unsafeFromString(\"3\")), Option.some(BigDecimal.unsafeFromString(\"2\")))\n   * assert.deepStrictEqual(BigDecimal.divide(BigDecimal.unsafeFromString(\"6\"), BigDecimal.unsafeFromString(\"4\")), Option.some(BigDecimal.unsafeFromString(\"1.5\")))\n   * assert.deepStrictEqual(BigDecimal.divide(BigDecimal.unsafeFromString(\"6\"), BigDecimal.unsafeFromString(\"0\")), Option.none())\n   * ```\n   *\n   * @since 2.0.0\n   * @category math\n   */\n  (self: BigDecimal, that: BigDecimal): Option.Option<BigDecimal>\n} = dual(2, (self: BigDecimal, that: BigDecimal): Option.Option<BigDecimal> => {\n  if (that.value === bigint0) {\n    return Option.none()\n  }\n\n  if (self.value === bigint0) {\n    return Option.some(zero)\n  }\n\n  const scale = self.scale - that.scale\n  if (self.value === that.value) {\n    return Option.some(make(bigint1, scale))\n  }\n\n  return Option.some(divideWithPrecision(self.value, that.value, scale, DEFAULT_PRECISION))\n})\n\n/**\n * Provides an unsafe division operation on `BigDecimal`s.\n *\n * If the dividend is not a multiple of the divisor the result will be a `BigDecimal` value\n * which represents the integer division rounded down to the nearest integer.\n *\n * Throws a `RangeError` if the divisor is `0`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { unsafeDivide, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(unsafeDivide(unsafeFromString(\"6\"), unsafeFromString(\"3\")), unsafeFromString(\"2\"))\n * assert.deepStrictEqual(unsafeDivide(unsafeFromString(\"6\"), unsafeFromString(\"4\")), unsafeFromString(\"1.5\"))\n * ```\n *\n * @since 2.0.0\n * @category math\n */\nexport const unsafeDivide: {\n  /**\n   * Provides an unsafe division operation on `BigDecimal`s.\n   *\n   * If the dividend is not a multiple of the divisor the result will be a `BigDecimal` value\n   * which represents the integer division rounded down to the nearest integer.\n   *\n   * Throws a `RangeError` if the divisor is `0`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { unsafeDivide, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(unsafeDivide(unsafeFromString(\"6\"), unsafeFromString(\"3\")), unsafeFromString(\"2\"))\n   * assert.deepStrictEqual(unsafeDivide(unsafeFromString(\"6\"), unsafeFromString(\"4\")), unsafeFromString(\"1.5\"))\n   * ```\n   *\n   * @since 2.0.0\n   * @category math\n   */\n  (that: BigDecimal): (self: BigDecimal) => BigDecimal\n  /**\n   * Provides an unsafe division operation on `BigDecimal`s.\n   *\n   * If the dividend is not a multiple of the divisor the result will be a `BigDecimal` value\n   * which represents the integer division rounded down to the nearest integer.\n   *\n   * Throws a `RangeError` if the divisor is `0`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { unsafeDivide, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(unsafeDivide(unsafeFromString(\"6\"), unsafeFromString(\"3\")), unsafeFromString(\"2\"))\n   * assert.deepStrictEqual(unsafeDivide(unsafeFromString(\"6\"), unsafeFromString(\"4\")), unsafeFromString(\"1.5\"))\n   * ```\n   *\n   * @since 2.0.0\n   * @category math\n   */\n  (self: BigDecimal, that: BigDecimal): BigDecimal\n} = dual(2, (self: BigDecimal, that: BigDecimal): BigDecimal => {\n  if (that.value === bigint0) {\n    throw new RangeError(\"Division by zero\")\n  }\n\n  if (self.value === bigint0) {\n    return zero\n  }\n\n  const scale = self.scale - that.scale\n  if (self.value === that.value) {\n    return make(bigint1, scale)\n  }\n  return divideWithPrecision(self.value, that.value, scale, DEFAULT_PRECISION)\n})\n\n/**\n * @since 2.0.0\n * @category instances\n */\nexport const Order: order.Order<BigDecimal> = order.make((self, that) => {\n  const scmp = order.number(sign(self), sign(that))\n  if (scmp !== 0) {\n    return scmp\n  }\n\n  if (self.scale > that.scale) {\n    return order.bigint(self.value, scale(that, self.scale).value)\n  }\n\n  if (self.scale < that.scale) {\n    return order.bigint(scale(self, that.scale).value, that.value)\n  }\n\n  return order.bigint(self.value, that.value)\n})\n\n/**\n * Returns `true` if the first argument is less than the second, otherwise `false`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { lessThan, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(lessThan(unsafeFromString(\"2\"), unsafeFromString(\"3\")), true)\n * assert.deepStrictEqual(lessThan(unsafeFromString(\"3\"), unsafeFromString(\"3\")), false)\n * assert.deepStrictEqual(lessThan(unsafeFromString(\"4\"), unsafeFromString(\"3\")), false)\n * ```\n *\n * @since 2.0.0\n * @category predicates\n */\nexport const lessThan: {\n  /**\n   * Returns `true` if the first argument is less than the second, otherwise `false`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { lessThan, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(lessThan(unsafeFromString(\"2\"), unsafeFromString(\"3\")), true)\n   * assert.deepStrictEqual(lessThan(unsafeFromString(\"3\"), unsafeFromString(\"3\")), false)\n   * assert.deepStrictEqual(lessThan(unsafeFromString(\"4\"), unsafeFromString(\"3\")), false)\n   * ```\n   *\n   * @since 2.0.0\n   * @category predicates\n   */\n  (that: BigDecimal): (self: BigDecimal) => boolean\n  /**\n   * Returns `true` if the first argument is less than the second, otherwise `false`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { lessThan, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(lessThan(unsafeFromString(\"2\"), unsafeFromString(\"3\")), true)\n   * assert.deepStrictEqual(lessThan(unsafeFromString(\"3\"), unsafeFromString(\"3\")), false)\n   * assert.deepStrictEqual(lessThan(unsafeFromString(\"4\"), unsafeFromString(\"3\")), false)\n   * ```\n   *\n   * @since 2.0.0\n   * @category predicates\n   */\n  (self: BigDecimal, that: BigDecimal): boolean\n} = order.lessThan(Order)\n\n/**\n * Checks if a given `BigDecimal` is less than or equal to the provided one.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { lessThanOrEqualTo, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(lessThanOrEqualTo(unsafeFromString(\"2\"), unsafeFromString(\"3\")), true)\n * assert.deepStrictEqual(lessThanOrEqualTo(unsafeFromString(\"3\"), unsafeFromString(\"3\")), true)\n * assert.deepStrictEqual(lessThanOrEqualTo(unsafeFromString(\"4\"), unsafeFromString(\"3\")), false)\n * ```\n *\n * @since 2.0.0\n * @category predicates\n */\nexport const lessThanOrEqualTo: {\n  /**\n   * Checks if a given `BigDecimal` is less than or equal to the provided one.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { lessThanOrEqualTo, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(lessThanOrEqualTo(unsafeFromString(\"2\"), unsafeFromString(\"3\")), true)\n   * assert.deepStrictEqual(lessThanOrEqualTo(unsafeFromString(\"3\"), unsafeFromString(\"3\")), true)\n   * assert.deepStrictEqual(lessThanOrEqualTo(unsafeFromString(\"4\"), unsafeFromString(\"3\")), false)\n   * ```\n   *\n   * @since 2.0.0\n   * @category predicates\n   */\n  (that: BigDecimal): (self: BigDecimal) => boolean\n  /**\n   * Checks if a given `BigDecimal` is less than or equal to the provided one.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { lessThanOrEqualTo, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(lessThanOrEqualTo(unsafeFromString(\"2\"), unsafeFromString(\"3\")), true)\n   * assert.deepStrictEqual(lessThanOrEqualTo(unsafeFromString(\"3\"), unsafeFromString(\"3\")), true)\n   * assert.deepStrictEqual(lessThanOrEqualTo(unsafeFromString(\"4\"), unsafeFromString(\"3\")), false)\n   * ```\n   *\n   * @since 2.0.0\n   * @category predicates\n   */\n  (self: BigDecimal, that: BigDecimal): boolean\n} = order.lessThanOrEqualTo(Order)\n\n/**\n * Returns `true` if the first argument is greater than the second, otherwise `false`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { greaterThan, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(greaterThan(unsafeFromString(\"2\"), unsafeFromString(\"3\")), false)\n * assert.deepStrictEqual(greaterThan(unsafeFromString(\"3\"), unsafeFromString(\"3\")), false)\n * assert.deepStrictEqual(greaterThan(unsafeFromString(\"4\"), unsafeFromString(\"3\")), true)\n * ```\n *\n * @since 2.0.0\n * @category predicates\n */\nexport const greaterThan: {\n  /**\n   * Returns `true` if the first argument is greater than the second, otherwise `false`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { greaterThan, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(greaterThan(unsafeFromString(\"2\"), unsafeFromString(\"3\")), false)\n   * assert.deepStrictEqual(greaterThan(unsafeFromString(\"3\"), unsafeFromString(\"3\")), false)\n   * assert.deepStrictEqual(greaterThan(unsafeFromString(\"4\"), unsafeFromString(\"3\")), true)\n   * ```\n   *\n   * @since 2.0.0\n   * @category predicates\n   */\n  (that: BigDecimal): (self: BigDecimal) => boolean\n  /**\n   * Returns `true` if the first argument is greater than the second, otherwise `false`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { greaterThan, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(greaterThan(unsafeFromString(\"2\"), unsafeFromString(\"3\")), false)\n   * assert.deepStrictEqual(greaterThan(unsafeFromString(\"3\"), unsafeFromString(\"3\")), false)\n   * assert.deepStrictEqual(greaterThan(unsafeFromString(\"4\"), unsafeFromString(\"3\")), true)\n   * ```\n   *\n   * @since 2.0.0\n   * @category predicates\n   */\n  (self: BigDecimal, that: BigDecimal): boolean\n} = order.greaterThan(Order)\n\n/**\n * Checks if a given `BigDecimal` is greater than or equal to the provided one.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { greaterThanOrEqualTo, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(greaterThanOrEqualTo(unsafeFromString(\"2\"), unsafeFromString(\"3\")), false)\n * assert.deepStrictEqual(greaterThanOrEqualTo(unsafeFromString(\"3\"), unsafeFromString(\"3\")), true)\n * assert.deepStrictEqual(greaterThanOrEqualTo(unsafeFromString(\"4\"), unsafeFromString(\"3\")), true)\n * ```\n *\n * @since 2.0.0\n * @category predicates\n */\nexport const greaterThanOrEqualTo: {\n  /**\n   * Checks if a given `BigDecimal` is greater than or equal to the provided one.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { greaterThanOrEqualTo, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(greaterThanOrEqualTo(unsafeFromString(\"2\"), unsafeFromString(\"3\")), false)\n   * assert.deepStrictEqual(greaterThanOrEqualTo(unsafeFromString(\"3\"), unsafeFromString(\"3\")), true)\n   * assert.deepStrictEqual(greaterThanOrEqualTo(unsafeFromString(\"4\"), unsafeFromString(\"3\")), true)\n   * ```\n   *\n   * @since 2.0.0\n   * @category predicates\n   */\n  (that: BigDecimal): (self: BigDecimal) => boolean\n  /**\n   * Checks if a given `BigDecimal` is greater than or equal to the provided one.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { greaterThanOrEqualTo, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(greaterThanOrEqualTo(unsafeFromString(\"2\"), unsafeFromString(\"3\")), false)\n   * assert.deepStrictEqual(greaterThanOrEqualTo(unsafeFromString(\"3\"), unsafeFromString(\"3\")), true)\n   * assert.deepStrictEqual(greaterThanOrEqualTo(unsafeFromString(\"4\"), unsafeFromString(\"3\")), true)\n   * ```\n   *\n   * @since 2.0.0\n   * @category predicates\n   */\n  (self: BigDecimal, that: BigDecimal): boolean\n} = order.greaterThanOrEqualTo(Order)\n\n/**\n * Checks if a `BigDecimal` is between a `minimum` and `maximum` value (inclusive).\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { BigDecimal } from \"effect\"\n *\n * const between = BigDecimal.between({\n *   minimum: BigDecimal.unsafeFromString(\"1\"),\n *   maximum: BigDecimal.unsafeFromString(\"5\") }\n * )\n *\n * assert.deepStrictEqual(between(BigDecimal.unsafeFromString(\"3\")), true)\n * assert.deepStrictEqual(between(BigDecimal.unsafeFromString(\"0\")), false)\n * assert.deepStrictEqual(between(BigDecimal.unsafeFromString(\"6\")), false)\n * ```\n *\n * @since 2.0.0\n * @category predicates\n */\nexport const between: {\n  /**\n   * Checks if a `BigDecimal` is between a `minimum` and `maximum` value (inclusive).\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { BigDecimal } from \"effect\"\n   *\n   * const between = BigDecimal.between({\n   *   minimum: BigDecimal.unsafeFromString(\"1\"),\n   *   maximum: BigDecimal.unsafeFromString(\"5\") }\n   * )\n   *\n   * assert.deepStrictEqual(between(BigDecimal.unsafeFromString(\"3\")), true)\n   * assert.deepStrictEqual(between(BigDecimal.unsafeFromString(\"0\")), false)\n   * assert.deepStrictEqual(between(BigDecimal.unsafeFromString(\"6\")), false)\n   * ```\n   *\n   * @since 2.0.0\n   * @category predicates\n   */\n  (\n    options: {\n      minimum: BigDecimal\n      maximum: BigDecimal\n    }\n  ): (self: BigDecimal) => boolean\n  /**\n   * Checks if a `BigDecimal` is between a `minimum` and `maximum` value (inclusive).\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { BigDecimal } from \"effect\"\n   *\n   * const between = BigDecimal.between({\n   *   minimum: BigDecimal.unsafeFromString(\"1\"),\n   *   maximum: BigDecimal.unsafeFromString(\"5\") }\n   * )\n   *\n   * assert.deepStrictEqual(between(BigDecimal.unsafeFromString(\"3\")), true)\n   * assert.deepStrictEqual(between(BigDecimal.unsafeFromString(\"0\")), false)\n   * assert.deepStrictEqual(between(BigDecimal.unsafeFromString(\"6\")), false)\n   * ```\n   *\n   * @since 2.0.0\n   * @category predicates\n   */\n  (\n    self: BigDecimal,\n    options: {\n      minimum: BigDecimal\n      maximum: BigDecimal\n    }\n  ): boolean\n} = order.between(Order)\n\n/**\n * Restricts the given `BigDecimal` to be within the range specified by the `minimum` and `maximum` values.\n *\n * - If the `BigDecimal` is less than the `minimum` value, the function returns the `minimum` value.\n * - If the `BigDecimal` is greater than the `maximum` value, the function returns the `maximum` value.\n * - Otherwise, it returns the original `BigDecimal`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { BigDecimal } from \"effect\"\n *\n * const clamp = BigDecimal.clamp({\n *   minimum: BigDecimal.unsafeFromString(\"1\"),\n *   maximum: BigDecimal.unsafeFromString(\"5\") }\n * )\n *\n * assert.deepStrictEqual(clamp(BigDecimal.unsafeFromString(\"3\")), BigDecimal.unsafeFromString(\"3\"))\n * assert.deepStrictEqual(clamp(BigDecimal.unsafeFromString(\"0\")), BigDecimal.unsafeFromString(\"1\"))\n * assert.deepStrictEqual(clamp(BigDecimal.unsafeFromString(\"6\")), BigDecimal.unsafeFromString(\"5\"))\n * ```\n *\n * @since 2.0.0\n * @category math\n */\nexport const clamp: {\n  /**\n   * Restricts the given `BigDecimal` to be within the range specified by the `minimum` and `maximum` values.\n   *\n   * - If the `BigDecimal` is less than the `minimum` value, the function returns the `minimum` value.\n   * - If the `BigDecimal` is greater than the `maximum` value, the function returns the `maximum` value.\n   * - Otherwise, it returns the original `BigDecimal`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { BigDecimal } from \"effect\"\n   *\n   * const clamp = BigDecimal.clamp({\n   *   minimum: BigDecimal.unsafeFromString(\"1\"),\n   *   maximum: BigDecimal.unsafeFromString(\"5\") }\n   * )\n   *\n   * assert.deepStrictEqual(clamp(BigDecimal.unsafeFromString(\"3\")), BigDecimal.unsafeFromString(\"3\"))\n   * assert.deepStrictEqual(clamp(BigDecimal.unsafeFromString(\"0\")), BigDecimal.unsafeFromString(\"1\"))\n   * assert.deepStrictEqual(clamp(BigDecimal.unsafeFromString(\"6\")), BigDecimal.unsafeFromString(\"5\"))\n   * ```\n   *\n   * @since 2.0.0\n   * @category math\n   */\n  (\n    options: {\n      minimum: BigDecimal\n      maximum: BigDecimal\n    }\n  ): (self: BigDecimal) => BigDecimal\n  /**\n   * Restricts the given `BigDecimal` to be within the range specified by the `minimum` and `maximum` values.\n   *\n   * - If the `BigDecimal` is less than the `minimum` value, the function returns the `minimum` value.\n   * - If the `BigDecimal` is greater than the `maximum` value, the function returns the `maximum` value.\n   * - Otherwise, it returns the original `BigDecimal`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { BigDecimal } from \"effect\"\n   *\n   * const clamp = BigDecimal.clamp({\n   *   minimum: BigDecimal.unsafeFromString(\"1\"),\n   *   maximum: BigDecimal.unsafeFromString(\"5\") }\n   * )\n   *\n   * assert.deepStrictEqual(clamp(BigDecimal.unsafeFromString(\"3\")), BigDecimal.unsafeFromString(\"3\"))\n   * assert.deepStrictEqual(clamp(BigDecimal.unsafeFromString(\"0\")), BigDecimal.unsafeFromString(\"1\"))\n   * assert.deepStrictEqual(clamp(BigDecimal.unsafeFromString(\"6\")), BigDecimal.unsafeFromString(\"5\"))\n   * ```\n   *\n   * @since 2.0.0\n   * @category math\n   */\n  (\n    self: BigDecimal,\n    options: {\n      minimum: BigDecimal\n      maximum: BigDecimal\n    }\n  ): BigDecimal\n} = order.clamp(Order)\n\n/**\n * Returns the minimum between two `BigDecimal`s.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { min, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(min(unsafeFromString(\"2\"), unsafeFromString(\"3\")), unsafeFromString(\"2\"))\n * ```\n *\n * @since 2.0.0\n * @category math\n */\nexport const min: {\n  /**\n   * Returns the minimum between two `BigDecimal`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { min, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(min(unsafeFromString(\"2\"), unsafeFromString(\"3\")), unsafeFromString(\"2\"))\n   * ```\n   *\n   * @since 2.0.0\n   * @category math\n   */\n  (that: BigDecimal): (self: BigDecimal) => BigDecimal\n  /**\n   * Returns the minimum between two `BigDecimal`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { min, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(min(unsafeFromString(\"2\"), unsafeFromString(\"3\")), unsafeFromString(\"2\"))\n   * ```\n   *\n   * @since 2.0.0\n   * @category math\n   */\n  (self: BigDecimal, that: BigDecimal): BigDecimal\n} = order.min(Order)\n\n/**\n * Returns the maximum between two `BigDecimal`s.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { max, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(max(unsafeFromString(\"2\"), unsafeFromString(\"3\")), unsafeFromString(\"3\"))\n * ```\n *\n * @since 2.0.0\n * @category math\n */\nexport const max: {\n  /**\n   * Returns the maximum between two `BigDecimal`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { max, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(max(unsafeFromString(\"2\"), unsafeFromString(\"3\")), unsafeFromString(\"3\"))\n   * ```\n   *\n   * @since 2.0.0\n   * @category math\n   */\n  (that: BigDecimal): (self: BigDecimal) => BigDecimal\n  /**\n   * Returns the maximum between two `BigDecimal`s.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { max, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(max(unsafeFromString(\"2\"), unsafeFromString(\"3\")), unsafeFromString(\"3\"))\n   * ```\n   *\n   * @since 2.0.0\n   * @category math\n   */\n  (self: BigDecimal, that: BigDecimal): BigDecimal\n} = order.max(Order)\n\n/**\n * Determines the sign of a given `BigDecimal`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { sign, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(sign(unsafeFromString(\"-5\")), -1)\n * assert.deepStrictEqual(sign(unsafeFromString(\"0\")), 0)\n * assert.deepStrictEqual(sign(unsafeFromString(\"5\")), 1)\n * ```\n *\n * @since 2.0.0\n * @category math\n */\nexport const sign = (n: BigDecimal): Ordering => n.value === bigint0 ? 0 : n.value < bigint0 ? -1 : 1\n\n/**\n * Determines the absolute value of a given `BigDecimal`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { abs, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(abs(unsafeFromString(\"-5\")), unsafeFromString(\"5\"))\n * assert.deepStrictEqual(abs(unsafeFromString(\"0\")), unsafeFromString(\"0\"))\n * assert.deepStrictEqual(abs(unsafeFromString(\"5\")), unsafeFromString(\"5\"))\n * ```\n *\n * @since 2.0.0\n * @category math\n */\nexport const abs = (n: BigDecimal): BigDecimal => n.value < bigint0 ? make(-n.value, n.scale) : n\n\n/**\n * Provides a negate operation on `BigDecimal`s.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { negate, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(negate(unsafeFromString(\"3\")), unsafeFromString(\"-3\"))\n * assert.deepStrictEqual(negate(unsafeFromString(\"-6\")), unsafeFromString(\"6\"))\n * ```\n *\n * @since 2.0.0\n * @category math\n */\nexport const negate = (n: BigDecimal): BigDecimal => make(-n.value, n.scale)\n\n/**\n * Returns the remainder left over when one operand is divided by a second operand.\n *\n * If the divisor is `0`, the result will be `None`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { BigDecimal, Option } from \"effect\"\n *\n * assert.deepStrictEqual(BigDecimal.remainder(BigDecimal.unsafeFromString(\"2\"), BigDecimal.unsafeFromString(\"2\")), Option.some(BigDecimal.unsafeFromString(\"0\")))\n * assert.deepStrictEqual(BigDecimal.remainder(BigDecimal.unsafeFromString(\"3\"), BigDecimal.unsafeFromString(\"2\")), Option.some(BigDecimal.unsafeFromString(\"1\")))\n * assert.deepStrictEqual(BigDecimal.remainder(BigDecimal.unsafeFromString(\"-4\"), BigDecimal.unsafeFromString(\"2\")), Option.some(BigDecimal.unsafeFromString(\"0\")))\n * ```\n *\n * @since 2.0.0\n * @category math\n */\nexport const remainder: {\n  /**\n   * Returns the remainder left over when one operand is divided by a second operand.\n   *\n   * If the divisor is `0`, the result will be `None`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { BigDecimal, Option } from \"effect\"\n   *\n   * assert.deepStrictEqual(BigDecimal.remainder(BigDecimal.unsafeFromString(\"2\"), BigDecimal.unsafeFromString(\"2\")), Option.some(BigDecimal.unsafeFromString(\"0\")))\n   * assert.deepStrictEqual(BigDecimal.remainder(BigDecimal.unsafeFromString(\"3\"), BigDecimal.unsafeFromString(\"2\")), Option.some(BigDecimal.unsafeFromString(\"1\")))\n   * assert.deepStrictEqual(BigDecimal.remainder(BigDecimal.unsafeFromString(\"-4\"), BigDecimal.unsafeFromString(\"2\")), Option.some(BigDecimal.unsafeFromString(\"0\")))\n   * ```\n   *\n   * @since 2.0.0\n   * @category math\n   */\n  (divisor: BigDecimal): (self: BigDecimal) => Option.Option<BigDecimal>\n  /**\n   * Returns the remainder left over when one operand is divided by a second operand.\n   *\n   * If the divisor is `0`, the result will be `None`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { BigDecimal, Option } from \"effect\"\n   *\n   * assert.deepStrictEqual(BigDecimal.remainder(BigDecimal.unsafeFromString(\"2\"), BigDecimal.unsafeFromString(\"2\")), Option.some(BigDecimal.unsafeFromString(\"0\")))\n   * assert.deepStrictEqual(BigDecimal.remainder(BigDecimal.unsafeFromString(\"3\"), BigDecimal.unsafeFromString(\"2\")), Option.some(BigDecimal.unsafeFromString(\"1\")))\n   * assert.deepStrictEqual(BigDecimal.remainder(BigDecimal.unsafeFromString(\"-4\"), BigDecimal.unsafeFromString(\"2\")), Option.some(BigDecimal.unsafeFromString(\"0\")))\n   * ```\n   *\n   * @since 2.0.0\n   * @category math\n   */\n  (self: BigDecimal, divisor: BigDecimal): Option.Option<BigDecimal>\n} = dual(2, (self: BigDecimal, divisor: BigDecimal): Option.Option<BigDecimal> => {\n  if (divisor.value === bigint0) {\n    return Option.none()\n  }\n\n  const max = Math.max(self.scale, divisor.scale)\n  return Option.some(make(scale(self, max).value % scale(divisor, max).value, max))\n})\n\n/**\n * Returns the remainder left over when one operand is divided by a second operand.\n *\n * Throws a `RangeError` if the divisor is `0`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { unsafeRemainder, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(unsafeRemainder(unsafeFromString(\"2\"), unsafeFromString(\"2\")), unsafeFromString(\"0\"))\n * assert.deepStrictEqual(unsafeRemainder(unsafeFromString(\"3\"), unsafeFromString(\"2\")), unsafeFromString(\"1\"))\n * assert.deepStrictEqual(unsafeRemainder(unsafeFromString(\"-4\"), unsafeFromString(\"2\")), unsafeFromString(\"0\"))\n * ```\n *\n * @since 2.0.0\n * @category math\n */\nexport const unsafeRemainder: {\n  /**\n   * Returns the remainder left over when one operand is divided by a second operand.\n   *\n   * Throws a `RangeError` if the divisor is `0`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { unsafeRemainder, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(unsafeRemainder(unsafeFromString(\"2\"), unsafeFromString(\"2\")), unsafeFromString(\"0\"))\n   * assert.deepStrictEqual(unsafeRemainder(unsafeFromString(\"3\"), unsafeFromString(\"2\")), unsafeFromString(\"1\"))\n   * assert.deepStrictEqual(unsafeRemainder(unsafeFromString(\"-4\"), unsafeFromString(\"2\")), unsafeFromString(\"0\"))\n   * ```\n   *\n   * @since 2.0.0\n   * @category math\n   */\n  (divisor: BigDecimal): (self: BigDecimal) => BigDecimal\n  /**\n   * Returns the remainder left over when one operand is divided by a second operand.\n   *\n   * Throws a `RangeError` if the divisor is `0`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { unsafeRemainder, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(unsafeRemainder(unsafeFromString(\"2\"), unsafeFromString(\"2\")), unsafeFromString(\"0\"))\n   * assert.deepStrictEqual(unsafeRemainder(unsafeFromString(\"3\"), unsafeFromString(\"2\")), unsafeFromString(\"1\"))\n   * assert.deepStrictEqual(unsafeRemainder(unsafeFromString(\"-4\"), unsafeFromString(\"2\")), unsafeFromString(\"0\"))\n   * ```\n   *\n   * @since 2.0.0\n   * @category math\n   */\n  (self: BigDecimal, divisor: BigDecimal): BigDecimal\n} = dual(2, (self: BigDecimal, divisor: BigDecimal): BigDecimal => {\n  if (divisor.value === bigint0) {\n    throw new RangeError(\"Division by zero\")\n  }\n\n  const max = Math.max(self.scale, divisor.scale)\n  return make(scale(self, max).value % scale(divisor, max).value, max)\n})\n\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const Equivalence: equivalence.Equivalence<BigDecimal> = equivalence.make((self, that) => {\n  if (self.scale > that.scale) {\n    return scale(that, self.scale).value === self.value\n  }\n\n  if (self.scale < that.scale) {\n    return scale(self, that.scale).value === that.value\n  }\n\n  return self.value === that.value\n})\n\n/**\n * Checks if two `BigDecimal`s are equal.\n *\n * @since 2.0.0\n * @category predicates\n */\nexport const equals: {\n  /**\n   * Checks if two `BigDecimal`s are equal.\n   *\n   * @since 2.0.0\n   * @category predicates\n   */\n  (that: BigDecimal): (self: BigDecimal) => boolean\n  /**\n   * Checks if two `BigDecimal`s are equal.\n   *\n   * @since 2.0.0\n   * @category predicates\n   */\n  (self: BigDecimal, that: BigDecimal): boolean\n} = dual(2, (self: BigDecimal, that: BigDecimal): boolean => Equivalence(self, that))\n\n/**\n * Creates a `BigDecimal` from a `bigint` value.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const fromBigInt = (n: bigint): BigDecimal => make(n, 0)\n\n/**\n * Creates a `BigDecimal` from a `number` value.\n *\n * It is not recommended to convert a floating point number to a decimal directly,\n * as the floating point representation may be unexpected.\n *\n * Throws a `RangeError` if the number is not finite (`NaN`, `+Infinity` or `-Infinity`).\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { unsafeFromNumber, make } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(unsafeFromNumber(123), make(123n, 0))\n * assert.deepStrictEqual(unsafeFromNumber(123.456), make(123456n, 3))\n * ```\n *\n * @since 3.11.0\n * @category constructors\n */\nexport const unsafeFromNumber = (n: number): BigDecimal =>\n  Option.getOrThrowWith(safeFromNumber(n), () => new RangeError(`Number must be finite, got ${n}`))\n\n/**\n * Creates a `BigDecimal` from a `number` value.\n *\n * It is not recommended to convert a floating point number to a decimal directly,\n * as the floating point representation may be unexpected.\n *\n * Throws a `RangeError` if the number is not finite (`NaN`, `+Infinity` or `-Infinity`).\n *\n * @since 2.0.0\n * @category constructors\n * @deprecated Use {@link unsafeFromNumber} instead.\n */\nexport const fromNumber: (n: number) => BigDecimal = unsafeFromNumber\n\n// TODO(4.0): Rename this to `fromNumber` after removing the current, unsafe implementation of `fromNumber`.\n/**\n * Creates a `BigDecimal` from a `number` value.\n *\n * It is not recommended to convert a floating point number to a decimal directly,\n * as the floating point representation may be unexpected.\n *\n * Returns `None` if the number is not finite (`NaN`, `+Infinity` or `-Infinity`).\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { BigDecimal, Option } from \"effect\"\n *\n * assert.deepStrictEqual(BigDecimal.safeFromNumber(123), Option.some(BigDecimal.make(123n, 0)))\n * assert.deepStrictEqual(BigDecimal.safeFromNumber(123.456), Option.some(BigDecimal.make(123456n, 3)))\n * assert.deepStrictEqual(BigDecimal.safeFromNumber(Infinity), Option.none())\n * ```\n *\n * @since 3.11.0\n * @category constructors\n */\nexport const safeFromNumber = (n: number): Option.Option<BigDecimal> => {\n  if (!Number.isFinite(n)) {\n    return Option.none()\n  }\n\n  const string = `${n}`\n  if (string.includes(\"e\")) {\n    return fromString(string)\n  }\n\n  const [lead, trail = \"\"] = string.split(\".\")\n  return Option.some(make(BigInt(`${lead}${trail}`), trail.length))\n}\n\n/**\n * Parses a numerical `string` into a `BigDecimal`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { BigDecimal, Option } from \"effect\"\n *\n * assert.deepStrictEqual(BigDecimal.fromString(\"123\"), Option.some(BigDecimal.make(123n, 0)))\n * assert.deepStrictEqual(BigDecimal.fromString(\"123.456\"), Option.some(BigDecimal.make(123456n, 3)))\n * assert.deepStrictEqual(BigDecimal.fromString(\"123.abc\"), Option.none())\n * ```\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const fromString = (s: string): Option.Option<BigDecimal> => {\n  if (s === \"\") {\n    return Option.some(zero)\n  }\n\n  let base: string\n  let exp: number\n  const seperator = s.search(/[eE]/)\n  if (seperator !== -1) {\n    const trail = s.slice(seperator + 1)\n    base = s.slice(0, seperator)\n    exp = Number(trail)\n    if (base === \"\" || !Number.isSafeInteger(exp) || !FINITE_INT_REGEX.test(trail)) {\n      return Option.none()\n    }\n  } else {\n    base = s\n    exp = 0\n  }\n\n  let digits: string\n  let offset: number\n  const dot = base.search(/\\./)\n  if (dot !== -1) {\n    const lead = base.slice(0, dot)\n    const trail = base.slice(dot + 1)\n    digits = `${lead}${trail}`\n    offset = trail.length\n  } else {\n    digits = base\n    offset = 0\n  }\n\n  if (!FINITE_INT_REGEX.test(digits)) {\n    return Option.none()\n  }\n\n  const scale = offset - exp\n  if (!Number.isSafeInteger(scale)) {\n    return Option.none()\n  }\n\n  return Option.some(make(BigInt(digits), scale))\n}\n\n/**\n * Parses a numerical `string` into a `BigDecimal`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { unsafeFromString, make } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(unsafeFromString(\"123\"), make(123n, 0))\n * assert.deepStrictEqual(unsafeFromString(\"123.456\"), make(123456n, 3))\n * assert.throws(() => unsafeFromString(\"123.abc\"))\n * ```\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const unsafeFromString = (s: string): BigDecimal =>\n  Option.getOrThrowWith(fromString(s), () => new Error(\"Invalid numerical string\"))\n\n/**\n * Formats a given `BigDecimal` as a `string`.\n *\n * If the scale of the `BigDecimal` is greater than or equal to 16, the `BigDecimal` will\n * be formatted in scientific notation.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { format, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(format(unsafeFromString(\"-5\")), \"-5\")\n * assert.deepStrictEqual(format(unsafeFromString(\"123.456\")), \"123.456\")\n * assert.deepStrictEqual(format(unsafeFromString(\"-0.00000123\")), \"-0.00000123\")\n * ```\n *\n * @since 2.0.0\n * @category conversions\n */\nexport const format = (n: BigDecimal): string => {\n  const normalized = normalize(n)\n  if (Math.abs(normalized.scale) >= 16) {\n    return toExponential(normalized)\n  }\n\n  const negative = normalized.value < bigint0\n  const absolute = negative ? `${normalized.value}`.substring(1) : `${normalized.value}`\n\n  let before: string\n  let after: string\n\n  if (normalized.scale >= absolute.length) {\n    before = \"0\"\n    after = \"0\".repeat(normalized.scale - absolute.length) + absolute\n  } else {\n    const location = absolute.length - normalized.scale\n    if (location > absolute.length) {\n      const zeros = location - absolute.length\n      before = `${absolute}${\"0\".repeat(zeros)}`\n      after = \"\"\n    } else {\n      after = absolute.slice(location)\n      before = absolute.slice(0, location)\n    }\n  }\n\n  const complete = after === \"\" ? before : `${before}.${after}`\n  return negative ? `-${complete}` : complete\n}\n\n/**\n * Formats a given `BigDecimal` as a `string` in scientific notation.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { toExponential, make } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(toExponential(make(123456n, -5)), \"1.23456e+10\")\n * ```\n *\n * @since 3.11.0\n * @category conversions\n */\nexport const toExponential = (n: BigDecimal): string => {\n  if (isZero(n)) {\n    return \"0e+0\"\n  }\n\n  const normalized = normalize(n)\n  const digits = `${abs(normalized).value}`\n  const head = digits.slice(0, 1)\n  const tail = digits.slice(1)\n\n  let output = `${isNegative(normalized) ? \"-\" : \"\"}${head}`\n  if (tail !== \"\") {\n    output += `.${tail}`\n  }\n\n  const exp = tail.length - normalized.scale\n  return `${output}e${exp >= 0 ? \"+\" : \"\"}${exp}`\n}\n\n/**\n * Converts a `BigDecimal` to a `number`.\n *\n * This function will produce incorrect results if the `BigDecimal` exceeds the 64-bit range of a `number`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { unsafeToNumber, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(unsafeToNumber(unsafeFromString(\"123.456\")), 123.456)\n * ```\n *\n * @since 2.0.0\n * @category conversions\n */\nexport const unsafeToNumber = (n: BigDecimal): number => Number(format(n))\n\n/**\n * Checks if a given `BigDecimal` is an integer.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isInteger, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(isInteger(unsafeFromString(\"0\")), true)\n * assert.deepStrictEqual(isInteger(unsafeFromString(\"1\")), true)\n * assert.deepStrictEqual(isInteger(unsafeFromString(\"1.1\")), false)\n * ```\n *\n * @since 2.0.0\n * @category predicates\n */\nexport const isInteger = (n: BigDecimal): boolean => normalize(n).scale <= 0\n\n/**\n * Checks if a given `BigDecimal` is `0`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isZero, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(isZero(unsafeFromString(\"0\")), true)\n * assert.deepStrictEqual(isZero(unsafeFromString(\"1\")), false)\n * ```\n *\n * @since 2.0.0\n * @category predicates\n */\nexport const isZero = (n: BigDecimal): boolean => n.value === bigint0\n\n/**\n * Checks if a given `BigDecimal` is negative.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isNegative, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(isNegative(unsafeFromString(\"-1\")), true)\n * assert.deepStrictEqual(isNegative(unsafeFromString(\"0\")), false)\n * assert.deepStrictEqual(isNegative(unsafeFromString(\"1\")), false)\n * ```\n *\n * @since 2.0.0\n * @category predicates\n */\nexport const isNegative = (n: BigDecimal): boolean => n.value < bigint0\n\n/**\n * Checks if a given `BigDecimal` is positive.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isPositive, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(isPositive(unsafeFromString(\"-1\")), false)\n * assert.deepStrictEqual(isPositive(unsafeFromString(\"0\")), false)\n * assert.deepStrictEqual(isPositive(unsafeFromString(\"1\")), true)\n * ```\n *\n * @since 2.0.0\n * @category predicates\n */\nexport const isPositive = (n: BigDecimal): boolean => n.value > bigint0\n\nconst isBigDecimalArgs = (args: IArguments) => isBigDecimal(args[0])\n\n/**\n * Calculate the ceiling of a `BigDecimal` at the given scale.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { ceil, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(ceil(unsafeFromString(\"145\"), -1), unsafeFromString(\"150\"))\n * assert.deepStrictEqual(ceil(unsafeFromString(\"-14.5\")), unsafeFromString(\"-14\"))\n * ```\n *\n * @since 3.16.0\n * @category math\n */\nexport const ceil: {\n  /**\n   * Calculate the ceiling of a `BigDecimal` at the given scale.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { ceil, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(ceil(unsafeFromString(\"145\"), -1), unsafeFromString(\"150\"))\n   * assert.deepStrictEqual(ceil(unsafeFromString(\"-14.5\")), unsafeFromString(\"-14\"))\n   * ```\n   *\n   * @since 3.16.0\n   * @category math\n   */\n  (scale: number): (self: BigDecimal) => BigDecimal\n  /**\n   * Calculate the ceiling of a `BigDecimal` at the given scale.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { ceil, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(ceil(unsafeFromString(\"145\"), -1), unsafeFromString(\"150\"))\n   * assert.deepStrictEqual(ceil(unsafeFromString(\"-14.5\")), unsafeFromString(\"-14\"))\n   * ```\n   *\n   * @since 3.16.0\n   * @category math\n   */\n  (self: BigDecimal, scale?: number): BigDecimal\n} = dual(isBigDecimalArgs, (self: BigDecimal, scale: number = 0): BigDecimal => {\n  const truncated = truncate(self, scale)\n\n  if (isPositive(self) && lessThan(truncated, self)) {\n    return sum(truncated, make(1n, scale))\n  }\n\n  return truncated\n})\n\n/**\n * Calculate the floor of a `BigDecimal` at the given scale.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { floor, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(floor(unsafeFromString(\"145\"), -1), unsafeFromString(\"140\"))\n * assert.deepStrictEqual(floor(unsafeFromString(\"-14.5\")), unsafeFromString(\"-15\"))\n * ```\n *\n * @since 3.16.0\n * @category math\n */\nexport const floor: {\n  /**\n   * Calculate the floor of a `BigDecimal` at the given scale.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { floor, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(floor(unsafeFromString(\"145\"), -1), unsafeFromString(\"140\"))\n   * assert.deepStrictEqual(floor(unsafeFromString(\"-14.5\")), unsafeFromString(\"-15\"))\n   * ```\n   *\n   * @since 3.16.0\n   * @category math\n   */\n  (scale: number): (self: BigDecimal) => BigDecimal\n  /**\n   * Calculate the floor of a `BigDecimal` at the given scale.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { floor, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(floor(unsafeFromString(\"145\"), -1), unsafeFromString(\"140\"))\n   * assert.deepStrictEqual(floor(unsafeFromString(\"-14.5\")), unsafeFromString(\"-15\"))\n   * ```\n   *\n   * @since 3.16.0\n   * @category math\n   */\n  (self: BigDecimal, scale?: number): BigDecimal\n} = dual(isBigDecimalArgs, (self: BigDecimal, scale: number = 0): BigDecimal => {\n  const truncated = truncate(self, scale)\n\n  if (isNegative(self) && greaterThan(truncated, self)) {\n    return sum(truncated, make(-1n, scale))\n  }\n\n  return truncated\n})\n\n/**\n * Truncate a `BigDecimal` at the given scale. This is the same operation as rounding away from zero.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { truncate, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(truncate(unsafeFromString(\"145\"), -1), unsafeFromString(\"140\"))\n * assert.deepStrictEqual(truncate(unsafeFromString(\"-14.5\")), unsafeFromString(\"-14\"))\n * ```\n *\n * @since 3.16.0\n * @category math\n */\nexport const truncate: {\n  /**\n   * Truncate a `BigDecimal` at the given scale. This is the same operation as rounding away from zero.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { truncate, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(truncate(unsafeFromString(\"145\"), -1), unsafeFromString(\"140\"))\n   * assert.deepStrictEqual(truncate(unsafeFromString(\"-14.5\")), unsafeFromString(\"-14\"))\n   * ```\n   *\n   * @since 3.16.0\n   * @category math\n   */\n  (scale: number): (self: BigDecimal) => BigDecimal\n  /**\n   * Truncate a `BigDecimal` at the given scale. This is the same operation as rounding away from zero.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { truncate, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(truncate(unsafeFromString(\"145\"), -1), unsafeFromString(\"140\"))\n   * assert.deepStrictEqual(truncate(unsafeFromString(\"-14.5\")), unsafeFromString(\"-14\"))\n   * ```\n   *\n   * @since 3.16.0\n   * @category math\n   */\n  (self: BigDecimal, scale?: number): BigDecimal\n} = dual(isBigDecimalArgs, (self: BigDecimal, scale: number = 0): BigDecimal => {\n  if (self.scale <= scale) {\n    return self\n  }\n\n  // BigInt division truncates towards zero\n  return make(self.value / (10n ** BigInt(self.scale - scale)), scale)\n})\n\n/**\n * Internal function used by `round` for `half-even` and `half-odd` rounding modes.\n *\n * Returns the digit at the position of the given `scale` within the `BigDecimal`.\n *\n * @internal\n */\nexport const digitAt: {\n  /**\n   * Internal function used by `round` for `half-even` and `half-odd` rounding modes.\n   *\n   * Returns the digit at the position of the given `scale` within the `BigDecimal`.\n   *\n   * @internal\n   */\n  (scale: number): (self: BigDecimal) => bigint\n  /**\n   * Internal function used by `round` for `half-even` and `half-odd` rounding modes.\n   *\n   * Returns the digit at the position of the given `scale` within the `BigDecimal`.\n   *\n   * @internal\n   */\n  (self: BigDecimal, scale: number): bigint\n} = dual(2, (self: BigDecimal, scale: number): bigint => {\n  if (self.scale < scale) {\n    return 0n\n  }\n\n  const scaled = self.value / (10n ** BigInt(self.scale - scale))\n  return scaled % 10n\n})\n\n/**\n * Rounding modes for `BigDecimal`.\n *\n * `ceil`: round towards positive infinity\n * `floor`: round towards negative infinity\n * `to-zero`: round towards zero\n * `from-zero`: round away from zero\n * `half-ceil`: round to the nearest neighbor; if equidistant round towards positive infinity\n * `half-floor`: round to the nearest neighbor; if equidistant round towards negative infinity\n * `half-to-zero`: round to the nearest neighbor; if equidistant round towards zero\n * `half-from-zero`: round to the nearest neighbor; if equidistant round away from zero\n * `half-even`: round to the nearest neighbor; if equidistant round to the neighbor with an even digit\n * `half-odd`: round to the nearest neighbor; if equidistant round to the neighbor with an odd digit\n *\n * @since 3.16.0\n * @category math\n */\nexport type RoundingMode =\n  | \"ceil\"\n  | \"floor\"\n  | \"to-zero\"\n  | \"from-zero\"\n  | \"half-ceil\"\n  | \"half-floor\"\n  | \"half-to-zero\"\n  | \"half-from-zero\"\n  | \"half-even\"\n  | \"half-odd\"\n\n/**\n * Rounds a `BigDecimal` at the given scale with the specified rounding mode.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { round, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(round(unsafeFromString(\"145\"), { mode: \"from-zero\", scale: -1 }), unsafeFromString(\"150\"))\n * assert.deepStrictEqual(round(unsafeFromString(\"-14.5\")), unsafeFromString(\"-15\"))\n * ```\n *\n * @since 3.16.0\n * @category math\n */\nexport const round: {\n  /**\n   * Rounds a `BigDecimal` at the given scale with the specified rounding mode.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { round, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(round(unsafeFromString(\"145\"), { mode: \"from-zero\", scale: -1 }), unsafeFromString(\"150\"))\n   * assert.deepStrictEqual(round(unsafeFromString(\"-14.5\")), unsafeFromString(\"-15\"))\n   * ```\n   *\n   * @since 3.16.0\n   * @category math\n   */\n  (options: { scale?: number; mode?: RoundingMode }): (self: BigDecimal) => BigDecimal\n  /**\n   * Rounds a `BigDecimal` at the given scale with the specified rounding mode.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { round, unsafeFromString } from \"effect/BigDecimal\"\n   *\n   * assert.deepStrictEqual(round(unsafeFromString(\"145\"), { mode: \"from-zero\", scale: -1 }), unsafeFromString(\"150\"))\n   * assert.deepStrictEqual(round(unsafeFromString(\"-14.5\")), unsafeFromString(\"-15\"))\n   * ```\n   *\n   * @since 3.16.0\n   * @category math\n   */\n  (n: BigDecimal, options?: { scale?: number; mode?: RoundingMode }): BigDecimal\n} = dual(isBigDecimalArgs, (self: BigDecimal, options?: { scale?: number; mode?: RoundingMode }): BigDecimal => {\n  const mode = options?.mode ?? \"half-from-zero\"\n  const scale = options?.scale ?? 0\n\n  switch (mode) {\n    case \"ceil\":\n      return ceil(self, scale)\n\n    case \"floor\":\n      return floor(self, scale)\n\n    case \"to-zero\":\n      return truncate(self, scale)\n\n    case \"from-zero\":\n      return (isPositive(self) ? ceil(self, scale) : floor(self, scale))\n\n    case \"half-ceil\":\n      return floor(sum(self, make(5n, scale + 1)), scale)\n\n    case \"half-floor\":\n      return ceil(sum(self, make(-5n, scale + 1)), scale)\n\n    case \"half-to-zero\":\n      return isNegative(self)\n        ? floor(sum(self, make(5n, scale + 1)), scale)\n        : ceil(sum(self, make(-5n, scale + 1)), scale)\n\n    case \"half-from-zero\":\n      return isNegative(self)\n        ? ceil(sum(self, make(-5n, scale + 1)), scale)\n        : floor(sum(self, make(5n, scale + 1)), scale)\n  }\n\n  const halfCeil = floor(sum(self, make(5n, scale + 1)), scale)\n  const halfFloor = ceil(sum(self, make(-5n, scale + 1)), scale)\n  const digit = digitAt(halfCeil, scale)\n\n  switch (mode) {\n    case \"half-even\":\n      return equals(halfCeil, halfFloor) ? halfCeil : (digit % 2n === 0n) ? halfCeil : halfFloor\n\n    case \"half-odd\":\n      return equals(halfCeil, halfFloor) ? halfCeil : (digit % 2n === 0n) ? halfFloor : halfCeil\n  }\n})\n\n/**\n * Takes an `Iterable` of `BigDecimal`s and returns their sum as a single `BigDecimal`\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { unsafeFromString, sumAll } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(sumAll([unsafeFromString(\"2\"), unsafeFromString(\"3\"), unsafeFromString(\"4\")]), unsafeFromString(\"9\"))\n * ```\n *\n * @category math\n * @since 3.16.0\n */\nexport const sumAll = (collection: Iterable<BigDecimal>): BigDecimal => {\n  let out = zero\n  for (const n of collection) {\n    out = sum(out, n)\n  }\n\n  return out\n}\n","/**\n * @since 3.6.0\n */\nimport type { IllegalArgumentException } from \"./Cause.js\"\nimport * as Context from \"./Context.js\"\nimport type * as Duration from \"./Duration.js\"\nimport * as Effect from \"./Effect.js\"\nimport type * as Either from \"./Either.js\"\nimport type * as equivalence from \"./Equivalence.js\"\nimport { dual, type LazyArg } from \"./Function.js\"\nimport type { Inspectable } from \"./Inspectable.js\"\nimport * as Internal from \"./internal/dateTime.js\"\nimport * as Layer from \"./Layer.js\"\nimport type * as Option from \"./Option.js\"\nimport type * as order from \"./Order.js\"\nimport type { Pipeable } from \"./Pipeable.js\"\n\n/**\n * @since 3.6.0\n * @category type ids\n */\nexport const TypeId: unique symbol = Internal.TypeId\n\n/**\n * @since 3.6.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * A `DateTime` represents a point in time. It can optionally have a time zone\n * associated with it.\n *\n * @since 3.6.0\n * @category models\n */\nexport type DateTime = Utc | Zoned\n\n/**\n * @since 3.6.0\n * @category models\n */\nexport interface Utc extends DateTime.Proto {\n  readonly _tag: \"Utc\"\n  readonly epochMillis: number\n  partsUtc: DateTime.PartsWithWeekday | undefined\n}\n\n/**\n * @since 3.6.0\n * @category models\n */\nexport interface Zoned extends DateTime.Proto {\n  readonly _tag: \"Zoned\"\n  readonly epochMillis: number\n  readonly zone: TimeZone\n  adjustedEpochMillis: number | undefined\n  partsAdjusted: DateTime.PartsWithWeekday | undefined\n  partsUtc: DateTime.PartsWithWeekday | undefined\n}\n\n/**\n * @since 3.6.0\n * @category models\n */\nexport declare namespace DateTime {\n  /**\n   * @since 3.6.0\n   * @category models\n   */\n  export type Input = DateTime | Partial<Parts> | Date | number | string\n\n  /**\n   * @since 3.6.0\n   * @category models\n   */\n  export type PreserveZone<A extends DateTime.Input> = A extends Zoned ? Zoned : Utc\n\n  /**\n   * @since 3.6.0\n   * @category models\n   */\n  export type Unit = UnitSingular | UnitPlural\n\n  /**\n   * @since 3.6.0\n   * @category models\n   */\n  export type UnitSingular =\n    | \"milli\"\n    | \"second\"\n    | \"minute\"\n    | \"hour\"\n    | \"day\"\n    | \"week\"\n    | \"month\"\n    | \"year\"\n\n  /**\n   * @since 3.6.0\n   * @category models\n   */\n  export type UnitPlural =\n    | \"millis\"\n    | \"seconds\"\n    | \"minutes\"\n    | \"hours\"\n    | \"days\"\n    | \"weeks\"\n    | \"months\"\n    | \"years\"\n\n  /**\n   * @since 3.6.0\n   * @category models\n   */\n  export interface PartsWithWeekday {\n    readonly millis: number\n    readonly seconds: number\n    readonly minutes: number\n    readonly hours: number\n    readonly day: number\n    readonly weekDay: number\n    readonly month: number\n    readonly year: number\n  }\n\n  /**\n   * @since 3.6.0\n   * @category models\n   */\n  export interface Parts {\n    readonly millis: number\n    readonly seconds: number\n    readonly minutes: number\n    readonly hours: number\n    readonly day: number\n    readonly month: number\n    readonly year: number\n  }\n\n  /**\n   * @since 3.6.0\n   * @category models\n   */\n  export interface PartsForMath {\n    readonly millis: number\n    readonly seconds: number\n    readonly minutes: number\n    readonly hours: number\n    readonly days: number\n    readonly weeks: number\n    readonly months: number\n    readonly years: number\n  }\n\n  /**\n   * @since 3.6.0\n   * @category models\n   */\n  export interface Proto extends Pipeable, Inspectable {\n    readonly [TypeId]: TypeId\n  }\n}\n\n/**\n * @since 3.6.0\n * @category type ids\n */\nexport const TimeZoneTypeId: unique symbol = Internal.TimeZoneTypeId\n\n/**\n * @since 3.6.0\n * @category type ids\n */\nexport type TimeZoneTypeId = typeof TimeZoneTypeId\n\n/**\n * @since 3.6.0\n * @category models\n */\nexport type TimeZone = TimeZone.Offset | TimeZone.Named\n\n/**\n * @since 3.6.0\n * @category models\n */\nexport declare namespace TimeZone {\n  /**\n   * @since 3.6.0\n   * @category models\n   */\n  export interface Proto extends Inspectable {\n    readonly [TimeZoneTypeId]: TimeZoneTypeId\n  }\n\n  /**\n   * @since 3.6.0\n   * @category models\n   */\n  export interface Offset extends Proto {\n    readonly _tag: \"Offset\"\n    readonly offset: number\n  }\n\n  /**\n   * @since 3.6.0\n   * @category models\n   */\n  export interface Named extends Proto {\n    readonly _tag: \"Named\"\n    readonly id: string\n    /** @internal */\n    readonly format: Intl.DateTimeFormat\n  }\n}\n\n/**\n * A `Disambiguation` is used to resolve ambiguities when a `DateTime` is\n * ambiguous, such as during a daylight saving time transition.\n *\n * For more information, see the [Temporal documentation](https://tc39.es/proposal-temporal/docs/timezone.html#ambiguity-due-to-dst-or-other-time-zone-offset-changes)\n *\n * - `\"compatible\"`: (default) Behavior matching Temporal API and legacy JavaScript Date and moment.js.\n *   For repeated times, chooses the earlier occurrence. For gap times, chooses the later interpretation.\n *\n * - `\"earlier\"`: For repeated times, always choose the earlier occurrence.\n *   For gap times, choose the time before the gap.\n *\n * - `\"later\"`: For repeated times, always choose the later occurrence.\n *   For gap times, choose the time after the gap.\n *\n * - `\"reject\"`: Throw an `RangeError` when encountering ambiguous or non-existent times.\n *\n * @example\n * ```ts\n * import { DateTime } from \"effect\"\n *\n * // Fall-back example: 01:30 on Nov 2, 2025 in New York happens twice\n * const ambiguousTime = { year: 2025, month: 11, day: 2, hours: 1, minutes: 30 }\n * const timeZone = DateTime.zoneUnsafeMakeNamed(\"America/New_York\")\n *\n * DateTime.makeZoned(ambiguousTime, { timeZone, adjustForTimeZone: true, disambiguation: \"earlier\" })\n * // Earlier occurrence (DST time): 2025-11-02T05:30:00.000Z\n *\n * DateTime.makeZoned(ambiguousTime, { timeZone, adjustForTimeZone: true, disambiguation: \"later\" })\n * // Later occurrence (standard time): 2025-11-02T06:30:00.000Z\n *\n * // Gap example: 02:30 on Mar 9, 2025 in New York doesn't exist\n * const gapTime = { year: 2025, month: 3, day: 9, hours: 2, minutes: 30 }\n *\n * DateTime.makeZoned(gapTime, { timeZone, adjustForTimeZone: true, disambiguation: \"earlier\" })\n * // Time before gap: 2025-03-09T06:30:00.000Z (01:30 EST)\n *\n * DateTime.makeZoned(gapTime, { timeZone, adjustForTimeZone: true, disambiguation: \"later\" })\n * // Time after gap: 2025-03-09T07:30:00.000Z (03:30 EDT)\n * ```\n *\n * @since 3.18.0\n * @category models\n */\nexport type Disambiguation = \"compatible\" | \"earlier\" | \"later\" | \"reject\"\n\n// =============================================================================\n// guards\n// =============================================================================\n\n/**\n * @since 3.6.0\n * @category guards\n */\nexport const isDateTime: (u: unknown) => u is DateTime = Internal.isDateTime\n\n/**\n * @since 3.6.0\n * @category guards\n */\nexport const isTimeZone: (u: unknown) => u is TimeZone = Internal.isTimeZone\n\n/**\n * @since 3.6.0\n * @category guards\n */\nexport const isTimeZoneOffset: (u: unknown) => u is TimeZone.Offset = Internal.isTimeZoneOffset\n\n/**\n * @since 3.6.0\n * @category guards\n */\nexport const isTimeZoneNamed: (u: unknown) => u is TimeZone.Named = Internal.isTimeZoneNamed\n\n/**\n * @since 3.6.0\n * @category guards\n */\nexport const isUtc: (self: DateTime) => self is Utc = Internal.isUtc\n\n/**\n * @since 3.6.0\n * @category guards\n */\nexport const isZoned: (self: DateTime) => self is Zoned = Internal.isZoned\n\n// =============================================================================\n// instances\n// =============================================================================\n\n/**\n * @since 3.6.0\n * @category instances\n */\nexport const Equivalence: equivalence.Equivalence<DateTime> = Internal.Equivalence\n\n/**\n * @since 3.6.0\n * @category instances\n */\nexport const Order: order.Order<DateTime> = Internal.Order\n\n/**\n * @since 3.6.0\n */\nexport const clamp: {\n  /**\n   * @since 3.6.0\n   */\n  <Min extends DateTime, Max extends DateTime>(options: { readonly minimum: Min; readonly maximum: Max }): <A extends DateTime>(self: A) => A | Min | Max\n  /**\n   * @since 3.6.0\n   */\n  <A extends DateTime, Min extends DateTime, Max extends DateTime>(self: A, options: { readonly minimum: Min; readonly maximum: Max }): A | Min | Max\n} = Internal.clamp\n\n// =============================================================================\n// constructors\n// =============================================================================\n\n/**\n * Create a `DateTime` from a `Date`.\n *\n * If the `Date` is invalid, an `IllegalArgumentException` will be thrown.\n *\n * @since 3.6.0\n * @category constructors\n */\nexport const unsafeFromDate: (date: Date) => Utc = Internal.unsafeFromDate\n\n/**\n * Create a `DateTime` from one of the following:\n *\n * - A `DateTime`\n * - A `Date` instance (invalid dates will throw an `IllegalArgumentException`)\n * - The `number` of milliseconds since the Unix epoch\n * - An object with the parts of a date\n * - A `string` that can be parsed by `Date.parse`\n *\n * @since 3.6.0\n * @category constructors\n * @example\n * ```ts\n * import { DateTime } from \"effect\"\n *\n * // from Date\n * DateTime.unsafeMake(new Date())\n *\n * // from parts\n * DateTime.unsafeMake({ year: 2024 })\n *\n * // from string\n * DateTime.unsafeMake(\"2024-01-01\")\n * ```\n */\nexport const unsafeMake: <A extends DateTime.Input>(input: A) => DateTime.PreserveZone<A> = Internal.unsafeMake\n\n/**\n * Create a `DateTime.Zoned` using `DateTime.unsafeMake` and a time zone.\n *\n * The input is treated as UTC and then the time zone is attached, unless\n * `adjustForTimeZone` is set to `true`. In that case, the input is treated as\n * already in the time zone.\n *\n * When `adjustForTimeZone` is true and ambiguous times occur during DST transitions,\n * the `disambiguation` option controls how to resolve the ambiguity:\n * - `compatible` (default): Choose earlier time for repeated times, later for gaps\n * - `earlier`: Always choose the earlier of two possible times\n * - `later`: Always choose the later of two possible times\n * - `reject`: Throw an error when ambiguous times are encountered\n *\n * @since 3.6.0\n * @category constructors\n * @example\n * ```ts\n * import { DateTime } from \"effect\"\n *\n * DateTime.unsafeMakeZoned(new Date(), { timeZone: \"Europe/London\" })\n * ```\n */\nexport const unsafeMakeZoned: (input: DateTime.Input, options?: {\n  readonly timeZone?: number | string | TimeZone | undefined\n  readonly adjustForTimeZone?: boolean | undefined\n  readonly disambiguation?: Disambiguation | undefined\n}) => Zoned = Internal.unsafeMakeZoned\n\n/**\n * Create a `DateTime.Zoned` using `DateTime.make` and a time zone.\n *\n * The input is treated as UTC and then the time zone is attached, unless\n * `adjustForTimeZone` is set to `true`. In that case, the input is treated as\n * already in the time zone.\n *\n * When `adjustForTimeZone` is true and ambiguous times occur during DST transitions,\n * the `disambiguation` option controls how to resolve the ambiguity:\n * - `compatible` (default): Choose earlier time for repeated times, later for gaps\n * - `earlier`: Always choose the earlier of two possible times\n * - `later`: Always choose the later of two possible times\n * - `reject`: Throw an error when ambiguous times are encountered\n *\n * If the date time input or time zone is invalid, `None` will be returned.\n *\n * @since 3.6.0\n * @category constructors\n * @example\n * ```ts\n * import { DateTime } from \"effect\"\n *\n * DateTime.makeZoned(new Date(), { timeZone: \"Europe/London\" })\n * ```\n */\nexport const makeZoned: (\n  input: DateTime.Input,\n  options?: {\n    readonly timeZone?: number | string | TimeZone | undefined\n    readonly adjustForTimeZone?: boolean | undefined\n    readonly disambiguation?: Disambiguation | undefined\n  }\n) => Option.Option<Zoned> = Internal.makeZoned\n\n/**\n * Create a `DateTime` from one of the following:\n *\n * - A `DateTime`\n * - A `Date` instance (invalid dates will throw an `IllegalArgumentException`)\n * - The `number` of milliseconds since the Unix epoch\n * - An object with the parts of a date\n * - A `string` that can be parsed by `Date.parse`\n *\n * If the input is invalid, `None` will be returned.\n *\n * @since 3.6.0\n * @category constructors\n * @example\n * ```ts\n * import { DateTime } from \"effect\"\n *\n * // from Date\n * DateTime.make(new Date())\n *\n * // from parts\n * DateTime.make({ year: 2024 })\n *\n * // from string\n * DateTime.make(\"2024-01-01\")\n * ```\n */\nexport const make: <A extends DateTime.Input>(input: A) => Option.Option<DateTime.PreserveZone<A>> = Internal.make\n\n/**\n * Create a `DateTime.Zoned` from a string.\n *\n * It uses the format: `YYYY-MM-DDTHH:mm:ss.sss+HH:MM[Time/Zone]`.\n *\n * @since 3.6.0\n * @category constructors\n */\nexport const makeZonedFromString: (input: string) => Option.Option<Zoned> = Internal.makeZonedFromString\n\n/**\n * Get the current time using the `Clock` service and convert it to a `DateTime`.\n *\n * @since 3.6.0\n * @category constructors\n * @example\n * ```ts\n * import { DateTime, Effect } from \"effect\"\n *\n * Effect.gen(function* () {\n *   const now = yield* DateTime.now\n * })\n * ```\n */\nexport const now: Effect.Effect<Utc> = Internal.now\n\n/**\n * Get the current time using the `Clock` service.\n *\n * @since 3.14.0\n * @category constructors\n * @example\n * ```ts\n * import { DateTime, Effect } from \"effect\"\n *\n * Effect.gen(function* () {\n *   const now = yield* DateTime.nowAsDate\n * })\n * ```\n */\nexport const nowAsDate: Effect.Effect<Date> = Internal.nowAsDate\n\n/**\n * Get the current time using `Date.now`.\n *\n * @since 3.6.0\n * @category constructors\n */\nexport const unsafeNow: LazyArg<Utc> = Internal.unsafeNow\n\n// =============================================================================\n// time zones\n// =============================================================================\n\n/**\n * For a `DateTime` returns a new `DateTime.Utc`.\n *\n * @since 3.13.0\n * @category time zones\n * @example\n * ```ts\n * import { DateTime } from \"effect\"\n *\n * const now = DateTime.unsafeMakeZoned({ year: 2024 }, { timeZone: \"Europe/London\" })\n *\n * // set as UTC\n * const utc: DateTime.Utc = DateTime.toUtc(now)\n * ```\n */\nexport const toUtc: (self: DateTime) => Utc = Internal.toUtc\n\n/**\n * Set the time zone of a `DateTime`, returning a new `DateTime.Zoned`.\n *\n * @since 3.6.0\n * @category time zones\n * @example\n * ```ts\n * import { DateTime, Effect } from \"effect\"\n *\n * Effect.gen(function* () {\n *   const now = yield* DateTime.now\n *   const zone = DateTime.zoneUnsafeMakeNamed(\"Europe/London\")\n *\n *   // set the time zone\n *   const zoned: DateTime.Zoned = DateTime.setZone(now, zone)\n * })\n * ```\n */\nexport const setZone: {\n  /**\n   * Set the time zone of a `DateTime`, returning a new `DateTime.Zoned`.\n   *\n   * @since 3.6.0\n   * @category time zones\n   * @example\n   * ```ts\n   * import { DateTime, Effect } from \"effect\"\n   *\n   * Effect.gen(function* () {\n   *   const now = yield* DateTime.now\n   *   const zone = DateTime.zoneUnsafeMakeNamed(\"Europe/London\")\n   *\n   *   // set the time zone\n   *   const zoned: DateTime.Zoned = DateTime.setZone(now, zone)\n   * })\n   * ```\n   */\n  (\n   zone: TimeZone,\n   options?: {\n     readonly adjustForTimeZone?: boolean | undefined\n     readonly disambiguation?: Disambiguation | undefined\n   }\n  ): (self: DateTime) => Zoned\n  /**\n   * Set the time zone of a `DateTime`, returning a new `DateTime.Zoned`.\n   *\n   * @since 3.6.0\n   * @category time zones\n   * @example\n   * ```ts\n   * import { DateTime, Effect } from \"effect\"\n   *\n   * Effect.gen(function* () {\n   *   const now = yield* DateTime.now\n   *   const zone = DateTime.zoneUnsafeMakeNamed(\"Europe/London\")\n   *\n   *   // set the time zone\n   *   const zoned: DateTime.Zoned = DateTime.setZone(now, zone)\n   * })\n   * ```\n   */\n  (\n   self: DateTime,\n   zone: TimeZone,\n   options?: {\n     readonly adjustForTimeZone?: boolean | undefined\n     readonly disambiguation?: Disambiguation | undefined\n   }\n  ): Zoned\n} = Internal.setZone\n\n/**\n * Add a fixed offset time zone to a `DateTime`.\n *\n * The offset is in milliseconds.\n *\n * @since 3.6.0\n * @category time zones\n * @example\n * ```ts\n * import { DateTime, Effect } from \"effect\"\n *\n * Effect.gen(function* () {\n *   const now = yield* DateTime.now\n *\n *   // set the offset time zone in milliseconds\n *   const zoned: DateTime.Zoned = DateTime.setZoneOffset(now, 3 * 60 * 60 * 1000)\n * })\n * ```\n */\nexport const setZoneOffset: {\n  /**\n   * Add a fixed offset time zone to a `DateTime`.\n   *\n   * The offset is in milliseconds.\n   *\n   * @since 3.6.0\n   * @category time zones\n   * @example\n   * ```ts\n   * import { DateTime, Effect } from \"effect\"\n   *\n   * Effect.gen(function* () {\n   *   const now = yield* DateTime.now\n   *\n   *   // set the offset time zone in milliseconds\n   *   const zoned: DateTime.Zoned = DateTime.setZoneOffset(now, 3 * 60 * 60 * 1000)\n   * })\n   * ```\n   */\n  (\n   offset: number,\n   options?: {\n     readonly adjustForTimeZone?: boolean | undefined\n     readonly disambiguation?: Disambiguation | undefined\n   }\n  ): (self: DateTime) => Zoned\n  /**\n   * Add a fixed offset time zone to a `DateTime`.\n   *\n   * The offset is in milliseconds.\n   *\n   * @since 3.6.0\n   * @category time zones\n   * @example\n   * ```ts\n   * import { DateTime, Effect } from \"effect\"\n   *\n   * Effect.gen(function* () {\n   *   const now = yield* DateTime.now\n   *\n   *   // set the offset time zone in milliseconds\n   *   const zoned: DateTime.Zoned = DateTime.setZoneOffset(now, 3 * 60 * 60 * 1000)\n   * })\n   * ```\n   */\n  (\n   self: DateTime,\n   offset: number,\n   options?: {\n     readonly adjustForTimeZone?: boolean | undefined\n     readonly disambiguation?: Disambiguation | undefined\n   }\n  ): Zoned\n} = Internal.setZoneOffset\n\n/**\n * Attempt to create a named time zone from a IANA time zone identifier.\n *\n * If the time zone is invalid, an `IllegalArgumentException` will be thrown.\n *\n * @since 3.6.0\n * @category time zones\n */\nexport const zoneUnsafeMakeNamed: (zoneId: string) => TimeZone.Named = Internal.zoneUnsafeMakeNamed\n\n/**\n * Create a fixed offset time zone.\n *\n * @since 3.6.0\n * @category time zones\n */\nexport const zoneMakeOffset: (offset: number) => TimeZone.Offset = Internal.zoneMakeOffset\n\n/**\n * Create a named time zone from a IANA time zone identifier. If the time zone\n * is invalid, `None` will be returned.\n *\n * @since 3.6.0\n * @category time zones\n */\nexport const zoneMakeNamed: (zoneId: string) => Option.Option<TimeZone.Named> = Internal.zoneMakeNamed\n\n/**\n * Create a named time zone from a IANA time zone identifier. If the time zone\n * is invalid, it will fail with an `IllegalArgumentException`.\n *\n * @since 3.6.0\n * @category time zones\n */\nexport const zoneMakeNamedEffect: (zoneId: string) => Effect.Effect<TimeZone.Named, IllegalArgumentException> =\n  Internal.zoneMakeNamedEffect\n\n/**\n * Create a named time zone from the system's local time zone.\n *\n * @since 3.6.0\n * @category time zones\n */\nexport const zoneMakeLocal: () => TimeZone.Named = Internal.zoneMakeLocal\n\n/**\n * Try parse a TimeZone from a string\n *\n * @since 3.6.0\n * @category time zones\n */\nexport const zoneFromString: (zone: string) => Option.Option<TimeZone> = Internal.zoneFromString\n\n/**\n * Format a `TimeZone` as a string.\n *\n * @since 3.6.0\n * @category time zones\n * @example\n * ```ts\n * import { DateTime, Effect } from \"effect\"\n *\n * // Outputs \"+03:00\"\n * DateTime.zoneToString(DateTime.zoneMakeOffset(3 * 60 * 60 * 1000))\n *\n * // Outputs \"Europe/London\"\n * DateTime.zoneToString(DateTime.zoneUnsafeMakeNamed(\"Europe/London\"))\n * ```\n */\nexport const zoneToString: (self: TimeZone) => string = Internal.zoneToString\n\n/**\n * Set the time zone of a `DateTime` from an IANA time zone identifier. If the\n * time zone is invalid, `None` will be returned.\n *\n * @since 3.6.0\n * @category time zones\n * @example\n * ```ts\n * import { DateTime, Effect } from \"effect\"\n *\n * Effect.gen(function* () {\n *   const now = yield* DateTime.now\n *   // set the time zone, returns an Option\n *   DateTime.setZoneNamed(now, \"Europe/London\")\n * })\n * ```\n */\nexport const setZoneNamed: {\n  /**\n   * Set the time zone of a `DateTime` from an IANA time zone identifier. If the\n   * time zone is invalid, `None` will be returned.\n   *\n   * @since 3.6.0\n   * @category time zones\n   * @example\n   * ```ts\n   * import { DateTime, Effect } from \"effect\"\n   *\n   * Effect.gen(function* () {\n   *   const now = yield* DateTime.now\n   *   // set the time zone, returns an Option\n   *   DateTime.setZoneNamed(now, \"Europe/London\")\n   * })\n   * ```\n   */\n  (\n   zoneId: string,\n   options?: {\n     readonly adjustForTimeZone?: boolean | undefined\n     readonly disambiguation?: Disambiguation | undefined\n   }\n  ): (self: DateTime) => Option.Option<Zoned>\n  /**\n   * Set the time zone of a `DateTime` from an IANA time zone identifier. If the\n   * time zone is invalid, `None` will be returned.\n   *\n   * @since 3.6.0\n   * @category time zones\n   * @example\n   * ```ts\n   * import { DateTime, Effect } from \"effect\"\n   *\n   * Effect.gen(function* () {\n   *   const now = yield* DateTime.now\n   *   // set the time zone, returns an Option\n   *   DateTime.setZoneNamed(now, \"Europe/London\")\n   * })\n   * ```\n   */\n  (\n   self: DateTime,\n   zoneId: string,\n   options?: {\n     readonly adjustForTimeZone?: boolean | undefined\n     readonly disambiguation?: Disambiguation | undefined\n   }\n  ): Option.Option<Zoned>\n} = Internal.setZoneNamed\n\n/**\n * Set the time zone of a `DateTime` from an IANA time zone identifier. If the\n * time zone is invalid, an `IllegalArgumentException` will be thrown.\n *\n * @since 3.6.0\n * @category time zones\n * @example\n * ```ts\n * import { DateTime, Effect } from \"effect\"\n *\n * Effect.gen(function* () {\n *   const now = yield* DateTime.now\n *   // set the time zone\n *   DateTime.unsafeSetZoneNamed(now, \"Europe/London\")\n * })\n * ```\n */\nexport const unsafeSetZoneNamed: {\n  /**\n   * Set the time zone of a `DateTime` from an IANA time zone identifier. If the\n   * time zone is invalid, an `IllegalArgumentException` will be thrown.\n   *\n   * @since 3.6.0\n   * @category time zones\n   * @example\n   * ```ts\n   * import { DateTime, Effect } from \"effect\"\n   *\n   * Effect.gen(function* () {\n   *   const now = yield* DateTime.now\n   *   // set the time zone\n   *   DateTime.unsafeSetZoneNamed(now, \"Europe/London\")\n   * })\n   * ```\n   */\n  (\n   zoneId: string,\n   options?: {\n     readonly adjustForTimeZone?: boolean | undefined\n     readonly disambiguation?: Disambiguation | undefined\n   }\n  ): (self: DateTime) => Zoned\n  /**\n   * Set the time zone of a `DateTime` from an IANA time zone identifier. If the\n   * time zone is invalid, an `IllegalArgumentException` will be thrown.\n   *\n   * @since 3.6.0\n   * @category time zones\n   * @example\n   * ```ts\n   * import { DateTime, Effect } from \"effect\"\n   *\n   * Effect.gen(function* () {\n   *   const now = yield* DateTime.now\n   *   // set the time zone\n   *   DateTime.unsafeSetZoneNamed(now, \"Europe/London\")\n   * })\n   * ```\n   */\n  (\n   self: DateTime,\n   zoneId: string,\n   options?: {\n     readonly adjustForTimeZone?: boolean | undefined\n     readonly disambiguation?: Disambiguation | undefined\n   }\n  ): Zoned\n} = Internal.unsafeSetZoneNamed\n\n// =============================================================================\n// comparisons\n// =============================================================================\n\n/**\n * Calulate the difference between two `DateTime` values, returning the number\n * of milliseconds the `other` DateTime is from `self`.\n *\n * If `other` is *after* `self`, the result will be a positive number.\n *\n * @since 3.6.0\n * @category comparisons\n * @example\n * ```ts\n * import { DateTime, Effect } from \"effect\"\n *\n * Effect.gen(function* () {\n *   const now = yield* DateTime.now\n *   const other = DateTime.add(now, { minutes: 1 })\n *\n *   // returns 60000\n *   DateTime.distance(now, other)\n * })\n * ```\n */\nexport const distance: {\n  // =============================================================================\n  // comparisons\n  // =============================================================================\n\n  /**\n   * Calulate the difference between two `DateTime` values, returning the number\n   * of milliseconds the `other` DateTime is from `self`.\n   *\n   * If `other` is *after* `self`, the result will be a positive number.\n   *\n   * @since 3.6.0\n   * @category comparisons\n   * @example\n   * ```ts\n   * import { DateTime, Effect } from \"effect\"\n   *\n   * Effect.gen(function* () {\n   *   const now = yield* DateTime.now\n   *   const other = DateTime.add(now, { minutes: 1 })\n   *\n   *   // returns 60000\n   *   DateTime.distance(now, other)\n   * })\n   * ```\n   */\n  (other: DateTime): (self: DateTime) => number\n  // =============================================================================\n  // comparisons\n  // =============================================================================\n\n  /**\n   * Calulate the difference between two `DateTime` values, returning the number\n   * of milliseconds the `other` DateTime is from `self`.\n   *\n   * If `other` is *after* `self`, the result will be a positive number.\n   *\n   * @since 3.6.0\n   * @category comparisons\n   * @example\n   * ```ts\n   * import { DateTime, Effect } from \"effect\"\n   *\n   * Effect.gen(function* () {\n   *   const now = yield* DateTime.now\n   *   const other = DateTime.add(now, { minutes: 1 })\n   *\n   *   // returns 60000\n   *   DateTime.distance(now, other)\n   * })\n   * ```\n   */\n  (self: DateTime, other: DateTime): number\n} = Internal.distance\n\n/**\n * Calulate the difference between two `DateTime` values.\n *\n * If the `other` DateTime is before `self`, the result will be a negative\n * `Duration`, returned as a `Left`.\n *\n * If the `other` DateTime is after `self`, the result will be a positive\n * `Duration`, returned as a `Right`.\n *\n * @since 3.6.0\n * @category comparisons\n * @example\n * ```ts\n * import { DateTime, Effect } from \"effect\"\n *\n * Effect.gen(function* () {\n *   const now = yield* DateTime.now\n *   const other = DateTime.add(now, { minutes: 1 })\n *\n *   // returns Either.right(Duration.minutes(1))\n *   DateTime.distanceDurationEither(now, other)\n *\n *   // returns Either.left(Duration.minutes(1))\n *   DateTime.distanceDurationEither(other, now)\n * })\n * ```\n */\nexport const distanceDurationEither: {\n  /**\n   * Calulate the difference between two `DateTime` values.\n   *\n   * If the `other` DateTime is before `self`, the result will be a negative\n   * `Duration`, returned as a `Left`.\n   *\n   * If the `other` DateTime is after `self`, the result will be a positive\n   * `Duration`, returned as a `Right`.\n   *\n   * @since 3.6.0\n   * @category comparisons\n   * @example\n   * ```ts\n   * import { DateTime, Effect } from \"effect\"\n   *\n   * Effect.gen(function* () {\n   *   const now = yield* DateTime.now\n   *   const other = DateTime.add(now, { minutes: 1 })\n   *\n   *   // returns Either.right(Duration.minutes(1))\n   *   DateTime.distanceDurationEither(now, other)\n   *\n   *   // returns Either.left(Duration.minutes(1))\n   *   DateTime.distanceDurationEither(other, now)\n   * })\n   * ```\n   */\n  (other: DateTime): (self: DateTime) => Either.Either<Duration.Duration, Duration.Duration>\n  /**\n   * Calulate the difference between two `DateTime` values.\n   *\n   * If the `other` DateTime is before `self`, the result will be a negative\n   * `Duration`, returned as a `Left`.\n   *\n   * If the `other` DateTime is after `self`, the result will be a positive\n   * `Duration`, returned as a `Right`.\n   *\n   * @since 3.6.0\n   * @category comparisons\n   * @example\n   * ```ts\n   * import { DateTime, Effect } from \"effect\"\n   *\n   * Effect.gen(function* () {\n   *   const now = yield* DateTime.now\n   *   const other = DateTime.add(now, { minutes: 1 })\n   *\n   *   // returns Either.right(Duration.minutes(1))\n   *   DateTime.distanceDurationEither(now, other)\n   *\n   *   // returns Either.left(Duration.minutes(1))\n   *   DateTime.distanceDurationEither(other, now)\n   * })\n   * ```\n   */\n  (self: DateTime, other: DateTime): Either.Either<Duration.Duration, Duration.Duration>\n} = Internal.distanceDurationEither\n\n/**\n * Calulate the distance between two `DateTime` values.\n *\n * @since 3.6.0\n * @category comparisons\n * @example\n * ```ts\n * import { DateTime, Effect } from \"effect\"\n *\n * Effect.gen(function* () {\n *   const now = yield* DateTime.now\n *   const other = DateTime.add(now, { minutes: 1 })\n *\n *   // returns Duration.minutes(1)\n *   DateTime.distanceDuration(now, other)\n * })\n * ```\n */\nexport const distanceDuration: {\n  /**\n   * Calulate the distance between two `DateTime` values.\n   *\n   * @since 3.6.0\n   * @category comparisons\n   * @example\n   * ```ts\n   * import { DateTime, Effect } from \"effect\"\n   *\n   * Effect.gen(function* () {\n   *   const now = yield* DateTime.now\n   *   const other = DateTime.add(now, { minutes: 1 })\n   *\n   *   // returns Duration.minutes(1)\n   *   DateTime.distanceDuration(now, other)\n   * })\n   * ```\n   */\n  (other: DateTime): (self: DateTime) => Duration.Duration\n  /**\n   * Calulate the distance between two `DateTime` values.\n   *\n   * @since 3.6.0\n   * @category comparisons\n   * @example\n   * ```ts\n   * import { DateTime, Effect } from \"effect\"\n   *\n   * Effect.gen(function* () {\n   *   const now = yield* DateTime.now\n   *   const other = DateTime.add(now, { minutes: 1 })\n   *\n   *   // returns Duration.minutes(1)\n   *   DateTime.distanceDuration(now, other)\n   * })\n   * ```\n   */\n  (self: DateTime, other: DateTime): Duration.Duration\n} = Internal.distanceDuration\n\n/**\n * @since 3.6.0\n * @category comparisons\n */\nexport const min: {\n  /**\n   * @since 3.6.0\n   * @category comparisons\n   */\n  <That extends DateTime>(that: That): <Self extends DateTime>(self: Self) => Self | That\n  /**\n   * @since 3.6.0\n   * @category comparisons\n   */\n  <Self extends DateTime, That extends DateTime>(self: Self, that: That): Self | That\n} = Internal.min\n\n/**\n * @since 3.6.0\n * @category comparisons\n */\nexport const max: {\n  /**\n   * @since 3.6.0\n   * @category comparisons\n   */\n  <That extends DateTime>(that: That): <Self extends DateTime>(self: Self) => Self | That\n  /**\n   * @since 3.6.0\n   * @category comparisons\n   */\n  <Self extends DateTime, That extends DateTime>(self: Self, that: That): Self | That\n} = Internal.max\n\n/**\n * @since 3.6.0\n * @category comparisons\n */\nexport const greaterThan: {\n  /**\n   * @since 3.6.0\n   * @category comparisons\n   */\n  (that: DateTime): (self: DateTime) => boolean\n  /**\n   * @since 3.6.0\n   * @category comparisons\n   */\n  (self: DateTime, that: DateTime): boolean\n} = Internal.greaterThan\n\n/**\n * @since 3.6.0\n * @category comparisons\n */\nexport const greaterThanOrEqualTo: {\n  /**\n   * @since 3.6.0\n   * @category comparisons\n   */\n  (that: DateTime): (self: DateTime) => boolean\n  /**\n   * @since 3.6.0\n   * @category comparisons\n   */\n  (self: DateTime, that: DateTime): boolean\n} = Internal.greaterThanOrEqualTo\n\n/**\n * @since 3.6.0\n * @category comparisons\n */\nexport const lessThan: {\n  /**\n   * @since 3.6.0\n   * @category comparisons\n   */\n  (that: DateTime): (self: DateTime) => boolean\n  /**\n   * @since 3.6.0\n   * @category comparisons\n   */\n  (self: DateTime, that: DateTime): boolean\n} = Internal.lessThan\n\n/**\n * @since 3.6.0\n * @category comparisons\n */\nexport const lessThanOrEqualTo: {\n  /**\n   * @since 3.6.0\n   * @category comparisons\n   */\n  (that: DateTime): (self: DateTime) => boolean\n  /**\n   * @since 3.6.0\n   * @category comparisons\n   */\n  (self: DateTime, that: DateTime): boolean\n} = Internal.lessThanOrEqualTo\n\n/**\n * @since 3.6.0\n * @category comparisons\n */\nexport const between: {\n  /**\n   * @since 3.6.0\n   * @category comparisons\n   */\n  (options: { minimum: DateTime; maximum: DateTime }): (self: DateTime) => boolean\n  /**\n   * @since 3.6.0\n   * @category comparisons\n   */\n  (self: DateTime, options: { minimum: DateTime; maximum: DateTime }): boolean\n} = Internal.between\n\n/**\n * @since 3.6.0\n * @category comparisons\n */\nexport const isFuture: (self: DateTime) => Effect.Effect<boolean> = Internal.isFuture\n\n/**\n * @since 3.6.0\n * @category comparisons\n */\nexport const unsafeIsFuture: (self: DateTime) => boolean = Internal.unsafeIsFuture\n\n/**\n * @since 3.6.0\n * @category comparisons\n */\nexport const isPast: (self: DateTime) => Effect.Effect<boolean> = Internal.isPast\n\n/**\n * @since 3.6.0\n * @category comparisons\n */\nexport const unsafeIsPast: (self: DateTime) => boolean = Internal.unsafeIsPast\n\n// =============================================================================\n// conversions\n// =============================================================================\n\n/**\n * Get the UTC `Date` of a `DateTime`.\n *\n * @since 3.6.0\n * @category conversions\n */\nexport const toDateUtc: (self: DateTime) => Date = Internal.toDateUtc\n\n/**\n * Convert a `DateTime` to a `Date`, applying the time zone first.\n *\n * @since 3.6.0\n * @category conversions\n */\nexport const toDate: (self: DateTime) => Date = Internal.toDate\n\n/**\n * Calculate the time zone offset of a `DateTime.Zoned` in milliseconds.\n *\n * @since 3.6.0\n * @category conversions\n */\nexport const zonedOffset: (self: Zoned) => number = Internal.zonedOffset\n\n/**\n * Calculate the time zone offset of a `DateTime` in milliseconds.\n *\n * The offset is formatted as \"±HH:MM\".\n *\n * @since 3.6.0\n * @category conversions\n */\nexport const zonedOffsetIso: (self: Zoned) => string = Internal.zonedOffsetIso\n\n/**\n * Get the milliseconds since the Unix epoch of a `DateTime`.\n *\n * @since 3.6.0\n * @category conversions\n */\nexport const toEpochMillis: (self: DateTime) => number = Internal.toEpochMillis\n\n/**\n * Remove the time aspect of a `DateTime`, first adjusting for the time\n * zone. It will return a `DateTime.Utc` only containing the date.\n *\n * @since 3.6.0\n * @category conversions\n * @example\n * ```ts\n * import { DateTime } from \"effect\"\n *\n * // returns \"2024-01-01T00:00:00Z\"\n * DateTime.unsafeMakeZoned(\"2024-01-01T05:00:00Z\", {\n *   timeZone: \"Pacific/Auckland\",\n *   adjustForTimeZone: true\n * }).pipe(\n *   DateTime.removeTime,\n *   DateTime.formatIso\n * )\n * ```\n */\nexport const removeTime: (self: DateTime) => Utc = Internal.removeTime\n\n// =============================================================================\n// parts\n// =============================================================================\n\n/**\n * Get the different parts of a `DateTime` as an object.\n *\n * The parts will be time zone adjusted.\n *\n * @since 3.6.0\n * @category parts\n */\nexport const toParts: (self: DateTime) => DateTime.PartsWithWeekday = Internal.toParts\n\n/**\n * Get the different parts of a `DateTime` as an object.\n *\n * The parts will be in UTC.\n *\n * @since 3.6.0\n * @category parts\n */\nexport const toPartsUtc: (self: DateTime) => DateTime.PartsWithWeekday = Internal.toPartsUtc\n\n/**\n * Get a part of a `DateTime` as a number.\n *\n * The part will be in the UTC time zone.\n *\n * @since 3.6.0\n * @category parts\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { DateTime } from \"effect\"\n *\n * const now = DateTime.unsafeMake({ year: 2024 })\n * const year = DateTime.getPartUtc(now, \"year\")\n * assert.strictEqual(year, 2024)\n * ```\n */\nexport const getPartUtc: {\n  /**\n   * Get a part of a `DateTime` as a number.\n   *\n   * The part will be in the UTC time zone.\n   *\n   * @since 3.6.0\n   * @category parts\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { DateTime } from \"effect\"\n   *\n   * const now = DateTime.unsafeMake({ year: 2024 })\n   * const year = DateTime.getPartUtc(now, \"year\")\n   * assert.strictEqual(year, 2024)\n   * ```\n   */\n  (part: keyof DateTime.PartsWithWeekday): (self: DateTime) => number\n  /**\n   * Get a part of a `DateTime` as a number.\n   *\n   * The part will be in the UTC time zone.\n   *\n   * @since 3.6.0\n   * @category parts\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { DateTime } from \"effect\"\n   *\n   * const now = DateTime.unsafeMake({ year: 2024 })\n   * const year = DateTime.getPartUtc(now, \"year\")\n   * assert.strictEqual(year, 2024)\n   * ```\n   */\n  (self: DateTime, part: keyof DateTime.PartsWithWeekday): number\n} = Internal.getPartUtc\n\n/**\n * Get a part of a `DateTime` as a number.\n *\n * The part will be time zone adjusted.\n *\n * @since 3.6.0\n * @category parts\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { DateTime } from \"effect\"\n *\n * const now = DateTime.unsafeMakeZoned({ year: 2024 }, { timeZone: \"Europe/London\" })\n * const year = DateTime.getPart(now, \"year\")\n * assert.strictEqual(year, 2024)\n * ```\n */\nexport const getPart: {\n  /**\n   * Get a part of a `DateTime` as a number.\n   *\n   * The part will be time zone adjusted.\n   *\n   * @since 3.6.0\n   * @category parts\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { DateTime } from \"effect\"\n   *\n   * const now = DateTime.unsafeMakeZoned({ year: 2024 }, { timeZone: \"Europe/London\" })\n   * const year = DateTime.getPart(now, \"year\")\n   * assert.strictEqual(year, 2024)\n   * ```\n   */\n  (part: keyof DateTime.PartsWithWeekday): (self: DateTime) => number\n  /**\n   * Get a part of a `DateTime` as a number.\n   *\n   * The part will be time zone adjusted.\n   *\n   * @since 3.6.0\n   * @category parts\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { DateTime } from \"effect\"\n   *\n   * const now = DateTime.unsafeMakeZoned({ year: 2024 }, { timeZone: \"Europe/London\" })\n   * const year = DateTime.getPart(now, \"year\")\n   * assert.strictEqual(year, 2024)\n   * ```\n   */\n  (self: DateTime, part: keyof DateTime.PartsWithWeekday): number\n} = Internal.getPart\n\n/**\n * Set the different parts of a `DateTime` as an object.\n *\n * The Date will be time zone adjusted.\n *\n * @since 3.6.0\n * @category parts\n */\nexport const setParts: {\n  /**\n   * Set the different parts of a `DateTime` as an object.\n   *\n   * The Date will be time zone adjusted.\n   *\n   * @since 3.6.0\n   * @category parts\n   */\n  (parts: Partial<DateTime.PartsWithWeekday>): <A extends DateTime>(self: A) => A\n  /**\n   * Set the different parts of a `DateTime` as an object.\n   *\n   * The Date will be time zone adjusted.\n   *\n   * @since 3.6.0\n   * @category parts\n   */\n  <A extends DateTime>(self: A, parts: Partial<DateTime.PartsWithWeekday>): A\n} = Internal.setParts\n\n/**\n * Set the different parts of a `DateTime` as an object.\n *\n * @since 3.6.0\n * @category parts\n */\nexport const setPartsUtc: {\n  /**\n   * Set the different parts of a `DateTime` as an object.\n   *\n   * @since 3.6.0\n   * @category parts\n   */\n  (parts: Partial<DateTime.PartsWithWeekday>): <A extends DateTime>(self: A) => A\n  /**\n   * Set the different parts of a `DateTime` as an object.\n   *\n   * @since 3.6.0\n   * @category parts\n   */\n  <A extends DateTime>(self: A, parts: Partial<DateTime.PartsWithWeekday>): A\n} = Internal.setPartsUtc\n\n// =============================================================================\n// current time zone\n// =============================================================================\n\n/**\n * @since 3.11.0\n * @category current time zone\n */\nexport class CurrentTimeZone extends Context.Tag(\"effect/DateTime/CurrentTimeZone\")<CurrentTimeZone, TimeZone>() {}\n\n/**\n * Set the time zone of a `DateTime` to the current time zone, which is\n * determined by the `CurrentTimeZone` service.\n *\n * @since 3.6.0\n * @category current time zone\n * @example\n * ```ts\n * import { DateTime, Effect } from \"effect\"\n *\n * Effect.gen(function* () {\n *   const now = yield* DateTime.now\n *\n *   // set the time zone to \"Europe/London\"\n *   const zoned = yield* DateTime.setZoneCurrent(now)\n * }).pipe(DateTime.withCurrentZoneNamed(\"Europe/London\"))\n * ```\n */\nexport const setZoneCurrent = (self: DateTime): Effect.Effect<Zoned, never, CurrentTimeZone> =>\n  Effect.map(CurrentTimeZone, (zone) => setZone(self, zone))\n\n/**\n * Provide the `CurrentTimeZone` to an effect.\n *\n * @since 3.6.0\n * @category current time zone\n * @example\n * ```ts\n * import { DateTime, Effect } from \"effect\"\n *\n * const zone = DateTime.zoneUnsafeMakeNamed(\"Europe/London\")\n *\n * Effect.gen(function* () {\n *   const now = yield* DateTime.nowInCurrentZone\n * }).pipe(DateTime.withCurrentZone(zone))\n * ```\n */\nexport const withCurrentZone: {\n  /**\n   * Provide the `CurrentTimeZone` to an effect.\n   *\n   * @since 3.6.0\n   * @category current time zone\n   * @example\n   * ```ts\n   * import { DateTime, Effect } from \"effect\"\n   *\n   * const zone = DateTime.zoneUnsafeMakeNamed(\"Europe/London\")\n   *\n   * Effect.gen(function* () {\n   *   const now = yield* DateTime.nowInCurrentZone\n   * }).pipe(DateTime.withCurrentZone(zone))\n   * ```\n   */\n  (zone: TimeZone): <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, Exclude<R, CurrentTimeZone>>\n  /**\n   * Provide the `CurrentTimeZone` to an effect.\n   *\n   * @since 3.6.0\n   * @category current time zone\n   * @example\n   * ```ts\n   * import { DateTime, Effect } from \"effect\"\n   *\n   * const zone = DateTime.zoneUnsafeMakeNamed(\"Europe/London\")\n   *\n   * Effect.gen(function* () {\n   *   const now = yield* DateTime.nowInCurrentZone\n   * }).pipe(DateTime.withCurrentZone(zone))\n   * ```\n   */\n  <A, E, R>(effect: Effect.Effect<A, E, R>, zone: TimeZone): Effect.Effect<A, E, Exclude<R, CurrentTimeZone>>\n} = dual(\n  2,\n  <A, E, R>(\n    effect: Effect.Effect<A, E, R>,\n    zone: TimeZone\n  ): Effect.Effect<A, E, Exclude<R, CurrentTimeZone>> => Effect.provideService(effect, CurrentTimeZone, zone)\n)\n\n/**\n * Provide the `CurrentTimeZone` to an effect, using the system's local time\n * zone.\n *\n * @since 3.6.0\n * @category current time zone\n * @example\n * ```ts\n * import { DateTime, Effect } from \"effect\"\n *\n * Effect.gen(function* () {\n *   // will use the system's local time zone\n *   const now = yield* DateTime.nowInCurrentZone\n * }).pipe(DateTime.withCurrentZoneLocal)\n * ```\n */\nexport const withCurrentZoneLocal = <A, E, R>(\n  effect: Effect.Effect<A, E, R>\n): Effect.Effect<A, E, Exclude<R, CurrentTimeZone>> =>\n  Effect.provideServiceEffect(effect, CurrentTimeZone, Effect.sync(zoneMakeLocal))\n\n/**\n * Provide the `CurrentTimeZone` to an effect, using a offset.\n *\n * @since 3.6.0\n * @category current time zone\n * @example\n * ```ts\n * import { DateTime, Effect } from \"effect\"\n *\n * Effect.gen(function* () {\n *   // will use the system's local time zone\n *   const now = yield* DateTime.nowInCurrentZone\n * }).pipe(DateTime.withCurrentZoneOffset(3 * 60 * 60 * 1000))\n * ```\n */\nexport const withCurrentZoneOffset: {\n  /**\n   * Provide the `CurrentTimeZone` to an effect, using a offset.\n   *\n   * @since 3.6.0\n   * @category current time zone\n   * @example\n   * ```ts\n   * import { DateTime, Effect } from \"effect\"\n   *\n   * Effect.gen(function* () {\n   *   // will use the system's local time zone\n   *   const now = yield* DateTime.nowInCurrentZone\n   * }).pipe(DateTime.withCurrentZoneOffset(3 * 60 * 60 * 1000))\n   * ```\n   */\n  (offset: number): <A, E, R>(\n    effect: Effect.Effect<A, E, R>\n  ) => Effect.Effect<A, E, Exclude<R, CurrentTimeZone>>\n  /**\n   * Provide the `CurrentTimeZone` to an effect, using a offset.\n   *\n   * @since 3.6.0\n   * @category current time zone\n   * @example\n   * ```ts\n   * import { DateTime, Effect } from \"effect\"\n   *\n   * Effect.gen(function* () {\n   *   // will use the system's local time zone\n   *   const now = yield* DateTime.nowInCurrentZone\n   * }).pipe(DateTime.withCurrentZoneOffset(3 * 60 * 60 * 1000))\n   * ```\n   */\n  <A, E, R>(effect: Effect.Effect<A, E, R>, offset: number): Effect.Effect<A, E, Exclude<R, CurrentTimeZone>>\n} = dual(\n  2,\n  <A, E, R>(effect: Effect.Effect<A, E, R>, offset: number): Effect.Effect<A, E, Exclude<R, CurrentTimeZone>> =>\n    Effect.provideService(effect, CurrentTimeZone, zoneMakeOffset(offset))\n)\n\n/**\n * Provide the `CurrentTimeZone` to an effect using an IANA time zone\n * identifier.\n *\n * If the time zone is invalid, it will fail with an `IllegalArgumentException`.\n *\n * @since 3.6.0\n * @category current time zone\n * @example\n * ```ts\n * import { DateTime, Effect } from \"effect\"\n *\n * Effect.gen(function* () {\n *   // will use the \"Europe/London\" time zone\n *   const now = yield* DateTime.nowInCurrentZone\n * }).pipe(DateTime.withCurrentZoneNamed(\"Europe/London\"))\n * ```\n */\nexport const withCurrentZoneNamed: {\n  /**\n   * Provide the `CurrentTimeZone` to an effect using an IANA time zone\n   * identifier.\n   *\n   * If the time zone is invalid, it will fail with an `IllegalArgumentException`.\n   *\n   * @since 3.6.0\n   * @category current time zone\n   * @example\n   * ```ts\n   * import { DateTime, Effect } from \"effect\"\n   *\n   * Effect.gen(function* () {\n   *   // will use the \"Europe/London\" time zone\n   *   const now = yield* DateTime.nowInCurrentZone\n   * }).pipe(DateTime.withCurrentZoneNamed(\"Europe/London\"))\n   * ```\n   */\n  (zone: string): <A, E, R>(\n    effect: Effect.Effect<A, E, R>\n  ) => Effect.Effect<A, E | IllegalArgumentException, Exclude<R, CurrentTimeZone>>\n  /**\n   * Provide the `CurrentTimeZone` to an effect using an IANA time zone\n   * identifier.\n   *\n   * If the time zone is invalid, it will fail with an `IllegalArgumentException`.\n   *\n   * @since 3.6.0\n   * @category current time zone\n   * @example\n   * ```ts\n   * import { DateTime, Effect } from \"effect\"\n   *\n   * Effect.gen(function* () {\n   *   // will use the \"Europe/London\" time zone\n   *   const now = yield* DateTime.nowInCurrentZone\n   * }).pipe(DateTime.withCurrentZoneNamed(\"Europe/London\"))\n   * ```\n   */\n  <A, E, R>(effect: Effect.Effect<A, E, R>, zone: string): Effect.Effect<A, E | IllegalArgumentException, Exclude<R, CurrentTimeZone>>\n} = dual(\n  2,\n  <A, E, R>(\n    effect: Effect.Effect<A, E, R>,\n    zone: string\n  ): Effect.Effect<A, E | IllegalArgumentException, Exclude<R, CurrentTimeZone>> =>\n    Effect.provideServiceEffect(effect, CurrentTimeZone, zoneMakeNamedEffect(zone))\n)\n\n/**\n * Get the current time as a `DateTime.Zoned`, using the `CurrentTimeZone`.\n *\n * @since 3.6.0\n * @category current time zone\n * @example\n * ```ts\n * import { DateTime, Effect } from \"effect\"\n *\n * Effect.gen(function* () {\n *   // will use the \"Europe/London\" time zone\n *   const now = yield* DateTime.nowInCurrentZone\n * }).pipe(DateTime.withCurrentZoneNamed(\"Europe/London\"))\n * ```\n */\nexport const nowInCurrentZone: Effect.Effect<Zoned, never, CurrentTimeZone> = Effect.flatMap(now, setZoneCurrent)\n\n// =============================================================================\n// mapping\n// =============================================================================\n\n/**\n * Modify a `DateTime` by applying a function to a cloned `Date` instance.\n *\n * The `Date` will first have the time zone applied if possible, and then be\n * converted back to a `DateTime` within the same time zone.\n *\n * Supports `disambiguation` when the new wall clock time is ambiguous.\n *\n * @since 3.6.0\n * @category mapping\n */\nexport const mutate: {\n  // =============================================================================\n  // mapping\n  // =============================================================================\n\n  /**\n   * Modify a `DateTime` by applying a function to a cloned `Date` instance.\n   *\n   * The `Date` will first have the time zone applied if possible, and then be\n   * converted back to a `DateTime` within the same time zone.\n   *\n   * Supports `disambiguation` when the new wall clock time is ambiguous.\n   *\n   * @since 3.6.0\n   * @category mapping\n   */\n  (\n   f: (date: Date) => void,\n   options?: {\n     readonly disambiguation?: Disambiguation | undefined\n   }\n  ): <A extends DateTime>(self: A) => A\n  // =============================================================================\n  // mapping\n  // =============================================================================\n\n  /**\n   * Modify a `DateTime` by applying a function to a cloned `Date` instance.\n   *\n   * The `Date` will first have the time zone applied if possible, and then be\n   * converted back to a `DateTime` within the same time zone.\n   *\n   * Supports `disambiguation` when the new wall clock time is ambiguous.\n   *\n   * @since 3.6.0\n   * @category mapping\n   */\n  <A extends DateTime>(\n   self: A,\n   f: (date: Date) => void,\n   options?: {\n     readonly disambiguation?: Disambiguation | undefined\n   }\n  ): A\n} = Internal.mutate\n\n/**\n * Modify a `DateTime` by applying a function to a cloned UTC `Date` instance.\n *\n * @since 3.6.0\n * @category mapping\n */\nexport const mutateUtc: {\n  /**\n   * Modify a `DateTime` by applying a function to a cloned UTC `Date` instance.\n   *\n   * @since 3.6.0\n   * @category mapping\n   */\n  (f: (date: Date) => void): <A extends DateTime>(self: A) => A\n  /**\n   * Modify a `DateTime` by applying a function to a cloned UTC `Date` instance.\n   *\n   * @since 3.6.0\n   * @category mapping\n   */\n  <A extends DateTime>(self: A, f: (date: Date) => void): A\n} = Internal.mutateUtc\n\n/**\n * Transform a `DateTime` by applying a function to the number of milliseconds\n * since the Unix epoch.\n *\n * @since 3.6.0\n * @category mapping\n * @example\n * ```ts\n * import { DateTime } from \"effect\"\n *\n * // add 10 milliseconds\n * DateTime.unsafeMake(0).pipe(\n *   DateTime.mapEpochMillis((millis) => millis + 10)\n * )\n * ```\n */\nexport const mapEpochMillis: {\n  /**\n   * Transform a `DateTime` by applying a function to the number of milliseconds\n   * since the Unix epoch.\n   *\n   * @since 3.6.0\n   * @category mapping\n   * @example\n   * ```ts\n   * import { DateTime } from \"effect\"\n   *\n   * // add 10 milliseconds\n   * DateTime.unsafeMake(0).pipe(\n   *   DateTime.mapEpochMillis((millis) => millis + 10)\n   * )\n   * ```\n   */\n  (f: (millis: number) => number): <A extends DateTime>(self: A) => A\n  /**\n   * Transform a `DateTime` by applying a function to the number of milliseconds\n   * since the Unix epoch.\n   *\n   * @since 3.6.0\n   * @category mapping\n   * @example\n   * ```ts\n   * import { DateTime } from \"effect\"\n   *\n   * // add 10 milliseconds\n   * DateTime.unsafeMake(0).pipe(\n   *   DateTime.mapEpochMillis((millis) => millis + 10)\n   * )\n   * ```\n   */\n  <A extends DateTime>(self: A, f: (millis: number) => number): A\n} = Internal.mapEpochMillis\n\n/**\n * Using the time zone adjusted `Date`, apply a function to the `Date` and\n * return the result.\n *\n * @since 3.6.0\n * @category mapping\n * @example\n * ```ts\n * import { DateTime } from \"effect\"\n *\n * // get the time zone adjusted date in milliseconds\n * DateTime.unsafeMakeZoned(0, { timeZone: \"Europe/London\" }).pipe(\n *   DateTime.withDate((date) => date.getTime())\n * )\n * ```\n */\nexport const withDate: {\n  /**\n   * Using the time zone adjusted `Date`, apply a function to the `Date` and\n   * return the result.\n   *\n   * @since 3.6.0\n   * @category mapping\n   * @example\n   * ```ts\n   * import { DateTime } from \"effect\"\n   *\n   * // get the time zone adjusted date in milliseconds\n   * DateTime.unsafeMakeZoned(0, { timeZone: \"Europe/London\" }).pipe(\n   *   DateTime.withDate((date) => date.getTime())\n   * )\n   * ```\n   */\n  <A>(f: (date: Date) => A): (self: DateTime) => A\n  /**\n   * Using the time zone adjusted `Date`, apply a function to the `Date` and\n   * return the result.\n   *\n   * @since 3.6.0\n   * @category mapping\n   * @example\n   * ```ts\n   * import { DateTime } from \"effect\"\n   *\n   * // get the time zone adjusted date in milliseconds\n   * DateTime.unsafeMakeZoned(0, { timeZone: \"Europe/London\" }).pipe(\n   *   DateTime.withDate((date) => date.getTime())\n   * )\n   * ```\n   */\n  <A>(self: DateTime, f: (date: Date) => A): A\n} = Internal.withDate\n\n/**\n * Using the time zone adjusted `Date`, apply a function to the `Date` and\n * return the result.\n *\n * @since 3.6.0\n * @category mapping\n * @example\n * ```ts\n * import { DateTime } from \"effect\"\n *\n * // get the date in milliseconds\n * DateTime.unsafeMake(0).pipe(\n *   DateTime.withDateUtc((date) => date.getTime())\n * )\n * ```\n */\nexport const withDateUtc: {\n  /**\n   * Using the time zone adjusted `Date`, apply a function to the `Date` and\n   * return the result.\n   *\n   * @since 3.6.0\n   * @category mapping\n   * @example\n   * ```ts\n   * import { DateTime } from \"effect\"\n   *\n   * // get the date in milliseconds\n   * DateTime.unsafeMake(0).pipe(\n   *   DateTime.withDateUtc((date) => date.getTime())\n   * )\n   * ```\n   */\n  <A>(f: (date: Date) => A): (self: DateTime) => A\n  /**\n   * Using the time zone adjusted `Date`, apply a function to the `Date` and\n   * return the result.\n   *\n   * @since 3.6.0\n   * @category mapping\n   * @example\n   * ```ts\n   * import { DateTime } from \"effect\"\n   *\n   * // get the date in milliseconds\n   * DateTime.unsafeMake(0).pipe(\n   *   DateTime.withDateUtc((date) => date.getTime())\n   * )\n   * ```\n   */\n  <A>(self: DateTime, f: (date: Date) => A): A\n} = Internal.withDateUtc\n\n/**\n * @since 3.6.0\n * @category mapping\n */\nexport const match: {\n  /**\n   * @since 3.6.0\n   * @category mapping\n   */\n  <A, B>(\n   options: {\n     readonly onUtc: (_: Utc) => A\n     readonly onZoned: (_: Zoned) => B\n   }\n  ): (self: DateTime) => A | B\n  /**\n   * @since 3.6.0\n   * @category mapping\n   */\n  <A, B>(\n   self: DateTime,\n   options: {\n     readonly onUtc: (_: Utc) => A\n     readonly onZoned: (_: Zoned) => B\n   }\n  ): A | B\n} = Internal.match\n\n// =============================================================================\n// math\n// =============================================================================\n\n/**\n * Add the given `Duration` to a `DateTime`.\n *\n * @since 3.6.0\n * @category math\n * @example\n * ```ts\n * import { DateTime } from \"effect\"\n *\n * // add 5 minutes\n * DateTime.unsafeMake(0).pipe(\n *   DateTime.addDuration(\"5 minutes\")\n * )\n * ```\n */\nexport const addDuration: {\n  // =============================================================================\n  // math\n  // =============================================================================\n\n  /**\n   * Add the given `Duration` to a `DateTime`.\n   *\n   * @since 3.6.0\n   * @category math\n   * @example\n   * ```ts\n   * import { DateTime } from \"effect\"\n   *\n   * // add 5 minutes\n   * DateTime.unsafeMake(0).pipe(\n   *   DateTime.addDuration(\"5 minutes\")\n   * )\n   * ```\n   */\n  (duration: Duration.DurationInput): <A extends DateTime>(self: A) => A\n  // =============================================================================\n  // math\n  // =============================================================================\n\n  /**\n   * Add the given `Duration` to a `DateTime`.\n   *\n   * @since 3.6.0\n   * @category math\n   * @example\n   * ```ts\n   * import { DateTime } from \"effect\"\n   *\n   * // add 5 minutes\n   * DateTime.unsafeMake(0).pipe(\n   *   DateTime.addDuration(\"5 minutes\")\n   * )\n   * ```\n   */\n  <A extends DateTime>(self: A, duration: Duration.DurationInput): A\n} = Internal.addDuration\n\n/**\n * Subtract the given `Duration` from a `DateTime`.\n *\n * @since 3.6.0\n * @category math\n * @example\n * ```ts\n * import { DateTime } from \"effect\"\n *\n * // subtract 5 minutes\n * DateTime.unsafeMake(0).pipe(\n *   DateTime.subtractDuration(\"5 minutes\")\n * )\n * ```\n */\nexport const subtractDuration: {\n  /**\n   * Subtract the given `Duration` from a `DateTime`.\n   *\n   * @since 3.6.0\n   * @category math\n   * @example\n   * ```ts\n   * import { DateTime } from \"effect\"\n   *\n   * // subtract 5 minutes\n   * DateTime.unsafeMake(0).pipe(\n   *   DateTime.subtractDuration(\"5 minutes\")\n   * )\n   * ```\n   */\n  (duration: Duration.DurationInput): <A extends DateTime>(self: A) => A\n  /**\n   * Subtract the given `Duration` from a `DateTime`.\n   *\n   * @since 3.6.0\n   * @category math\n   * @example\n   * ```ts\n   * import { DateTime } from \"effect\"\n   *\n   * // subtract 5 minutes\n   * DateTime.unsafeMake(0).pipe(\n   *   DateTime.subtractDuration(\"5 minutes\")\n   * )\n   * ```\n   */\n  <A extends DateTime>(self: A, duration: Duration.DurationInput): A\n} = Internal.subtractDuration\n\n/**\n * Add the given `amount` of `unit`'s to a `DateTime`.\n *\n * The time zone is taken into account when adding days, weeks, months, and\n * years.\n *\n * @since 3.6.0\n * @category math\n * @example\n * ```ts\n * import { DateTime } from \"effect\"\n *\n * // add 5 minutes\n * DateTime.unsafeMake(0).pipe(\n *   DateTime.add({ minutes: 5 })\n * )\n * ```\n */\nexport const add: {\n  /**\n   * Add the given `amount` of `unit`'s to a `DateTime`.\n   *\n   * The time zone is taken into account when adding days, weeks, months, and\n   * years.\n   *\n   * @since 3.6.0\n   * @category math\n   * @example\n   * ```ts\n   * import { DateTime } from \"effect\"\n   *\n   * // add 5 minutes\n   * DateTime.unsafeMake(0).pipe(\n   *   DateTime.add({ minutes: 5 })\n   * )\n   * ```\n   */\n  (parts: Partial<DateTime.PartsForMath>): <A extends DateTime>(self: A) => A\n  /**\n   * Add the given `amount` of `unit`'s to a `DateTime`.\n   *\n   * The time zone is taken into account when adding days, weeks, months, and\n   * years.\n   *\n   * @since 3.6.0\n   * @category math\n   * @example\n   * ```ts\n   * import { DateTime } from \"effect\"\n   *\n   * // add 5 minutes\n   * DateTime.unsafeMake(0).pipe(\n   *   DateTime.add({ minutes: 5 })\n   * )\n   * ```\n   */\n  <A extends DateTime>(self: A, parts: Partial<DateTime.PartsForMath>): A\n} = Internal.add\n\n/**\n * Subtract the given `amount` of `unit`'s from a `DateTime`.\n *\n * @since 3.6.0\n * @category math\n * @example\n * ```ts\n * import { DateTime } from \"effect\"\n *\n * // subtract 5 minutes\n * DateTime.unsafeMake(0).pipe(\n *   DateTime.subtract({ minutes: 5 })\n * )\n * ```\n */\nexport const subtract: {\n  /**\n   * Subtract the given `amount` of `unit`'s from a `DateTime`.\n   *\n   * @since 3.6.0\n   * @category math\n   * @example\n   * ```ts\n   * import { DateTime } from \"effect\"\n   *\n   * // subtract 5 minutes\n   * DateTime.unsafeMake(0).pipe(\n   *   DateTime.subtract({ minutes: 5 })\n   * )\n   * ```\n   */\n  (parts: Partial<DateTime.PartsForMath>): <A extends DateTime>(self: A) => A\n  /**\n   * Subtract the given `amount` of `unit`'s from a `DateTime`.\n   *\n   * @since 3.6.0\n   * @category math\n   * @example\n   * ```ts\n   * import { DateTime } from \"effect\"\n   *\n   * // subtract 5 minutes\n   * DateTime.unsafeMake(0).pipe(\n   *   DateTime.subtract({ minutes: 5 })\n   * )\n   * ```\n   */\n  <A extends DateTime>(self: A, parts: Partial<DateTime.PartsForMath>): A\n} = Internal.subtract\n\n/**\n * Converts a `DateTime` to the start of the given `part`.\n *\n * If the part is `week`, the `weekStartsOn` option can be used to specify the\n * day of the week that the week starts on. The default is 0 (Sunday).\n *\n * @since 3.6.0\n * @category math\n * @example\n * ```ts\n * import { DateTime } from \"effect\"\n *\n * // returns \"2024-01-01T00:00:00Z\"\n * DateTime.unsafeMake(\"2024-01-01T12:00:00Z\").pipe(\n *   DateTime.startOf(\"day\"),\n *   DateTime.formatIso\n * )\n * ```\n */\nexport const startOf: {\n  /**\n   * Converts a `DateTime` to the start of the given `part`.\n   *\n   * If the part is `week`, the `weekStartsOn` option can be used to specify the\n   * day of the week that the week starts on. The default is 0 (Sunday).\n   *\n   * @since 3.6.0\n   * @category math\n   * @example\n   * ```ts\n   * import { DateTime } from \"effect\"\n   *\n   * // returns \"2024-01-01T00:00:00Z\"\n   * DateTime.unsafeMake(\"2024-01-01T12:00:00Z\").pipe(\n   *   DateTime.startOf(\"day\"),\n   *   DateTime.formatIso\n   * )\n   * ```\n   */\n  (\n   part: DateTime.UnitSingular,\n   options?: { readonly weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | undefined }\n  ): <A extends DateTime>(self: A) => A\n  /**\n   * Converts a `DateTime` to the start of the given `part`.\n   *\n   * If the part is `week`, the `weekStartsOn` option can be used to specify the\n   * day of the week that the week starts on. The default is 0 (Sunday).\n   *\n   * @since 3.6.0\n   * @category math\n   * @example\n   * ```ts\n   * import { DateTime } from \"effect\"\n   *\n   * // returns \"2024-01-01T00:00:00Z\"\n   * DateTime.unsafeMake(\"2024-01-01T12:00:00Z\").pipe(\n   *   DateTime.startOf(\"day\"),\n   *   DateTime.formatIso\n   * )\n   * ```\n   */\n  <A extends DateTime>(\n   self: A,\n   part: DateTime.UnitSingular,\n   options?: { readonly weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | undefined }\n  ): A\n} = Internal.startOf\n\n/**\n * Converts a `DateTime` to the end of the given `part`.\n *\n * If the part is `week`, the `weekStartsOn` option can be used to specify the\n * day of the week that the week starts on. The default is 0 (Sunday).\n *\n * @since 3.6.0\n * @category math\n * @example\n * ```ts\n * import { DateTime } from \"effect\"\n *\n * // returns \"2024-01-01T23:59:59.999Z\"\n * DateTime.unsafeMake(\"2024-01-01T12:00:00Z\").pipe(\n *   DateTime.endOf(\"day\"),\n *   DateTime.formatIso\n * )\n * ```\n */\nexport const endOf: {\n  /**\n   * Converts a `DateTime` to the end of the given `part`.\n   *\n   * If the part is `week`, the `weekStartsOn` option can be used to specify the\n   * day of the week that the week starts on. The default is 0 (Sunday).\n   *\n   * @since 3.6.0\n   * @category math\n   * @example\n   * ```ts\n   * import { DateTime } from \"effect\"\n   *\n   * // returns \"2024-01-01T23:59:59.999Z\"\n   * DateTime.unsafeMake(\"2024-01-01T12:00:00Z\").pipe(\n   *   DateTime.endOf(\"day\"),\n   *   DateTime.formatIso\n   * )\n   * ```\n   */\n  (\n   part: DateTime.UnitSingular,\n   options?: { readonly weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | undefined }\n  ): <A extends DateTime>(self: A) => A\n  /**\n   * Converts a `DateTime` to the end of the given `part`.\n   *\n   * If the part is `week`, the `weekStartsOn` option can be used to specify the\n   * day of the week that the week starts on. The default is 0 (Sunday).\n   *\n   * @since 3.6.0\n   * @category math\n   * @example\n   * ```ts\n   * import { DateTime } from \"effect\"\n   *\n   * // returns \"2024-01-01T23:59:59.999Z\"\n   * DateTime.unsafeMake(\"2024-01-01T12:00:00Z\").pipe(\n   *   DateTime.endOf(\"day\"),\n   *   DateTime.formatIso\n   * )\n   * ```\n   */\n  <A extends DateTime>(\n   self: A,\n   part: DateTime.UnitSingular,\n   options?: { readonly weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | undefined }\n  ): A\n} = Internal.endOf\n\n/**\n * Converts a `DateTime` to the nearest given `part`.\n *\n * If the part is `week`, the `weekStartsOn` option can be used to specify the\n * day of the week that the week starts on. The default is 0 (Sunday).\n *\n * @since 3.6.0\n * @category math\n * @example\n * ```ts\n * import { DateTime } from \"effect\"\n *\n * // returns \"2024-01-02T00:00:00Z\"\n * DateTime.unsafeMake(\"2024-01-01T12:01:00Z\").pipe(\n *   DateTime.nearest(\"day\"),\n *   DateTime.formatIso\n * )\n * ```\n */\nexport const nearest: {\n  /**\n   * Converts a `DateTime` to the nearest given `part`.\n   *\n   * If the part is `week`, the `weekStartsOn` option can be used to specify the\n   * day of the week that the week starts on. The default is 0 (Sunday).\n   *\n   * @since 3.6.0\n   * @category math\n   * @example\n   * ```ts\n   * import { DateTime } from \"effect\"\n   *\n   * // returns \"2024-01-02T00:00:00Z\"\n   * DateTime.unsafeMake(\"2024-01-01T12:01:00Z\").pipe(\n   *   DateTime.nearest(\"day\"),\n   *   DateTime.formatIso\n   * )\n   * ```\n   */\n  (\n   part: DateTime.UnitSingular,\n   options?: { readonly weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | undefined }\n  ): <A extends DateTime>(self: A) => A\n  /**\n   * Converts a `DateTime` to the nearest given `part`.\n   *\n   * If the part is `week`, the `weekStartsOn` option can be used to specify the\n   * day of the week that the week starts on. The default is 0 (Sunday).\n   *\n   * @since 3.6.0\n   * @category math\n   * @example\n   * ```ts\n   * import { DateTime } from \"effect\"\n   *\n   * // returns \"2024-01-02T00:00:00Z\"\n   * DateTime.unsafeMake(\"2024-01-01T12:01:00Z\").pipe(\n   *   DateTime.nearest(\"day\"),\n   *   DateTime.formatIso\n   * )\n   * ```\n   */\n  <A extends DateTime>(\n   self: A,\n   part: DateTime.UnitSingular,\n   options?: { readonly weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | undefined }\n  ): A\n} = Internal.nearest\n\n// =============================================================================\n// formatting\n// =============================================================================\n\n/**\n * Format a `DateTime` as a string using the `DateTimeFormat` API.\n *\n * The `timeZone` option is set to the offset of the time zone.\n *\n * Note: On Node versions < 22, fixed \"Offset\" zones will set the time zone to\n * \"UTC\" and use the adjusted `Date`.\n *\n * @since 3.6.0\n * @category formatting\n */\nexport const format: {\n  // =============================================================================\n  // formatting\n  // =============================================================================\n\n  /**\n   * Format a `DateTime` as a string using the `DateTimeFormat` API.\n   *\n   * The `timeZone` option is set to the offset of the time zone.\n   *\n   * Note: On Node versions < 22, fixed \"Offset\" zones will set the time zone to\n   * \"UTC\" and use the adjusted `Date`.\n   *\n   * @since 3.6.0\n   * @category formatting\n   */\n  (\n   options?:\n     | Intl.DateTimeFormatOptions & {\n       readonly locale?: Intl.LocalesArgument\n     }\n     | undefined\n  ): (self: DateTime) => string\n  // =============================================================================\n  // formatting\n  // =============================================================================\n\n  /**\n   * Format a `DateTime` as a string using the `DateTimeFormat` API.\n   *\n   * The `timeZone` option is set to the offset of the time zone.\n   *\n   * Note: On Node versions < 22, fixed \"Offset\" zones will set the time zone to\n   * \"UTC\" and use the adjusted `Date`.\n   *\n   * @since 3.6.0\n   * @category formatting\n   */\n  (\n   self: DateTime,\n   options?:\n     | Intl.DateTimeFormatOptions & {\n       readonly locale?: Intl.LocalesArgument\n     }\n     | undefined\n  ): string\n} = Internal.format\n\n/**\n * Format a `DateTime` as a string using the `DateTimeFormat` API.\n *\n * It will use the system's local time zone & locale.\n *\n * @since 3.6.0\n * @category formatting\n */\nexport const formatLocal: {\n  /**\n   * Format a `DateTime` as a string using the `DateTimeFormat` API.\n   *\n   * It will use the system's local time zone & locale.\n   *\n   * @since 3.6.0\n   * @category formatting\n   */\n  (\n   options?:\n     | Intl.DateTimeFormatOptions & {\n       readonly locale?: Intl.LocalesArgument\n     }\n     | undefined\n  ): (self: DateTime) => string\n  /**\n   * Format a `DateTime` as a string using the `DateTimeFormat` API.\n   *\n   * It will use the system's local time zone & locale.\n   *\n   * @since 3.6.0\n   * @category formatting\n   */\n  (\n   self: DateTime,\n   options?:\n     | Intl.DateTimeFormatOptions & {\n       readonly locale?: Intl.LocalesArgument\n     }\n     | undefined\n  ): string\n} = Internal.formatLocal\n\n/**\n * Format a `DateTime` as a string using the `DateTimeFormat` API.\n *\n * This forces the time zone to be UTC.\n *\n * @since 3.6.0\n * @category formatting\n */\nexport const formatUtc: {\n  /**\n   * Format a `DateTime` as a string using the `DateTimeFormat` API.\n   *\n   * This forces the time zone to be UTC.\n   *\n   * @since 3.6.0\n   * @category formatting\n   */\n  (\n   options?:\n     | Intl.DateTimeFormatOptions & {\n       readonly locale?: Intl.LocalesArgument\n     }\n     | undefined\n  ): (self: DateTime) => string\n  /**\n   * Format a `DateTime` as a string using the `DateTimeFormat` API.\n   *\n   * This forces the time zone to be UTC.\n   *\n   * @since 3.6.0\n   * @category formatting\n   */\n  (\n   self: DateTime,\n   options?:\n     | Intl.DateTimeFormatOptions & {\n       readonly locale?: Intl.LocalesArgument\n     }\n     | undefined\n  ): string\n} = Internal.formatUtc\n\n/**\n * Format a `DateTime` as a string using the `DateTimeFormat` API.\n *\n * @since 3.6.0\n * @category formatting\n */\nexport const formatIntl: {\n  /**\n   * Format a `DateTime` as a string using the `DateTimeFormat` API.\n   *\n   * @since 3.6.0\n   * @category formatting\n   */\n  (format: Intl.DateTimeFormat): (self: DateTime) => string\n  /**\n   * Format a `DateTime` as a string using the `DateTimeFormat` API.\n   *\n   * @since 3.6.0\n   * @category formatting\n   */\n  (self: DateTime, format: Intl.DateTimeFormat): string\n} = Internal.formatIntl\n\n/**\n * Format a `DateTime` as a UTC ISO string.\n *\n * @since 3.6.0\n * @category formatting\n */\nexport const formatIso: (self: DateTime) => string = Internal.formatIso\n\n/**\n * Format a `DateTime` as a time zone adjusted ISO date string.\n *\n * @since 3.6.0\n * @category formatting\n */\nexport const formatIsoDate: (self: DateTime) => string = Internal.formatIsoDate\n\n/**\n * Format a `DateTime` as a UTC ISO date string.\n *\n * @since 3.6.0\n * @category formatting\n */\nexport const formatIsoDateUtc: (self: DateTime) => string = Internal.formatIsoDateUtc\n\n/**\n * Format a `DateTime.Zoned` as a ISO string with an offset.\n *\n * @since 3.6.0\n * @category formatting\n */\nexport const formatIsoOffset: (self: DateTime) => string = Internal.formatIsoOffset\n\n/**\n * Format a `DateTime.Zoned` as a string.\n *\n * It uses the format: `YYYY-MM-DDTHH:mm:ss.sss+HH:MM[Time/Zone]`.\n *\n * @since 3.6.0\n * @category formatting\n */\nexport const formatIsoZoned: (self: Zoned) => string = Internal.formatIsoZoned\n\n/**\n * Create a Layer from the given time zone.\n *\n * @since 3.6.0\n * @category current time zone\n */\nexport const layerCurrentZone = (zone: TimeZone): Layer.Layer<CurrentTimeZone> => Layer.succeed(CurrentTimeZone, zone)\n\n/**\n * Create a Layer from the given time zone offset.\n *\n * @since 3.6.0\n * @category current time zone\n */\nexport const layerCurrentZoneOffset = (offset: number): Layer.Layer<CurrentTimeZone> =>\n  Layer.succeed(CurrentTimeZone, Internal.zoneMakeOffset(offset))\n\n/**\n * Create a Layer from the given IANA time zone identifier.\n *\n * @since 3.6.0\n * @category current time zone\n */\nexport const layerCurrentZoneNamed = (\n  zoneId: string\n): Layer.Layer<CurrentTimeZone, IllegalArgumentException> =>\n  Layer.effect(CurrentTimeZone, Internal.zoneMakeNamedEffect(zoneId))\n\n/**\n * Create a Layer from the systems local time zone.\n *\n * @since 3.6.0\n * @category current time zone\n */\nexport const layerCurrentZoneLocal: Layer.Layer<CurrentTimeZone> = Layer.sync(CurrentTimeZone, zoneMakeLocal)\n","/**\n * @since 2.0.0\n */\nimport type * as Brand from \"./Brand.js\"\nimport type * as Chunk from \"./Chunk.js\"\nimport type * as ConfigError from \"./ConfigError.js\"\nimport type * as Duration from \"./Duration.js\"\nimport type * as Effect from \"./Effect.js\"\nimport type * as Either from \"./Either.js\"\nimport type { LazyArg } from \"./Function.js\"\nimport type * as HashMap from \"./HashMap.js\"\nimport type * as HashSet from \"./HashSet.js\"\nimport * as internal from \"./internal/config.js\"\nimport type * as LogLevel from \"./LogLevel.js\"\nimport type * as Option from \"./Option.js\"\nimport type { Predicate, Refinement } from \"./Predicate.js\"\nimport type * as Redacted from \"./Redacted.js\"\nimport type * as Secret from \"./Secret.js\"\nimport type * as Types from \"./Types.js\"\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport const ConfigTypeId: unique symbol = internal.ConfigTypeId\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport type ConfigTypeId = typeof ConfigTypeId\n\n/**\n * A `Config` describes the structure of some configuration data.\n *\n * @since 2.0.0\n * @category models\n */\nexport interface Config<out A> extends Config.Variance<A>, Effect.Effect<A, ConfigError.ConfigError> {}\n\n/**\n * @since 2.0.0\n */\nexport declare namespace Config {\n  /**\n   * @since 2.0.0\n   * @category models\n   */\n  export interface Variance<out A> {\n    readonly [ConfigTypeId]: {\n      readonly _A: Types.Covariant<A>\n    }\n  }\n\n  /**\n   * @since 2.5.0\n   * @category models\n   */\n  export type Success<T extends Config<any>> = [T] extends [Config<infer _A>] ? _A : never\n\n  /**\n   * @since 2.0.0\n   * @category models\n   */\n  export interface Primitive<out A> extends Config<A> {\n    readonly description: string\n    parse(text: string): Either.Either<A, ConfigError.ConfigError>\n  }\n\n  /**\n   * Wraps a nested structure, converting all primitives to a `Config`.\n   *\n   * `Config.Wrap<{ key: string }>` becomes `{ key: Config<string> }`\n   *\n   * To create the resulting config, use the `unwrap` constructor.\n   *\n   * @since 2.0.0\n   * @category models\n   */\n  export type Wrap<A> = [NonNullable<A>] extends [infer T] ? [IsPlainObject<T>] extends [true] ?\n        | { readonly [K in keyof A]: Wrap<A[K]> }\n        | Config<A>\n    : Config<A>\n    : Config<A>\n\n  type IsPlainObject<A> = [A] extends [Record<string, any>]\n    ? [keyof A] extends [never] ? false : [keyof A] extends [string] ? true : false\n    : false\n}\n\n/**\n * @since 2.0.0\n * @category models\n */\nexport type LiteralValue = string | number | boolean | null | bigint\n\n/**\n * Constructs a config from a tuple / struct / arguments of configs.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const all: <const Arg extends Iterable<Config<any>> | Record<string, Config<any>>>(\n  arg: Arg\n) => Config<\n  [Arg] extends [ReadonlyArray<Config<any>>] ? {\n      -readonly [K in keyof Arg]: [Arg[K]] extends [Config<infer A>] ? A : never\n    }\n    : [Arg] extends [Iterable<Config<infer A>>] ? Array<A>\n    : [Arg] extends [Record<string, Config<any>>] ? {\n        -readonly [K in keyof Arg]: [Arg[K]] extends [Config<infer A>] ? A : never\n      }\n    : never\n> = internal.all\n\n/**\n * Constructs a config for an array of values.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const array: <A>(config: Config<A>, name?: string) => Config<Array<A>> = internal.array\n\n/**\n * Constructs a config for a boolean value.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const boolean: (name?: string) => Config<boolean> = internal.boolean\n\n/**\n * Constructs a config for a network port [1, 65535].\n *\n * @since 3.16.0\n * @category constructors\n */\nexport const port: (name?: string) => Config<number> = internal.port\n\n/**\n * Constructs a config for an URL value.\n *\n * @since 3.11.0\n * @category constructors\n */\nexport const url: (name?: string) => Config<URL> = internal.url\n\n/**\n * Constructs a config for a sequence of values.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const chunk: <A>(config: Config<A>, name?: string) => Config<Chunk.Chunk<A>> = internal.chunk\n\n/**\n * Constructs a config for a date value.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const date: (name?: string) => Config<Date> = internal.date\n\n/**\n * Constructs a config that fails with the specified message.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const fail: (message: string) => Config<never> = internal.fail\n\n/**\n * Constructs a config for a float value.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const number: (name?: string) => Config<number> = internal.number\n\n/**\n * Constructs a config for a integer value.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const integer: (name?: string) => Config<number> = internal.integer\n\n/**\n * Constructs a config for a literal value.\n *\n * **Example**\n *\n * ```ts\n * import { Config } from \"effect\"\n *\n * const config = Config.literal(\"http\", \"https\")(\"PROTOCOL\")\n * ```\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const literal: <Literals extends ReadonlyArray<LiteralValue>>(...literals: Literals) => (\n  name?: string\n) => Config<Literals[number]> = internal.literal\n\n/**\n * Constructs a config for a `LogLevel` value.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const logLevel: (name?: string) => Config<LogLevel.LogLevel> = internal.logLevel\n\n/**\n * Constructs a config for a duration value.\n *\n * @since 2.5.0\n * @category constructors\n */\nexport const duration: (name?: string) => Config<Duration.Duration> = internal.duration\n\n/**\n * This function returns `true` if the specified value is an `Config` value,\n * `false` otherwise.\n *\n * This function can be useful for checking the type of a value before\n * attempting to operate on it as an `Config` value. For example, you could\n * use `isConfig` to check the type of a value before using it as an\n * argument to a function that expects an `Config` value.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isConfig: (u: unknown) => u is Config<unknown> = internal.isConfig\n\n/**\n * Returns a  config whose structure is the same as this one, but which produces\n * a different value, constructed using the specified function.\n *\n * @since 2.0.0\n * @category mapping\n */\nexport const map: {\n  /**\n   * Returns a  config whose structure is the same as this one, but which produces\n   * a different value, constructed using the specified function.\n   *\n   * @since 2.0.0\n   * @category mapping\n   */\n  <A, B>(f: (a: A) => B): (self: Config<A>) => Config<B>\n  /**\n   * Returns a  config whose structure is the same as this one, but which produces\n   * a different value, constructed using the specified function.\n   *\n   * @since 2.0.0\n   * @category mapping\n   */\n  <A, B>(self: Config<A>, f: (a: A) => B): Config<B>\n} = internal.map\n\n/**\n * Returns a config whose structure is the same as this one, but which may\n * produce a different value, constructed using the specified function, which\n * may throw exceptions that will be translated into validation errors.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const mapAttempt: {\n  /**\n   * Returns a config whose structure is the same as this one, but which may\n   * produce a different value, constructed using the specified function, which\n   * may throw exceptions that will be translated into validation errors.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <A, B>(f: (a: A) => B): (self: Config<A>) => Config<B>\n  /**\n   * Returns a config whose structure is the same as this one, but which may\n   * produce a different value, constructed using the specified function, which\n   * may throw exceptions that will be translated into validation errors.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <A, B>(self: Config<A>, f: (a: A) => B): Config<B>\n} = internal.mapAttempt\n\n/**\n * Returns a new config whose structure is the samea as this one, but which\n * may produce a different value, constructed using the specified fallible\n * function.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const mapOrFail: {\n  /**\n   * Returns a new config whose structure is the samea as this one, but which\n   * may produce a different value, constructed using the specified fallible\n   * function.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <A, B>(f: (a: A) => Either.Either<B, ConfigError.ConfigError>): (self: Config<A>) => Config<B>\n  /**\n   * Returns a new config whose structure is the samea as this one, but which\n   * may produce a different value, constructed using the specified fallible\n   * function.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <A, B>(self: Config<A>, f: (a: A) => Either.Either<B, ConfigError.ConfigError>): Config<B>\n} = internal.mapOrFail\n\n/**\n * Returns a config that has this configuration nested as a property of the\n * specified name.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const nested: {\n  /**\n   * Returns a config that has this configuration nested as a property of the\n   * specified name.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  (name: string): <A>(self: Config<A>) => Config<A>\n  /**\n   * Returns a config that has this configuration nested as a property of the\n   * specified name.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <A>(self: Config<A>, name: string): Config<A>\n} = internal.nested\n\n/**\n * Returns a config whose structure is preferentially described by this\n * config, but which falls back to the specified config if there is an issue\n * reading from this config.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const orElse: {\n  /**\n   * Returns a config whose structure is preferentially described by this\n   * config, but which falls back to the specified config if there is an issue\n   * reading from this config.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <A2>(that: LazyArg<Config<A2>>): <A>(self: Config<A>) => Config<A2 | A>\n  /**\n   * Returns a config whose structure is preferentially described by this\n   * config, but which falls back to the specified config if there is an issue\n   * reading from this config.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <A, A2>(self: Config<A>, that: LazyArg<Config<A2>>): Config<A | A2>\n} = internal.orElse\n\n/**\n * Returns configuration which reads from this configuration, but which falls\n * back to the specified configuration if reading from this configuration\n * fails with an error satisfying the specified predicate.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const orElseIf: {\n  /**\n   * Returns configuration which reads from this configuration, but which falls\n   * back to the specified configuration if reading from this configuration\n   * fails with an error satisfying the specified predicate.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <A2>(\n   options: {\n     readonly if: Predicate<ConfigError.ConfigError>\n     readonly orElse: LazyArg<Config<A2>>\n   }\n  ): <A>(self: Config<A>) => Config<A>\n  /**\n   * Returns configuration which reads from this configuration, but which falls\n   * back to the specified configuration if reading from this configuration\n   * fails with an error satisfying the specified predicate.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <A, A2>(\n   self: Config<A>,\n   options: {\n     readonly if: Predicate<ConfigError.ConfigError>\n     readonly orElse: LazyArg<Config<A2>>\n   }\n  ): Config<A>\n} = internal.orElseIf\n\n/**\n * Returns an optional version of this config, which will be `None` if the\n * data is missing from configuration, and `Some` otherwise.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const option: <A>(self: Config<A>) => Config<Option.Option<A>> = internal.option\n\n/**\n * Constructs a new primitive config.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const primitive: <A>(\n  description: string,\n  parse: (text: string) => Either.Either<A, ConfigError.ConfigError>\n) => Config<A> = internal.primitive\n\n/**\n * Returns a config that describes a sequence of values, each of which has the\n * structure of this config.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const repeat: <A>(self: Config<A>) => Config<Array<A>> = internal.repeat\n\n/**\n * Constructs a config for a secret value.\n *\n * @since 2.0.0\n * @category constructors\n * @deprecated\n */\nexport const secret: (name?: string) => Config<Secret.Secret> = internal.secret\n\n/**\n * Constructs a config for a redacted value.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const redacted: {\n  /**\n   * Constructs a config for a redacted value.\n   *\n   * @since 2.0.0\n   * @category constructors\n   */\n  (name?: string): Config<Redacted.Redacted>\n  /**\n   * Constructs a config for a redacted value.\n   *\n   * @since 2.0.0\n   * @category constructors\n   */\n  <A>(config: Config<A>): Config<Redacted.Redacted<A>>\n} = internal.redacted\n\n/**\n * Constructs a config for a branded value.\n *\n * @since 3.16.0\n * @category constructors\n */\nexport const branded: {\n  /**\n   * Constructs a config for a branded value.\n   *\n   * @since 3.16.0\n   * @category constructors\n   */\n  <A, B extends Brand.Branded<A, any>>(constructor: Brand.Brand.Constructor<B>): (config: Config<A>) => Config<B>\n  /**\n   * Constructs a config for a branded value.\n   *\n   * @since 3.16.0\n   * @category constructors\n   */\n  <B extends Brand.Branded<string, any>>(name: string | undefined, constructor: Brand.Brand.Constructor<B>): Config<B>\n  /**\n   * Constructs a config for a branded value.\n   *\n   * @since 3.16.0\n   * @category constructors\n   */\n  <A, B extends Brand.Branded<A, any>>(config: Config<A>, constructor: Brand.Brand.Constructor<B>): Config<B>\n} = internal.branded\n\n/**\n * Constructs a config for a sequence of values.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const hashSet: <A>(config: Config<A>, name?: string) => Config<HashSet.HashSet<A>> = internal.hashSet\n\n/**\n * Constructs a config for a string value.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const string: (name?: string) => Config<string> = internal.string\n\n/**\n * Constructs a config for a non-empty string value.\n *\n * @since 3.7.0\n * @category constructors\n */\nexport const nonEmptyString: (name?: string) => Config<string> = internal.nonEmptyString\n\n/**\n * Constructs a config which contains the specified value.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const succeed: <A>(value: A) => Config<A> = internal.succeed\n\n/**\n * Lazily constructs a config.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const suspend: <A>(config: LazyArg<Config<A>>) => Config<A> = internal.suspend\n\n/**\n * Constructs a config which contains the specified lazy value.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const sync: <A>(value: LazyArg<A>) => Config<A> = internal.sync\n\n/**\n * Constructs a config for a sequence of values.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const hashMap: <A>(config: Config<A>, name?: string) => Config<HashMap.HashMap<string, A>> = internal.hashMap\n\n/**\n * Constructs a config from some configuration wrapped with the `Wrap<A>` utility type.\n *\n * For example:\n *\n * ```\n * import { Config, unwrap } from \"./Config\"\n *\n * interface Options { key: string }\n *\n * const makeConfig = (config: Config.Wrap<Options>): Config<Options> => unwrap(config)\n * ```\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const unwrap: <A>(wrapped: Config.Wrap<A>) => Config<A> = internal.unwrap\n\n/**\n * Returns a config that describes the same structure as this one, but which\n * performs validation during loading.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const validate: {\n  /**\n   * Returns a config that describes the same structure as this one, but which\n   * performs validation during loading.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <A, B extends A>(\n   options: {\n     readonly message: string\n     readonly validation: Refinement<A, B>\n   }\n  ): (self: Config<A>) => Config<B>\n  /**\n   * Returns a config that describes the same structure as this one, but which\n   * performs validation during loading.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <A>(\n   options: {\n     readonly message: string\n     readonly validation: Predicate<A>\n   }\n  ): (self: Config<A>) => Config<A>\n  /**\n   * Returns a config that describes the same structure as this one, but which\n   * performs validation during loading.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <A, B extends A>(\n   self: Config<A>,\n   options: {\n     readonly message: string\n     readonly validation: Refinement<A, B>\n   }\n  ): Config<B>\n  /**\n   * Returns a config that describes the same structure as this one, but which\n   * performs validation during loading.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <A>(\n   self: Config<A>,\n   options: {\n     readonly message: string\n     readonly validation: Predicate<A>\n   }\n  ): Config<A>\n} = internal.validate\n\n/**\n * Returns a config that describes the same structure as this one, but has the\n * specified default value in case the information cannot be found.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const withDefault: {\n  /**\n   * Returns a config that describes the same structure as this one, but has the\n   * specified default value in case the information cannot be found.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <const A2>(def: A2): <A>(self: Config<A>) => Config<A2 | A>\n  /**\n   * Returns a config that describes the same structure as this one, but has the\n   * specified default value in case the information cannot be found.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <A, const A2>(self: Config<A>, def: A2): Config<A | A2>\n} = internal.withDefault\n\n/**\n * Adds a description to this configuration, which is intended for humans.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const withDescription: {\n  /**\n   * Adds a description to this configuration, which is intended for humans.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  (description: string): <A>(self: Config<A>) => Config<A>\n  /**\n   * Adds a description to this configuration, which is intended for humans.\n   *\n   * @since 2.0.0\n   * @category utils\n   */\n  <A>(self: Config<A>, description: string): Config<A>\n} = internal.withDescription\n\n/**\n * Returns a config that is the composition of this config and the specified\n * config.\n *\n * @since 2.0.0\n * @category zipping\n */\nexport const zip: {\n  /**\n   * Returns a config that is the composition of this config and the specified\n   * config.\n   *\n   * @since 2.0.0\n   * @category zipping\n   */\n  <B>(that: Config<B>): <A>(self: Config<A>) => Config<[A, B]>\n  /**\n   * Returns a config that is the composition of this config and the specified\n   * config.\n   *\n   * @since 2.0.0\n   * @category zipping\n   */\n  <A, B>(self: Config<A>, that: Config<B>): Config<[A, B]>\n} = internal.zip\n\n/**\n * Returns a config that is the composes this config and the specified config\n * using the provided function.\n *\n * @since 2.0.0\n * @category zipping\n */\nexport const zipWith: {\n  /**\n   * Returns a config that is the composes this config and the specified config\n   * using the provided function.\n   *\n   * @since 2.0.0\n   * @category zipping\n   */\n  <B, A, C>(that: Config<B>, f: (a: A, b: B) => C): (self: Config<A>) => Config<C>\n  /**\n   * Returns a config that is the composes this config and the specified config\n   * using the provided function.\n   *\n   * @since 2.0.0\n   * @category zipping\n   */\n  <A, B, C>(self: Config<A>, that: Config<B>, f: (a: A, b: B) => C): Config<C>\n} = internal.zipWith\n","/**\n * @since 2.0.0\n */\nimport type * as Cause from \"./Cause.js\"\nimport * as internal from \"./internal/configError.js\"\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport const ConfigErrorTypeId: unique symbol = internal.ConfigErrorTypeId\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport type ConfigErrorTypeId = typeof ConfigErrorTypeId\n\n/**\n * The possible ways that loading configuration data may fail.\n *\n * @since 2.0.0\n * @category models\n */\nexport type ConfigError =\n  | And\n  | Or\n  | InvalidData\n  | MissingData\n  | SourceUnavailable\n  | Unsupported\n\n/**\n * @since 2.0.0\n */\nexport declare namespace ConfigError {\n  /**\n   * @since 2.0.0\n   * @category models\n   */\n  export interface Proto {\n    readonly _tag: \"ConfigError\"\n    readonly [ConfigErrorTypeId]: ConfigErrorTypeId\n  }\n\n  /**\n   * @since 2.0.0\n   * @category models\n   */\n  export type Reducer<C, Z> = ConfigErrorReducer<C, Z>\n}\n\n/**\n * @since 2.0.0\n * @category models\n */\nexport interface ConfigErrorReducer<in C, in out Z> {\n  andCase(context: C, left: Z, right: Z): Z\n  orCase(context: C, left: Z, right: Z): Z\n  invalidDataCase(context: C, path: Array<string>, message: string): Z\n  missingDataCase(context: C, path: Array<string>, message: string): Z\n  sourceUnavailableCase(\n    context: C,\n    path: Array<string>,\n    message: string,\n    cause: Cause.Cause<unknown>\n  ): Z\n  unsupportedCase(context: C, path: Array<string>, message: string): Z\n}\n\n/**\n * @since 2.0.0\n * @category models\n */\nexport interface And extends ConfigError.Proto {\n  readonly _op: \"And\"\n  readonly left: ConfigError\n  readonly right: ConfigError\n  readonly message: string\n}\n\n/**\n * @since 2.0.0\n * @category models\n */\nexport interface Or extends ConfigError.Proto {\n  readonly _op: \"Or\"\n  readonly left: ConfigError\n  readonly right: ConfigError\n  readonly message: string\n}\n\n/**\n * @since 2.0.0\n * @category models\n */\nexport interface InvalidData extends ConfigError.Proto {\n  readonly _op: \"InvalidData\"\n  readonly path: Array<string>\n  readonly message: string\n}\n\n/**\n * @since 2.0.0\n * @category models\n */\nexport interface MissingData extends ConfigError.Proto {\n  readonly _op: \"MissingData\"\n  readonly path: Array<string>\n  readonly message: string\n}\n\n/**\n * @since 2.0.0\n * @category models\n */\nexport interface SourceUnavailable extends ConfigError.Proto {\n  readonly _op: \"SourceUnavailable\"\n  readonly path: Array<string>\n  readonly message: string\n  readonly cause: Cause.Cause<unknown>\n}\n\n/**\n * @since 2.0.0\n * @category models\n */\nexport interface Unsupported extends ConfigError.Proto {\n  readonly _op: \"Unsupported\"\n  readonly path: Array<string>\n  readonly message: string\n}\n\n/**\n * @since 2.0.0\n * @category models\n */\nexport interface Options {\n  readonly pathDelim: string\n}\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const And: (self: ConfigError, that: ConfigError) => ConfigError = internal.And\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const Or: (self: ConfigError, that: ConfigError) => ConfigError = internal.Or\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const MissingData: (path: Array<string>, message: string, options?: Options) => ConfigError =\n  internal.MissingData\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const InvalidData: (path: Array<string>, message: string, options?: Options) => ConfigError =\n  internal.InvalidData\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const SourceUnavailable: (\n  path: Array<string>,\n  message: string,\n  cause: Cause.Cause<unknown>,\n  options?: Options\n) => ConfigError = internal.SourceUnavailable\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const Unsupported: (path: Array<string>, message: string, options?: Options) => ConfigError =\n  internal.Unsupported\n\n/**\n * Returns `true` if the specified value is a `ConfigError`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isConfigError: (u: unknown) => u is ConfigError = internal.isConfigError\n\n/**\n * Returns `true` if the specified `ConfigError` is an `And`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isAnd: (self: ConfigError) => self is And = internal.isAnd\n\n/**\n * Returns `true` if the specified `ConfigError` is an `Or`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isOr: (self: ConfigError) => self is Or = internal.isOr\n\n/**\n * Returns `true` if the specified `ConfigError` is an `InvalidData`, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isInvalidData: (self: ConfigError) => self is InvalidData = internal.isInvalidData\n\n/**\n * Returns `true` if the specified `ConfigError` is an `MissingData`, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isMissingData: (self: ConfigError) => self is MissingData = internal.isMissingData\n\n/**\n * Returns `true` if the specified `ConfigError` contains only `MissingData` errors, `false` otherwise.\n *\n * @since 2.0.0\n * @categer getters\n */\nexport const isMissingDataOnly: (self: ConfigError) => boolean = internal.isMissingDataOnly\n\n/**\n * Returns `true` if the specified `ConfigError` is a `SourceUnavailable`,\n * `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isSourceUnavailable: (self: ConfigError) => self is SourceUnavailable = internal.isSourceUnavailable\n\n/**\n * Returns `true` if the specified `ConfigError` is an `Unsupported`, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isUnsupported: (self: ConfigError) => self is Unsupported = internal.isUnsupported\n\n/**\n * @since 2.0.0\n * @category utils\n */\nexport const prefixed: {\n  /**\n   * @since 2.0.0\n   * @category utils\n   */\n  (prefix: Array<string>): (self: ConfigError) => ConfigError\n  /**\n   * @since 2.0.0\n   * @category utils\n   */\n  (self: ConfigError, prefix: Array<string>): ConfigError\n} = internal.prefixed\n\n/**\n * @since 2.0.0\n * @category folding\n */\nexport const reduceWithContext: {\n  /**\n   * @since 2.0.0\n   * @category folding\n   */\n  <C, Z>(context: C, reducer: ConfigErrorReducer<C, Z>): (self: ConfigError) => Z\n  /**\n   * @since 2.0.0\n   * @category folding\n   */\n  <C, Z>(self: ConfigError, context: C, reducer: ConfigErrorReducer<C, Z>): Z\n} = internal.reduceWithContext\n","import { pre } from './check/precondition/Pre.js';\nimport { asyncProperty } from './check/property/AsyncProperty.js';\nimport { property } from './check/property/Property.js';\nimport { assert, check } from './check/runner/Runner.js';\nimport { sample, statistics } from './check/runner/Sampler.js';\nimport { gen } from './arbitrary/gen.js';\nimport { array } from './arbitrary/array.js';\nimport { bigInt } from './arbitrary/bigInt.js';\nimport { bigIntN } from './arbitrary/bigIntN.js';\nimport { bigUint } from './arbitrary/bigUint.js';\nimport { bigUintN } from './arbitrary/bigUintN.js';\nimport { boolean } from './arbitrary/boolean.js';\nimport { falsy } from './arbitrary/falsy.js';\nimport { ascii } from './arbitrary/ascii.js';\nimport { base64 } from './arbitrary/base64.js';\nimport { char } from './arbitrary/char.js';\nimport { char16bits } from './arbitrary/char16bits.js';\nimport { fullUnicode } from './arbitrary/fullUnicode.js';\nimport { hexa } from './arbitrary/hexa.js';\nimport { unicode } from './arbitrary/unicode.js';\nimport { constant } from './arbitrary/constant.js';\nimport { constantFrom } from './arbitrary/constantFrom.js';\nimport { context } from './arbitrary/context.js';\nimport { date } from './arbitrary/date.js';\nimport { clone } from './arbitrary/clone.js';\nimport { dictionary } from './arbitrary/dictionary.js';\nimport { emailAddress } from './arbitrary/emailAddress.js';\nimport { double } from './arbitrary/double.js';\nimport { float } from './arbitrary/float.js';\nimport { compareBooleanFunc } from './arbitrary/compareBooleanFunc.js';\nimport { compareFunc } from './arbitrary/compareFunc.js';\nimport { func } from './arbitrary/func.js';\nimport { domain } from './arbitrary/domain.js';\nimport { integer } from './arbitrary/integer.js';\nimport { maxSafeInteger } from './arbitrary/maxSafeInteger.js';\nimport { maxSafeNat } from './arbitrary/maxSafeNat.js';\nimport { nat } from './arbitrary/nat.js';\nimport { ipV4 } from './arbitrary/ipV4.js';\nimport { ipV4Extended } from './arbitrary/ipV4Extended.js';\nimport { ipV6 } from './arbitrary/ipV6.js';\nimport { letrec } from './arbitrary/letrec.js';\nimport { lorem } from './arbitrary/lorem.js';\nimport { mapToConstant } from './arbitrary/mapToConstant.js';\nimport { memo } from './arbitrary/memo.js';\nimport { mixedCase } from './arbitrary/mixedCase.js';\nimport { object } from './arbitrary/object.js';\nimport { json } from './arbitrary/json.js';\nimport { anything } from './arbitrary/anything.js';\nimport { unicodeJsonValue } from './arbitrary/unicodeJsonValue.js';\nimport { jsonValue } from './arbitrary/jsonValue.js';\nimport { unicodeJson } from './arbitrary/unicodeJson.js';\nimport { oneof } from './arbitrary/oneof.js';\nimport { option } from './arbitrary/option.js';\nimport { record } from './arbitrary/record.js';\nimport { uniqueArray } from './arbitrary/uniqueArray.js';\nimport { infiniteStream } from './arbitrary/infiniteStream.js';\nimport { asciiString } from './arbitrary/asciiString.js';\nimport { base64String } from './arbitrary/base64String.js';\nimport { fullUnicodeString } from './arbitrary/fullUnicodeString.js';\nimport { hexaString } from './arbitrary/hexaString.js';\nimport { string } from './arbitrary/string.js';\nimport { string16bits } from './arbitrary/string16bits.js';\nimport { stringOf } from './arbitrary/stringOf.js';\nimport { unicodeString } from './arbitrary/unicodeString.js';\nimport { subarray } from './arbitrary/subarray.js';\nimport { shuffledSubarray } from './arbitrary/shuffledSubarray.js';\nimport { tuple } from './arbitrary/tuple.js';\nimport { ulid } from './arbitrary/ulid.js';\nimport { uuid } from './arbitrary/uuid.js';\nimport { uuidV } from './arbitrary/uuidV.js';\nimport { webAuthority } from './arbitrary/webAuthority.js';\nimport { webFragments } from './arbitrary/webFragments.js';\nimport { webPath } from './arbitrary/webPath.js';\nimport { webQueryParameters } from './arbitrary/webQueryParameters.js';\nimport { webSegment } from './arbitrary/webSegment.js';\nimport { webUrl } from './arbitrary/webUrl.js';\nimport { commands } from './arbitrary/commands.js';\nimport { asyncModelRun, modelRun, scheduledModelRun } from './check/model/ModelRunner.js';\nimport { Random } from './random/generator/Random.js';\nimport { configureGlobal, readConfigureGlobal, resetConfigureGlobal, } from './check/runner/configuration/GlobalParameters.js';\nimport { VerbosityLevel } from './check/runner/configuration/VerbosityLevel.js';\nimport { ExecutionStatus } from './check/runner/reporter/ExecutionStatus.js';\nimport { cloneMethod, cloneIfNeeded, hasCloneMethod } from './check/symbols.js';\nimport { Stream, stream } from './stream/Stream.js';\nimport { hash } from './utils/hash.js';\nimport { stringify, asyncStringify, toStringMethod, hasToStringMethod, asyncToStringMethod, hasAsyncToStringMethod, } from './utils/stringify.js';\nimport { scheduler, schedulerFor } from './arbitrary/scheduler.js';\nimport { defaultReportMessage, asyncDefaultReportMessage } from './check/runner/utils/RunDetailsFormatter.js';\nimport { PreconditionFailure } from './check/precondition/PreconditionFailure.js';\nimport { int8Array } from './arbitrary/int8Array.js';\nimport { int16Array } from './arbitrary/int16Array.js';\nimport { int32Array } from './arbitrary/int32Array.js';\nimport { uint8Array } from './arbitrary/uint8Array.js';\nimport { uint8ClampedArray } from './arbitrary/uint8ClampedArray.js';\nimport { uint16Array } from './arbitrary/uint16Array.js';\nimport { uint32Array } from './arbitrary/uint32Array.js';\nimport { float32Array } from './arbitrary/float32Array.js';\nimport { float64Array } from './arbitrary/float64Array.js';\nimport { sparseArray } from './arbitrary/sparseArray.js';\nimport { Arbitrary } from './check/arbitrary/definition/Arbitrary.js';\nimport { Value } from './check/arbitrary/definition/Value.js';\nimport { createDepthIdentifier, getDepthContextFor } from './arbitrary/_internals/helpers/DepthContext.js';\nimport { bigInt64Array } from './arbitrary/bigInt64Array.js';\nimport { bigUint64Array } from './arbitrary/bigUint64Array.js';\nimport { stringMatching } from './arbitrary/stringMatching.js';\nimport { noShrink } from './arbitrary/noShrink.js';\nimport { noBias } from './arbitrary/noBias.js';\nimport { limitShrink } from './arbitrary/limitShrink.js';\nconst __type = 'module';\nconst __version = '3.23.2';\nconst __commitHash = 'a4a600eaa08c833707067a877db144289a724b91';\nexport { __type, __version, __commitHash, sample, statistics, check, assert, pre, PreconditionFailure, property, asyncProperty, boolean, falsy, float, double, integer, nat, maxSafeInteger, maxSafeNat, bigIntN, bigUintN, bigInt, bigUint, char, ascii, char16bits, unicode, fullUnicode, hexa, base64, mixedCase, string, asciiString, string16bits, stringOf, unicodeString, fullUnicodeString, hexaString, base64String, stringMatching, limitShrink, lorem, constant, constantFrom, mapToConstant, option, oneof, clone, noBias, noShrink, shuffledSubarray, subarray, array, sparseArray, infiniteStream, uniqueArray, tuple, record, dictionary, anything, object, json, jsonValue, unicodeJson, unicodeJsonValue, letrec, memo, compareBooleanFunc, compareFunc, func, context, gen, date, ipV4, ipV4Extended, ipV6, domain, webAuthority, webSegment, webFragments, webPath, webQueryParameters, webUrl, emailAddress, ulid, uuid, uuidV, int8Array, uint8Array, uint8ClampedArray, int16Array, uint16Array, int32Array, uint32Array, float32Array, float64Array, bigInt64Array, bigUint64Array, asyncModelRun, modelRun, scheduledModelRun, commands, scheduler, schedulerFor, Arbitrary, Value, cloneMethod, cloneIfNeeded, hasCloneMethod, toStringMethod, hasToStringMethod, asyncToStringMethod, hasAsyncToStringMethod, getDepthContextFor, stringify, asyncStringify, defaultReportMessage, asyncDefaultReportMessage, hash, VerbosityLevel, configureGlobal, readConfigureGlobal, resetConfigureGlobal, ExecutionStatus, Random, Stream, stream, createDepthIdentifier, };\n","import type { NonEmptyReadonlyArray } from \"../../Array.js\"\nimport type * as ParseResult from \"../../ParseResult.js\"\nimport * as Predicate from \"../../Predicate.js\"\nimport type * as AST from \"../../SchemaAST.js\"\n\n/** @internal */\nexport const getKeysForIndexSignature = (\n  input: { readonly [x: PropertyKey]: unknown },\n  parameter: AST.Parameter\n): ReadonlyArray<string> | ReadonlyArray<symbol> => {\n  switch (parameter._tag) {\n    case \"StringKeyword\":\n    case \"TemplateLiteral\":\n      return Object.keys(input)\n    case \"SymbolKeyword\":\n      return Object.getOwnPropertySymbols(input)\n    case \"Refinement\":\n      return getKeysForIndexSignature(input, parameter.from)\n  }\n}\n\n/** @internal */\nexport const memoizeThunk = <A>(f: () => A): () => A => {\n  let done = false\n  let a: A\n  return () => {\n    if (done) {\n      return a\n    }\n    a = f()\n    done = true\n    return a\n  }\n}\n\n/** @internal */\nexport const formatDate = (date: Date): string => {\n  try {\n    return date.toISOString()\n  } catch {\n    return String(date)\n  }\n}\n\nconst CIRCULAR = \"[Circular]\"\n\n/** @internal */\nexport function formatUnknown(input: unknown, whitespace: number | string | undefined = 0): string {\n  const seen = new WeakSet<object>()\n  const gap = !whitespace ? \"\" : (typeof whitespace === \"number\" ? \" \".repeat(whitespace) : whitespace)\n  const ind = (d: number) => gap.repeat(d)\n\n  const safeToString = (x: any): string => {\n    try {\n      const s = x.toString()\n      return typeof s === \"string\" ? s : String(s)\n    } catch {\n      return \"[toString threw]\"\n    }\n  }\n\n  const wrap = (v: unknown, body: string): string => {\n    const ctor = (v as any)?.constructor\n    return ctor && ctor !== Object.prototype.constructor && ctor.name ? `${ctor.name}(${body})` : body\n  }\n\n  const ownKeys = (o: object): Array<PropertyKey> => {\n    try {\n      return Reflect.ownKeys(o)\n    } catch {\n      return [\"[ownKeys threw]\"]\n    }\n  }\n\n  function go(v: unknown, d = 0): string {\n    if (Array.isArray(v)) {\n      if (seen.has(v)) return CIRCULAR\n      seen.add(v)\n      if (!gap || v.length <= 1) return `[${v.map((x) => go(x, d)).join(\",\")}]`\n      const inner = v.map((x) => go(x, d + 1)).join(\",\\n\" + ind(d + 1))\n      return `[\\n${ind(d + 1)}${inner}\\n${ind(d)}]`\n    }\n\n    if (Predicate.isDate(v)) return formatDate(v)\n\n    if (\n      Predicate.hasProperty(v, \"toString\") &&\n      Predicate.isFunction((v as any)[\"toString\"]) &&\n      (v as any)[\"toString\"] !== Object.prototype.toString\n    ) return safeToString(v)\n\n    if (Predicate.isString(v)) return JSON.stringify(v)\n\n    if (\n      Predicate.isNumber(v) ||\n      v == null ||\n      Predicate.isBoolean(v) ||\n      Predicate.isSymbol(v)\n    ) return String(v)\n\n    if (Predicate.isBigInt(v)) return String(v) + \"n\"\n\n    if (v instanceof Set || v instanceof Map) {\n      if (seen.has(v)) return CIRCULAR\n      seen.add(v)\n      return `${v.constructor.name}(${go(Array.from(v), d)})`\n    }\n\n    if (Predicate.isObject(v)) {\n      if (seen.has(v)) return CIRCULAR\n      seen.add(v)\n      const keys = ownKeys(v)\n      if (!gap || keys.length <= 1) {\n        const body = `{${keys.map((k) => `${formatPropertyKey(k)}:${go((v as any)[k], d)}`).join(\",\")}}`\n        return wrap(v, body)\n      }\n      const body = `{\\n${\n        keys.map((k) => `${ind(d + 1)}${formatPropertyKey(k)}: ${go((v as any)[k], d + 1)}`).join(\",\\n\")\n      }\\n${ind(d)}}`\n      return wrap(v, body)\n    }\n\n    return String(v)\n  }\n\n  return go(input, 0)\n}\n\n/** @internal */\nexport function formatPropertyKey(name: PropertyKey): string {\n  return Predicate.isString(name) ? JSON.stringify(name) : String(name)\n}\n\n/** @internal */\nexport type SingleOrArray<A> = A | ReadonlyArray<A>\n\n/** @internal */\nexport const isNonEmpty = <A>(x: ParseResult.SingleOrNonEmpty<A>): x is NonEmptyReadonlyArray<A> => Array.isArray(x)\n\n/** @internal */\nexport const isSingle = <A>(x: A | ReadonlyArray<A>): x is A => !Array.isArray(x)\n\n/** @internal */\nexport const formatPathKey = (key: PropertyKey): string => `[${formatPropertyKey(key)}]`\n\n/** @internal */\nexport const formatPath = (path: ParseResult.Path): string =>\n  isNonEmpty(path) ? path.map(formatPathKey).join(\"\") : formatPathKey(path)\n","import * as array_ from \"../../Array.js\"\nimport type * as AST from \"../../SchemaAST.js\"\nimport * as util_ from \"./util.js\"\n\nconst getErrorMessage = (\n  reason: string,\n  details?: string,\n  path?: ReadonlyArray<PropertyKey>,\n  ast?: AST.AST\n): string => {\n  let out = reason\n\n  if (path && array_.isNonEmptyReadonlyArray(path)) {\n    out += `\\nat path: ${util_.formatPath(path)}`\n  }\n\n  if (details !== undefined) {\n    out += `\\ndetails: ${details}`\n  }\n\n  if (ast) {\n    out += `\\nschema (${ast._tag}): ${ast}`\n  }\n\n  return out\n}\n\n// ---------------------------------------------\n// generic\n// ---------------------------------------------\n\n/** @internal */\nexport const getInvalidArgumentErrorMessage = (details: string) => getErrorMessage(\"Invalid Argument\", details)\n\nconst getUnsupportedSchemaErrorMessage = (details?: string, path?: ReadonlyArray<PropertyKey>, ast?: AST.AST): string =>\n  getErrorMessage(\"Unsupported schema\", details, path, ast)\n\nconst getMissingAnnotationErrorMessage = (details?: string, path?: ReadonlyArray<PropertyKey>, ast?: AST.AST): string =>\n  getErrorMessage(\"Missing annotation\", details, path, ast)\n\n// ---------------------------------------------\n// Arbitrary\n// ---------------------------------------------\n\n/** @internal */\nexport const getArbitraryUnsupportedErrorMessage = (path: ReadonlyArray<PropertyKey>, ast: AST.AST) =>\n  getUnsupportedSchemaErrorMessage(\"Cannot build an Arbitrary for this schema\", path, ast)\n\n/** @internal */\nexport const getArbitraryMissingAnnotationErrorMessage = (\n  path: ReadonlyArray<PropertyKey>,\n  ast: AST.AST\n) =>\n  getMissingAnnotationErrorMessage(\n    `Generating an Arbitrary for this schema requires an \"arbitrary\" annotation`,\n    path,\n    ast\n  )\n\n/** @internal */\nexport const getArbitraryEmptyEnumErrorMessage = (path: ReadonlyArray<PropertyKey>) =>\n  getErrorMessage(\"Empty Enums schema\", \"Generating an Arbitrary for this schema requires at least one enum\", path)\n\n// ---------------------------------------------\n// Equivalence\n// ---------------------------------------------\n\n/** @internal */\nexport const getEquivalenceUnsupportedErrorMessage = (ast: AST.AST, path: ReadonlyArray<PropertyKey>) =>\n  getUnsupportedSchemaErrorMessage(\"Cannot build an Equivalence\", path, ast)\n\n// ---------------------------------------------\n// JSON Schema\n// ---------------------------------------------\n\n/** @internal */\nexport const getJSONSchemaMissingAnnotationErrorMessage = (\n  path: ReadonlyArray<PropertyKey>,\n  ast: AST.AST\n) =>\n  getMissingAnnotationErrorMessage(\n    `Generating a JSON Schema for this schema requires a \"jsonSchema\" annotation`,\n    path,\n    ast\n  )\n\n/** @internal */\nexport const getJSONSchemaMissingIdentifierAnnotationErrorMessage = (\n  path: ReadonlyArray<PropertyKey>,\n  ast: AST.AST\n) =>\n  getMissingAnnotationErrorMessage(\n    `Generating a JSON Schema for this schema requires an \"identifier\" annotation`,\n    path,\n    ast\n  )\n\n/** @internal */\nexport const getJSONSchemaUnsupportedPostRestElementsErrorMessage = (path: ReadonlyArray<PropertyKey>): string =>\n  getErrorMessage(\n    \"Generating a JSON Schema for post-rest elements is not currently supported. You're welcome to contribute by submitting a Pull Request\",\n    undefined,\n    path\n  )\n\n/** @internal */\nexport const getJSONSchemaUnsupportedKeyErrorMessage = (key: PropertyKey, path: ReadonlyArray<PropertyKey>): string =>\n  getErrorMessage(\"Unsupported key\", `Cannot encode ${util_.formatPropertyKey(key)} key to JSON Schema`, path)\n\n// ---------------------------------------------\n// Pretty\n// ---------------------------------------------\n\n/** @internal */\nexport const getPrettyMissingAnnotationErrorMessage = (\n  path: ReadonlyArray<PropertyKey>,\n  ast: AST.AST\n) => getMissingAnnotationErrorMessage(`Generating a Pretty for this schema requires a \"pretty\" annotation`, path, ast)\n\n/** @internal */\nexport const getPrettyNeverErrorMessage = \"Cannot pretty print a `never` value\"\n\n/** @internal */\nexport const getPrettyNoMatchingSchemaErrorMessage = (\n  actual: unknown,\n  path: ReadonlyArray<PropertyKey>,\n  ast: AST.AST\n) => getErrorMessage(\"Unexpected Error\", `Cannot find a matching schema for ${util_.formatUnknown(actual)}`, path, ast)\n\n// ---------------------------------------------\n// Schema\n// ---------------------------------------------\n\n/** @internal */\nexport const getSchemaExtendErrorMessage = (x: AST.AST, y: AST.AST, path: ReadonlyArray<PropertyKey>) =>\n  getErrorMessage(\"Unsupported schema or overlapping types\", `cannot extend ${x} with ${y}`, path)\n\n/** @internal */\nexport const getSchemaUnsupportedLiteralSpanErrorMessage = (ast: AST.AST) =>\n  getErrorMessage(\"Unsupported template literal span\", undefined, undefined, ast)\n\n// ---------------------------------------------\n// AST\n// ---------------------------------------------\n\n/** @internal */\nexport const getASTUnsupportedSchemaErrorMessage = (ast: AST.AST) =>\n  getUnsupportedSchemaErrorMessage(undefined, undefined, ast)\n\n/** @internal */\nexport const getASTUnsupportedKeySchemaErrorMessage = (ast: AST.AST) =>\n  getErrorMessage(\"Unsupported key schema\", undefined, undefined, ast)\n\n/** @internal */\nexport const getASTUnsupportedLiteralErrorMessage = (literal: AST.LiteralValue) =>\n  getErrorMessage(\"Unsupported literal\", `literal value: ${util_.formatUnknown(literal)}`)\n\n/** @internal */\nexport const getASTDuplicateIndexSignatureErrorMessage = (type: \"string\" | \"symbol\"): string =>\n  getErrorMessage(\"Duplicate index signature\", `${type} index signature`)\n\n/** @internal */\nexport const getASTIndexSignatureParameterErrorMessage = getErrorMessage(\n  \"Unsupported index signature parameter\",\n  \"An index signature parameter type must be `string`, `symbol`, a template literal type or a refinement of the previous types\"\n)\n\n/** @internal */\nexport const getASTRequiredElementFollowinAnOptionalElementErrorMessage = getErrorMessage(\n  \"Invalid element\",\n  \"A required element cannot follow an optional element. ts(1257)\"\n)\n\n/** @internal */\nexport const getASTDuplicatePropertySignatureTransformationErrorMessage = (key: PropertyKey): string =>\n  getErrorMessage(\"Duplicate property signature transformation\", `Duplicate key ${util_.formatUnknown(key)}`)\n\n/** @internal */\nexport const getASTUnsupportedRenameSchemaErrorMessage = (ast: AST.AST): string =>\n  getUnsupportedSchemaErrorMessage(undefined, undefined, ast)\n\n/** @internal */\nexport const getASTDuplicatePropertySignatureErrorMessage = (key: PropertyKey): string =>\n  getErrorMessage(\"Duplicate property signature\", `Duplicate key ${util_.formatUnknown(key)}`)\n","import type * as Schema from \"../../Schema.js\"\n\n/** @internal */\nexport const DateFromSelfSchemaId: Schema.DateFromSelfSchemaId = Symbol.for(\n  \"effect/SchemaId/DateFromSelf\"\n) as Schema.DateFromSelfSchemaId\n\n/** @internal */\nexport const GreaterThanSchemaId: Schema.GreaterThanSchemaId = Symbol.for(\n  \"effect/SchemaId/GreaterThan\"\n) as Schema.GreaterThanSchemaId\n\n/** @internal */\nexport const GreaterThanOrEqualToSchemaId: Schema.GreaterThanOrEqualToSchemaId = Symbol.for(\n  \"effect/SchemaId/GreaterThanOrEqualTo\"\n) as Schema.GreaterThanOrEqualToSchemaId\n\n/** @internal */\nexport const LessThanSchemaId: Schema.LessThanSchemaId = Symbol.for(\n  \"effect/SchemaId/LessThan\"\n) as Schema.LessThanSchemaId\n\n/** @internal */\nexport const LessThanOrEqualToSchemaId: Schema.LessThanOrEqualToSchemaId = Symbol.for(\n  \"effect/SchemaId/LessThanOrEqualTo\"\n) as Schema.LessThanOrEqualToSchemaId\n\n/** @internal */\nexport const IntSchemaId: Schema.IntSchemaId = Symbol.for(\n  \"effect/SchemaId/Int\"\n) as Schema.IntSchemaId\n\n/** @internal */\nexport const NonNaNSchemaId: Schema.NonNaNSchemaId = Symbol.for(\n  \"effect/SchemaId/NonNaN\"\n) as Schema.NonNaNSchemaId\n\n/** @internal */\nexport const FiniteSchemaId: Schema.FiniteSchemaId = Symbol.for(\n  \"effect/SchemaId/Finite\"\n) as Schema.FiniteSchemaId\n\n/** @internal */\nexport const JsonNumberSchemaId: Schema.JsonNumberSchemaId = Symbol.for(\n  \"effect/SchemaId/JsonNumber\"\n) as Schema.JsonNumberSchemaId\n\n/** @internal */\nexport const BetweenSchemaId: Schema.BetweenSchemaId = Symbol.for(\n  \"effect/SchemaId/Between\"\n) as Schema.BetweenSchemaId\n\n/** @internal */\nexport const GreaterThanBigintSchemaId: Schema.GreaterThanBigIntSchemaId = Symbol.for(\n  \"effect/SchemaId/GreaterThanBigint\"\n) as Schema.GreaterThanBigIntSchemaId\n\n/** @internal */\nexport const GreaterThanOrEqualToBigIntSchemaId: Schema.GreaterThanOrEqualToBigIntSchemaId = Symbol.for(\n  \"effect/SchemaId/GreaterThanOrEqualToBigint\"\n) as Schema.GreaterThanOrEqualToBigIntSchemaId\n\n/** @internal */\nexport const LessThanBigIntSchemaId: Schema.LessThanBigIntSchemaId = Symbol.for(\n  \"effect/SchemaId/LessThanBigint\"\n) as Schema.LessThanBigIntSchemaId\n\n/** @internal */\nexport const LessThanOrEqualToBigIntSchemaId: Schema.LessThanOrEqualToBigIntSchemaId = Symbol.for(\n  \"effect/SchemaId/LessThanOrEqualToBigint\"\n) as Schema.LessThanOrEqualToBigIntSchemaId\n\n/** @internal */\nexport const BetweenBigintSchemaId: Schema.BetweenBigIntSchemaId = Symbol.for(\n  \"effect/SchemaId/BetweenBigint\"\n) as Schema.BetweenBigIntSchemaId\n\n/** @internal */\nexport const MinLengthSchemaId: Schema.MinLengthSchemaId = Symbol.for(\n  \"effect/SchemaId/MinLength\"\n) as Schema.MinLengthSchemaId\n\n/** @internal */\nexport const MaxLengthSchemaId: Schema.MaxLengthSchemaId = Symbol.for(\n  \"effect/SchemaId/MaxLength\"\n) as Schema.MaxLengthSchemaId\n\n/** @internal */\nexport const LengthSchemaId: Schema.LengthSchemaId = Symbol.for(\n  \"effect/SchemaId/Length\"\n) as Schema.LengthSchemaId\n\n/** @internal */\nexport const MinItemsSchemaId: Schema.MinItemsSchemaId = Symbol.for(\n  \"effect/SchemaId/MinItems\"\n) as Schema.MinItemsSchemaId\n\n/** @internal */\nexport const MaxItemsSchemaId: Schema.MaxItemsSchemaId = Symbol.for(\n  \"effect/SchemaId/MaxItems\"\n) as Schema.MaxItemsSchemaId\n\n/** @internal */\nexport const ItemsCountSchemaId: Schema.ItemsCountSchemaId = Symbol.for(\n  \"effect/SchemaId/ItemsCount\"\n) as Schema.ItemsCountSchemaId\n","/**\n * @since 3.10.0\n */\n\nimport * as Arr from \"./Array.js\"\nimport * as Cause from \"./Cause.js\"\nimport { TaggedError } from \"./Data.js\"\nimport * as Effect from \"./Effect.js\"\nimport * as Either from \"./Either.js\"\nimport * as Exit from \"./Exit.js\"\nimport type { LazyArg } from \"./Function.js\"\nimport { dual } from \"./Function.js\"\nimport { globalValue } from \"./GlobalValue.js\"\nimport * as Inspectable from \"./Inspectable.js\"\nimport * as util_ from \"./internal/schema/util.js\"\nimport * as Option from \"./Option.js\"\nimport * as Predicate from \"./Predicate.js\"\nimport * as Scheduler from \"./Scheduler.js\"\nimport type * as Schema from \"./Schema.js\"\nimport * as AST from \"./SchemaAST.js\"\nimport type { Concurrency } from \"./Types.js\"\n\n/**\n * `ParseIssue` is a type that represents the different types of errors that can occur when decoding/encoding a value.\n *\n * @category model\n * @since 3.10.0\n */\nexport type ParseIssue =\n  // leaf\n  | Type\n  | Missing\n  | Unexpected\n  | Forbidden\n  // composite\n  | Pointer\n  | Refinement\n  | Transformation\n  | Composite\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport type SingleOrNonEmpty<A> = A | Arr.NonEmptyReadonlyArray<A>\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport type Path = SingleOrNonEmpty<PropertyKey>\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class Pointer {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"Pointer\"\n  constructor(\n    readonly path: Path,\n    readonly actual: unknown,\n    readonly issue: ParseIssue\n  ) {}\n}\n\n/**\n * Error that occurs when an unexpected key or index is present.\n *\n * @category model\n * @since 3.10.0\n */\nexport class Unexpected {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"Unexpected\"\n  constructor(\n    readonly actual: unknown,\n    /**\n     * @since 3.10.0\n     */\n    readonly message?: string\n  ) {}\n}\n\n/**\n * Error that occurs when a required key or index is missing.\n *\n * @category model\n * @since 3.10.0\n */\nexport class Missing {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"Missing\"\n  /**\n   * @since 3.10.0\n   */\n  readonly actual = undefined\n  constructor(\n    /**\n     * @since 3.10.0\n     */\n    readonly ast: AST.Type,\n    /**\n     * @since 3.10.0\n     */\n    readonly message?: string\n  ) {}\n}\n\n/**\n * Error that contains multiple issues.\n *\n * @category model\n * @since 3.10.0\n */\nexport class Composite {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"Composite\"\n  constructor(\n    readonly ast: AST.AST,\n    readonly actual: unknown,\n    readonly issues: SingleOrNonEmpty<ParseIssue>,\n    readonly output?: unknown\n  ) {}\n}\n\n/**\n * Error that occurs when a refinement has an error.\n *\n * @category model\n * @since 3.10.0\n */\nexport class Refinement {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"Refinement\"\n  constructor(\n    readonly ast: AST.Refinement,\n    readonly actual: unknown,\n    readonly kind: \"From\" | \"Predicate\",\n    readonly issue: ParseIssue\n  ) {}\n}\n\n/**\n * Error that occurs when a transformation has an error.\n *\n * @category model\n * @since 3.10.0\n */\nexport class Transformation {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"Transformation\"\n  constructor(\n    readonly ast: AST.Transformation,\n    readonly actual: unknown,\n    readonly kind: \"Encoded\" | \"Transformation\" | \"Type\",\n    readonly issue: ParseIssue\n  ) {}\n}\n\n/**\n * The `Type` variant of the `ParseIssue` type represents an error that occurs when the `actual` value is not of the expected type.\n * The `ast` field specifies the expected type, and the `actual` field contains the value that caused the error.\n *\n * @category model\n * @since 3.10.0\n */\nexport class Type {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"Type\"\n  constructor(\n    readonly ast: AST.AST,\n    readonly actual: unknown,\n    readonly message?: string\n  ) {}\n}\n\n/**\n * The `Forbidden` variant of the `ParseIssue` type represents a forbidden operation, such as when encountering an Effect that is not allowed to execute (e.g., using `runSync`).\n *\n * @category model\n * @since 3.10.0\n */\nexport class Forbidden {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"Forbidden\"\n  constructor(\n    readonly ast: AST.AST,\n    readonly actual: unknown,\n    readonly message?: string\n  ) {}\n}\n\n/**\n * @category type id\n * @since 3.10.0\n */\nexport const ParseErrorTypeId: unique symbol = Symbol.for(\"effect/Schema/ParseErrorTypeId\")\n\n/**\n * @category type id\n * @since 3.10.0\n */\nexport type ParseErrorTypeId = typeof ParseErrorTypeId\n\n/**\n * @since 3.10.0\n */\nexport const isParseError = (u: unknown): u is ParseError => Predicate.hasProperty(u, ParseErrorTypeId)\n\n/**\n * @since 3.10.0\n */\nexport class ParseError extends TaggedError(\"ParseError\")<{ readonly issue: ParseIssue }> {\n  /**\n   * @since 3.10.0\n   */\n  readonly [ParseErrorTypeId] = ParseErrorTypeId\n\n  get message() {\n    return this.toString()\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return TreeFormatter.formatIssueSync(this.issue)\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _id: \"ParseError\",\n      message: this.toString()\n    }\n  }\n  /**\n   * @since 3.10.0\n   */\n  [Inspectable.NodeInspectSymbol]() {\n    return this.toJSON()\n  }\n}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const parseError = (issue: ParseIssue): ParseError => new ParseError({ issue })\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const succeed: <A>(a: A) => Either.Either<A, ParseIssue> = Either.right\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const fail: (issue: ParseIssue) => Either.Either<never, ParseIssue> = Either.left\n\nconst _try: <A>(options: {\n  try: LazyArg<A>\n  catch: (e: unknown) => ParseIssue\n}) => Either.Either<A, ParseIssue> = Either.try\n\nexport {\n  /**\n   * @category constructors\n   * @since 3.10.0\n   */\n  _try as try\n}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const fromOption: {\n  /**\n   * @category constructors\n   * @since 3.10.0\n   */\n  (onNone: () => ParseIssue): <A>(self: Option.Option<A>) => Either.Either<A, ParseIssue>\n  /**\n   * @category constructors\n   * @since 3.10.0\n   */\n  <A>(self: Option.Option<A>, onNone: () => ParseIssue): Either.Either<A, ParseIssue>\n} = Either.fromOption\n\nconst isEither: <A, E, R>(self: Effect.Effect<A, E, R>) => self is Either.Either<A, E> = Either.isEither as any\n\n/**\n * @category optimisation\n * @since 3.10.0\n */\nexport const flatMap: {\n  /**\n   * @category optimisation\n   * @since 3.10.0\n   */\n  <A, B, E1, R1>(f: (a: A) => Effect.Effect<B, E1, R1>): <E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<B, E1 | E, R1 | R>\n  /**\n   * @category optimisation\n   * @since 3.10.0\n   */\n  <A, E, R, B, E1, R1>(self: Effect.Effect<A, E, R>, f: (a: A) => Effect.Effect<B, E1, R1>): Effect.Effect<B, E | E1, R | R1>\n} = dual(2, <A, E, R, B, E1, R1>(\n  self: Effect.Effect<A, E, R>,\n  f: (a: A) => Effect.Effect<B, E1, R1>\n): Effect.Effect<B, E | E1, R | R1> => {\n  return isEither(self) ?\n    Either.match(self, { onLeft: Either.left, onRight: f }) :\n    Effect.flatMap(self, f)\n})\n\n/**\n * @category optimisation\n * @since 3.10.0\n */\nexport const map: {\n  /**\n   * @category optimisation\n   * @since 3.10.0\n   */\n  <A, B>(f: (a: A) => B): <E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<B, E, R>\n  /**\n   * @category optimisation\n   * @since 3.10.0\n   */\n  <A, E, R, B>(self: Effect.Effect<A, E, R>, f: (a: A) => B): Effect.Effect<B, E, R>\n} = dual(2, <A, E, R, B>(self: Effect.Effect<A, E, R>, f: (a: A) => B): Effect.Effect<B, E, R> => {\n  return isEither(self) ?\n    Either.map(self, f) :\n    Effect.map(self, f)\n})\n\n/**\n * @category optimisation\n * @since 3.10.0\n */\nexport const mapError: {\n  /**\n   * @category optimisation\n   * @since 3.10.0\n   */\n  <E, E2>(f: (e: E) => E2): <A, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E2, R>\n  /**\n   * @category optimisation\n   * @since 3.10.0\n   */\n  <A, E, R, E2>(self: Effect.Effect<A, E, R>, f: (e: E) => E2): Effect.Effect<A, E2, R>\n} = dual(2, <A, E, R, E2>(self: Effect.Effect<A, E, R>, f: (e: E) => E2): Effect.Effect<A, E2, R> => {\n  return isEither(self) ?\n    Either.mapLeft(self, f) :\n    Effect.mapError(self, f)\n})\n\n// TODO(4.0): remove\n/**\n * @category optimisation\n * @since 3.10.0\n */\nexport const eitherOrUndefined = <A, E, R>(\n  self: Effect.Effect<A, E, R>\n): Either.Either<A, E> | undefined => {\n  if (isEither(self)) {\n    return self\n  }\n}\n\n/**\n * @category optimisation\n * @since 3.10.0\n */\nexport const mapBoth: {\n  /**\n   * @category optimisation\n   * @since 3.10.0\n   */\n  <E, E2, A, A2>(\n    options: { readonly onFailure: (e: E) => E2; readonly onSuccess: (a: A) => A2 }\n  ): <R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A2, E2, R>\n  /**\n   * @category optimisation\n   * @since 3.10.0\n   */\n  <A, E, R, E2, A2>(\n    self: Effect.Effect<A, E, R>,\n    options: { readonly onFailure: (e: E) => E2; readonly onSuccess: (a: A) => A2 }\n  ): Effect.Effect<A2, E2, R>\n} = dual(2, <A, E, R, E2, A2>(\n  self: Effect.Effect<A, E, R>,\n  options: { readonly onFailure: (e: E) => E2; readonly onSuccess: (a: A) => A2 }\n): Effect.Effect<A2, E2, R> => {\n  return isEither(self) ?\n    Either.mapBoth(self, { onLeft: options.onFailure, onRight: options.onSuccess }) :\n    Effect.mapBoth(self, options)\n})\n\n/**\n * @category optimisation\n * @since 3.10.0\n */\nexport const orElse: {\n  /**\n   * @category optimisation\n   * @since 3.10.0\n   */\n  <E, A2, E2, R2>(f: (e: E) => Effect.Effect<A2, E2, R2>): <A, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A2 | A, E2, R2 | R>\n  /**\n   * @category optimisation\n   * @since 3.10.0\n   */\n  <A, E, R, A2, E2, R2>(self: Effect.Effect<A, E, R>, f: (e: E) => Effect.Effect<A2, E2, R2>): Effect.Effect<A2 | A, E2, R2 | R>\n} = dual(2, <A, E, R, A2, E2, R2>(\n  self: Effect.Effect<A, E, R>,\n  f: (e: E) => Effect.Effect<A2, E2, R2>\n): Effect.Effect<A2 | A, E2, R2 | R> => {\n  return isEither(self) ?\n    Either.match(self, { onLeft: f, onRight: Either.right }) :\n    Effect.catchAll(self, f)\n})\n\n/**\n * @since 3.10.0\n */\nexport type DecodeUnknown<Out, R> = (u: unknown, options?: AST.ParseOptions) => Effect.Effect<Out, ParseIssue, R>\n\n/**\n * @since 3.10.0\n */\nexport type DeclarationDecodeUnknown<Out, R> = (\n  u: unknown,\n  options: AST.ParseOptions,\n  ast: AST.Declaration\n) => Effect.Effect<Out, ParseIssue, R>\n\n/** @internal */\nexport const mergeInternalOptions = (\n  options: InternalOptions | undefined,\n  overrideOptions: InternalOptions | number | undefined\n): InternalOptions | undefined => {\n  if (overrideOptions === undefined || Predicate.isNumber(overrideOptions)) {\n    return options\n  }\n  if (options === undefined) {\n    return overrideOptions\n  }\n  return { ...options, ...overrideOptions }\n}\n\nconst getEither = (ast: AST.AST, isDecoding: boolean, options?: AST.ParseOptions) => {\n  const parser = goMemo(ast, isDecoding)\n  return (u: unknown, overrideOptions?: AST.ParseOptions): Either.Either<any, ParseIssue> =>\n    parser(u, mergeInternalOptions(options, overrideOptions)) as any\n}\n\nconst getSync = (ast: AST.AST, isDecoding: boolean, options?: AST.ParseOptions) => {\n  const parser = getEither(ast, isDecoding, options)\n  return (input: unknown, overrideOptions?: AST.ParseOptions) =>\n    Either.getOrThrowWith(parser(input, overrideOptions), parseError)\n}\n\n/** @internal */\nexport const getOption = (ast: AST.AST, isDecoding: boolean, options?: AST.ParseOptions) => {\n  const parser = getEither(ast, isDecoding, options)\n  return (input: unknown, overrideOptions?: AST.ParseOptions): Option.Option<any> =>\n    Option.getRight(parser(input, overrideOptions))\n}\n\nconst getEffect = <R>(ast: AST.AST, isDecoding: boolean, options?: AST.ParseOptions) => {\n  const parser = goMemo(ast, isDecoding)\n  return (input: unknown, overrideOptions?: AST.ParseOptions): Effect.Effect<any, ParseIssue, R> =>\n    parser(input, { ...mergeInternalOptions(options, overrideOptions), isEffectAllowed: true })\n}\n\n/**\n * @throws `ParseError`\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeUnknownSync = <A, I>(\n  schema: Schema.Schema<A, I, never>,\n  options?: AST.ParseOptions\n): (u: unknown, overrideOptions?: AST.ParseOptions) => A => getSync(schema.ast, true, options)\n\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeUnknownOption = <A, I>(\n  schema: Schema.Schema<A, I, never>,\n  options?: AST.ParseOptions\n): (u: unknown, overrideOptions?: AST.ParseOptions) => Option.Option<A> => getOption(schema.ast, true, options)\n\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeUnknownEither = <A, I>(\n  schema: Schema.Schema<A, I, never>,\n  options?: AST.ParseOptions\n): (u: unknown, overrideOptions?: AST.ParseOptions) => Either.Either<A, ParseIssue> =>\n  getEither(schema.ast, true, options)\n\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeUnknownPromise = <A, I>(\n  schema: Schema.Schema<A, I, never>,\n  options?: AST.ParseOptions\n) => {\n  const parser = decodeUnknown(schema, options)\n  return (u: unknown, overrideOptions?: AST.ParseOptions): Promise<A> => Effect.runPromise(parser(u, overrideOptions))\n}\n\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeUnknown = <A, I, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: AST.ParseOptions\n): (u: unknown, overrideOptions?: AST.ParseOptions) => Effect.Effect<A, ParseIssue, R> =>\n  getEffect(schema.ast, true, options)\n\n/**\n * @throws `ParseError`\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeUnknownSync = <A, I>(\n  schema: Schema.Schema<A, I, never>,\n  options?: AST.ParseOptions\n): (u: unknown, overrideOptions?: AST.ParseOptions) => I => getSync(schema.ast, false, options)\n\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeUnknownOption = <A, I>(\n  schema: Schema.Schema<A, I, never>,\n  options?: AST.ParseOptions\n): (u: unknown, overrideOptions?: AST.ParseOptions) => Option.Option<I> => getOption(schema.ast, false, options)\n\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeUnknownEither = <A, I>(\n  schema: Schema.Schema<A, I, never>,\n  options?: AST.ParseOptions\n): (u: unknown, overrideOptions?: AST.ParseOptions) => Either.Either<I, ParseIssue> =>\n  getEither(schema.ast, false, options)\n\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeUnknownPromise = <A, I>(\n  schema: Schema.Schema<A, I, never>,\n  options?: AST.ParseOptions\n) => {\n  const parser = encodeUnknown(schema, options)\n  return (u: unknown, overrideOptions?: AST.ParseOptions): Promise<I> => Effect.runPromise(parser(u, overrideOptions))\n}\n\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeUnknown = <A, I, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: AST.ParseOptions\n): (u: unknown, overrideOptions?: AST.ParseOptions) => Effect.Effect<I, ParseIssue, R> =>\n  getEffect(schema.ast, false, options)\n\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeSync: <A, I>(\n  schema: Schema.Schema<A, I, never>,\n  options?: AST.ParseOptions\n) => (i: I, overrideOptions?: AST.ParseOptions) => A = decodeUnknownSync\n\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeOption: <A, I>(\n  schema: Schema.Schema<A, I, never>,\n  options?: AST.ParseOptions\n) => (i: I, overrideOptions?: AST.ParseOptions) => Option.Option<A> = decodeUnknownOption\n\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeEither: <A, I>(\n  schema: Schema.Schema<A, I, never>,\n  options?: AST.ParseOptions\n) => (i: I, overrideOptions?: AST.ParseOptions) => Either.Either<A, ParseIssue> = decodeUnknownEither\n\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodePromise: <A, I>(\n  schema: Schema.Schema<A, I, never>,\n  options?: AST.ParseOptions\n) => (i: I, overrideOptions?: AST.ParseOptions) => Promise<A> = decodeUnknownPromise\n\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decode: <A, I, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: AST.ParseOptions\n) => (i: I, overrideOptions?: AST.ParseOptions) => Effect.Effect<A, ParseIssue, R> = decodeUnknown\n\n/**\n * @throws `ParseError`\n * @category validation\n * @since 3.10.0\n */\nexport const validateSync = <A, I, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: AST.ParseOptions\n): (u: unknown, overrideOptions?: AST.ParseOptions) => A => getSync(AST.typeAST(schema.ast), true, options)\n\n/**\n * @category validation\n * @since 3.10.0\n */\nexport const validateOption = <A, I, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: AST.ParseOptions\n): (u: unknown, overrideOptions?: AST.ParseOptions) => Option.Option<A> =>\n  getOption(AST.typeAST(schema.ast), true, options)\n\n/**\n * @category validation\n * @since 3.10.0\n */\nexport const validateEither = <A, I, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: AST.ParseOptions\n): (u: unknown, overrideOptions?: AST.ParseOptions) => Either.Either<A, ParseIssue> =>\n  getEither(AST.typeAST(schema.ast), true, options)\n\n/**\n * @category validation\n * @since 3.10.0\n */\nexport const validatePromise = <A, I>(\n  schema: Schema.Schema<A, I, never>,\n  options?: AST.ParseOptions\n) => {\n  const parser = validate(schema, options)\n  return (u: unknown, overrideOptions?: AST.ParseOptions): Promise<A> => Effect.runPromise(parser(u, overrideOptions))\n}\n\n/**\n * @category validation\n * @since 3.10.0\n */\nexport const validate = <A, I, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: AST.ParseOptions\n): (a: unknown, overrideOptions?: AST.ParseOptions) => Effect.Effect<A, ParseIssue, R> =>\n  getEffect(AST.typeAST(schema.ast), true, options)\n\n/**\n * By default the option `exact` is set to `true`.\n *\n * @category validation\n * @since 3.10.0\n */\nexport const is = <A, I, R>(schema: Schema.Schema<A, I, R>, options?: AST.ParseOptions) => {\n  const parser = goMemo(AST.typeAST(schema.ast), true)\n  return (u: unknown, overrideOptions?: AST.ParseOptions | number): u is A =>\n    Either.isRight(parser(u, { exact: true, ...mergeInternalOptions(options, overrideOptions) }) as any)\n}\n\n/**\n * By default the option `exact` is set to `true`.\n *\n * @throws `ParseError`\n * @category validation\n * @since 3.10.0\n */\nexport const asserts = <A, I, R>(schema: Schema.Schema<A, I, R>, options?: AST.ParseOptions) => {\n  const parser = goMemo(AST.typeAST(schema.ast), true)\n  return (u: unknown, overrideOptions?: AST.ParseOptions): asserts u is A => {\n    const result: Either.Either<any, ParseIssue> = parser(u, {\n      exact: true,\n      ...mergeInternalOptions(options, overrideOptions)\n    }) as any\n    if (Either.isLeft(result)) {\n      throw parseError(result.left)\n    }\n  }\n}\n\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeSync: <A, I>(\n  schema: Schema.Schema<A, I, never>,\n  options?: AST.ParseOptions\n) => (a: A, overrideOptions?: AST.ParseOptions) => I = encodeUnknownSync\n\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeOption: <A, I>(\n  schema: Schema.Schema<A, I, never>,\n  options?: AST.ParseOptions\n) => (input: A, overrideOptions?: AST.ParseOptions) => Option.Option<I> = encodeUnknownOption\n\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeEither: <A, I>(\n  schema: Schema.Schema<A, I, never>,\n  options?: AST.ParseOptions\n) => (a: A, overrideOptions?: AST.ParseOptions) => Either.Either<I, ParseIssue> = encodeUnknownEither\n\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodePromise: <A, I>(\n  schema: Schema.Schema<A, I, never>,\n  options?: AST.ParseOptions\n) => (a: A, overrideOptions?: AST.ParseOptions) => Promise<I> = encodeUnknownPromise\n\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encode: <A, I, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: AST.ParseOptions\n) => (a: A, overrideOptions?: AST.ParseOptions) => Effect.Effect<I, ParseIssue, R> = encodeUnknown\n\ninterface InternalOptions extends AST.ParseOptions {\n  readonly isEffectAllowed?: boolean\n}\n\ninterface Parser {\n  (i: any, options?: InternalOptions): Effect.Effect<any, ParseIssue, any>\n}\n\nconst decodeMemoMap = globalValue(\n  Symbol.for(\"effect/ParseResult/decodeMemoMap\"),\n  () => new WeakMap<AST.AST, Parser>()\n)\nconst encodeMemoMap = globalValue(\n  Symbol.for(\"effect/ParseResult/encodeMemoMap\"),\n  () => new WeakMap<AST.AST, Parser>()\n)\n\nconst goMemo = (ast: AST.AST, isDecoding: boolean): Parser => {\n  const memoMap = isDecoding ? decodeMemoMap : encodeMemoMap\n  const memo = memoMap.get(ast)\n  if (memo) {\n    return memo\n  }\n  const raw = go(ast, isDecoding)\n  const parseOptionsAnnotation = AST.getParseOptionsAnnotation(ast)\n  const parserWithOptions: Parser = Option.isSome(parseOptionsAnnotation)\n    ? (i, options) => raw(i, mergeInternalOptions(options, parseOptionsAnnotation.value))\n    : raw\n  const decodingFallbackAnnotation = AST.getDecodingFallbackAnnotation(ast)\n  const parser: Parser = isDecoding && Option.isSome(decodingFallbackAnnotation)\n    ? (i, options) =>\n      handleForbidden(orElse(parserWithOptions(i, options), decodingFallbackAnnotation.value), ast, i, options)\n    : parserWithOptions\n  memoMap.set(ast, parser)\n  return parser\n}\n\nconst getConcurrency = (ast: AST.AST): Concurrency | undefined =>\n  Option.getOrUndefined(AST.getConcurrencyAnnotation(ast))\n\nconst getBatching = (ast: AST.AST): boolean | \"inherit\" | undefined =>\n  Option.getOrUndefined(AST.getBatchingAnnotation(ast))\n\nconst go = (ast: AST.AST, isDecoding: boolean): Parser => {\n  switch (ast._tag) {\n    case \"Refinement\": {\n      if (isDecoding) {\n        const from = goMemo(ast.from, true)\n        return (i, options) => {\n          options = options ?? AST.defaultParseOption\n          const allErrors = options?.errors === \"all\"\n          const result = flatMap(\n            orElse(from(i, options), (ef) => {\n              const issue = new Refinement(ast, i, \"From\", ef)\n              if (allErrors && AST.hasStableFilter(ast) && isComposite(ef)) {\n                return Option.match(\n                  ast.filter(i, options, ast),\n                  {\n                    onNone: () => Either.left<ParseIssue>(issue),\n                    onSome: (ep) => Either.left(new Composite(ast, i, [issue, new Refinement(ast, i, \"Predicate\", ep)]))\n                  }\n                )\n              }\n              return Either.left(issue)\n            }),\n            (a) =>\n              Option.match(\n                ast.filter(a, options, ast),\n                {\n                  onNone: () => Either.right(a),\n                  onSome: (ep) => Either.left(new Refinement(ast, i, \"Predicate\", ep))\n                }\n              )\n          )\n          return handleForbidden(result, ast, i, options)\n        }\n      } else {\n        const from = goMemo(AST.typeAST(ast), true)\n        const to = goMemo(dropRightRefinement(ast.from), false)\n        return (i, options) => handleForbidden(flatMap(from(i, options), (a) => to(a, options)), ast, i, options)\n      }\n    }\n    case \"Transformation\": {\n      const transform = getFinalTransformation(ast.transformation, isDecoding)\n      const from = isDecoding ? goMemo(ast.from, true) : goMemo(ast.to, false)\n      const to = isDecoding ? goMemo(ast.to, true) : goMemo(ast.from, false)\n      return (i, options) =>\n        handleForbidden(\n          flatMap(\n            mapError(\n              from(i, options),\n              (e) => new Transformation(ast, i, isDecoding ? \"Encoded\" : \"Type\", e)\n            ),\n            (a) =>\n              flatMap(\n                mapError(\n                  transform(a, options ?? AST.defaultParseOption, ast, i),\n                  (e) => new Transformation(ast, i, \"Transformation\", e)\n                ),\n                (i2) =>\n                  mapError(\n                    to(i2, options),\n                    (e) => new Transformation(ast, i, isDecoding ? \"Type\" : \"Encoded\", e)\n                  )\n              )\n          ),\n          ast,\n          i,\n          options\n        )\n    }\n    case \"Declaration\": {\n      const parse = isDecoding\n        ? ast.decodeUnknown(...ast.typeParameters)\n        : ast.encodeUnknown(...ast.typeParameters)\n      return (i, options) => handleForbidden(parse(i, options ?? AST.defaultParseOption, ast), ast, i, options)\n    }\n    case \"Literal\":\n      return fromRefinement(ast, (u): u is typeof ast.literal => u === ast.literal)\n    case \"UniqueSymbol\":\n      return fromRefinement(ast, (u): u is typeof ast.symbol => u === ast.symbol)\n    case \"UndefinedKeyword\":\n      return fromRefinement(ast, Predicate.isUndefined)\n    case \"NeverKeyword\":\n      return fromRefinement(ast, Predicate.isNever)\n    case \"UnknownKeyword\":\n    case \"AnyKeyword\":\n    case \"VoidKeyword\":\n      return Either.right\n    case \"StringKeyword\":\n      return fromRefinement(ast, Predicate.isString)\n    case \"NumberKeyword\":\n      return fromRefinement(ast, Predicate.isNumber)\n    case \"BooleanKeyword\":\n      return fromRefinement(ast, Predicate.isBoolean)\n    case \"BigIntKeyword\":\n      return fromRefinement(ast, Predicate.isBigInt)\n    case \"SymbolKeyword\":\n      return fromRefinement(ast, Predicate.isSymbol)\n    case \"ObjectKeyword\":\n      return fromRefinement(ast, Predicate.isObject)\n    case \"Enums\":\n      return fromRefinement(ast, (u): u is any => ast.enums.some(([_, value]) => value === u))\n    case \"TemplateLiteral\": {\n      const regex = AST.getTemplateLiteralRegExp(ast)\n      return fromRefinement(ast, (u): u is any => Predicate.isString(u) && regex.test(u))\n    }\n    case \"TupleType\": {\n      const elements = ast.elements.map((e) => goMemo(e.type, isDecoding))\n      const rest = ast.rest.map((annotatedAST) => goMemo(annotatedAST.type, isDecoding))\n      let requiredTypes: Array<AST.Type> = ast.elements.filter((e) => !e.isOptional)\n      if (ast.rest.length > 0) {\n        requiredTypes = requiredTypes.concat(ast.rest.slice(1))\n      }\n      const requiredLen = requiredTypes.length\n      const expectedIndexes = ast.elements.length > 0 ? ast.elements.map((_, i) => i).join(\" | \") : \"never\"\n      const concurrency = getConcurrency(ast)\n      const batching = getBatching(ast)\n      return (input: unknown, options) => {\n        if (!Arr.isArray(input)) {\n          return Either.left(new Type(ast, input))\n        }\n        const allErrors = options?.errors === \"all\"\n        const es: Array<[number, ParseIssue]> = []\n        let stepKey = 0\n        const output: Array<[number, any]> = []\n        // ---------------------------------------------\n        // handle missing indexes\n        // ---------------------------------------------\n        const len = input.length\n        for (let i = len; i <= requiredLen - 1; i++) {\n          const e = new Pointer(i, input, new Missing(requiredTypes[i - len]))\n          if (allErrors) {\n            es.push([stepKey++, e])\n            continue\n          } else {\n            return Either.left(new Composite(ast, input, e, output))\n          }\n        }\n\n        // ---------------------------------------------\n        // handle excess indexes\n        // ---------------------------------------------\n        if (ast.rest.length === 0) {\n          for (let i = ast.elements.length; i <= len - 1; i++) {\n            const e = new Pointer(i, input, new Unexpected(input[i], `is unexpected, expected: ${expectedIndexes}`))\n            if (allErrors) {\n              es.push([stepKey++, e])\n              continue\n            } else {\n              return Either.left(new Composite(ast, input, e, output))\n            }\n          }\n        }\n\n        let i = 0\n        type State = {\n          es: typeof es\n          output: typeof output\n        }\n        let queue:\n          | Array<(_: State) => Effect.Effect<void, ParseIssue, any>>\n          | undefined = undefined\n\n        // ---------------------------------------------\n        // handle elements\n        // ---------------------------------------------\n        for (; i < elements.length; i++) {\n          if (len < i + 1) {\n            if (ast.elements[i].isOptional) {\n              // the input element is missing\n              continue\n            }\n          } else {\n            const parser = elements[i]\n            const te = parser(input[i], options)\n            if (isEither(te)) {\n              if (Either.isLeft(te)) {\n                // the input element is present but is not valid\n                const e = new Pointer(i, input, te.left)\n                if (allErrors) {\n                  es.push([stepKey++, e])\n                  continue\n                } else {\n                  return Either.left(new Composite(ast, input, e, sortByIndex(output)))\n                }\n              }\n              output.push([stepKey++, te.right])\n            } else {\n              const nk = stepKey++\n              const index = i\n              if (!queue) {\n                queue = []\n              }\n              queue.push(({ es, output }: State) =>\n                Effect.flatMap(Effect.either(te), (t) => {\n                  if (Either.isLeft(t)) {\n                    // the input element is present but is not valid\n                    const e = new Pointer(index, input, t.left)\n                    if (allErrors) {\n                      es.push([nk, e])\n                      return Effect.void\n                    } else {\n                      return Either.left(new Composite(ast, input, e, sortByIndex(output)))\n                    }\n                  }\n                  output.push([nk, t.right])\n                  return Effect.void\n                })\n              )\n            }\n          }\n        }\n        // ---------------------------------------------\n        // handle rest element\n        // ---------------------------------------------\n        if (Arr.isNonEmptyReadonlyArray(rest)) {\n          const [head, ...tail] = rest\n          for (; i < len - tail.length; i++) {\n            const te = head(input[i], options)\n            if (isEither(te)) {\n              if (Either.isLeft(te)) {\n                const e = new Pointer(i, input, te.left)\n                if (allErrors) {\n                  es.push([stepKey++, e])\n                  continue\n                } else {\n                  return Either.left(new Composite(ast, input, e, sortByIndex(output)))\n                }\n              } else {\n                output.push([stepKey++, te.right])\n              }\n            } else {\n              const nk = stepKey++\n              const index = i\n              if (!queue) {\n                queue = []\n              }\n              queue.push(\n                ({ es, output }: State) =>\n                  Effect.flatMap(Effect.either(te), (t) => {\n                    if (Either.isLeft(t)) {\n                      const e = new Pointer(index, input, t.left)\n                      if (allErrors) {\n                        es.push([nk, e])\n                        return Effect.void\n                      } else {\n                        return Either.left(new Composite(ast, input, e, sortByIndex(output)))\n                      }\n                    } else {\n                      output.push([nk, t.right])\n                      return Effect.void\n                    }\n                  })\n              )\n            }\n          }\n          // ---------------------------------------------\n          // handle post rest elements\n          // ---------------------------------------------\n          for (let j = 0; j < tail.length; j++) {\n            i += j\n            if (len < i + 1) {\n              continue\n            } else {\n              const te = tail[j](input[i], options)\n              if (isEither(te)) {\n                if (Either.isLeft(te)) {\n                  // the input element is present but is not valid\n                  const e = new Pointer(i, input, te.left)\n                  if (allErrors) {\n                    es.push([stepKey++, e])\n                    continue\n                  } else {\n                    return Either.left(new Composite(ast, input, e, sortByIndex(output)))\n                  }\n                }\n                output.push([stepKey++, te.right])\n              } else {\n                const nk = stepKey++\n                const index = i\n                if (!queue) {\n                  queue = []\n                }\n                queue.push(\n                  ({ es, output }: State) =>\n                    Effect.flatMap(Effect.either(te), (t) => {\n                      if (Either.isLeft(t)) {\n                        // the input element is present but is not valid\n                        const e = new Pointer(index, input, t.left)\n                        if (allErrors) {\n                          es.push([nk, e])\n                          return Effect.void\n                        } else {\n                          return Either.left(new Composite(ast, input, e, sortByIndex(output)))\n                        }\n                      }\n                      output.push([nk, t.right])\n                      return Effect.void\n                    })\n                )\n              }\n            }\n          }\n        }\n\n        // ---------------------------------------------\n        // compute result\n        // ---------------------------------------------\n        const computeResult = ({ es, output }: State) =>\n          Arr.isNonEmptyArray(es) ?\n            Either.left(new Composite(ast, input, sortByIndex(es), sortByIndex(output))) :\n            Either.right(sortByIndex(output))\n        if (queue && queue.length > 0) {\n          const cqueue = queue\n          return Effect.suspend(() => {\n            const state: State = {\n              es: Arr.copy(es),\n              output: Arr.copy(output)\n            }\n            return Effect.flatMap(\n              Effect.forEach(cqueue, (f) => f(state), { concurrency, batching, discard: true }),\n              () => computeResult(state)\n            )\n          })\n        }\n        return computeResult({ output, es })\n      }\n    }\n    case \"TypeLiteral\": {\n      if (ast.propertySignatures.length === 0 && ast.indexSignatures.length === 0) {\n        return fromRefinement(ast, Predicate.isNotNullable)\n      }\n\n      const propertySignatures: Array<readonly [Parser, AST.PropertySignature]> = []\n      const expectedKeysMap: Record<PropertyKey, null> = {}\n      const expectedKeys: Array<PropertyKey> = []\n      for (const ps of ast.propertySignatures) {\n        propertySignatures.push([goMemo(ps.type, isDecoding), ps])\n        expectedKeysMap[ps.name] = null\n        expectedKeys.push(ps.name)\n      }\n\n      const indexSignatures = ast.indexSignatures.map((is) =>\n        [\n          goMemo(is.parameter, isDecoding),\n          goMemo(is.type, isDecoding),\n          is.parameter\n        ] as const\n      )\n      const expectedAST = AST.Union.make(\n        ast.indexSignatures.map((is): AST.AST => is.parameter).concat(\n          expectedKeys.map((key) => Predicate.isSymbol(key) ? new AST.UniqueSymbol(key) : new AST.Literal(key))\n        )\n      )\n      const expected = goMemo(expectedAST, isDecoding)\n      const concurrency = getConcurrency(ast)\n      const batching = getBatching(ast)\n      return (input: unknown, options) => {\n        if (!Predicate.isRecord(input)) {\n          return Either.left(new Type(ast, input))\n        }\n        const allErrors = options?.errors === \"all\"\n        const es: Array<[number, ParseIssue]> = []\n        let stepKey = 0\n\n        // ---------------------------------------------\n        // handle excess properties\n        // ---------------------------------------------\n        const onExcessPropertyError = options?.onExcessProperty === \"error\"\n        const onExcessPropertyPreserve = options?.onExcessProperty === \"preserve\"\n        const output: Record<PropertyKey, unknown> = {}\n        let inputKeys: Array<PropertyKey> | undefined\n        if (onExcessPropertyError || onExcessPropertyPreserve) {\n          inputKeys = Reflect.ownKeys(input)\n          for (const key of inputKeys) {\n            const te = expected(key, options)\n            if (isEither(te) && Either.isLeft(te)) {\n              // key is unexpected\n              if (onExcessPropertyError) {\n                const e = new Pointer(\n                  key,\n                  input,\n                  new Unexpected(input[key], `is unexpected, expected: ${String(expectedAST)}`)\n                )\n                if (allErrors) {\n                  es.push([stepKey++, e])\n                  continue\n                } else {\n                  return Either.left(new Composite(ast, input, e, output))\n                }\n              } else {\n                // preserve key\n                output[key] = input[key]\n              }\n            }\n          }\n        }\n\n        // ---------------------------------------------\n        // handle property signatures\n        // ---------------------------------------------\n        type State = {\n          es: typeof es\n          output: typeof output\n        }\n        let queue:\n          | Array<(state: State) => Effect.Effect<void, ParseIssue, any>>\n          | undefined = undefined\n\n        const isExact = options?.exact === true\n        for (let i = 0; i < propertySignatures.length; i++) {\n          const ps = propertySignatures[i][1]\n          const name = ps.name\n          const hasKey = Object.prototype.hasOwnProperty.call(input, name)\n          if (!hasKey) {\n            if (ps.isOptional) {\n              continue\n            } else if (isExact) {\n              const e = new Pointer(name, input, new Missing(ps))\n              if (allErrors) {\n                es.push([stepKey++, e])\n                continue\n              } else {\n                return Either.left(new Composite(ast, input, e, output))\n              }\n            }\n          }\n          const parser = propertySignatures[i][0]\n          const te = parser(input[name], options)\n          if (isEither(te)) {\n            if (Either.isLeft(te)) {\n              const e = new Pointer(name, input, hasKey ? te.left : new Missing(ps))\n              if (allErrors) {\n                es.push([stepKey++, e])\n                continue\n              } else {\n                return Either.left(new Composite(ast, input, e, output))\n              }\n            }\n            output[name] = te.right\n          } else {\n            const nk = stepKey++\n            const index = name\n            if (!queue) {\n              queue = []\n            }\n            queue.push(\n              ({ es, output }: State) =>\n                Effect.flatMap(Effect.either(te), (t) => {\n                  if (Either.isLeft(t)) {\n                    const e = new Pointer(index, input, hasKey ? t.left : new Missing(ps))\n                    if (allErrors) {\n                      es.push([nk, e])\n                      return Effect.void\n                    } else {\n                      return Either.left(new Composite(ast, input, e, output))\n                    }\n                  }\n                  output[index] = t.right\n                  return Effect.void\n                })\n            )\n          }\n        }\n\n        // ---------------------------------------------\n        // handle index signatures\n        // ---------------------------------------------\n        for (let i = 0; i < indexSignatures.length; i++) {\n          const indexSignature = indexSignatures[i]\n          const parameter = indexSignature[0]\n          const type = indexSignature[1]\n          const keys = util_.getKeysForIndexSignature(input, indexSignature[2])\n          for (const key of keys) {\n            // ---------------------------------------------\n            // handle keys\n            // ---------------------------------------------\n            const keu = parameter(key, options)\n            if (isEither(keu) && Either.isRight(keu)) {\n              // ---------------------------------------------\n              // handle values\n              // ---------------------------------------------\n              const vpr = type(input[key], options)\n              if (isEither(vpr)) {\n                if (Either.isLeft(vpr)) {\n                  const e = new Pointer(key, input, vpr.left)\n                  if (allErrors) {\n                    es.push([stepKey++, e])\n                    continue\n                  } else {\n                    return Either.left(new Composite(ast, input, e, output))\n                  }\n                } else {\n                  if (!Object.prototype.hasOwnProperty.call(expectedKeysMap, key)) {\n                    output[key] = vpr.right\n                  }\n                }\n              } else {\n                const nk = stepKey++\n                const index = key\n                if (!queue) {\n                  queue = []\n                }\n                queue.push(\n                  ({ es, output }: State) =>\n                    Effect.flatMap(\n                      Effect.either(vpr),\n                      (tv) => {\n                        if (Either.isLeft(tv)) {\n                          const e = new Pointer(index, input, tv.left)\n                          if (allErrors) {\n                            es.push([nk, e])\n                            return Effect.void\n                          } else {\n                            return Either.left(new Composite(ast, input, e, output))\n                          }\n                        } else {\n                          if (!Object.prototype.hasOwnProperty.call(expectedKeysMap, key)) {\n                            output[key] = tv.right\n                          }\n                          return Effect.void\n                        }\n                      }\n                    )\n                )\n              }\n            }\n          }\n        }\n        // ---------------------------------------------\n        // compute result\n        // ---------------------------------------------\n        const computeResult = ({ es, output }: State) => {\n          if (Arr.isNonEmptyArray(es)) {\n            return Either.left(new Composite(ast, input, sortByIndex(es), output))\n          }\n          if (options?.propertyOrder === \"original\") {\n            // preserve input keys order\n            const keys = inputKeys || Reflect.ownKeys(input)\n            for (const name of expectedKeys) {\n              if (keys.indexOf(name) === -1) {\n                keys.push(name)\n              }\n            }\n            const out: any = {}\n            for (const key of keys) {\n              if (Object.prototype.hasOwnProperty.call(output, key)) {\n                out[key] = output[key]\n              }\n            }\n            return Either.right(out)\n          }\n          return Either.right(output)\n        }\n        if (queue && queue.length > 0) {\n          const cqueue = queue\n          return Effect.suspend(() => {\n            const state: State = {\n              es: Arr.copy(es),\n              output: Object.assign({}, output)\n            }\n            return Effect.flatMap(\n              Effect.forEach(cqueue, (f) => f(state), { concurrency, batching, discard: true }),\n              () => computeResult(state)\n            )\n          })\n        }\n        return computeResult({ es, output })\n      }\n    }\n    case \"Union\": {\n      const searchTree = getSearchTree(ast.types, isDecoding)\n      const ownKeys = Reflect.ownKeys(searchTree.keys)\n      const ownKeysLen = ownKeys.length\n      const astTypesLen = ast.types.length\n      const map = new Map<any, Parser>()\n      for (let i = 0; i < astTypesLen; i++) {\n        map.set(ast.types[i], goMemo(ast.types[i], isDecoding))\n      }\n      const concurrency = getConcurrency(ast) ?? 1\n      const batching = getBatching(ast)\n      return (input, options) => {\n        const es: Array<[number, ParseIssue]> = []\n        let stepKey = 0\n        let candidates: Array<AST.AST> = []\n        if (ownKeysLen > 0) {\n          if (Predicate.isRecordOrArray(input)) {\n            for (let i = 0; i < ownKeysLen; i++) {\n              const name = ownKeys[i]\n              const buckets = searchTree.keys[name].buckets\n              // for each property that should contain a literal, check if the input contains that property\n              if (Object.prototype.hasOwnProperty.call(input, name)) {\n                const literal = String(input[name])\n                // check that the value obtained from the input for the property corresponds to an existing bucket\n                if (Object.prototype.hasOwnProperty.call(buckets, literal)) {\n                  // retrive the minimal set of candidates for decoding\n                  candidates = candidates.concat(buckets[literal])\n                } else {\n                  const { candidates, literals } = searchTree.keys[name]\n                  const literalsUnion = AST.Union.make(literals)\n                  const errorAst = candidates.length === astTypesLen\n                    ? new AST.TypeLiteral([new AST.PropertySignature(name, literalsUnion, false, true)], [])\n                    : AST.Union.make(candidates)\n                  es.push([\n                    stepKey++,\n                    new Composite(errorAst, input, new Pointer(name, input, new Type(literalsUnion, input[name])))\n                  ])\n                }\n              } else {\n                const { candidates, literals } = searchTree.keys[name]\n                const fakePropertySignature = new AST.PropertySignature(name, AST.Union.make(literals), false, true)\n                const errorAst = candidates.length === astTypesLen\n                  ? new AST.TypeLiteral([fakePropertySignature], [])\n                  : AST.Union.make(candidates)\n                es.push([\n                  stepKey++,\n                  new Composite(errorAst, input, new Pointer(name, input, new Missing(fakePropertySignature)))\n                ])\n              }\n            }\n          } else {\n            const errorAst = searchTree.candidates.length === astTypesLen\n              ? ast\n              : AST.Union.make(searchTree.candidates)\n            es.push([stepKey++, new Type(errorAst, input)])\n          }\n        }\n        if (searchTree.otherwise.length > 0) {\n          candidates = candidates.concat(searchTree.otherwise)\n        }\n\n        let queue:\n          | Array<(state: State) => Effect.Effect<unknown, ParseIssue, any>>\n          | undefined = undefined\n\n        type State = {\n          finalResult?: any\n          es: typeof es\n        }\n\n        for (let i = 0; i < candidates.length; i++) {\n          const candidate = candidates[i]\n          const pr = map.get(candidate)!(input, options)\n          // the members of a union are ordered based on which one should be decoded first,\n          // therefore if one member has added a task, all subsequent members must\n          // also add a task to the queue even if they are synchronous\n          if (isEither(pr) && (!queue || queue.length === 0)) {\n            if (Either.isRight(pr)) {\n              return pr\n            } else {\n              es.push([stepKey++, pr.left])\n            }\n          } else {\n            const nk = stepKey++\n            if (!queue) {\n              queue = []\n            }\n            queue.push(\n              (state) =>\n                Effect.suspend(() => {\n                  if (\"finalResult\" in state) {\n                    return Effect.void\n                  } else {\n                    return Effect.flatMap(Effect.either(pr), (t) => {\n                      if (Either.isRight(t)) {\n                        state.finalResult = t\n                      } else {\n                        state.es.push([nk, t.left])\n                      }\n                      return Effect.void\n                    })\n                  }\n                })\n            )\n          }\n        }\n\n        // ---------------------------------------------\n        // compute result\n        // ---------------------------------------------\n        const computeResult = (es: State[\"es\"]) =>\n          Arr.isNonEmptyArray(es) ?\n            es.length === 1 && es[0][1]._tag === \"Type\" ?\n              Either.left(es[0][1]) :\n              Either.left(new Composite(ast, input, sortByIndex(es))) :\n            // this should never happen\n            Either.left(new Type(ast, input))\n\n        if (queue && queue.length > 0) {\n          const cqueue = queue\n          return Effect.suspend(() => {\n            const state: State = { es: Arr.copy(es) }\n            return Effect.flatMap(\n              Effect.forEach(cqueue, (f) => f(state), { concurrency, batching, discard: true }),\n              () => {\n                if (\"finalResult\" in state) {\n                  return state.finalResult\n                }\n                return computeResult(state.es)\n              }\n            )\n          })\n        }\n        return computeResult(es)\n      }\n    }\n    case \"Suspend\": {\n      const get = util_.memoizeThunk(() => goMemo(ast.f(), isDecoding))\n      return (a, options) => get()(a, options)\n    }\n  }\n}\n\nconst fromRefinement = <A>(ast: AST.AST, refinement: (u: unknown) => u is A): Parser => (u) =>\n  refinement(u) ? Either.right(u) : Either.left(new Type(ast, u))\n\n/** @internal */\nexport const getLiterals = (\n  ast: AST.AST,\n  isDecoding: boolean\n): ReadonlyArray<[PropertyKey, AST.Literal]> => {\n  switch (ast._tag) {\n    case \"Declaration\": {\n      const annotation = AST.getSurrogateAnnotation(ast)\n      if (Option.isSome(annotation)) {\n        return getLiterals(annotation.value, isDecoding)\n      }\n      break\n    }\n    case \"TypeLiteral\": {\n      const out: Array<[PropertyKey, AST.Literal]> = []\n      for (let i = 0; i < ast.propertySignatures.length; i++) {\n        const propertySignature = ast.propertySignatures[i]\n        const type = isDecoding ? AST.encodedAST(propertySignature.type) : AST.typeAST(propertySignature.type)\n        if (AST.isLiteral(type) && !propertySignature.isOptional) {\n          out.push([propertySignature.name, type])\n        }\n      }\n      return out\n    }\n    case \"TupleType\": {\n      const out: Array<[PropertyKey, AST.Literal]> = []\n      for (let i = 0; i < ast.elements.length; i++) {\n        const element = ast.elements[i]\n        const type = isDecoding ? AST.encodedAST(element.type) : AST.typeAST(element.type)\n        if (AST.isLiteral(type) && !element.isOptional) {\n          out.push([i, type])\n        }\n      }\n      return out\n    }\n    case \"Refinement\":\n      return getLiterals(ast.from, isDecoding)\n    case \"Suspend\":\n      return getLiterals(ast.f(), isDecoding)\n    case \"Transformation\":\n      return getLiterals(isDecoding ? ast.from : ast.to, isDecoding)\n  }\n  return []\n}\n\n/**\n * The purpose of the algorithm is to narrow down the pool of possible\n * candidates for decoding as much as possible.\n *\n * This function separates the schemas into two groups, `keys` and `otherwise`:\n *\n * - `keys`: the schema has at least one property with a literal value\n * - `otherwise`: the schema has no properties with a literal value\n *\n * If a schema has at least one property with a literal value, so it ends up in\n * `keys`, first a namespace is created for the name of the property containing\n * the literal, and then within this namespace a \"bucket\" is created for the\n * literal value in which to store all the schemas that have the same property\n * and literal value.\n *\n * @internal\n */\nexport const getSearchTree = (\n  members: ReadonlyArray<AST.AST>,\n  isDecoding: boolean\n): {\n  keys: {\n    readonly [key: PropertyKey]: {\n      buckets: { [literal: string]: ReadonlyArray<AST.AST> }\n      literals: ReadonlyArray<AST.Literal> // this is for error messages\n      candidates: ReadonlyArray<AST.AST>\n    }\n  }\n  otherwise: ReadonlyArray<AST.AST>\n  candidates: ReadonlyArray<AST.AST>\n} => {\n  const keys: {\n    [key: PropertyKey]: {\n      buckets: { [literal: string]: Array<AST.AST> }\n      literals: Array<AST.Literal>\n      candidates: Array<AST.AST>\n    }\n  } = {}\n  const otherwise: Array<AST.AST> = []\n  const candidates: Array<AST.AST> = []\n  for (let i = 0; i < members.length; i++) {\n    const member = members[i]\n    const tags = getLiterals(member, isDecoding)\n    if (tags.length > 0) {\n      candidates.push(member)\n      for (let j = 0; j < tags.length; j++) {\n        const [key, literal] = tags[j]\n        const hash = String(literal.literal)\n        keys[key] = keys[key] || { buckets: {}, literals: [], candidates: [] }\n        const buckets = keys[key].buckets\n        if (Object.prototype.hasOwnProperty.call(buckets, hash)) {\n          if (j < tags.length - 1) {\n            continue\n          }\n          buckets[hash].push(member)\n          keys[key].literals.push(literal)\n          keys[key].candidates.push(member)\n        } else {\n          buckets[hash] = [member]\n          keys[key].literals.push(literal)\n          keys[key].candidates.push(member)\n          break\n        }\n      }\n    } else {\n      otherwise.push(member)\n    }\n  }\n  return { keys, otherwise, candidates }\n}\n\nconst dropRightRefinement = (ast: AST.AST): AST.AST => AST.isRefinement(ast) ? dropRightRefinement(ast.from) : ast\n\nconst handleForbidden = <A, R>(\n  effect: Effect.Effect<A, ParseIssue, R>,\n  ast: AST.AST,\n  actual: unknown,\n  options: InternalOptions | undefined\n): Effect.Effect<A, ParseIssue, R> => {\n  // If effects are allowed, return the original effect\n  if (options?.isEffectAllowed === true) {\n    return effect\n  }\n\n  // If the effect is already an Either, return it directly\n  if (isEither(effect)) {\n    return effect\n  }\n\n  // Otherwise, attempt to execute the effect synchronously\n  const scheduler = new Scheduler.SyncScheduler()\n  const fiber = Effect.runFork(effect as Effect.Effect<A, ParseIssue>, { scheduler })\n  scheduler.flush()\n  const exit = fiber.unsafePoll()\n\n  if (exit) {\n    if (Exit.isSuccess(exit)) {\n      // If the effect successfully resolves, wrap the value in a Right\n      return Either.right(exit.value)\n    }\n    const cause = exit.cause\n    if (Cause.isFailType(cause)) {\n      // The effect executed synchronously but failed due to a ParseIssue\n      return Either.left(cause.error)\n    }\n    // The effect executed synchronously but failed due to a defect (e.g., a missing dependency)\n    return Either.left(new Forbidden(ast, actual, Cause.pretty(cause)))\n  }\n\n  // The effect could not be resolved synchronously, meaning it performs async work\n  return Either.left(\n    new Forbidden(\n      ast,\n      actual,\n      \"cannot be be resolved synchronously, this is caused by using runSync on an effect that performs async work\"\n    )\n  )\n}\n\nconst compare = ([a]: [number, ...Array<unknown>], [b]: [number, ...Array<unknown>]) => a > b ? 1 : a < b ? -1 : 0\n\nfunction sortByIndex<T>(\n  es: Arr.NonEmptyArray<[number, T]>\n): Arr.NonEmptyArray<T>\nfunction sortByIndex<T>(es: Array<[number, T]>): Array<T>\nfunction sortByIndex(es: Array<[number, any]>) {\n  return es.sort(compare).map((t) => t[1])\n}\n\n// -------------------------------------------------------------------------------------\n// transformations interpreter\n// -------------------------------------------------------------------------------------\n\n/** @internal */\nexport const getFinalTransformation = (\n  transformation: AST.TransformationKind,\n  isDecoding: boolean\n): (\n  fromA: any,\n  options: AST.ParseOptions,\n  self: AST.Transformation,\n  fromI: any\n) => Effect.Effect<any, ParseIssue, any> => {\n  switch (transformation._tag) {\n    case \"FinalTransformation\":\n      return isDecoding ? transformation.decode : transformation.encode\n    case \"ComposeTransformation\":\n      return Either.right\n    case \"TypeLiteralTransformation\":\n      return (input) => {\n        let out: Effect.Effect<any, ParseIssue, any> = Either.right(input)\n\n        // ---------------------------------------------\n        // handle property signature transformations\n        // ---------------------------------------------\n        for (const pst of transformation.propertySignatureTransformations) {\n          const [from, to] = isDecoding ?\n            [pst.from, pst.to] :\n            [pst.to, pst.from]\n          const transformation = isDecoding ? pst.decode : pst.encode\n          const f = (input: any) => {\n            const o = transformation(\n              Object.prototype.hasOwnProperty.call(input, from) ?\n                Option.some(input[from]) :\n                Option.none()\n            )\n            delete input[from]\n            if (Option.isSome(o)) {\n              input[to] = o.value\n            }\n            return input\n          }\n          out = map(out, f)\n        }\n        return out\n      }\n  }\n}\n\n// ----------------\n// Formatters\n// ----------------\n\ninterface Forest<A> extends ReadonlyArray<Tree<A>> {}\n\ninterface Tree<A> {\n  readonly value: A\n  readonly forest: Forest<A>\n}\n\nconst makeTree = <A>(value: A, forest: Forest<A> = []): Tree<A> => ({\n  value,\n  forest\n})\n\n/**\n * @category formatting\n * @since 3.10.0\n */\nexport interface ParseResultFormatter<A> {\n  readonly formatIssue: (issue: ParseIssue) => Effect.Effect<A>\n  readonly formatIssueSync: (issue: ParseIssue) => A\n  readonly formatError: (error: ParseError) => Effect.Effect<A>\n  readonly formatErrorSync: (error: ParseError) => A\n}\n\n/**\n * @category formatting\n * @since 3.10.0\n */\nexport const TreeFormatter: ParseResultFormatter<string> = {\n  formatIssue: (issue) => map(formatTree(issue), drawTree),\n  formatIssueSync: (issue) => {\n    const e = TreeFormatter.formatIssue(issue)\n    return isEither(e) ? Either.getOrThrow(e) : Effect.runSync(e)\n  },\n  formatError: (error) => TreeFormatter.formatIssue(error.issue),\n  formatErrorSync: (error) => TreeFormatter.formatIssueSync(error.issue)\n}\n\nconst drawTree = (tree: Tree<string>): string => tree.value + draw(\"\\n\", tree.forest)\n\nconst draw = (indentation: string, forest: Forest<string>): string => {\n  let r = \"\"\n  const len = forest.length\n  let tree: Tree<string>\n  for (let i = 0; i < len; i++) {\n    tree = forest[i]\n    const isLast = i === len - 1\n    r += indentation + (isLast ? \"└\" : \"├\") + \"─ \" + tree.value\n    r += draw(indentation + (len > 1 && !isLast ? \"│  \" : \"   \"), tree.forest)\n  }\n  return r\n}\n\nconst formatTransformationKind = (kind: Transformation[\"kind\"]): string => {\n  switch (kind) {\n    case \"Encoded\":\n      return \"Encoded side transformation failure\"\n    case \"Transformation\":\n      return \"Transformation process failure\"\n    case \"Type\":\n      return \"Type side transformation failure\"\n  }\n}\n\nconst formatRefinementKind = (kind: Refinement[\"kind\"]): string => {\n  switch (kind) {\n    case \"From\":\n      return \"From side refinement failure\"\n    case \"Predicate\":\n      return \"Predicate refinement failure\"\n  }\n}\n\nconst getAnnotated = (issue: ParseIssue): Option.Option<AST.Annotated> =>\n  \"ast\" in issue ? Option.some(issue.ast) : Option.none()\n\ninterface CurrentMessage {\n  readonly message: string\n  readonly override: boolean\n}\n\n// TODO: replace with Either.void when 3.13 lands\nconst Either_void = Either.right(undefined)\n\nconst getCurrentMessage = (issue: ParseIssue): Effect.Effect<CurrentMessage | undefined> =>\n  getAnnotated(issue).pipe(\n    Option.flatMap(AST.getMessageAnnotation),\n    Option.match({\n      onNone: () => Either_void,\n      onSome: (messageAnnotation) => {\n        const union = messageAnnotation(issue)\n        if (Predicate.isString(union)) {\n          return Either.right({ message: union, override: false })\n        }\n        if (Effect.isEffect(union)) {\n          return Effect.map(union, (message) => ({ message, override: false }))\n        }\n        if (Predicate.isString(union.message)) {\n          return Either.right({ message: union.message, override: union.override })\n        }\n        return Effect.map(union.message, (message) => ({ message, override: union.override }))\n      }\n    })\n  )\n\nconst createParseIssueGuard =\n  <T extends ParseIssue[\"_tag\"]>(tag: T) => (issue: ParseIssue): issue is Extract<ParseIssue, { _tag: T }> =>\n    issue._tag === tag\n\n/**\n * Returns `true` if the value is a `Composite`.\n *\n * @category guards\n * @since 3.10.0\n */\nexport const isComposite = createParseIssueGuard(\"Composite\")\n\nconst isRefinement = createParseIssueGuard(\"Refinement\")\nconst isTransformation = createParseIssueGuard(\"Transformation\")\n\nconst getMessage = (issue: ParseIssue): Effect.Effect<string | undefined> =>\n  flatMap(getCurrentMessage(issue), (currentMessage) => {\n    if (currentMessage !== undefined) {\n      const useInnerMessage = !currentMessage.override && (\n        isComposite(issue) ||\n        (isRefinement(issue) && issue.kind === \"From\") ||\n        (isTransformation(issue) && issue.kind !== \"Transformation\")\n      )\n      return useInnerMessage\n        ? isTransformation(issue) || isRefinement(issue) ? getMessage(issue.issue) : Either_void\n        : Either.right(currentMessage.message)\n    }\n    return Either_void\n  })\n\nconst getParseIssueTitleAnnotation = (issue: ParseIssue): string | undefined =>\n  getAnnotated(issue).pipe(\n    Option.flatMap(AST.getParseIssueTitleAnnotation),\n    Option.flatMapNullable((annotation) => annotation(issue)),\n    Option.getOrUndefined\n  )\n\n/** @internal */\nexport function getRefinementExpected(ast: AST.Refinement): string {\n  return AST.getDescriptionAnnotation(ast).pipe(\n    Option.orElse(() => AST.getTitleAnnotation(ast)),\n    Option.orElse(() => AST.getAutoTitleAnnotation(ast)),\n    Option.orElse(() => AST.getIdentifierAnnotation(ast)),\n    Option.getOrElse(() => `{ ${ast.from} | filter }`)\n  )\n}\n\nfunction getDefaultTypeMessage(issue: Type): string {\n  if (issue.message !== undefined) {\n    return issue.message\n  }\n  const expected = AST.isRefinement(issue.ast) ? getRefinementExpected(issue.ast) : String(issue.ast)\n  return `Expected ${expected}, actual ${util_.formatUnknown(issue.actual)}`\n}\n\nconst formatTypeMessage = (issue: Type): Effect.Effect<string> =>\n  map(\n    getMessage(issue),\n    (message) => message ?? getParseIssueTitleAnnotation(issue) ?? getDefaultTypeMessage(issue)\n  )\n\nconst getParseIssueTitle = (\n  issue: Forbidden | Transformation | Refinement | Composite\n): string => getParseIssueTitleAnnotation(issue) ?? String(issue.ast)\n\nconst formatForbiddenMessage = (issue: Forbidden): string => issue.message ?? \"is forbidden\"\n\nconst formatUnexpectedMessage = (issue: Unexpected): string => issue.message ?? \"is unexpected\"\n\nconst formatMissingMessage = (issue: Missing): Effect.Effect<string> => {\n  const missingMessageAnnotation = AST.getMissingMessageAnnotation(issue.ast)\n  if (Option.isSome(missingMessageAnnotation)) {\n    const annotation = missingMessageAnnotation.value()\n    return Predicate.isString(annotation) ? Either.right(annotation) : annotation\n  }\n  return Either.right(issue.message ?? \"is missing\")\n}\n\nconst formatTree = (issue: ParseIssue): Effect.Effect<Tree<string>> => {\n  switch (issue._tag) {\n    case \"Type\":\n      return map(formatTypeMessage(issue), makeTree)\n    case \"Forbidden\":\n      return Either.right(makeTree(getParseIssueTitle(issue), [makeTree(formatForbiddenMessage(issue))]))\n    case \"Unexpected\":\n      return Either.right(makeTree(formatUnexpectedMessage(issue)))\n    case \"Missing\":\n      return map(formatMissingMessage(issue), makeTree)\n    case \"Transformation\":\n      return flatMap(getMessage(issue), (message) => {\n        if (message !== undefined) {\n          return Either.right(makeTree(message))\n        }\n        return map(\n          formatTree(issue.issue),\n          (tree) => makeTree(getParseIssueTitle(issue), [makeTree(formatTransformationKind(issue.kind), [tree])])\n        )\n      })\n    case \"Refinement\":\n      return flatMap(getMessage(issue), (message) => {\n        if (message !== undefined) {\n          return Either.right(makeTree(message))\n        }\n        return map(\n          formatTree(issue.issue),\n          (tree) => makeTree(getParseIssueTitle(issue), [makeTree(formatRefinementKind(issue.kind), [tree])])\n        )\n      })\n    case \"Pointer\":\n      return map(formatTree(issue.issue), (tree) => makeTree(util_.formatPath(issue.path), [tree]))\n    case \"Composite\":\n      return flatMap(getMessage(issue), (message) => {\n        if (message !== undefined) {\n          return Either.right(makeTree(message))\n        }\n        const parseIssueTitle = getParseIssueTitle(issue)\n        return util_.isNonEmpty(issue.issues)\n          ? map(Effect.forEach(issue.issues, formatTree), (forest) => makeTree(parseIssueTitle, forest))\n          : map(formatTree(issue.issues), (tree) => makeTree(parseIssueTitle, [tree]))\n      })\n  }\n}\n\n/**\n * Represents an issue returned by the {@link ArrayFormatter} formatter.\n *\n * @category model\n * @since 3.10.0\n */\nexport interface ArrayFormatterIssue {\n  /**\n   * The tag identifying the type of parse issue.\n   */\n  readonly _tag: ParseIssue[\"_tag\"]\n\n  /**\n   * The path to the property where the issue occurred.\n   */\n  readonly path: ReadonlyArray<PropertyKey>\n\n  /**\n   * A descriptive message explaining the issue.\n   */\n  readonly message: string\n}\n\nconst makeArrayFormatterIssue = (\n  _tag: ArrayFormatterIssue[\"_tag\"],\n  path: ArrayFormatterIssue[\"path\"],\n  message: ArrayFormatterIssue[\"message\"]\n): ArrayFormatterIssue => ({ _tag, path, message })\n\n/**\n * @category formatting\n * @since 3.10.0\n */\nexport const ArrayFormatter: ParseResultFormatter<Array<ArrayFormatterIssue>> = {\n  formatIssue: (issue) => getArrayFormatterIssues(issue, undefined, []),\n  formatIssueSync: (issue) => {\n    const e = ArrayFormatter.formatIssue(issue)\n    return isEither(e) ? Either.getOrThrow(e) : Effect.runSync(e)\n  },\n  formatError: (error) => ArrayFormatter.formatIssue(error.issue),\n  formatErrorSync: (error) => ArrayFormatter.formatIssueSync(error.issue)\n}\n\nconst getArrayFormatterIssues = (\n  issue: ParseIssue,\n  parentTag: ArrayFormatterIssue[\"_tag\"] | undefined,\n  path: ReadonlyArray<PropertyKey>\n): Effect.Effect<Array<ArrayFormatterIssue>> => {\n  const _tag = issue._tag\n  switch (_tag) {\n    case \"Type\":\n      return map(formatTypeMessage(issue), (message) => [makeArrayFormatterIssue(parentTag ?? _tag, path, message)])\n    case \"Forbidden\":\n      return Either.right([makeArrayFormatterIssue(_tag, path, formatForbiddenMessage(issue))])\n    case \"Unexpected\":\n      return Either.right([makeArrayFormatterIssue(_tag, path, formatUnexpectedMessage(issue))])\n    case \"Missing\":\n      return map(formatMissingMessage(issue), (message) => [makeArrayFormatterIssue(_tag, path, message)])\n    case \"Pointer\":\n      return getArrayFormatterIssues(issue.issue, undefined, path.concat(issue.path))\n    case \"Composite\":\n      return flatMap(getMessage(issue), (message) => {\n        if (message !== undefined) {\n          return Either.right([makeArrayFormatterIssue(_tag, path, message)])\n        }\n        return util_.isNonEmpty(issue.issues)\n          ? map(Effect.forEach(issue.issues, (issue) => getArrayFormatterIssues(issue, undefined, path)), Arr.flatten)\n          : getArrayFormatterIssues(issue.issues, undefined, path)\n      })\n    case \"Refinement\":\n      return flatMap(getMessage(issue), (message) => {\n        if (message !== undefined) {\n          return Either.right([makeArrayFormatterIssue(_tag, path, message)])\n        }\n        return getArrayFormatterIssues(issue.issue, issue.kind === \"Predicate\" ? _tag : undefined, path)\n      })\n    case \"Transformation\":\n      return flatMap(getMessage(issue), (message) => {\n        if (message !== undefined) {\n          return Either.right([makeArrayFormatterIssue(_tag, path, message)])\n        }\n        return getArrayFormatterIssues(issue.issue, issue.kind === \"Transformation\" ? _tag : undefined, path)\n      })\n  }\n}\n","/**\n * @since 3.10.0\n */\n\nimport * as Arr from \"./Array.js\"\nimport type { Effect } from \"./Effect.js\"\nimport type { Equivalence } from \"./Equivalence.js\"\nimport { dual, identity } from \"./Function.js\"\nimport { globalValue } from \"./GlobalValue.js\"\nimport * as errors_ from \"./internal/schema/errors.js\"\nimport * as util_ from \"./internal/schema/util.js\"\nimport * as Number from \"./Number.js\"\nimport * as Option from \"./Option.js\"\nimport * as Order from \"./Order.js\"\nimport type { ParseIssue } from \"./ParseResult.js\"\nimport * as Predicate from \"./Predicate.js\"\nimport * as regexp from \"./RegExp.js\"\nimport type { Concurrency } from \"./Types.js\"\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport type AST =\n  | Declaration\n  | Literal\n  | UniqueSymbol\n  | UndefinedKeyword\n  | VoidKeyword\n  | NeverKeyword\n  | UnknownKeyword\n  | AnyKeyword\n  | StringKeyword\n  | NumberKeyword\n  | BooleanKeyword\n  | BigIntKeyword\n  | SymbolKeyword\n  | ObjectKeyword\n  | Enums\n  | TemplateLiteral\n  // possible transformations\n  | Refinement\n  | TupleType\n  | TypeLiteral\n  | Union\n  | Suspend\n  // transformations\n  | Transformation\n\n// -------------------------------------------------------------------------------------\n// annotations\n// -------------------------------------------------------------------------------------\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport type BrandAnnotation = Arr.NonEmptyReadonlyArray<string | symbol>\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const BrandAnnotationId: unique symbol = Symbol.for(\"effect/annotation/Brand\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport type SchemaIdAnnotation = string | symbol\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const SchemaIdAnnotationId: unique symbol = Symbol.for(\"effect/annotation/SchemaId\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport type MessageAnnotation = (issue: ParseIssue) => string | Effect<string> | {\n  readonly message: string | Effect<string>\n  readonly override: boolean\n}\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const MessageAnnotationId: unique symbol = Symbol.for(\"effect/annotation/Message\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport type MissingMessageAnnotation = () => string | Effect<string>\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const MissingMessageAnnotationId: unique symbol = Symbol.for(\"effect/annotation/MissingMessage\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport type IdentifierAnnotation = string\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const IdentifierAnnotationId: unique symbol = Symbol.for(\"effect/annotation/Identifier\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport type TitleAnnotation = string\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const TitleAnnotationId: unique symbol = Symbol.for(\"effect/annotation/Title\")\n\n/** @internal */\nexport const AutoTitleAnnotationId: unique symbol = Symbol.for(\"effect/annotation/AutoTitle\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport type DescriptionAnnotation = string\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const DescriptionAnnotationId: unique symbol = Symbol.for(\"effect/annotation/Description\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport type ExamplesAnnotation<A> = Arr.NonEmptyReadonlyArray<A>\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const ExamplesAnnotationId: unique symbol = Symbol.for(\"effect/annotation/Examples\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport type DefaultAnnotation<A> = A\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const DefaultAnnotationId: unique symbol = Symbol.for(\"effect/annotation/Default\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport type JSONSchemaAnnotation = object\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const JSONSchemaAnnotationId: unique symbol = Symbol.for(\"effect/annotation/JSONSchema\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const ArbitraryAnnotationId: unique symbol = Symbol.for(\"effect/annotation/Arbitrary\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const PrettyAnnotationId: unique symbol = Symbol.for(\"effect/annotation/Pretty\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport type EquivalenceAnnotation<A, TypeParameters extends ReadonlyArray<any> = readonly []> = (\n  ...equivalences: { readonly [K in keyof TypeParameters]: Equivalence<TypeParameters[K]> }\n) => Equivalence<A>\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const EquivalenceAnnotationId: unique symbol = Symbol.for(\"effect/annotation/Equivalence\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport type DocumentationAnnotation = string\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const DocumentationAnnotationId: unique symbol = Symbol.for(\"effect/annotation/Documentation\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport type ConcurrencyAnnotation = Concurrency | undefined\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const ConcurrencyAnnotationId: unique symbol = Symbol.for(\"effect/annotation/Concurrency\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport type BatchingAnnotation = boolean | \"inherit\" | undefined\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const BatchingAnnotationId: unique symbol = Symbol.for(\"effect/annotation/Batching\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport type ParseIssueTitleAnnotation = (issue: ParseIssue) => string | undefined\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const ParseIssueTitleAnnotationId: unique symbol = Symbol.for(\"effect/annotation/ParseIssueTitle\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const ParseOptionsAnnotationId: unique symbol = Symbol.for(\"effect/annotation/ParseOptions\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport type DecodingFallbackAnnotation<A> = (issue: ParseIssue) => Effect<A, ParseIssue>\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const DecodingFallbackAnnotationId: unique symbol = Symbol.for(\"effect/annotation/DecodingFallback\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const SurrogateAnnotationId: unique symbol = Symbol.for(\"effect/annotation/Surrogate\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport type SurrogateAnnotation = AST\n\n/** @internal */\nexport const StableFilterAnnotationId: unique symbol = Symbol.for(\"effect/annotation/StableFilter\")\n\n/**\n * A stable filter consistently applies fixed validation rules, such as\n * 'minItems', 'maxItems', and 'itemsCount', to ensure array length complies\n * with set criteria regardless of the input data's content.\n *\n * @internal\n */\nexport type StableFilterAnnotation = boolean\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport interface Annotations {\n  readonly [_: string]: unknown\n  readonly [_: symbol]: unknown\n}\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport interface Annotated {\n  readonly annotations: Annotations\n}\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getAnnotation: {\n  /**\n   * @category annotations\n   * @since 3.10.0\n   */\n  <A>(key: symbol): (annotated: Annotated) => Option.Option<A>\n  /**\n   * @category annotations\n   * @since 3.10.0\n   */\n  <A>(annotated: Annotated, key: symbol): Option.Option<A>\n} = dual(\n  2,\n  <A>(annotated: Annotated, key: symbol): Option.Option<A> =>\n    Object.prototype.hasOwnProperty.call(annotated.annotations, key) ?\n      Option.some(annotated.annotations[key] as any) :\n      Option.none()\n)\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getBrandAnnotation = getAnnotation<BrandAnnotation>(BrandAnnotationId)\n\n/**\n * @category annotations\n * @since 3.14.2\n */\nexport const getSchemaIdAnnotation = getAnnotation<SchemaIdAnnotation>(SchemaIdAnnotationId)\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getMessageAnnotation = getAnnotation<MessageAnnotation>(MessageAnnotationId)\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getMissingMessageAnnotation = getAnnotation<MissingMessageAnnotation>(MissingMessageAnnotationId)\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getTitleAnnotation = getAnnotation<TitleAnnotation>(TitleAnnotationId)\n\n/** @internal */\nexport const getAutoTitleAnnotation = getAnnotation<TitleAnnotation>(AutoTitleAnnotationId)\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getIdentifierAnnotation = getAnnotation<IdentifierAnnotation>(IdentifierAnnotationId)\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getDescriptionAnnotation = getAnnotation<DescriptionAnnotation>(DescriptionAnnotationId)\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getExamplesAnnotation = getAnnotation<ExamplesAnnotation<unknown>>(ExamplesAnnotationId)\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getDefaultAnnotation = getAnnotation<DefaultAnnotation<unknown>>(DefaultAnnotationId)\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getJSONSchemaAnnotation = getAnnotation<JSONSchemaAnnotation>(JSONSchemaAnnotationId)\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getDocumentationAnnotation = getAnnotation<DocumentationAnnotation>(DocumentationAnnotationId)\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getConcurrencyAnnotation = getAnnotation<ConcurrencyAnnotation>(ConcurrencyAnnotationId)\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getBatchingAnnotation = getAnnotation<BatchingAnnotation>(BatchingAnnotationId)\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getParseIssueTitleAnnotation = getAnnotation<ParseIssueTitleAnnotation>(ParseIssueTitleAnnotationId)\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getParseOptionsAnnotation = getAnnotation<ParseOptions>(ParseOptionsAnnotationId)\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getDecodingFallbackAnnotation = getAnnotation<DecodingFallbackAnnotation<unknown>>(\n  DecodingFallbackAnnotationId\n)\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getSurrogateAnnotation = getAnnotation<SurrogateAnnotation>(SurrogateAnnotationId)\n\nconst getStableFilterAnnotation = getAnnotation<StableFilterAnnotation>(StableFilterAnnotationId)\n\n/** @internal */\nexport const hasStableFilter = (annotated: Annotated) =>\n  Option.exists(getStableFilterAnnotation(annotated), (b) => b === true)\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const JSONIdentifierAnnotationId: unique symbol = Symbol.for(\"effect/annotation/JSONIdentifier\")\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getJSONIdentifierAnnotation = getAnnotation<IdentifierAnnotation>(JSONIdentifierAnnotationId)\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getJSONIdentifier = (annotated: Annotated) =>\n  Option.orElse(getJSONIdentifierAnnotation(annotated), () => getIdentifierAnnotation(annotated))\n\n// -------------------------------------------------------------------------------------\n// schema ids\n// -------------------------------------------------------------------------------------\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const ParseJsonSchemaId: unique symbol = Symbol.for(\"effect/schema/ParseJson\")\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class Declaration implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"Declaration\"\n  constructor(\n    readonly typeParameters: ReadonlyArray<AST>,\n    readonly decodeUnknown: (\n      ...typeParameters: ReadonlyArray<AST>\n    ) => (input: unknown, options: ParseOptions, self: Declaration) => Effect<any, ParseIssue, any>,\n    readonly encodeUnknown: (\n      ...typeParameters: ReadonlyArray<AST>\n    ) => (input: unknown, options: ParseOptions, self: Declaration) => Effect<any, ParseIssue, any>,\n    readonly annotations: Annotations = {}\n  ) {}\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return Option.getOrElse(getExpected(this), () => \"<declaration schema>\")\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      typeParameters: this.typeParameters.map((ast) => ast.toJSON()),\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\nconst createASTGuard = <T extends AST[\"_tag\"]>(tag: T) => (ast: AST): ast is Extract<AST, { _tag: T }> =>\n  ast._tag === tag\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isDeclaration: (ast: AST) => ast is Declaration = createASTGuard(\"Declaration\")\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport type LiteralValue = string | number | boolean | null | bigint\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class Literal implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"Literal\"\n  constructor(readonly literal: LiteralValue, readonly annotations: Annotations = {}) {}\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return Option.getOrElse(getExpected(this), () => util_.formatUnknown(this.literal))\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      literal: Predicate.isBigInt(this.literal) ? String(this.literal) : this.literal,\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isLiteral: (ast: AST) => ast is Literal = createASTGuard(\"Literal\")\n\nconst $null = new Literal(null)\n\nexport {\n  /**\n   * @category constructors\n   * @since 3.10.0\n   */\n  $null as null\n}\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class UniqueSymbol implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"UniqueSymbol\"\n  constructor(readonly symbol: symbol, readonly annotations: Annotations = {}) {}\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return Option.getOrElse(getExpected(this), () => util_.formatUnknown(this.symbol))\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      symbol: String(this.symbol),\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isUniqueSymbol: (ast: AST) => ast is UniqueSymbol = createASTGuard(\"UniqueSymbol\")\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class UndefinedKeyword implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"UndefinedKeyword\"\n  constructor(readonly annotations: Annotations = {}) {}\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this)\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const undefinedKeyword: UndefinedKeyword = new UndefinedKeyword({\n  [TitleAnnotationId]: \"undefined\"\n})\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isUndefinedKeyword: (ast: AST) => ast is UndefinedKeyword = createASTGuard(\"UndefinedKeyword\")\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class VoidKeyword implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"VoidKeyword\"\n  constructor(readonly annotations: Annotations = {}) {}\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this)\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const voidKeyword: VoidKeyword = new VoidKeyword({\n  [TitleAnnotationId]: \"void\"\n})\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isVoidKeyword: (ast: AST) => ast is VoidKeyword = createASTGuard(\"VoidKeyword\")\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class NeverKeyword implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"NeverKeyword\"\n  constructor(readonly annotations: Annotations = {}) {}\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this)\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const neverKeyword: NeverKeyword = new NeverKeyword({\n  [TitleAnnotationId]: \"never\"\n})\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isNeverKeyword: (ast: AST) => ast is NeverKeyword = createASTGuard(\"NeverKeyword\")\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class UnknownKeyword implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"UnknownKeyword\"\n  constructor(readonly annotations: Annotations = {}) {}\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this)\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const unknownKeyword: UnknownKeyword = new UnknownKeyword({\n  [TitleAnnotationId]: \"unknown\"\n})\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isUnknownKeyword: (ast: AST) => ast is UnknownKeyword = createASTGuard(\"UnknownKeyword\")\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class AnyKeyword implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"AnyKeyword\"\n  constructor(readonly annotations: Annotations = {}) {}\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this)\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const anyKeyword: AnyKeyword = new AnyKeyword({\n  [TitleAnnotationId]: \"any\"\n})\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isAnyKeyword: (ast: AST) => ast is AnyKeyword = createASTGuard(\"AnyKeyword\")\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class StringKeyword implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"StringKeyword\"\n  constructor(readonly annotations: Annotations = {}) {}\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this)\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const stringKeyword: StringKeyword = new StringKeyword({\n  [TitleAnnotationId]: \"string\",\n  [DescriptionAnnotationId]: \"a string\"\n})\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isStringKeyword: (ast: AST) => ast is StringKeyword = createASTGuard(\"StringKeyword\")\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class NumberKeyword implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"NumberKeyword\"\n  constructor(readonly annotations: Annotations = {}) {}\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this)\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const numberKeyword: NumberKeyword = new NumberKeyword({\n  [TitleAnnotationId]: \"number\",\n  [DescriptionAnnotationId]: \"a number\"\n})\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isNumberKeyword: (ast: AST) => ast is NumberKeyword = createASTGuard(\"NumberKeyword\")\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class BooleanKeyword implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"BooleanKeyword\"\n  constructor(readonly annotations: Annotations = {}) {}\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this)\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const booleanKeyword: BooleanKeyword = new BooleanKeyword({\n  [TitleAnnotationId]: \"boolean\",\n  [DescriptionAnnotationId]: \"a boolean\"\n})\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isBooleanKeyword: (ast: AST) => ast is BooleanKeyword = createASTGuard(\"BooleanKeyword\")\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class BigIntKeyword implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"BigIntKeyword\"\n  constructor(readonly annotations: Annotations = {}) {}\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this)\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const bigIntKeyword: BigIntKeyword = new BigIntKeyword({\n  [TitleAnnotationId]: \"bigint\",\n  [DescriptionAnnotationId]: \"a bigint\"\n})\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isBigIntKeyword: (ast: AST) => ast is BigIntKeyword = createASTGuard(\"BigIntKeyword\")\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class SymbolKeyword implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"SymbolKeyword\"\n  constructor(readonly annotations: Annotations = {}) {}\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this)\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const symbolKeyword: SymbolKeyword = new SymbolKeyword({\n  [TitleAnnotationId]: \"symbol\",\n  [DescriptionAnnotationId]: \"a symbol\"\n})\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isSymbolKeyword: (ast: AST) => ast is SymbolKeyword = createASTGuard(\"SymbolKeyword\")\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class ObjectKeyword implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"ObjectKeyword\"\n  constructor(readonly annotations: Annotations = {}) {}\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this)\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const objectKeyword: ObjectKeyword = new ObjectKeyword({\n  [TitleAnnotationId]: \"object\",\n  [DescriptionAnnotationId]: \"an object in the TypeScript meaning, i.e. the `object` type\"\n})\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isObjectKeyword: (ast: AST) => ast is ObjectKeyword = createASTGuard(\"ObjectKeyword\")\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class Enums implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"Enums\"\n  constructor(\n    readonly enums: ReadonlyArray<readonly [string, string | number]>,\n    readonly annotations: Annotations = {}\n  ) {}\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return Option.getOrElse(\n      getExpected(this),\n      () => `<enum ${this.enums.length} value(s): ${this.enums.map(([_, value]) => JSON.stringify(value)).join(\" | \")}>`\n    )\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      enums: this.enums,\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isEnums: (ast: AST) => ast is Enums = createASTGuard(\"Enums\")\n\ntype TemplateLiteralSpanBaseType = StringKeyword | NumberKeyword | Literal | TemplateLiteral\n\ntype TemplateLiteralSpanType = TemplateLiteralSpanBaseType | Union<TemplateLiteralSpanType>\n\nconst isTemplateLiteralSpanType = (ast: AST): ast is TemplateLiteralSpanType => {\n  switch (ast._tag) {\n    case \"Literal\":\n    case \"NumberKeyword\":\n    case \"StringKeyword\":\n    case \"TemplateLiteral\":\n      return true\n    case \"Union\":\n      return ast.types.every(isTemplateLiteralSpanType)\n  }\n  return false\n}\n\nconst templateLiteralSpanUnionTypeToString = (type: TemplateLiteralSpanType): string => {\n  switch (type._tag) {\n    case \"Literal\":\n      return JSON.stringify(String(type.literal))\n    case \"StringKeyword\":\n      return \"string\"\n    case \"NumberKeyword\":\n      return \"number\"\n    case \"TemplateLiteral\":\n      return String(type)\n    case \"Union\":\n      return type.types.map(templateLiteralSpanUnionTypeToString).join(\" | \")\n  }\n}\n\nconst templateLiteralSpanTypeToString = (type: TemplateLiteralSpanType): string => {\n  switch (type._tag) {\n    case \"Literal\":\n      return String(type.literal)\n    case \"StringKeyword\":\n      return \"${string}\"\n    case \"NumberKeyword\":\n      return \"${number}\"\n    case \"TemplateLiteral\":\n      return \"${\" + String(type) + \"}\"\n    case \"Union\":\n      return \"${\" + type.types.map(templateLiteralSpanUnionTypeToString).join(\" | \") + \"}\"\n  }\n}\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class TemplateLiteralSpan {\n  /**\n   * @since 3.10.0\n   */\n  readonly type: TemplateLiteralSpanType\n  constructor(type: AST, readonly literal: string) {\n    if (isTemplateLiteralSpanType(type)) {\n      this.type = type\n    } else {\n      throw new Error(errors_.getSchemaUnsupportedLiteralSpanErrorMessage(type))\n    }\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return templateLiteralSpanTypeToString(this.type) + this.literal\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      type: this.type.toJSON(),\n      literal: this.literal\n    }\n  }\n}\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class TemplateLiteral implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"TemplateLiteral\"\n  constructor(\n    readonly head: string,\n    readonly spans: Arr.NonEmptyReadonlyArray<TemplateLiteralSpan>,\n    readonly annotations: Annotations = {}\n  ) {}\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return Option.getOrElse(getExpected(this), () => formatTemplateLiteral(this))\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      head: this.head,\n      spans: this.spans.map((span) => span.toJSON()),\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\nconst formatTemplateLiteral = (ast: TemplateLiteral): string =>\n  \"`\" + ast.head + ast.spans.map(String).join(\"\") +\n  \"`\"\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isTemplateLiteral: (ast: AST) => ast is TemplateLiteral = createASTGuard(\"TemplateLiteral\")\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class Type implements Annotated {\n  constructor(\n    readonly type: AST,\n    readonly annotations: Annotations = {}\n  ) {}\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      type: this.type.toJSON(),\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return String(this.type)\n  }\n}\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class OptionalType extends Type {\n  constructor(\n    type: AST,\n    readonly isOptional: boolean,\n    annotations: Annotations = {}\n  ) {\n    super(type, annotations)\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      type: this.type.toJSON(),\n      isOptional: this.isOptional,\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return String(this.type) + (this.isOptional ? \"?\" : \"\")\n  }\n}\n\nconst getRestASTs = (rest: ReadonlyArray<Type>): ReadonlyArray<AST> => rest.map((annotatedAST) => annotatedAST.type)\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class TupleType implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"TupleType\"\n  constructor(\n    readonly elements: ReadonlyArray<OptionalType>,\n    readonly rest: ReadonlyArray<Type>,\n    readonly isReadonly: boolean,\n    readonly annotations: Annotations = {}\n  ) {\n    let hasOptionalElement = false\n    let hasIllegalRequiredElement = false\n    for (const e of elements) {\n      if (e.isOptional) {\n        hasOptionalElement = true\n      } else if (hasOptionalElement) {\n        hasIllegalRequiredElement = true\n        break\n      }\n    }\n    if (hasIllegalRequiredElement || (hasOptionalElement && rest.length > 1)) {\n      throw new Error(errors_.getASTRequiredElementFollowinAnOptionalElementErrorMessage)\n    }\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return Option.getOrElse(getExpected(this), () => formatTuple(this))\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      elements: this.elements.map((e) => e.toJSON()),\n      rest: this.rest.map((ast) => ast.toJSON()),\n      isReadonly: this.isReadonly,\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\nconst formatTuple = (ast: TupleType): string => {\n  const formattedElements = ast.elements.map(String)\n    .join(\", \")\n  return Arr.matchLeft(ast.rest, {\n    onEmpty: () => `readonly [${formattedElements}]`,\n    onNonEmpty: (head, tail) => {\n      const formattedHead = String(head)\n      const wrappedHead = formattedHead.includes(\" | \") ? `(${formattedHead})` : formattedHead\n\n      if (tail.length > 0) {\n        const formattedTail = tail.map(String).join(\", \")\n        if (ast.elements.length > 0) {\n          return `readonly [${formattedElements}, ...${wrappedHead}[], ${formattedTail}]`\n        } else {\n          return `readonly [...${wrappedHead}[], ${formattedTail}]`\n        }\n      } else {\n        if (ast.elements.length > 0) {\n          return `readonly [${formattedElements}, ...${wrappedHead}[]]`\n        } else {\n          return `ReadonlyArray<${formattedHead}>`\n        }\n      }\n    }\n  })\n}\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isTupleType: (ast: AST) => ast is TupleType = createASTGuard(\"TupleType\")\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class PropertySignature extends OptionalType {\n  constructor(\n    readonly name: PropertyKey,\n    type: AST,\n    isOptional: boolean,\n    readonly isReadonly: boolean,\n    annotations?: Annotations\n  ) {\n    super(type, isOptional, annotations)\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString(): string {\n    return (this.isReadonly ? \"readonly \" : \"\") + String(this.name) + (this.isOptional ? \"?\" : \"\") + \": \" +\n      this.type\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      name: String(this.name),\n      type: this.type.toJSON(),\n      isOptional: this.isOptional,\n      isReadonly: this.isReadonly,\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\n/**\n * @since 3.10.0\n */\nexport type Parameter = StringKeyword | SymbolKeyword | TemplateLiteral | Refinement<Parameter>\n\n/**\n * @since 3.10.0\n */\nexport const isParameter = (ast: AST): ast is Parameter => {\n  switch (ast._tag) {\n    case \"StringKeyword\":\n    case \"SymbolKeyword\":\n    case \"TemplateLiteral\":\n      return true\n    case \"Refinement\":\n      return isParameter(ast.from)\n  }\n  return false\n}\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class IndexSignature {\n  /**\n   * @since 3.10.0\n   */\n  readonly parameter: Parameter\n  constructor(\n    parameter: AST,\n    readonly type: AST,\n    readonly isReadonly: boolean\n  ) {\n    if (isParameter(parameter)) {\n      this.parameter = parameter\n    } else {\n      throw new Error(errors_.getASTIndexSignatureParameterErrorMessage)\n    }\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString(): string {\n    return (this.isReadonly ? \"readonly \" : \"\") + `[x: ${this.parameter}]: ${this.type}`\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      parameter: this.parameter.toJSON(),\n      type: this.type.toJSON(),\n      isReadonly: this.isReadonly\n    }\n  }\n}\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class TypeLiteral implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"TypeLiteral\"\n  /**\n   * @since 3.10.0\n   */\n  readonly propertySignatures: ReadonlyArray<PropertySignature>\n  /**\n   * @since 3.10.0\n   */\n  readonly indexSignatures: ReadonlyArray<IndexSignature>\n  constructor(\n    propertySignatures: ReadonlyArray<PropertySignature>,\n    indexSignatures: ReadonlyArray<IndexSignature>,\n    readonly annotations: Annotations = {}\n  ) {\n    // check for duplicate property signatures\n    const keys: Record<PropertyKey, null> = {}\n    for (let i = 0; i < propertySignatures.length; i++) {\n      const name = propertySignatures[i].name\n      if (Object.prototype.hasOwnProperty.call(keys, name)) {\n        throw new Error(errors_.getASTDuplicatePropertySignatureErrorMessage(name))\n      }\n      keys[name] = null\n    }\n    // check for duplicate index signatures\n    const parameters = {\n      string: false,\n      symbol: false\n    }\n    for (let i = 0; i < indexSignatures.length; i++) {\n      const encodedParameter = getEncodedParameter(indexSignatures[i].parameter)\n      if (isStringKeyword(encodedParameter)) {\n        if (parameters.string) {\n          throw new Error(errors_.getASTDuplicateIndexSignatureErrorMessage(\"string\"))\n        }\n        parameters.string = true\n      } else if (isSymbolKeyword(encodedParameter)) {\n        if (parameters.symbol) {\n          throw new Error(errors_.getASTDuplicateIndexSignatureErrorMessage(\"symbol\"))\n        }\n        parameters.symbol = true\n      }\n    }\n\n    this.propertySignatures = propertySignatures\n    this.indexSignatures = indexSignatures\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return Option.getOrElse(getExpected(this), () => formatTypeLiteral(this))\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      propertySignatures: this.propertySignatures.map((ps) => ps.toJSON()),\n      indexSignatures: this.indexSignatures.map((ps) => ps.toJSON()),\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\nconst formatIndexSignatures = (iss: ReadonlyArray<IndexSignature>): string => iss.map(String).join(\"; \")\n\nconst formatTypeLiteral = (ast: TypeLiteral): string => {\n  if (ast.propertySignatures.length > 0) {\n    const pss = ast.propertySignatures.map(String).join(\"; \")\n    if (ast.indexSignatures.length > 0) {\n      return `{ ${pss}; ${formatIndexSignatures(ast.indexSignatures)} }`\n    } else {\n      return `{ ${pss} }`\n    }\n  } else {\n    if (ast.indexSignatures.length > 0) {\n      return `{ ${formatIndexSignatures(ast.indexSignatures)} }`\n    } else {\n      return \"{}\"\n    }\n  }\n}\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isTypeLiteral: (ast: AST) => ast is TypeLiteral = createASTGuard(\"TypeLiteral\")\n\n/**\n * @since 3.10.0\n */\nexport type Members<A> = readonly [A, A, ...Array<A>]\n\nconst sortCandidates = Arr.sort(\n  Order.mapInput(Number.Order, (ast: AST) => {\n    switch (ast._tag) {\n      case \"AnyKeyword\":\n        return 0\n      case \"UnknownKeyword\":\n        return 1\n      case \"ObjectKeyword\":\n        return 2\n      case \"StringKeyword\":\n      case \"NumberKeyword\":\n      case \"BooleanKeyword\":\n      case \"BigIntKeyword\":\n      case \"SymbolKeyword\":\n        return 3\n    }\n    return 4\n  })\n)\n\nconst literalMap = {\n  string: \"StringKeyword\",\n  number: \"NumberKeyword\",\n  boolean: \"BooleanKeyword\",\n  bigint: \"BigIntKeyword\"\n} as const\n\n/** @internal */\nexport const flatten = (candidates: ReadonlyArray<AST>): Array<AST> =>\n  Arr.flatMap(candidates, (ast) => isUnion(ast) ? flatten(ast.types) : [ast])\n\n/** @internal */\nexport const unify = (candidates: ReadonlyArray<AST>): Array<AST> => {\n  const cs = sortCandidates(candidates)\n  const out: Array<AST> = []\n  const uniques: { [K in AST[\"_tag\"] | \"{}\"]?: AST } = {}\n  const literals: Array<LiteralValue | symbol> = []\n  for (const ast of cs) {\n    switch (ast._tag) {\n      case \"NeverKeyword\":\n        break\n      case \"AnyKeyword\":\n        return [anyKeyword]\n      case \"UnknownKeyword\":\n        return [unknownKeyword]\n      // uniques\n      case \"ObjectKeyword\":\n      case \"UndefinedKeyword\":\n      case \"VoidKeyword\":\n      case \"StringKeyword\":\n      case \"NumberKeyword\":\n      case \"BooleanKeyword\":\n      case \"BigIntKeyword\":\n      case \"SymbolKeyword\": {\n        if (!uniques[ast._tag]) {\n          uniques[ast._tag] = ast\n          out.push(ast)\n        }\n        break\n      }\n      case \"Literal\": {\n        const type = typeof ast.literal\n        switch (type) {\n          case \"string\":\n          case \"number\":\n          case \"bigint\":\n          case \"boolean\": {\n            const _tag = literalMap[type]\n            if (!uniques[_tag] && !literals.includes(ast.literal)) {\n              literals.push(ast.literal)\n              out.push(ast)\n            }\n            break\n          }\n          // null\n          case \"object\": {\n            if (!literals.includes(ast.literal)) {\n              literals.push(ast.literal)\n              out.push(ast)\n            }\n            break\n          }\n        }\n        break\n      }\n      case \"UniqueSymbol\": {\n        if (!uniques[\"SymbolKeyword\"] && !literals.includes(ast.symbol)) {\n          literals.push(ast.symbol)\n          out.push(ast)\n        }\n        break\n      }\n      case \"TupleType\": {\n        if (!uniques[\"ObjectKeyword\"]) {\n          out.push(ast)\n        }\n        break\n      }\n      case \"TypeLiteral\": {\n        if (ast.propertySignatures.length === 0 && ast.indexSignatures.length === 0) {\n          if (!uniques[\"{}\"]) {\n            uniques[\"{}\"] = ast\n            out.push(ast)\n          }\n        } else if (!uniques[\"ObjectKeyword\"]) {\n          out.push(ast)\n        }\n        break\n      }\n      default:\n        out.push(ast)\n    }\n  }\n  return out\n}\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class Union<M extends AST = AST> implements Annotated {\n  static make = (types: ReadonlyArray<AST>, annotations?: Annotations): AST => {\n    return isMembers(types) ? new Union(types, annotations) : types.length === 1 ? types[0] : neverKeyword\n  }\n  /** @internal */\n  static unify = (candidates: ReadonlyArray<AST>, annotations?: Annotations): AST => {\n    return Union.make(unify(flatten(candidates)), annotations)\n  }\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"Union\"\n  private constructor(readonly types: Members<M>, readonly annotations: Annotations = {}) {}\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return Option.getOrElse(getExpected(this), () => this.types.map(String).join(\" | \"))\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      types: this.types.map((ast) => ast.toJSON()),\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\n/** @internal */\nexport const mapMembers = <A, B>(members: Members<A>, f: (a: A) => B): Members<B> => members.map(f) as any\n\n/** @internal */\nexport const isMembers = <A>(as: ReadonlyArray<A>): as is Members<A> => as.length > 1\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isUnion: (ast: AST) => ast is Union = createASTGuard(\"Union\")\n\nconst toJSONMemoMap = globalValue(\n  Symbol.for(\"effect/Schema/AST/toJSONMemoMap\"),\n  () => new WeakMap<AST, object>()\n)\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class Suspend implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"Suspend\"\n  constructor(readonly f: () => AST, readonly annotations: Annotations = {}) {\n    this.f = util_.memoizeThunk(f)\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return getExpected(this).pipe(\n      Option.orElse(() =>\n        Option.flatMap(\n          Option.liftThrowable(this.f)(),\n          (ast) => getExpected(ast)\n        )\n      ),\n      Option.getOrElse(() => \"<suspended schema>\")\n    )\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    const ast = this.f()\n    let out = toJSONMemoMap.get(ast)\n    if (out) {\n      return out\n    }\n    toJSONMemoMap.set(ast, { _tag: this._tag })\n    out = {\n      _tag: this._tag,\n      ast: ast.toJSON(),\n      annotations: toJSONAnnotations(this.annotations)\n    }\n    toJSONMemoMap.set(ast, out)\n    return out\n  }\n}\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isSuspend: (ast: AST) => ast is Suspend = createASTGuard(\"Suspend\")\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class Refinement<From extends AST = AST> implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"Refinement\"\n  constructor(\n    readonly from: From,\n    readonly filter: (\n      input: any,\n      options: ParseOptions,\n      self: Refinement\n    ) => Option.Option<ParseIssue>,\n    readonly annotations: Annotations = {}\n  ) {}\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return getIdentifierAnnotation(this).pipe(Option.getOrElse(() =>\n      Option.match(getOrElseExpected(this), {\n        onNone: () => `{ ${this.from} | filter }`,\n        onSome: (expected) => isRefinement(this.from) ? String(this.from) + \" & \" + expected : expected\n      })\n    ))\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      from: this.from.toJSON(),\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isRefinement: (ast: AST) => ast is Refinement<AST> = createASTGuard(\"Refinement\")\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport interface ParseOptions {\n  /**\n   * The `errors` option allows you to receive all parsing errors when\n   * attempting to parse a value using a schema. By default only the first error\n   * is returned, but by setting the `errors` option to `\"all\"`, you can receive\n   * all errors that occurred during the parsing process. This can be useful for\n   * debugging or for providing more comprehensive error messages to the user.\n   *\n   * default: \"first\"\n   *\n   * @since 3.10.0\n   */\n  readonly errors?: \"first\" | \"all\" | undefined\n  /**\n   * When using a `Schema` to parse a value, by default any properties that are\n   * not specified in the `Schema` will be stripped out from the output. This is\n   * because the `Schema` is expecting a specific shape for the parsed value,\n   * and any excess properties do not conform to that shape.\n   *\n   * However, you can use the `onExcessProperty` option (default value:\n   * `\"ignore\"`) to trigger a parsing error. This can be particularly useful in\n   * cases where you need to detect and handle potential errors or unexpected\n   * values.\n   *\n   * If you want to allow excess properties to remain, you can use\n   * `onExcessProperty` set to `\"preserve\"`.\n   *\n   * default: \"ignore\"\n   *\n   * @since 3.10.0\n   */\n  readonly onExcessProperty?: \"ignore\" | \"error\" | \"preserve\" | undefined\n  /**\n   * The `propertyOrder` option provides control over the order of object fields\n   * in the output. This feature is particularly useful when the sequence of\n   * keys is important for the consuming processes or when maintaining the input\n   * order enhances readability and usability.\n   *\n   * By default, the `propertyOrder` option is set to `\"none\"`. This means that\n   * the internal system decides the order of keys to optimize parsing speed.\n   * The order of keys in this mode should not be considered stable, and it's\n   * recommended not to rely on key ordering as it may change in future updates\n   * without notice.\n   *\n   * Setting `propertyOrder` to `\"original\"` ensures that the keys are ordered\n   * as they appear in the input during the decoding/encoding process.\n   *\n   * default: \"none\"\n   *\n   * @since 3.10.0\n   */\n  readonly propertyOrder?: \"none\" | \"original\" | undefined\n  /**\n   * Handles missing properties in data structures. By default, missing\n   * properties are treated as if present with an `undefined` value. To treat\n   * missing properties as errors, set the `exact` option to `true`. This\n   * setting is already enabled by default for `is` and `asserts` functions,\n   * treating absent properties strictly unless overridden.\n   *\n   * default: false\n   *\n   * @since 3.10.0\n   */\n  readonly exact?: boolean | undefined\n}\n\n/**\n * @since 3.10.0\n */\nexport const defaultParseOption: ParseOptions = {}\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class Transformation implements Annotated {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"Transformation\"\n  constructor(\n    readonly from: AST,\n    readonly to: AST,\n    readonly transformation: TransformationKind,\n    readonly annotations: Annotations = {}\n  ) {}\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return Option.getOrElse(\n      getExpected(this),\n      () => `(${String(this.from)} <-> ${String(this.to)})`\n    )\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON(): object {\n    return {\n      _tag: this._tag,\n      from: this.from.toJSON(),\n      to: this.to.toJSON(),\n      annotations: toJSONAnnotations(this.annotations)\n    }\n  }\n}\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isTransformation: (ast: AST) => ast is Transformation = createASTGuard(\"Transformation\")\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport type TransformationKind =\n  | FinalTransformation\n  | ComposeTransformation\n  | TypeLiteralTransformation\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class FinalTransformation {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"FinalTransformation\"\n  constructor(\n    readonly decode: (\n      fromA: any,\n      options: ParseOptions,\n      self: Transformation,\n      fromI: any\n    ) => Effect<any, ParseIssue, any>,\n    readonly encode: (toI: any, options: ParseOptions, self: Transformation, toA: any) => Effect<any, ParseIssue, any>\n  ) {}\n}\n\nconst createTransformationGuard =\n  <T extends TransformationKind[\"_tag\"]>(tag: T) =>\n  (ast: TransformationKind): ast is Extract<TransformationKind, { _tag: T }> => ast._tag === tag\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isFinalTransformation: (ast: TransformationKind) => ast is FinalTransformation = createTransformationGuard(\n  \"FinalTransformation\"\n)\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class ComposeTransformation {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"ComposeTransformation\"\n}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const composeTransformation: ComposeTransformation = new ComposeTransformation()\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isComposeTransformation: (ast: TransformationKind) => ast is ComposeTransformation =\n  createTransformationGuard(\n    \"ComposeTransformation\"\n  )\n\n/**\n * Represents a `PropertySignature -> PropertySignature` transformation\n *\n * The semantic of `decode` is:\n * - `none()` represents the absence of the key/value pair\n * - `some(value)` represents the presence of the key/value pair\n *\n * The semantic of `encode` is:\n * - `none()` you don't want to output the key/value pair\n * - `some(value)` you want to output the key/value pair\n *\n * @category model\n * @since 3.10.0\n */\nexport class PropertySignatureTransformation {\n  constructor(\n    readonly from: PropertyKey,\n    readonly to: PropertyKey,\n    readonly decode: (o: Option.Option<any>) => Option.Option<any>,\n    readonly encode: (o: Option.Option<any>) => Option.Option<any>\n  ) {}\n}\n\nconst isRenamingPropertySignatureTransformation = (t: PropertySignatureTransformation) =>\n  t.decode === identity && t.encode === identity\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport class TypeLiteralTransformation {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"TypeLiteralTransformation\"\n  constructor(\n    readonly propertySignatureTransformations: ReadonlyArray<\n      PropertySignatureTransformation\n    >\n  ) {\n    // check for duplicate property signature transformations\n    const fromKeys: Record<PropertyKey, true> = {}\n    const toKeys: Record<PropertyKey, true> = {}\n    for (const pst of propertySignatureTransformations) {\n      const from = pst.from\n      if (fromKeys[from]) {\n        throw new Error(errors_.getASTDuplicatePropertySignatureTransformationErrorMessage(from))\n      }\n      fromKeys[from] = true\n      const to = pst.to\n      if (toKeys[to]) {\n        throw new Error(errors_.getASTDuplicatePropertySignatureTransformationErrorMessage(to))\n      }\n      toKeys[to] = true\n    }\n  }\n}\n\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isTypeLiteralTransformation: (ast: TransformationKind) => ast is TypeLiteralTransformation =\n  createTransformationGuard(\"TypeLiteralTransformation\")\n\n// -------------------------------------------------------------------------------------\n// API\n// -------------------------------------------------------------------------------------\n\n/**\n * Merges a set of new annotations with existing ones, potentially overwriting\n * any duplicates.\n *\n * Any previously existing identifier annotations are deleted.\n *\n * @since 3.10.0\n */\nexport const annotations = (ast: AST, overrides: Annotations): AST => {\n  const d = Object.getOwnPropertyDescriptors(ast)\n  const base: any = { ...ast.annotations }\n  delete base[IdentifierAnnotationId]\n  const value = { ...base, ...overrides }\n  const surrogate = getSurrogateAnnotation(ast)\n  if (Option.isSome(surrogate)) {\n    value[SurrogateAnnotationId] = annotations(surrogate.value, overrides)\n  }\n  d.annotations.value = value\n  return Object.create(Object.getPrototypeOf(ast), d)\n}\n\n/**\n * Equivalent at runtime to the TypeScript type-level `keyof` operator.\n *\n * @since 3.10.0\n */\nexport const keyof = (ast: AST): AST => Union.unify(_keyof(ast))\n\nconst STRING_KEYWORD_PATTERN = \"[\\\\s\\\\S]*?\" // any string, including newlines\nconst NUMBER_KEYWORD_PATTERN = \"[+-]?\\\\d*\\\\.?\\\\d+(?:[Ee][+-]?\\\\d+)?\"\n\nconst getTemplateLiteralSpanTypePattern = (type: TemplateLiteralSpanType, capture: boolean): string => {\n  switch (type._tag) {\n    case \"Literal\":\n      return regexp.escape(String(type.literal))\n    case \"StringKeyword\":\n      return STRING_KEYWORD_PATTERN\n    case \"NumberKeyword\":\n      return NUMBER_KEYWORD_PATTERN\n    case \"TemplateLiteral\":\n      return getTemplateLiteralPattern(type, capture, false)\n    case \"Union\":\n      return type.types.map((type) => getTemplateLiteralSpanTypePattern(type, capture)).join(\"|\")\n  }\n}\n\nconst handleTemplateLiteralSpanTypeParens = (\n  type: TemplateLiteralSpanType,\n  s: string,\n  capture: boolean,\n  top: boolean\n) => {\n  if (isUnion(type)) {\n    if (capture && !top) {\n      return `(?:${s})`\n    }\n  } else if (!capture || !top) {\n    return s\n  }\n  return `(${s})`\n}\n\nconst getTemplateLiteralPattern = (ast: TemplateLiteral, capture: boolean, top: boolean): string => {\n  let pattern = ``\n  if (ast.head !== \"\") {\n    const head = regexp.escape(ast.head)\n    pattern += capture && top ? `(${head})` : head\n  }\n\n  for (const span of ast.spans) {\n    const spanPattern = getTemplateLiteralSpanTypePattern(span.type, capture)\n    pattern += handleTemplateLiteralSpanTypeParens(span.type, spanPattern, capture, top)\n    if (span.literal !== \"\") {\n      const literal = regexp.escape(span.literal)\n      pattern += capture && top ? `(${literal})` : literal\n    }\n  }\n\n  return pattern\n}\n\n/**\n * Generates a regular expression from a `TemplateLiteral` AST node.\n *\n * @see {@link getTemplateLiteralCapturingRegExp} for a variant that captures the pattern.\n *\n * @since 3.10.0\n */\nexport const getTemplateLiteralRegExp = (ast: TemplateLiteral): RegExp =>\n  new RegExp(`^${getTemplateLiteralPattern(ast, false, true)}$`)\n\n/**\n * Generates a regular expression that captures the pattern defined by the given `TemplateLiteral` AST.\n *\n * @see {@link getTemplateLiteralRegExp} for a variant that does not capture the pattern.\n *\n * @since 3.10.0\n */\nexport const getTemplateLiteralCapturingRegExp = (ast: TemplateLiteral): RegExp =>\n  new RegExp(`^${getTemplateLiteralPattern(ast, true, true)}$`)\n\n/**\n * @since 3.10.0\n */\nexport const getPropertySignatures = (ast: AST): Array<PropertySignature> => {\n  const annotation = getSurrogateAnnotation(ast)\n  if (Option.isSome(annotation)) {\n    return getPropertySignatures(annotation.value)\n  }\n  switch (ast._tag) {\n    case \"TypeLiteral\":\n      return ast.propertySignatures.slice()\n    case \"Suspend\":\n      return getPropertySignatures(ast.f())\n    case \"Refinement\":\n      return getPropertySignatures(ast.from)\n  }\n  return getPropertyKeys(ast).map((name) => getPropertyKeyIndexedAccess(ast, name))\n}\n\nconst getIndexSignatures = (ast: AST): Array<IndexSignature> => {\n  const annotation = getSurrogateAnnotation(ast)\n  if (Option.isSome(annotation)) {\n    return getIndexSignatures(annotation.value)\n  }\n  switch (ast._tag) {\n    case \"TypeLiteral\":\n      return ast.indexSignatures.slice()\n    case \"Suspend\":\n      return getIndexSignatures(ast.f())\n    case \"Refinement\":\n      return getIndexSignatures(ast.from)\n  }\n  return []\n}\n\n/** @internal */\nexport const getNumberIndexedAccess = (ast: AST): AST => {\n  switch (ast._tag) {\n    case \"TupleType\": {\n      let hasOptional = false\n      let out: Array<AST> = []\n      for (const e of ast.elements) {\n        if (e.isOptional) {\n          hasOptional = true\n        }\n        out.push(e.type)\n      }\n      if (hasOptional) {\n        out.push(undefinedKeyword)\n      }\n      out = out.concat(getRestASTs(ast.rest))\n      return Union.make(out)\n    }\n    case \"Refinement\":\n      return getNumberIndexedAccess(ast.from)\n    case \"Union\":\n      return Union.make(ast.types.map(getNumberIndexedAccess))\n    case \"Suspend\":\n      return getNumberIndexedAccess(ast.f())\n  }\n  throw new Error(errors_.getASTUnsupportedSchemaErrorMessage(ast))\n}\n\nconst getTypeLiteralPropertySignature = (ast: TypeLiteral, name: PropertyKey): PropertySignature | undefined => {\n  // from property signatures...\n  const ops = Arr.findFirst(ast.propertySignatures, (ps) => ps.name === name)\n  if (Option.isSome(ops)) {\n    return ops.value\n  }\n\n  // from index signatures...\n  if (Predicate.isString(name)) {\n    let out: PropertySignature | undefined = undefined\n    for (const is of ast.indexSignatures) {\n      const encodedParameter = getEncodedParameter(is.parameter)\n      switch (encodedParameter._tag) {\n        case \"TemplateLiteral\": {\n          const regex = getTemplateLiteralRegExp(encodedParameter)\n          if (regex.test(name)) {\n            return new PropertySignature(name, is.type, false, true)\n          }\n          break\n        }\n        case \"StringKeyword\": {\n          if (out === undefined) {\n            out = new PropertySignature(name, is.type, false, true)\n          }\n        }\n      }\n    }\n    if (out) {\n      return out\n    }\n  } else if (Predicate.isSymbol(name)) {\n    for (const is of ast.indexSignatures) {\n      const encodedParameter = getEncodedParameter(is.parameter)\n      if (isSymbolKeyword(encodedParameter)) {\n        return new PropertySignature(name, is.type, false, true)\n      }\n    }\n  }\n}\n\n/** @internal */\nexport const getPropertyKeyIndexedAccess = (ast: AST, name: PropertyKey): PropertySignature => {\n  const annotation = getSurrogateAnnotation(ast)\n  if (Option.isSome(annotation)) {\n    return getPropertyKeyIndexedAccess(annotation.value, name)\n  }\n  switch (ast._tag) {\n    case \"TypeLiteral\": {\n      const ps = getTypeLiteralPropertySignature(ast, name)\n      if (ps) {\n        return ps\n      }\n      break\n    }\n    case \"Union\":\n      return new PropertySignature(\n        name,\n        Union.make(ast.types.map((ast) => getPropertyKeyIndexedAccess(ast, name).type)),\n        false,\n        true\n      )\n    case \"Suspend\":\n      return getPropertyKeyIndexedAccess(ast.f(), name)\n    case \"Refinement\":\n      return getPropertyKeyIndexedAccess(ast.from, name)\n  }\n  throw new Error(errors_.getASTUnsupportedSchemaErrorMessage(ast))\n}\n\nconst getPropertyKeys = (ast: AST): Array<PropertyKey> => {\n  const annotation = getSurrogateAnnotation(ast)\n  if (Option.isSome(annotation)) {\n    return getPropertyKeys(annotation.value)\n  }\n  switch (ast._tag) {\n    case \"TypeLiteral\":\n      return ast.propertySignatures.map((ps) => ps.name)\n    case \"Union\":\n      return ast.types.slice(1).reduce(\n        (out: Array<PropertyKey>, ast) => Arr.intersection(out, getPropertyKeys(ast)),\n        getPropertyKeys(ast.types[0])\n      )\n    case \"Suspend\":\n      return getPropertyKeys(ast.f())\n    case \"Refinement\":\n      return getPropertyKeys(ast.from)\n    case \"Transformation\":\n      return getPropertyKeys(ast.to)\n  }\n  return []\n}\n\n/** @internal */\nexport const record = (key: AST, value: AST): {\n  propertySignatures: Array<PropertySignature>\n  indexSignatures: Array<IndexSignature>\n} => {\n  const propertySignatures: Array<PropertySignature> = []\n  const indexSignatures: Array<IndexSignature> = []\n  const go = (key: AST): void => {\n    switch (key._tag) {\n      case \"NeverKeyword\":\n        break\n      case \"StringKeyword\":\n      case \"SymbolKeyword\":\n      case \"TemplateLiteral\":\n      case \"Refinement\":\n        indexSignatures.push(new IndexSignature(key, value, true))\n        break\n      case \"Literal\":\n        if (Predicate.isString(key.literal) || Predicate.isNumber(key.literal)) {\n          propertySignatures.push(new PropertySignature(key.literal, value, false, true))\n        } else {\n          throw new Error(errors_.getASTUnsupportedLiteralErrorMessage(key.literal))\n        }\n        break\n      case \"Enums\": {\n        for (const [_, name] of key.enums) {\n          propertySignatures.push(new PropertySignature(name, value, false, true))\n        }\n        break\n      }\n      case \"UniqueSymbol\":\n        propertySignatures.push(new PropertySignature(key.symbol, value, false, true))\n        break\n      case \"Union\":\n        key.types.forEach(go)\n        break\n      default:\n        throw new Error(errors_.getASTUnsupportedKeySchemaErrorMessage(key))\n    }\n  }\n  go(key)\n  return { propertySignatures, indexSignatures }\n}\n\n/**\n * Equivalent at runtime to the built-in TypeScript utility type `Pick`.\n *\n * @since 3.10.0\n */\nexport const pick = (ast: AST, keys: ReadonlyArray<PropertyKey>): TypeLiteral | Transformation => {\n  const annotation = getSurrogateAnnotation(ast)\n  if (Option.isSome(annotation)) {\n    return pick(annotation.value, keys)\n  }\n  switch (ast._tag) {\n    case \"TypeLiteral\": {\n      const pss: Array<PropertySignature> = []\n      const names: Record<PropertyKey, null> = {}\n      for (const ps of ast.propertySignatures) {\n        names[ps.name] = null\n        if (keys.includes(ps.name)) {\n          pss.push(ps)\n        }\n      }\n      for (const key of keys) {\n        if (!(key in names)) {\n          const ps = getTypeLiteralPropertySignature(ast, key)\n          if (ps) {\n            pss.push(ps)\n          }\n        }\n      }\n      return new TypeLiteral(pss, [])\n    }\n    case \"Union\":\n      return new TypeLiteral(keys.map((name) => getPropertyKeyIndexedAccess(ast, name)), [])\n    case \"Suspend\":\n      return pick(ast.f(), keys)\n    case \"Refinement\":\n      return pick(ast.from, keys)\n    case \"Transformation\": {\n      switch (ast.transformation._tag) {\n        case \"ComposeTransformation\":\n          return new Transformation(\n            pick(ast.from, keys),\n            pick(ast.to, keys),\n            composeTransformation\n          )\n        case \"TypeLiteralTransformation\": {\n          const ts: Array<PropertySignatureTransformation> = []\n          const fromKeys: Array<PropertyKey> = []\n          for (const k of keys) {\n            const t = ast.transformation.propertySignatureTransformations.find((t) => t.to === k)\n            if (t) {\n              ts.push(t)\n              fromKeys.push(t.from)\n            } else {\n              fromKeys.push(k)\n            }\n          }\n          return Arr.isNonEmptyReadonlyArray(ts) ?\n            new Transformation(\n              pick(ast.from, fromKeys),\n              pick(ast.to, keys),\n              new TypeLiteralTransformation(ts)\n            ) :\n            pick(ast.from, fromKeys)\n        }\n      }\n    }\n  }\n  throw new Error(errors_.getASTUnsupportedSchemaErrorMessage(ast))\n}\n\n/**\n * Equivalent at runtime to the built-in TypeScript utility type `Omit`.\n *\n * @since 3.10.0\n */\nexport const omit = (ast: AST, keys: ReadonlyArray<PropertyKey>): TypeLiteral | Transformation => {\n  let indexSignatures = getIndexSignatures(ast)\n  if (indexSignatures.length > 0) {\n    if (indexSignatures.some((is) => isStringKeyword(getEncodedParameter(is.parameter)))) {\n      indexSignatures = indexSignatures.filter((is) => !isTemplateLiteral(getEncodedParameter(is.parameter)))\n    }\n    return new TypeLiteral([], indexSignatures)\n  }\n  return pick(ast, getPropertyKeys(ast).filter((name) => !keys.includes(name)))\n}\n\n/** @internal */\nexport const orUndefined = (ast: AST): AST => Union.make([ast, undefinedKeyword])\n\n/**\n * Equivalent at runtime to the built-in TypeScript utility type `Partial`.\n *\n * @since 3.10.0\n */\nexport const partial = (ast: AST, options?: { readonly exact: true }): AST => {\n  const exact = options?.exact === true\n  switch (ast._tag) {\n    case \"TupleType\":\n      return new TupleType(\n        ast.elements.map((e) => new OptionalType(exact ? e.type : orUndefined(e.type), true)),\n        Arr.match(ast.rest, {\n          onEmpty: () => ast.rest,\n          onNonEmpty: (rest) => [new Type(Union.make([...getRestASTs(rest), undefinedKeyword]))]\n        }),\n        ast.isReadonly\n      )\n    case \"TypeLiteral\":\n      return new TypeLiteral(\n        ast.propertySignatures.map((ps) =>\n          new PropertySignature(ps.name, exact ? ps.type : orUndefined(ps.type), true, ps.isReadonly, ps.annotations)\n        ),\n        ast.indexSignatures.map((is) => new IndexSignature(is.parameter, orUndefined(is.type), is.isReadonly))\n      )\n    case \"Union\":\n      return Union.make(ast.types.map((member) => partial(member, options)))\n    case \"Suspend\":\n      return new Suspend(() => partial(ast.f(), options))\n    case \"Declaration\":\n    case \"Refinement\":\n      throw new Error(errors_.getASTUnsupportedSchemaErrorMessage(ast))\n    case \"Transformation\": {\n      if (\n        isTypeLiteralTransformation(ast.transformation) &&\n        ast.transformation.propertySignatureTransformations.every(isRenamingPropertySignatureTransformation)\n      ) {\n        return new Transformation(partial(ast.from, options), partial(ast.to, options), ast.transformation)\n      }\n      throw new Error(errors_.getASTUnsupportedSchemaErrorMessage(ast))\n    }\n  }\n  return ast\n}\n\n/**\n * Equivalent at runtime to the built-in TypeScript utility type `Required`.\n *\n * @since 3.10.0\n */\nexport const required = (ast: AST): AST => {\n  switch (ast._tag) {\n    case \"TupleType\":\n      return new TupleType(\n        ast.elements.map((e) => new OptionalType(e.type, false)),\n        ast.rest,\n        ast.isReadonly\n      )\n    case \"TypeLiteral\":\n      return new TypeLiteral(\n        ast.propertySignatures.map((f) => new PropertySignature(f.name, f.type, false, f.isReadonly, f.annotations)),\n        ast.indexSignatures\n      )\n    case \"Union\":\n      return Union.make(ast.types.map((member) => required(member)))\n    case \"Suspend\":\n      return new Suspend(() => required(ast.f()))\n    case \"Declaration\":\n    case \"Refinement\":\n      throw new Error(errors_.getASTUnsupportedSchemaErrorMessage(ast))\n    case \"Transformation\": {\n      if (\n        isTypeLiteralTransformation(ast.transformation) &&\n        ast.transformation.propertySignatureTransformations.every(isRenamingPropertySignatureTransformation)\n      ) {\n        return new Transformation(required(ast.from), required(ast.to), ast.transformation)\n      }\n      throw new Error(errors_.getASTUnsupportedSchemaErrorMessage(ast))\n    }\n  }\n  return ast\n}\n\n/**\n * Creates a new AST with shallow mutability applied to its properties.\n *\n * @since 3.10.0\n */\nexport const mutable = (ast: AST): AST => {\n  switch (ast._tag) {\n    case \"TupleType\":\n      return ast.isReadonly === false ? ast : new TupleType(ast.elements, ast.rest, false, ast.annotations)\n    case \"TypeLiteral\": {\n      const propertySignatures = changeMap(\n        ast.propertySignatures,\n        (ps) =>\n          ps.isReadonly === false ? ps : new PropertySignature(ps.name, ps.type, ps.isOptional, false, ps.annotations)\n      )\n      const indexSignatures = changeMap(\n        ast.indexSignatures,\n        (is) => is.isReadonly === false ? is : new IndexSignature(is.parameter, is.type, false)\n      )\n      return propertySignatures === ast.propertySignatures && indexSignatures === ast.indexSignatures ?\n        ast :\n        new TypeLiteral(propertySignatures, indexSignatures, ast.annotations)\n    }\n    case \"Union\": {\n      const types = changeMap(ast.types, mutable)\n      return types === ast.types ? ast : Union.make(types, ast.annotations)\n    }\n    case \"Suspend\":\n      return new Suspend(() => mutable(ast.f()), ast.annotations)\n    case \"Refinement\": {\n      const from = mutable(ast.from)\n      return from === ast.from ? ast : new Refinement(from, ast.filter, ast.annotations)\n    }\n    case \"Transformation\": {\n      const from = mutable(ast.from)\n      const to = mutable(ast.to)\n      return from === ast.from && to === ast.to ?\n        ast :\n        new Transformation(from, to, ast.transformation, ast.annotations)\n    }\n  }\n  return ast\n}\n\n// -------------------------------------------------------------------------------------\n// compiler harness\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 3.10.0\n */\nexport type Compiler<A> = (ast: AST, path: ReadonlyArray<PropertyKey>) => A\n\n/**\n * @since 3.10.0\n */\nexport type Match<A> = {\n  [K in AST[\"_tag\"]]: (ast: Extract<AST, { _tag: K }>, compile: Compiler<A>, path: ReadonlyArray<PropertyKey>) => A\n}\n\n/**\n * @since 3.10.0\n */\nexport const getCompiler = <A>(match: Match<A>): Compiler<A> => {\n  const compile = (ast: AST, path: ReadonlyArray<PropertyKey>): A => match[ast._tag](ast as any, compile, path)\n  return compile\n}\n\n/** @internal */\nexport const pickAnnotations =\n  (annotationIds: ReadonlyArray<symbol>) => (annotated: Annotated): Annotations | undefined => {\n    let out: { [_: symbol]: unknown } | undefined = undefined\n    for (const id of annotationIds) {\n      if (Object.prototype.hasOwnProperty.call(annotated.annotations, id)) {\n        if (out === undefined) {\n          out = {}\n        }\n        out[id] = annotated.annotations[id]\n      }\n    }\n    return out\n  }\n\n/** @internal */\nexport const omitAnnotations =\n  (annotationIds: ReadonlyArray<symbol>) => (annotated: Annotated): Annotations | undefined => {\n    const out = { ...annotated.annotations }\n    for (const id of annotationIds) {\n      delete out[id]\n    }\n    return out\n  }\n\nconst preserveTransformationAnnotations = pickAnnotations([\n  ExamplesAnnotationId,\n  DefaultAnnotationId,\n  JSONSchemaAnnotationId,\n  ArbitraryAnnotationId,\n  PrettyAnnotationId,\n  EquivalenceAnnotationId\n])\n\n/**\n * @since 3.10.0\n */\nexport const typeAST = (ast: AST): AST => {\n  switch (ast._tag) {\n    case \"Declaration\": {\n      const typeParameters = changeMap(ast.typeParameters, typeAST)\n      return typeParameters === ast.typeParameters ?\n        ast :\n        new Declaration(typeParameters, ast.decodeUnknown, ast.encodeUnknown, ast.annotations)\n    }\n    case \"TupleType\": {\n      const elements = changeMap(ast.elements, (e) => {\n        const type = typeAST(e.type)\n        return type === e.type ? e : new OptionalType(type, e.isOptional)\n      })\n      const restASTs = getRestASTs(ast.rest)\n      const rest = changeMap(restASTs, typeAST)\n      return elements === ast.elements && rest === restASTs ?\n        ast :\n        new TupleType(elements, rest.map((type) => new Type(type)), ast.isReadonly, ast.annotations)\n    }\n    case \"TypeLiteral\": {\n      const propertySignatures = changeMap(ast.propertySignatures, (p) => {\n        const type = typeAST(p.type)\n        return type === p.type ? p : new PropertySignature(p.name, type, p.isOptional, p.isReadonly)\n      })\n      const indexSignatures = changeMap(ast.indexSignatures, (is) => {\n        const type = typeAST(is.type)\n        return type === is.type ? is : new IndexSignature(is.parameter, type, is.isReadonly)\n      })\n      return propertySignatures === ast.propertySignatures && indexSignatures === ast.indexSignatures ?\n        ast :\n        new TypeLiteral(propertySignatures, indexSignatures, ast.annotations)\n    }\n    case \"Union\": {\n      const types = changeMap(ast.types, typeAST)\n      return types === ast.types ? ast : Union.make(types, ast.annotations)\n    }\n    case \"Suspend\":\n      return new Suspend(() => typeAST(ast.f()), ast.annotations)\n    case \"Refinement\": {\n      const from = typeAST(ast.from)\n      return from === ast.from ?\n        ast :\n        new Refinement(from, ast.filter, ast.annotations)\n    }\n    case \"Transformation\": {\n      const preserve = preserveTransformationAnnotations(ast)\n      return typeAST(\n        preserve !== undefined ?\n          annotations(ast.to, preserve) :\n          ast.to\n      )\n    }\n  }\n  return ast\n}\n\nfunction changeMap<A>(\n  as: Arr.NonEmptyReadonlyArray<A>,\n  f: (a: A) => A\n): Arr.NonEmptyReadonlyArray<A>\nfunction changeMap<A>(as: ReadonlyArray<A>, f: (a: A) => A): ReadonlyArray<A>\nfunction changeMap<A>(as: ReadonlyArray<A>, f: (a: A) => A): ReadonlyArray<A> {\n  let changed = false\n  const out = Arr.allocate(as.length) as Array<A>\n  for (let i = 0; i < as.length; i++) {\n    const a = as[i]\n    const fa = f(a)\n    if (fa !== a) {\n      changed = true\n    }\n    out[i] = fa\n  }\n  return changed ? out : as\n}\n\n/**\n * Returns the from part of a transformation if it exists\n *\n * @internal\n */\nexport const getTransformationFrom = (ast: AST): AST | undefined => {\n  switch (ast._tag) {\n    case \"Transformation\":\n      return ast.from\n    case \"Refinement\":\n      return getTransformationFrom(ast.from)\n    case \"Suspend\":\n      return getTransformationFrom(ast.f())\n  }\n}\n\nconst encodedAST_ = (ast: AST, isBound: boolean): AST => {\n  switch (ast._tag) {\n    case \"Declaration\": {\n      const typeParameters = changeMap(ast.typeParameters, (ast) => encodedAST_(ast, isBound))\n      return typeParameters === ast.typeParameters ?\n        ast :\n        new Declaration(typeParameters, ast.decodeUnknown, ast.encodeUnknown)\n    }\n    case \"TupleType\": {\n      const elements = changeMap(ast.elements, (e) => {\n        const type = encodedAST_(e.type, isBound)\n        return type === e.type ? e : new OptionalType(type, e.isOptional)\n      })\n      const restASTs = getRestASTs(ast.rest)\n      const rest = changeMap(restASTs, (ast) => encodedAST_(ast, isBound))\n      return elements === ast.elements && rest === restASTs ?\n        ast :\n        new TupleType(elements, rest.map((ast) => new Type(ast)), ast.isReadonly)\n    }\n    case \"TypeLiteral\": {\n      const propertySignatures = changeMap(ast.propertySignatures, (ps) => {\n        const type = encodedAST_(ps.type, isBound)\n        return type === ps.type\n          ? ps\n          : new PropertySignature(ps.name, type, ps.isOptional, ps.isReadonly)\n      })\n      const indexSignatures = changeMap(ast.indexSignatures, (is) => {\n        const type = encodedAST_(is.type, isBound)\n        return type === is.type ? is : new IndexSignature(is.parameter, type, is.isReadonly)\n      })\n      return propertySignatures === ast.propertySignatures && indexSignatures === ast.indexSignatures ?\n        ast :\n        new TypeLiteral(propertySignatures, indexSignatures)\n    }\n    case \"Union\": {\n      const types = changeMap(ast.types, (ast) => encodedAST_(ast, isBound))\n      return types === ast.types ? ast : Union.make(types)\n    }\n    case \"Suspend\": {\n      let borrowedAnnotations = undefined\n      const identifier = getJSONIdentifier(ast)\n      if (Option.isSome(identifier)) {\n        const suffix = isBound ? \"Bound\" : \"\"\n        borrowedAnnotations = { [JSONIdentifierAnnotationId]: `${identifier.value}Encoded${suffix}` }\n      }\n      return new Suspend(() => encodedAST_(ast.f(), isBound), borrowedAnnotations)\n    }\n    case \"Refinement\": {\n      const from = encodedAST_(ast.from, isBound)\n      if (isBound) {\n        if (from === ast.from) return ast\n        if (getTransformationFrom(ast.from) === undefined && hasStableFilter(ast)) {\n          return new Refinement(from, ast.filter, ast.annotations)\n        }\n        return from\n      } else {\n        return from\n      }\n    }\n    case \"Transformation\":\n      return encodedAST_(ast.from, isBound)\n  }\n  return ast\n}\n\n/**\n * @since 3.10.0\n */\nexport const encodedAST = (ast: AST): AST => encodedAST_(ast, false)\n\n/**\n * @since 3.10.0\n */\nexport const encodedBoundAST = (ast: AST): AST => encodedAST_(ast, true)\n\nconst toJSONAnnotations = (annotations: Annotations): object => {\n  const out: Record<string, unknown> = {}\n  for (const k of Object.getOwnPropertySymbols(annotations)) {\n    out[String(k)] = annotations[k]\n  }\n  return out\n}\n\n/** @internal */\nexport const getEncodedParameter = (\n  ast: Parameter\n): StringKeyword | SymbolKeyword | TemplateLiteral => {\n  switch (ast._tag) {\n    case \"StringKeyword\":\n    case \"SymbolKeyword\":\n    case \"TemplateLiteral\":\n      return ast\n    case \"Refinement\":\n      return getEncodedParameter(ast.from)\n  }\n}\n\n/** @internal  */\nexport const equals = (self: AST, that: AST): boolean => {\n  switch (self._tag) {\n    case \"Literal\":\n      return isLiteral(that) && that.literal === self.literal\n    case \"UniqueSymbol\":\n      return isUniqueSymbol(that) && that.symbol === self.symbol\n    case \"UndefinedKeyword\":\n    case \"VoidKeyword\":\n    case \"NeverKeyword\":\n    case \"UnknownKeyword\":\n    case \"AnyKeyword\":\n    case \"StringKeyword\":\n    case \"NumberKeyword\":\n    case \"BooleanKeyword\":\n    case \"BigIntKeyword\":\n    case \"SymbolKeyword\":\n    case \"ObjectKeyword\":\n      return that._tag === self._tag\n    case \"TemplateLiteral\":\n      return isTemplateLiteral(that) && that.head === self.head && equalsTemplateLiteralSpan(that.spans, self.spans)\n    case \"Enums\":\n      return isEnums(that) && equalsEnums(that.enums, self.enums)\n    case \"Union\":\n      return isUnion(that) && equalsUnion(self.types, that.types)\n    case \"Refinement\":\n    case \"TupleType\":\n    case \"TypeLiteral\":\n    case \"Suspend\":\n    case \"Transformation\":\n    case \"Declaration\":\n      return self === that\n  }\n}\n\nconst equalsTemplateLiteralSpan = Arr.getEquivalence<TemplateLiteralSpan>((self, that): boolean => {\n  return self.literal === that.literal && equals(self.type, that.type)\n})\n\nconst equalsEnums = Arr.getEquivalence<readonly [string, string | number]>((self, that) =>\n  that[0] === self[0] && that[1] === self[1]\n)\n\nconst equalsUnion = Arr.getEquivalence<AST>(equals)\n\nconst intersection = Arr.intersectionWith(equals)\n\nconst _keyof = (ast: AST): Array<AST> => {\n  switch (ast._tag) {\n    case \"Declaration\": {\n      const annotation = getSurrogateAnnotation(ast)\n      if (Option.isSome(annotation)) {\n        return _keyof(annotation.value)\n      }\n      break\n    }\n    case \"TypeLiteral\":\n      return ast.propertySignatures.map((p): AST =>\n        Predicate.isSymbol(p.name) ? new UniqueSymbol(p.name) : new Literal(p.name)\n      ).concat(ast.indexSignatures.map((is) => getEncodedParameter(is.parameter)))\n    case \"Suspend\":\n      return _keyof(ast.f())\n    case \"Union\":\n      return ast.types.slice(1).reduce(\n        (out: Array<AST>, ast) => intersection(out, _keyof(ast)),\n        _keyof(ast.types[0])\n      )\n    case \"Transformation\":\n      return _keyof(ast.to)\n  }\n  throw new Error(errors_.getASTUnsupportedSchemaErrorMessage(ast))\n}\n\n/** @internal */\nexport const compose = (ab: AST, cd: AST): AST => new Transformation(ab, cd, composeTransformation)\n\n/** @internal */\nexport const rename = (ast: AST, mapping: { readonly [K in PropertyKey]?: PropertyKey }): AST => {\n  switch (ast._tag) {\n    case \"TypeLiteral\": {\n      const propertySignatureTransformations: Array<PropertySignatureTransformation> = []\n      for (const key of Reflect.ownKeys(mapping)) {\n        const name = mapping[key]\n        if (name !== undefined) {\n          propertySignatureTransformations.push(\n            new PropertySignatureTransformation(\n              key,\n              name,\n              identity,\n              identity\n            )\n          )\n        }\n      }\n      if (propertySignatureTransformations.length === 0) {\n        return ast\n      }\n      return new Transformation(\n        ast,\n        new TypeLiteral(\n          ast.propertySignatures.map((ps) => {\n            const name = mapping[ps.name]\n            return new PropertySignature(\n              name === undefined ? ps.name : name,\n              typeAST(ps.type),\n              ps.isOptional,\n              ps.isReadonly,\n              ps.annotations\n            )\n          }),\n          ast.indexSignatures\n        ),\n        new TypeLiteralTransformation(propertySignatureTransformations)\n      )\n    }\n    case \"Union\":\n      return Union.make(ast.types.map((ast) => rename(ast, mapping)))\n    case \"Suspend\":\n      return new Suspend(() => rename(ast.f(), mapping))\n    case \"Transformation\":\n      return compose(ast, rename(typeAST(ast), mapping))\n  }\n  throw new Error(errors_.getASTUnsupportedRenameSchemaErrorMessage(ast))\n}\n\nconst formatKeyword = (ast: AST): string => Option.getOrElse(getExpected(ast), () => ast._tag)\n\nfunction getBrands(ast: Annotated): string {\n  return Option.match(getBrandAnnotation(ast), {\n    onNone: () => \"\",\n    onSome: (brands) => brands.map((brand) => ` & Brand<${util_.formatUnknown(brand)}>`).join(\"\")\n  })\n}\n\nconst getOrElseExpected = (ast: Annotated): Option.Option<string> =>\n  getTitleAnnotation(ast).pipe(\n    Option.orElse(() => getDescriptionAnnotation(ast)),\n    Option.orElse(() => getAutoTitleAnnotation(ast)),\n    Option.map((s) => s + getBrands(ast))\n  )\n\nconst getExpected = (ast: Annotated): Option.Option<string> =>\n  Option.orElse(getIdentifierAnnotation(ast), () => getOrElseExpected(ast))\n\n/** @internal */\nexport const pruneUndefined = (\n  ast: AST,\n  self: (ast: AST) => AST | undefined,\n  onTransformation: (ast: Transformation) => AST | undefined\n): AST | undefined => {\n  switch (ast._tag) {\n    case \"UndefinedKeyword\":\n      return neverKeyword\n    case \"Union\": {\n      const types: Array<AST> = []\n      let hasUndefined = false\n      for (const type of ast.types) {\n        const pruned = self(type)\n        if (pruned) {\n          hasUndefined = true\n          if (!isNeverKeyword(pruned)) {\n            types.push(pruned)\n          }\n        } else {\n          types.push(type)\n        }\n      }\n      if (hasUndefined) {\n        return Union.make(types)\n      }\n      break\n    }\n    case \"Suspend\":\n      return self(ast.f())\n    case \"Transformation\":\n      return onTransformation(ast)\n  }\n}\n","/**\n * @since 3.10.0\n */\n\nimport type { StandardSchemaV1 } from \"@standard-schema/spec\"\nimport type { ArbitraryAnnotation, ArbitraryGenerationContext, LazyArbitrary } from \"./Arbitrary.js\"\nimport * as array_ from \"./Array.js\"\nimport * as bigDecimal_ from \"./BigDecimal.js\"\nimport * as bigInt_ from \"./BigInt.js\"\nimport * as boolean_ from \"./Boolean.js\"\nimport type { Brand } from \"./Brand.js\"\nimport * as cause_ from \"./Cause.js\"\nimport * as chunk_ from \"./Chunk.js\"\nimport * as config_ from \"./Config.js\"\nimport * as configError_ from \"./ConfigError.js\"\nimport * as data_ from \"./Data.js\"\nimport * as dateTime from \"./DateTime.js\"\nimport * as duration_ from \"./Duration.js\"\nimport * as Effect from \"./Effect.js\"\nimport * as either_ from \"./Either.js\"\nimport * as Encoding from \"./Encoding.js\"\nimport * as Equal from \"./Equal.js\"\nimport * as Equivalence from \"./Equivalence.js\"\nimport * as exit_ from \"./Exit.js\"\nimport * as fastCheck_ from \"./FastCheck.js\"\nimport * as fiberId_ from \"./FiberId.js\"\nimport type { LazyArg } from \"./Function.js\"\nimport { dual, identity } from \"./Function.js\"\nimport { globalValue } from \"./GlobalValue.js\"\nimport * as hashMap_ from \"./HashMap.js\"\nimport * as hashSet_ from \"./HashSet.js\"\nimport * as internalCause_ from \"./internal/cause.js\"\nimport * as errors_ from \"./internal/schema/errors.js\"\nimport * as schemaId_ from \"./internal/schema/schemaId.js\"\nimport * as util_ from \"./internal/schema/util.js\"\nimport * as list_ from \"./List.js\"\nimport * as number_ from \"./Number.js\"\nimport * as option_ from \"./Option.js\"\nimport type * as Order from \"./Order.js\"\nimport * as ParseResult from \"./ParseResult.js\"\nimport type { Pipeable } from \"./Pipeable.js\"\nimport { pipeArguments } from \"./Pipeable.js\"\nimport * as Predicate from \"./Predicate.js\"\nimport type * as pretty_ from \"./Pretty.js\"\nimport * as redacted_ from \"./Redacted.js\"\nimport * as Request from \"./Request.js\"\nimport * as scheduler_ from \"./Scheduler.js\"\nimport type { ParseOptions } from \"./SchemaAST.js\"\nimport * as AST from \"./SchemaAST.js\"\nimport * as sortedSet_ from \"./SortedSet.js\"\nimport * as string_ from \"./String.js\"\nimport * as struct_ from \"./Struct.js\"\nimport type * as Types from \"./Types.js\"\n\n/**\n * @since 3.10.0\n */\nexport type Simplify<A> = { [K in keyof A]: A[K] } & {}\n\n/**\n * @since 3.10.0\n */\nexport type SimplifyMutable<A> = {\n  -readonly [K in keyof A]: A[K]\n} extends infer B ? B : never\n\n/**\n * @since 3.10.0\n * @category symbol\n */\nexport const TypeId: unique symbol = Symbol.for(\"effect/Schema\")\n\n/**\n * @since 3.10.0\n * @category symbol\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport interface Schema<in out A, in out I = A, out R = never> extends Schema.Variance<A, I, R>, Pipeable {\n  readonly Type: A\n  readonly Encoded: I\n  readonly Context: R\n  readonly ast: AST.AST\n  /**\n   * Merges a set of new annotations with existing ones, potentially overwriting\n   * any duplicates.\n   */\n  annotations(annotations: Annotations.GenericSchema<A>): Schema<A, I, R>\n}\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport interface Annotable<Self extends Schema<A, I, R>, A, I = A, R = never> extends Schema<A, I, R> {\n  annotations(annotations: Annotations.GenericSchema<A>): Self\n}\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport interface AnnotableClass<Self extends Schema<A, I, R>, A, I = A, R = never> extends Annotable<Self, A, I, R> {\n  new(_: never): Schema.Variance<A, I, R>\n}\n\n/**\n * @category model\n * @since 3.10.0\n */\nexport interface SchemaClass<A, I = A, R = never> extends AnnotableClass<SchemaClass<A, I, R>, A, I, R> {}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport function make<A, I = A, R = never>(ast: AST.AST): SchemaClass<A, I, R> {\n  return class SchemaClass {\n    [TypeId] = variance\n    static ast = ast\n    static annotations(annotations: Annotations.GenericSchema<A>) {\n      return make<A, I, R>(mergeSchemaAnnotations(this.ast, annotations))\n    }\n    static pipe() {\n      return pipeArguments(this, arguments)\n    }\n    static toString() {\n      return String(ast)\n    }\n    static Type: A\n    static Encoded: I\n    static Context: R\n    static [TypeId] = variance\n  }\n}\n\nconst variance = {\n  /* c8 ignore next */\n  _A: (_: any) => _,\n  /* c8 ignore next */\n  _I: (_: any) => _,\n  /* c8 ignore next */\n  _R: (_: never) => _\n}\n\nconst makeStandardResult = <A>(exit: exit_.Exit<StandardSchemaV1.Result<A>>): StandardSchemaV1.Result<A> =>\n  exit_.isSuccess(exit) ? exit.value : makeStandardFailureResult(cause_.pretty(exit.cause))\n\nconst makeStandardFailureResult = (message: string): StandardSchemaV1.FailureResult => ({\n  issues: [{ message }]\n})\n\nconst makeStandardFailureFromParseIssue = (\n  issue: ParseResult.ParseIssue\n): Effect.Effect<StandardSchemaV1.FailureResult> =>\n  Effect.map(ParseResult.ArrayFormatter.formatIssue(issue), (issues) => ({\n    issues: issues.map((issue) => ({\n      path: issue.path,\n      message: issue.message\n    }))\n  }))\n\n/**\n * Returns a \"Standard Schema\" object conforming to the [Standard Schema\n * v1](https://standardschema.dev/) specification.\n *\n * This function creates a schema whose `validate` method attempts to decode and\n * validate the provided input synchronously. If the underlying `Schema`\n * includes any asynchronous components (e.g., asynchronous message resolutions\n * or checks), then validation will necessarily return a `Promise` instead.\n *\n * Any detected defects will be reported via a single issue containing no\n * `path`.\n *\n * @example\n * ```ts\n * import { Schema } from \"effect\"\n *\n * const schema = Schema.Struct({\n *   name: Schema.String\n * })\n *\n * //      ┌─── StandardSchemaV1<{ readonly name: string; }>\n * //      ▼\n * const standardSchema = Schema.standardSchemaV1(schema)\n * ```\n *\n * @category Standard Schema\n * @since 3.13.0\n */\nexport const standardSchemaV1 = <A, I>(\n  schema: Schema<A, I, never>,\n  overrideOptions?: AST.ParseOptions\n): StandardSchemaV1<I, A> & SchemaClass<A, I, never> => {\n  const decodeUnknown = ParseResult.decodeUnknown(schema, { errors: \"all\" })\n  return class StandardSchemaV1Class extends make<A, I, never>(schema.ast) {\n    static \"~standard\" = {\n      version: 1,\n      vendor: \"effect\",\n      validate(value) {\n        const scheduler = new scheduler_.SyncScheduler()\n        const fiber = Effect.runFork(\n          Effect.matchEffect(decodeUnknown(value, overrideOptions), {\n            onFailure: makeStandardFailureFromParseIssue,\n            onSuccess: (value) => Effect.succeed({ value })\n          }),\n          { scheduler }\n        )\n        scheduler.flush()\n        const exit = fiber.unsafePoll()\n        if (exit) {\n          return makeStandardResult(exit)\n        }\n        return new Promise((resolve) => {\n          fiber.addObserver((exit) => {\n            resolve(makeStandardResult(exit))\n          })\n        })\n      }\n    }\n  }\n}\n\ninterface AllAnnotations<A, TypeParameters extends ReadonlyArray<any>>\n  extends Annotations.Schema<A, TypeParameters>, PropertySignature.Annotations<A>\n{}\n\nconst builtInAnnotations = {\n  schemaId: AST.SchemaIdAnnotationId,\n  message: AST.MessageAnnotationId,\n  missingMessage: AST.MissingMessageAnnotationId,\n  identifier: AST.IdentifierAnnotationId,\n  title: AST.TitleAnnotationId,\n  description: AST.DescriptionAnnotationId,\n  examples: AST.ExamplesAnnotationId,\n  default: AST.DefaultAnnotationId,\n  documentation: AST.DocumentationAnnotationId,\n  jsonSchema: AST.JSONSchemaAnnotationId,\n  arbitrary: AST.ArbitraryAnnotationId,\n  pretty: AST.PrettyAnnotationId,\n  equivalence: AST.EquivalenceAnnotationId,\n  concurrency: AST.ConcurrencyAnnotationId,\n  batching: AST.BatchingAnnotationId,\n  parseIssueTitle: AST.ParseIssueTitleAnnotationId,\n  parseOptions: AST.ParseOptionsAnnotationId,\n  decodingFallback: AST.DecodingFallbackAnnotationId\n}\n\nconst toASTAnnotations = <A, TypeParameters extends ReadonlyArray<any>>(\n  annotations?: AllAnnotations<A, TypeParameters>\n): AST.Annotations => {\n  if (!annotations) {\n    return {}\n  }\n  const out: Types.Mutable<AST.Annotations> = { ...annotations }\n\n  for (const key in builtInAnnotations) {\n    if (key in annotations) {\n      const id = builtInAnnotations[key as keyof typeof builtInAnnotations]\n      out[id] = annotations[key as keyof typeof annotations]\n      delete out[key]\n    }\n  }\n\n  return out\n}\n\nconst mergeSchemaAnnotations = <A>(ast: AST.AST, annotations: Annotations.Schema<A>): AST.AST =>\n  AST.annotations(ast, toASTAnnotations(annotations))\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport declare namespace Annotable {\n  /**\n   * @since 3.10.0\n   */\n  export type Self<S extends All> = ReturnType<S[\"annotations\"]>\n\n  /**\n   * @since 3.10.0\n   */\n  export type Any = Annotable<any, any, any, unknown>\n\n  /**\n   * @since 3.10.0\n   */\n  export type All =\n    | Any\n    | Annotable<any, any, never, unknown>\n    | Annotable<any, never, any, unknown>\n    | Annotable<any, never, never, unknown>\n}\n\n/**\n * @since 3.10.0\n */\nexport function asSchema<S extends Schema.All>(\n  schema: S\n): Schema<Schema.Type<S>, Schema.Encoded<S>, Schema.Context<S>> {\n  return schema as any\n}\n\n/**\n * @category formatting\n * @since 3.10.0\n */\nexport const format = <S extends Schema.All>(schema: S): string => String(schema.ast)\n\n/**\n * @since 3.10.0\n */\nexport declare namespace Schema {\n  /**\n   * @since 3.10.0\n   */\n  export interface Variance<A, I, R> {\n    readonly [TypeId]: {\n      readonly _A: Types.Invariant<A>\n      readonly _I: Types.Invariant<I>\n      readonly _R: Types.Covariant<R>\n    }\n  }\n\n  /**\n   * @since 3.10.0\n   */\n  export type Type<S> = S extends Schema.Variance<infer A, infer _I, infer _R> ? A : never\n\n  /**\n   * @since 3.10.0\n   */\n  export type Encoded<S> = S extends Schema.Variance<infer _A, infer I, infer _R> ? I : never\n\n  /**\n   * @since 3.10.0\n   */\n  export type Context<S> = S extends Schema.Variance<infer _A, infer _I, infer R> ? R : never\n\n  /**\n   * @since 3.10.0\n   */\n  export type ToAsserts<S extends AnyNoContext> = (\n    input: unknown,\n    options?: AST.ParseOptions\n  ) => asserts input is Schema.Type<S>\n\n  /**\n   * Any schema, except for `never`.\n   *\n   * @since 3.10.0\n   */\n  export type Any = Schema<any, any, unknown>\n\n  /**\n   * Any schema with `Context = never`, except for `never`.\n   *\n   * @since 3.10.0\n   */\n  export type AnyNoContext = Schema<any, any, never>\n\n  /**\n   * Any schema, including `never`.\n   *\n   * @since 3.10.0\n   */\n  export type All =\n    | Any\n    | Schema<any, never, unknown>\n    | Schema<never, any, unknown>\n    | Schema<never, never, unknown>\n\n  /**\n   * Type-level counterpart of `Schema.asSchema` function.\n   *\n   * @since 3.10.0\n   */\n  export type AsSchema<S extends All> = Schema<Type<S>, Encoded<S>, Context<S>>\n}\n\n/**\n * The `encodedSchema` function allows you to extract the `Encoded` portion of a\n * schema, creating a new schema that conforms to the properties defined in the\n * original schema without retaining any refinements or transformations that\n * were applied previously.\n *\n * @since 3.10.0\n */\nexport const encodedSchema = <A, I, R>(schema: Schema<A, I, R>): SchemaClass<I> => make(AST.encodedAST(schema.ast))\n\n/**\n * The `encodedBoundSchema` function is similar to `encodedSchema` but preserves\n * the refinements up to the first transformation point in the original schema.\n *\n * @since 3.10.0\n */\nexport const encodedBoundSchema = <A, I, R>(schema: Schema<A, I, R>): SchemaClass<I> =>\n  make(AST.encodedBoundAST(schema.ast))\n\n/**\n * The `typeSchema` function allows you to extract the `Type` portion of a\n * schema, creating a new schema that conforms to the properties defined in the\n * original schema without considering the initial encoding or transformation\n * processes.\n *\n * @since 3.10.0\n */\nexport const typeSchema = <A, I, R>(schema: Schema<A, I, R>): SchemaClass<A> => make(AST.typeAST(schema.ast))\n\n/* c8 ignore start */\nexport {\n  /**\n   * By default the option `exact` is set to `true`.\n   *\n   * @throws `ParseError`\n   * @category validation\n   * @since 3.10.0\n   */\n  asserts,\n  /**\n   * @category decoding\n   * @since 3.10.0\n   */\n  decodeOption,\n  /**\n   * @throws `ParseError`\n   * @category decoding\n   * @since 3.10.0\n   */\n  decodeSync,\n  /**\n   * @category decoding\n   * @since 3.10.0\n   */\n  decodeUnknownOption,\n  /**\n   * @throws `ParseError`\n   * @category decoding\n   * @since 3.10.0\n   */\n  decodeUnknownSync,\n  /**\n   * @category encoding\n   * @since 3.10.0\n   */\n  encodeOption,\n  /**\n   * @throws `ParseError`\n   * @category encoding\n   * @since 3.10.0\n   */\n  encodeSync,\n  /**\n   * @category encoding\n   * @since 3.10.0\n   */\n  encodeUnknownOption,\n  /**\n   * @throws `ParseError`\n   * @category encoding\n   * @since 3.10.0\n   */\n  encodeUnknownSync,\n  /**\n   * By default the option `exact` is set to `true`.\n   *\n   * @category validation\n   * @since 3.10.0\n   */\n  is,\n  /**\n   * @category validation\n   * @since 3.10.0\n   */\n  validateOption,\n  /**\n   * @throws `ParseError`\n   * @category validation\n   * @since 3.10.0\n   */\n  validateSync\n} from \"./ParseResult.js\"\n/* c8 ignore end */\n\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeUnknown = <A, I, R>(\n  schema: Schema<A, I, R>,\n  options?: ParseOptions\n) => {\n  const encodeUnknown = ParseResult.encodeUnknown(schema, options)\n  return (u: unknown, overrideOptions?: ParseOptions): Effect.Effect<I, ParseResult.ParseError, R> =>\n    ParseResult.mapError(encodeUnknown(u, overrideOptions), ParseResult.parseError)\n}\n\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeUnknownEither = <A, I>(\n  schema: Schema<A, I, never>,\n  options?: ParseOptions\n) => {\n  const encodeUnknownEither = ParseResult.encodeUnknownEither(schema, options)\n  return (u: unknown, overrideOptions?: ParseOptions): either_.Either<I, ParseResult.ParseError> =>\n    either_.mapLeft(encodeUnknownEither(u, overrideOptions), ParseResult.parseError)\n}\n\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeUnknownPromise = <A, I>(\n  schema: Schema<A, I, never>,\n  options?: ParseOptions\n) => {\n  const parser = encodeUnknown(schema, options)\n  return (u: unknown, overrideOptions?: ParseOptions): Promise<I> => Effect.runPromise(parser(u, overrideOptions))\n}\n\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encode: <A, I, R>(\n  schema: Schema<A, I, R>,\n  options?: ParseOptions\n) => (a: A, overrideOptions?: ParseOptions) => Effect.Effect<I, ParseResult.ParseError, R> = encodeUnknown\n\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeEither: <A, I>(\n  schema: Schema<A, I, never>,\n  options?: ParseOptions\n) => (a: A, overrideOptions?: ParseOptions) => either_.Either<I, ParseResult.ParseError> = encodeUnknownEither\n\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodePromise: <A, I>(\n  schema: Schema<A, I, never>,\n  options?: ParseOptions\n) => (a: A, overrideOptions?: ParseOptions) => Promise<I> = encodeUnknownPromise\n\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeUnknown = <A, I, R>(\n  schema: Schema<A, I, R>,\n  options?: ParseOptions\n) => {\n  const decodeUnknown = ParseResult.decodeUnknown(schema, options)\n  return (u: unknown, overrideOptions?: ParseOptions): Effect.Effect<A, ParseResult.ParseError, R> =>\n    ParseResult.mapError(decodeUnknown(u, overrideOptions), ParseResult.parseError)\n}\n\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeUnknownEither = <A, I>(\n  schema: Schema<A, I, never>,\n  options?: ParseOptions\n) => {\n  const decodeUnknownEither = ParseResult.decodeUnknownEither(schema, options)\n  return (u: unknown, overrideOptions?: ParseOptions): either_.Either<A, ParseResult.ParseError> =>\n    either_.mapLeft(decodeUnknownEither(u, overrideOptions), ParseResult.parseError)\n}\n\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeUnknownPromise = <A, I>(\n  schema: Schema<A, I, never>,\n  options?: ParseOptions\n) => {\n  const parser = decodeUnknown(schema, options)\n  return (u: unknown, overrideOptions?: ParseOptions): Promise<A> => Effect.runPromise(parser(u, overrideOptions))\n}\n\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decode: <A, I, R>(\n  schema: Schema<A, I, R>,\n  options?: ParseOptions\n) => (i: I, overrideOptions?: ParseOptions) => Effect.Effect<A, ParseResult.ParseError, R> = decodeUnknown\n\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeEither: <A, I>(\n  schema: Schema<A, I, never>,\n  options?: ParseOptions\n) => (i: I, overrideOptions?: ParseOptions) => either_.Either<A, ParseResult.ParseError> = decodeUnknownEither\n\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodePromise: <A, I>(\n  schema: Schema<A, I, never>,\n  options?: ParseOptions\n) => (i: I, overrideOptions?: ParseOptions) => Promise<A> = decodeUnknownPromise\n\n/**\n * @category validation\n * @since 3.10.0\n */\nexport const validate = <A, I, R>(\n  schema: Schema<A, I, R>,\n  options?: ParseOptions\n) => {\n  const validate = ParseResult.validate(schema, options)\n  return (u: unknown, overrideOptions?: ParseOptions): Effect.Effect<A, ParseResult.ParseError, R> =>\n    ParseResult.mapError(validate(u, overrideOptions), ParseResult.parseError)\n}\n\n/**\n * @category validation\n * @since 3.10.0\n */\nexport const validateEither = <A, I, R>(\n  schema: Schema<A, I, R>,\n  options?: ParseOptions\n) => {\n  const validateEither = ParseResult.validateEither(schema, options)\n  return (u: unknown, overrideOptions?: ParseOptions): either_.Either<A, ParseResult.ParseError> =>\n    either_.mapLeft(validateEither(u, overrideOptions), ParseResult.parseError)\n}\n\n/**\n * @category validation\n * @since 3.10.0\n */\nexport const validatePromise = <A, I>(\n  schema: Schema<A, I, never>,\n  options?: ParseOptions\n) => {\n  const parser = validate(schema, options)\n  return (u: unknown, overrideOptions?: ParseOptions): Promise<A> => Effect.runPromise(parser(u, overrideOptions))\n}\n\n/**\n * Tests if a value is a `Schema`.\n *\n * @category guards\n * @since 3.10.0\n */\nexport const isSchema = (u: unknown): u is Schema.Any =>\n  Predicate.hasProperty(u, TypeId) && Predicate.isObject(u[TypeId])\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface Literal<Literals extends array_.NonEmptyReadonlyArray<AST.LiteralValue>>\n  extends AnnotableClass<Literal<Literals>, Literals[number]>\n{\n  readonly literals: Readonly<Literals>\n}\n\nfunction getDefaultLiteralAST<Literals extends array_.NonEmptyReadonlyArray<AST.LiteralValue>>(\n  literals: Literals\n): AST.AST {\n  return AST.isMembers(literals)\n    ? AST.Union.make(AST.mapMembers(literals, (literal) => new AST.Literal(literal)))\n    : new AST.Literal(literals[0])\n}\n\nfunction makeLiteralClass<Literals extends array_.NonEmptyReadonlyArray<AST.LiteralValue>>(\n  literals: Literals,\n  ast: AST.AST = getDefaultLiteralAST(literals)\n): Literal<Literals> {\n  return class LiteralClass extends make<Literals[number]>(ast) {\n    static override annotations(annotations: Annotations.Schema<Literals[number]>): Literal<Literals> {\n      return makeLiteralClass(this.literals, mergeSchemaAnnotations(this.ast, annotations))\n    }\n    static literals = [...literals] as Literals\n  }\n}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport function Literal<Literals extends array_.NonEmptyReadonlyArray<AST.LiteralValue>>(\n  ...literals: Literals\n): Literal<Literals>\nexport function Literal(): Never\nexport function Literal<Literals extends ReadonlyArray<AST.LiteralValue>>(\n  ...literals: Literals\n): SchemaClass<Literals[number]>\nexport function Literal<Literals extends ReadonlyArray<AST.LiteralValue>>(\n  ...literals: Literals\n): SchemaClass<Literals[number]> | Never {\n  return array_.isNonEmptyReadonlyArray(literals) ? makeLiteralClass(literals) : Never\n}\n\n/**\n * Creates a new `Schema` from a literal schema.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either, Schema } from \"effect\"\n *\n * const schema = Schema.Literal(\"a\", \"b\", \"c\").pipe(Schema.pickLiteral(\"a\", \"b\"))\n *\n * assert.deepStrictEqual(Schema.decodeSync(schema)(\"a\"), \"a\")\n * assert.deepStrictEqual(Schema.decodeSync(schema)(\"b\"), \"b\")\n * assert.strictEqual(Either.isLeft(Schema.decodeUnknownEither(schema)(\"c\")), true)\n * ```\n *\n * @category constructors\n * @since 3.10.0\n */\nexport const pickLiteral =\n  <A extends AST.LiteralValue, L extends array_.NonEmptyReadonlyArray<A>>(...literals: L) =>\n  <I, R>(_schema: Schema<A, I, R>): Literal<[...L]> => Literal(...literals)\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const UniqueSymbolFromSelf = <S extends symbol>(symbol: S): SchemaClass<S> => make(new AST.UniqueSymbol(symbol))\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface Enums<A extends EnumsDefinition> extends AnnotableClass<Enums<A>, A[keyof A]> {\n  readonly enums: A\n}\n\n/**\n * @since 3.10.0\n */\nexport type EnumsDefinition = { [x: string]: string | number }\n\nconst getDefaultEnumsAST = <A extends EnumsDefinition>(enums: A) =>\n  new AST.Enums(\n    Object.keys(enums).filter(\n      (key) => typeof enums[enums[key]] !== \"number\"\n    ).map((key) => [key, enums[key]])\n  )\n\nconst makeEnumsClass = <A extends EnumsDefinition>(\n  enums: A,\n  ast: AST.AST = getDefaultEnumsAST(enums)\n): Enums<A> => (class EnumsClass extends make<A[keyof A]>(ast) {\n  static override annotations(annotations: Annotations.Schema<A[keyof A]>) {\n    return makeEnumsClass(this.enums, mergeSchemaAnnotations(this.ast, annotations))\n  }\n\n  static enums = { ...enums }\n})\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const Enums = <A extends EnumsDefinition>(enums: A): Enums<A> => makeEnumsClass(enums)\n\ntype AppendType<\n  Template extends string,\n  Next\n> = Next extends AST.LiteralValue ? `${Template}${Next}`\n  : Next extends Schema<infer A extends AST.LiteralValue, infer _I, infer _R> ? `${Template}${A}`\n  : never\n\ntype GetTemplateLiteralType<Params> = Params extends [...infer Init, infer Last] ?\n  AppendType<GetTemplateLiteralType<Init>, Last>\n  : ``\n\n/**\n * @category API interface\n * @since 3.10.0\n */\nexport interface TemplateLiteral<A> extends SchemaClass<A> {}\n\ntype TemplateLiteralParameter = Schema.AnyNoContext | AST.LiteralValue\n\n/**\n * @category template literal\n * @since 3.10.0\n */\nexport const TemplateLiteral = <Params extends array_.NonEmptyReadonlyArray<TemplateLiteralParameter>>(\n  ...[head, ...tail]: Params\n): TemplateLiteral<GetTemplateLiteralType<Params>> => {\n  const spans: Array<AST.TemplateLiteralSpan> = []\n  let h = \"\"\n  let ts = tail\n\n  if (isSchema(head)) {\n    if (AST.isLiteral(head.ast)) {\n      h = String(head.ast.literal)\n    } else {\n      ts = [head, ...ts]\n    }\n  } else {\n    h = String(head)\n  }\n\n  for (let i = 0; i < ts.length; i++) {\n    const item = ts[i]\n    if (isSchema(item)) {\n      if (i < ts.length - 1) {\n        const next = ts[i + 1]\n        if (isSchema(next)) {\n          if (AST.isLiteral(next.ast)) {\n            spans.push(new AST.TemplateLiteralSpan(item.ast, String(next.ast.literal)))\n            i++\n            continue\n          }\n        } else {\n          spans.push(new AST.TemplateLiteralSpan(item.ast, String(next)))\n          i++\n          continue\n        }\n      }\n      spans.push(new AST.TemplateLiteralSpan(item.ast, \"\"))\n    } else {\n      spans.push(new AST.TemplateLiteralSpan(new AST.Literal(item), \"\"))\n    }\n  }\n\n  if (array_.isNonEmptyArray(spans)) {\n    return make(new AST.TemplateLiteral(h, spans))\n  } else {\n    return make(new AST.TemplateLiteral(\"\", [new AST.TemplateLiteralSpan(new AST.Literal(h), \"\")]))\n  }\n}\n\ntype TemplateLiteralParserParameters = Schema.Any | AST.LiteralValue\n\ntype GetTemplateLiteralParserType<Params> = Params extends [infer Head, ...infer Tail] ? readonly [\n    Head extends Schema<infer A, infer _I, infer _R> ? A : Head,\n    ...GetTemplateLiteralParserType<Tail>\n  ]\n  : []\n\ntype AppendEncoded<\n  Template extends string,\n  Next\n> = Next extends AST.LiteralValue ? `${Template}${Next}`\n  : Next extends Schema<infer _A, infer I extends AST.LiteralValue, infer _R> ? `${Template}${I}`\n  : never\n\ntype GetTemplateLiteralParserEncoded<Params> = Params extends [...infer Init, infer Last] ?\n  AppendEncoded<GetTemplateLiteralParserEncoded<Init>, Last>\n  : ``\n\n/**\n * @category API interface\n * @since 3.10.0\n */\nexport interface TemplateLiteralParser<Params extends array_.NonEmptyReadonlyArray<TemplateLiteralParserParameters>>\n  extends\n    Schema<\n      GetTemplateLiteralParserType<Params>,\n      GetTemplateLiteralParserEncoded<Params>,\n      Schema.Context<Params[number]>\n    >\n{\n  readonly params: Params\n}\n\nfunction getTemplateLiteralParserCoercedElement(encoded: Schema.Any, schema: Schema.Any): Schema.Any | undefined {\n  const ast = encoded.ast\n  switch (ast._tag) {\n    case \"Literal\": {\n      const literal = ast.literal\n      if (!Predicate.isString(literal)) {\n        const s = String(literal)\n        return transform(Literal(s), schema, {\n          strict: true,\n          decode: () => literal,\n          encode: () => s\n        })\n      }\n      break\n    }\n    case \"NumberKeyword\":\n      return compose(NumberFromString, schema)\n    case \"Union\": {\n      const members: Array<Schema.Any> = []\n      let hasCoercions = false\n      for (const member of ast.types) {\n        const schema = make(member)\n        const encoded = encodedSchema(schema)\n        const coerced = getTemplateLiteralParserCoercedElement(encoded, schema)\n        if (coerced) {\n          hasCoercions = true\n        }\n        members.push(coerced ?? schema)\n      }\n      return hasCoercions ? compose(Union(...members), schema) : schema\n    }\n  }\n}\n\n/**\n * @category template literal\n * @since 3.10.0\n */\nexport const TemplateLiteralParser = <Params extends array_.NonEmptyReadonlyArray<TemplateLiteralParserParameters>>(\n  ...params: Params\n): TemplateLiteralParser<Params> => {\n  const encodedSchemas: Array<Schema.Any> = []\n  const elements: Array<Schema.Any> = []\n  const schemas: Array<Schema.Any> = []\n  let coerced = false\n  for (let i = 0; i < params.length; i++) {\n    const param = params[i]\n    const schema = isSchema(param) ? param : Literal(param)\n    schemas.push(schema)\n    const encoded = encodedSchema(schema)\n    encodedSchemas.push(encoded)\n    const element = getTemplateLiteralParserCoercedElement(encoded, schema)\n    if (element) {\n      elements.push(element)\n      coerced = true\n    } else {\n      elements.push(schema)\n    }\n  }\n  const from = TemplateLiteral(...encodedSchemas as any)\n  const re = AST.getTemplateLiteralCapturingRegExp(from.ast as AST.TemplateLiteral)\n  let to = Tuple(...elements)\n  if (coerced) {\n    to = to.annotations({ [AST.AutoTitleAnnotationId]: format(Tuple(...schemas)) })\n  }\n  return class TemplateLiteralParserClass extends transformOrFail(from, to, {\n    strict: false,\n    decode: (i, _, ast) => {\n      const match = re.exec(i)\n      return match\n        ? ParseResult.succeed(match.slice(1, params.length + 1))\n        : ParseResult.fail(new ParseResult.Type(ast, i, `${re.source}: no match for ${JSON.stringify(i)}`))\n    },\n    encode: (tuple) => ParseResult.succeed(tuple.join(\"\"))\n  }) {\n    static params = params.slice()\n  } as any\n}\n\nconst declareConstructor = <\n  const TypeParameters extends ReadonlyArray<Schema.Any>,\n  I,\n  A\n>(\n  typeParameters: TypeParameters,\n  options: {\n    readonly decode: (\n      ...typeParameters: {\n        readonly [K in keyof TypeParameters]: Schema<\n          Schema.Type<TypeParameters[K]>,\n          Schema.Encoded<TypeParameters[K]>,\n          never\n        >\n      }\n    ) => (\n      input: unknown,\n      options: ParseOptions,\n      ast: AST.Declaration\n    ) => Effect.Effect<A, ParseResult.ParseIssue, never>\n    readonly encode: (\n      ...typeParameters: {\n        readonly [K in keyof TypeParameters]: Schema<\n          Schema.Type<TypeParameters[K]>,\n          Schema.Encoded<TypeParameters[K]>,\n          never\n        >\n      }\n    ) => (\n      input: unknown,\n      options: ParseOptions,\n      ast: AST.Declaration\n    ) => Effect.Effect<I, ParseResult.ParseIssue, never>\n  },\n  annotations?: Annotations.Schema<A, TypeParameters>\n): SchemaClass<A, I, Schema.Context<TypeParameters[number]>> =>\n  makeDeclareClass(\n    typeParameters,\n    new AST.Declaration(\n      typeParameters.map((tp) => tp.ast),\n      (...typeParameters) => options.decode(...typeParameters.map(make) as any),\n      (...typeParameters) => options.encode(...typeParameters.map(make) as any),\n      toASTAnnotations(annotations)\n    )\n  )\n\nconst declarePrimitive = <A>(\n  is: (input: unknown) => input is A,\n  annotations?: Annotations.Schema<A>\n): SchemaClass<A> => {\n  const decodeUnknown = () => (input: unknown, _: ParseOptions, ast: AST.Declaration) =>\n    is(input) ? ParseResult.succeed(input) : ParseResult.fail(new ParseResult.Type(ast, input))\n  const encodeUnknown = decodeUnknown\n  return makeDeclareClass([], new AST.Declaration([], decodeUnknown, encodeUnknown, toASTAnnotations(annotations)))\n}\n\n/**\n * @category api interface\n * @since 3.13.3\n */\nexport interface declare<\n  A,\n  I = A,\n  P extends ReadonlyArray<Schema.All> = readonly [],\n  R = Schema.Context<P[number]>\n> extends AnnotableClass<declare<A, I, P, R>, A, I, R> {\n  readonly typeParameters: Readonly<P>\n}\n\n/**\n * @category api interface\n * @since 3.13.3\n */\nexport interface AnnotableDeclare<\n  Self extends declare<A, I, P, R>,\n  A,\n  I = A,\n  P extends ReadonlyArray<Schema.All> = readonly [],\n  R = Schema.Context<P[number]>\n> extends declare<A, I, P, R> {\n  annotations(annotations: Annotations.Schema<A>): Self\n}\n\nfunction makeDeclareClass<P extends ReadonlyArray<Schema.All>, A, I, R>(\n  typeParameters: P,\n  ast: AST.AST\n): declare<A, I, P, R> {\n  return class DeclareClass extends make<A, I, R>(ast) {\n    static override annotations(annotations: Annotations.Schema<A>): declare<A, I, P, R> {\n      return makeDeclareClass(this.typeParameters, mergeSchemaAnnotations(this.ast, annotations))\n    }\n    static typeParameters = [...typeParameters] as any as P\n  }\n}\n\n/**\n * The constraint `R extends Schema.Context<P[number]>` enforces dependencies solely from `typeParameters`.\n * This ensures that when you call `Schema.to` or `Schema.from`, you receive a schema with a `never` context.\n *\n * @category constructors\n * @since 3.10.0\n */\nexport const declare: {\n  /**\n   * The constraint `R extends Schema.Context<P[number]>` enforces dependencies solely from `typeParameters`.\n   * This ensures that when you call `Schema.to` or `Schema.from`, you receive a schema with a `never` context.\n   *\n   * @category constructors\n   * @since 3.10.0\n   */\n  <A>(is: (input: unknown) => input is A, annotations?: Annotations.Schema<A>): declare<A>\n  /**\n   * The constraint `R extends Schema.Context<P[number]>` enforces dependencies solely from `typeParameters`.\n   * This ensures that when you call `Schema.to` or `Schema.from`, you receive a schema with a `never` context.\n   *\n   * @category constructors\n   * @since 3.10.0\n   */\n  <A, I, const P extends ReadonlyArray<Schema.All>>(\n    typeParameters: P,\n    options: {\n      readonly decode: (\n        ...typeParameters: { readonly [K in keyof P]: Schema<Schema.Type<P[K]>, Schema.Encoded<P[K]>, never> }\n      ) => (\n        input: unknown,\n        options: ParseOptions,\n        ast: AST.Declaration\n      ) => Effect.Effect<A, ParseResult.ParseIssue, never>\n      readonly encode: (\n        ...typeParameters: { readonly [K in keyof P]: Schema<Schema.Type<P[K]>, Schema.Encoded<P[K]>, never> }\n      ) => (\n        input: unknown,\n        options: ParseOptions,\n        ast: AST.Declaration\n      ) => Effect.Effect<I, ParseResult.ParseIssue, never>\n    },\n    annotations?: Annotations.Schema<A, { readonly [K in keyof P]: Schema.Type<P[K]> }>\n  ): declare<A, I, P>\n} = function() {\n  if (Array.isArray(arguments[0])) {\n    const typeParameters = arguments[0]\n    const options = arguments[1]\n    const annotations = arguments[2]\n    return declareConstructor(typeParameters, options, annotations)\n  }\n  const is = arguments[0]\n  const annotations = arguments[1]\n  return declarePrimitive(is, annotations)\n} as any\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const BrandSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/Brand\")\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const fromBrand = <C extends Brand<string | symbol>, A extends Brand.Unbranded<C>>(\n  constructor: Brand.Constructor<C>,\n  annotations?: Annotations.Filter<C, A>\n) =>\n<I, R>(self: Schema<A, I, R>): BrandSchema<A & C, I, R> => {\n  const out = makeBrandClass(\n    self,\n    new AST.Refinement(\n      self.ast,\n      function predicate(a: A, _: ParseOptions, ast: AST.AST): option_.Option<ParseResult.ParseIssue> {\n        const either = constructor.either(a)\n        return either_.isLeft(either) ?\n          option_.some(new ParseResult.Type(ast, a, either.left.map((v) => v.message).join(\", \"))) :\n          option_.none()\n      },\n      toASTAnnotations({\n        schemaId: BrandSchemaId,\n        [BrandSchemaId]: { constructor },\n        ...annotations\n      })\n    )\n  )\n  return out as any\n}\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const InstanceOfSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/InstanceOf\")\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface instanceOf<A> extends AnnotableDeclare<instanceOf<A>, A> {}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const instanceOf = <A extends abstract new(...args: any) => any>(\n  constructor: A,\n  annotations?: Annotations.Schema<InstanceType<A>>\n): instanceOf<InstanceType<A>> =>\n  declare(\n    (u): u is InstanceType<A> => u instanceof constructor,\n    {\n      title: constructor.name,\n      description: `an instance of ${constructor.name}`,\n      pretty: (): pretty_.Pretty<InstanceType<A>> => String,\n      schemaId: InstanceOfSchemaId,\n      [InstanceOfSchemaId]: { constructor },\n      ...annotations\n    }\n  )\n\n/**\n * @category primitives\n * @since 3.10.0\n */\nexport class Undefined extends make<undefined>(AST.undefinedKeyword) {}\n\n/**\n * @category primitives\n * @since 3.10.0\n */\nexport class Void extends make<void>(AST.voidKeyword) {}\n\n/**\n * @category primitives\n * @since 3.10.0\n */\nexport class Null extends make<null>(AST.null) {}\n\n/**\n * @category primitives\n * @since 3.10.0\n */\nexport class Never extends make<never>(AST.neverKeyword) {}\n\n/**\n * @category primitives\n * @since 3.10.0\n */\nexport class Unknown extends make<unknown>(AST.unknownKeyword) {}\n\n/**\n * @category primitives\n * @since 3.10.0\n */\nexport class Any extends make<any>(AST.anyKeyword) {}\n\n/**\n * @category primitives\n * @since 3.10.0\n */\nexport class BigIntFromSelf extends make<bigint>(AST.bigIntKeyword) {}\n\n/**\n * @category primitives\n * @since 3.10.0\n */\nexport class SymbolFromSelf extends make<symbol>(AST.symbolKeyword) {}\n\n/** @ignore */\nclass String$ extends make<string>(AST.stringKeyword) {}\n\n/** @ignore */\nclass Number$ extends make<number>(AST.numberKeyword) {}\n\n/** @ignore */\nclass Boolean$ extends make<boolean>(AST.booleanKeyword) {}\n\n/** @ignore */\nclass Object$ extends make<object>(AST.objectKeyword) {}\n\nexport {\n  /**\n   * @category primitives\n   * @since 3.10.0\n   */\n  Boolean$ as Boolean,\n  /**\n   * @category primitives\n   * @since 3.10.0\n   */\n  Number$ as Number,\n  /**\n   * @category primitives\n   * @since 3.10.0\n   */\n  Object$ as Object,\n  /**\n   * @category primitives\n   * @since 3.10.0\n   */\n  String$ as String\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface Union<Members extends ReadonlyArray<Schema.All>> extends\n  AnnotableClass<\n    Union<Members>,\n    Schema.Type<Members[number]>,\n    Schema.Encoded<Members[number]>,\n    Schema.Context<Members[number]>\n  >\n{\n  readonly members: Readonly<Members>\n}\n\nconst getDefaultUnionAST = <Members extends AST.Members<Schema.All>>(members: Members): AST.AST =>\n  AST.Union.make(members.map((m) => m.ast))\n\nfunction makeUnionClass<Members extends AST.Members<Schema.All>>(\n  members: Members,\n  ast: AST.AST = getDefaultUnionAST(members)\n): Union<Members> {\n  return class UnionClass extends make<\n    Schema.Type<Members[number]>,\n    Schema.Encoded<Members[number]>,\n    Schema.Context<Members[number]>\n  >(ast) {\n    static override annotations(annotations: Annotations.Schema<Schema.Type<Members[number]>>): Union<Members> {\n      return makeUnionClass(this.members, mergeSchemaAnnotations(this.ast, annotations))\n    }\n\n    static members = [...members]\n  }\n}\n\n/**\n * @category combinators\n * @since 3.10.0\n */\nexport function Union<Members extends AST.Members<Schema.All>>(...members: Members): Union<Members>\nexport function Union<Member extends Schema.All>(member: Member): Member\nexport function Union(): typeof Never\nexport function Union<Members extends ReadonlyArray<Schema.All>>(\n  ...members: Members\n): Schema<Schema.Type<Members[number]>, Schema.Encoded<Members[number]>, Schema.Context<Members[number]>>\nexport function Union<Members extends ReadonlyArray<Schema.All>>(\n  ...members: Members\n) {\n  return AST.isMembers(members)\n    ? makeUnionClass(members)\n    : array_.isNonEmptyReadonlyArray(members)\n    ? members[0]\n    : Never\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface NullOr<S extends Schema.All> extends Union<[S, typeof Null]> {\n  annotations(annotations: Annotations.Schema<Schema.Type<S> | null>): NullOr<S>\n}\n\n/**\n * @category combinators\n * @since 3.10.0\n */\nexport const NullOr = <S extends Schema.All>(self: S): NullOr<S> => Union(self, Null)\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface UndefinedOr<S extends Schema.All> extends Union<[S, typeof Undefined]> {\n  annotations(annotations: Annotations.Schema<Schema.Type<S> | undefined>): UndefinedOr<S>\n}\n\n/**\n * @category combinators\n * @since 3.10.0\n */\nexport const UndefinedOr = <S extends Schema.All>(self: S): UndefinedOr<S> => Union(self, Undefined)\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface NullishOr<S extends Schema.All> extends Union<[S, typeof Null, typeof Undefined]> {\n  annotations(annotations: Annotations.Schema<Schema.Type<S> | null | undefined>): NullishOr<S>\n}\n\n/**\n * @category combinators\n * @since 3.10.0\n */\nexport const NullishOr = <S extends Schema.All>(self: S): NullishOr<S> => Union(self, Null, Undefined)\n\n/**\n * @category combinators\n * @since 3.10.0\n */\nexport const keyof = <A, I, R>(self: Schema<A, I, R>): SchemaClass<keyof A> => make<keyof A>(AST.keyof(self.ast))\n\n/**\n * @since 3.10.0\n */\nexport declare namespace Element {\n  /**\n   * @since 3.10.0\n   */\n  export interface Annotations<A> extends Annotations.Doc<A> {\n    readonly missingMessage?: AST.MissingMessageAnnotation\n  }\n\n  /**\n   * @since 3.10.0\n   */\n  export type Token = \"\" | \"?\"\n}\n\n/**\n * @category API interface\n * @since 3.10.0\n */\nexport interface Element<S extends Schema.Any, Token extends Element.Token>\n  extends Schema.Variance<Schema.Type<S>, Schema.Encoded<S>, Schema.Context<S>>\n{\n  readonly _Token: Token\n  readonly ast: AST.OptionalType\n  readonly from: S\n  annotations(annotations: Element.Annotations<Schema.Type<S>>): Element<S, Token>\n}\n\n/**\n * @since 3.10.0\n */\nexport const element = <S extends Schema.Any>(self: S): Element<S, \"\"> =>\n  new ElementImpl(new AST.OptionalType(self.ast, false), self)\n\n/**\n * @since 3.10.0\n */\nexport const optionalElement = <S extends Schema.Any>(self: S): Element<S, \"?\"> =>\n  new ElementImpl(new AST.OptionalType(self.ast, true), self)\n\nclass ElementImpl<S extends Schema.Any, Token extends Element.Token> implements Element<S, Token> {\n  readonly [TypeId]!: Schema.Variance<Schema.Type<S>, Schema.Encoded<S>, Schema.Context<S>>[TypeId]\n  readonly _Token!: Token\n  constructor(\n    readonly ast: AST.OptionalType,\n    readonly from: S\n  ) {}\n  annotations(\n    annotations: Annotations.Schema<Schema.Type<S>>\n  ): ElementImpl<S, Token> {\n    return new ElementImpl(\n      new AST.OptionalType(\n        this.ast.type,\n        this.ast.isOptional,\n        { ...this.ast.annotations, ...toASTAnnotations(annotations) }\n      ),\n      this.from\n    )\n  }\n  toString() {\n    return `${this.ast.type}${this.ast.isOptional ? \"?\" : \"\"}`\n  }\n}\n\n/**\n * @since 3.10.0\n */\nexport declare namespace TupleType {\n  type ElementsType<\n    Elements,\n    Out extends ReadonlyArray<any> = readonly []\n  > = Elements extends readonly [infer Head, ...infer Tail] ?\n    Head extends Element<infer T, \"?\"> ? ElementsType<Tail, readonly [...Out, Schema.Type<T>?]>\n    : ElementsType<Tail, readonly [...Out, Schema.Type<Head>]>\n    : Out\n\n  type ElementsEncoded<\n    Elements,\n    Out extends ReadonlyArray<any> = readonly []\n  > = Elements extends readonly [infer Head, ...infer Tail] ?\n    Head extends Element<infer T, \"?\"> ? ElementsEncoded<Tail, readonly [...Out, Schema.Encoded<T>?]>\n    : ElementsEncoded<Tail, readonly [...Out, Schema.Encoded<Head>]>\n    : Out\n\n  /**\n   * @since 3.10.0\n   */\n  export type Elements = ReadonlyArray<Schema.Any | Element<Schema.Any, Element.Token>>\n\n  /**\n   * @since 3.10.0\n   */\n  export type Rest = ReadonlyArray<Schema.Any | Element<Schema.Any, \"\">>\n\n  /**\n   * @since 3.10.0\n   */\n  export type Type<Elements extends TupleType.Elements, Rest extends TupleType.Rest> = Rest extends\n    [infer Head, ...infer Tail] ? Readonly<[\n      ...ElementsType<Elements>,\n      ...ReadonlyArray<Schema.Type<Head>>,\n      ...{ readonly [K in keyof Tail]: Schema.Type<Tail[K]> }\n    ]> :\n    ElementsType<Elements>\n\n  /**\n   * @since 3.10.0\n   */\n  export type Encoded<Elements extends TupleType.Elements, Rest extends TupleType.Rest> = Rest extends\n    [infer Head, ...infer Tail] ? Readonly<[\n      ...ElementsEncoded<Elements>,\n      ...ReadonlyArray<Schema.Encoded<Head>>,\n      ...{ readonly [K in keyof Tail]: Schema.Encoded<Tail[K]> }\n    ]> :\n    ElementsEncoded<Elements>\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface TupleType<Elements extends TupleType.Elements, Rest extends TupleType.Rest> extends\n  AnnotableClass<\n    TupleType<Elements, Rest>,\n    TupleType.Type<Elements, Rest>,\n    TupleType.Encoded<Elements, Rest>,\n    Schema.Context<Elements[number]> | Schema.Context<Rest[number]>\n  >\n{\n  readonly elements: Readonly<Elements>\n  readonly rest: Readonly<Rest>\n}\n\nconst getDefaultTupleTypeAST = <Elements extends TupleType.Elements, Rest extends TupleType.Rest>(\n  elements: Elements,\n  rest: Rest\n) =>\n  new AST.TupleType(\n    elements.map((el) => isSchema(el) ? new AST.OptionalType(el.ast, false) : el.ast),\n    rest.map((el) => isSchema(el) ? new AST.Type(el.ast) : el.ast),\n    true\n  )\n\nfunction makeTupleTypeClass<Elements extends TupleType.Elements, Rest extends TupleType.Rest>(\n  elements: Elements,\n  rest: Rest,\n  ast: AST.AST = getDefaultTupleTypeAST(elements, rest)\n) {\n  return class TupleTypeClass extends make<\n    TupleType.Type<Elements, Rest>,\n    TupleType.Encoded<Elements, Rest>,\n    Schema.Context<Elements[number]> | Schema.Context<Rest[number]>\n  >(ast) {\n    static override annotations(\n      annotations: Annotations.Schema<TupleType.Type<Elements, Rest>>\n    ): TupleType<Elements, Rest> {\n      return makeTupleTypeClass(this.elements, this.rest, mergeSchemaAnnotations(this.ast, annotations))\n    }\n\n    static elements = [...elements] as any as Elements\n\n    static rest = [...rest] as any as Rest\n  }\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface Tuple<Elements extends TupleType.Elements> extends TupleType<Elements, []> {\n  annotations(annotations: Annotations.Schema<TupleType.Type<Elements, []>>): Tuple<Elements>\n}\n\n/**\n * @category api interface\n * @since 3.13.3\n */\nexport interface Tuple2<Fst extends Schema.Any, Snd extends Schema.Any> extends\n  AnnotableClass<\n    Tuple2<Fst, Snd>,\n    readonly [Schema.Type<Fst>, Schema.Type<Snd>],\n    readonly [Schema.Encoded<Fst>, Schema.Encoded<Snd>],\n    Schema.Context<Fst> | Schema.Context<Snd>\n  >\n{\n  readonly elements: readonly [Fst, Snd]\n  readonly rest: readonly []\n}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport function Tuple<\n  const Elements extends TupleType.Elements,\n  Rest extends array_.NonEmptyReadonlyArray<TupleType.Rest[number]>\n>(elements: Elements, ...rest: Rest): TupleType<Elements, Rest>\nexport function Tuple<Fst extends Schema.Any, Snd extends Schema.Any>(fst: Fst, snd: Snd): Tuple2<Fst, Snd>\nexport function Tuple<Elements extends TupleType.Elements>(...elements: Elements): Tuple<Elements>\nexport function Tuple(...args: ReadonlyArray<any>): any {\n  return Array.isArray(args[0])\n    ? makeTupleTypeClass(args[0], args.slice(1))\n    : makeTupleTypeClass(args, [])\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface Array$<Value extends Schema.Any> extends TupleType<[], [Value]> {\n  readonly value: Value\n  annotations(annotations: Annotations.Schema<TupleType.Type<[], [Value]>>): Array$<Value>\n}\n\nfunction makeArrayClass<Value extends Schema.Any>(\n  value: Value,\n  ast?: AST.AST\n): Array$<Value> {\n  return class ArrayClass extends makeTupleTypeClass<[], [Value]>([], [value], ast) {\n    static override annotations(annotations: Annotations.Schema<TupleType.Type<[], [Value]>>) {\n      return makeArrayClass(this.value, mergeSchemaAnnotations(this.ast, annotations))\n    }\n\n    static value = value\n  }\n}\n\nconst Array$ = <Value extends Schema.Any>(value: Value): Array$<Value> => makeArrayClass(value)\n\nexport {\n  /**\n   * @category constructors\n   * @since 3.10.0\n   */\n  Array$ as Array\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface NonEmptyArray<Value extends Schema.Any> extends\n  AnnotableClass<\n    NonEmptyArray<Value>,\n    array_.NonEmptyReadonlyArray<Schema.Type<Value>>,\n    array_.NonEmptyReadonlyArray<Schema.Encoded<Value>>,\n    Schema.Context<Value>\n  >\n{\n  readonly elements: readonly [Value]\n  readonly rest: readonly [Value]\n  readonly value: Value\n}\n\nfunction makeNonEmptyArrayClass<Value extends Schema.Any>(\n  value: Value,\n  ast?: AST.AST\n) {\n  return class NonEmptyArrayClass extends makeTupleTypeClass<[Value], [Value]>([value], [value], ast) {\n    static override annotations(annotations: Annotations.Schema<TupleType.Type<[Value], [Value]>>) {\n      return makeNonEmptyArrayClass(this.value, mergeSchemaAnnotations(this.ast, annotations))\n    }\n\n    static value = value\n  }\n}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const NonEmptyArray = <Value extends Schema.Any>(value: Value): NonEmptyArray<Value> =>\n  makeNonEmptyArrayClass(value) as any\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface ArrayEnsure<Value extends Schema.Any>\n  extends transform<Union<[Value, Array$<Value>]>, Array$<SchemaClass<Schema.Type<Value>>>>\n{}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport function ArrayEnsure<Value extends Schema.Any>(value: Value): ArrayEnsure<Value> {\n  return transform(Union(value, Array$(value)), Array$(typeSchema(asSchema(value))), {\n    strict: true,\n    decode: (i) => array_.ensure(i),\n    encode: (a) => a.length === 1 ? a[0] : a\n  })\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface NonEmptyArrayEnsure<Value extends Schema.Any>\n  extends transform<Union<[Value, NonEmptyArray<Value>]>, NonEmptyArray<SchemaClass<Schema.Type<Value>>>>\n{}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport function NonEmptyArrayEnsure<Value extends Schema.Any>(value: Value): NonEmptyArrayEnsure<Value> {\n  return transform(Union(value, NonEmptyArray(value)), NonEmptyArray(typeSchema(asSchema(value))), {\n    strict: true,\n    decode: (i) => array_.isNonEmptyReadonlyArray(i) ? i : array_.of(i),\n    encode: (a) => a.length === 1 ? a[0] : a\n  })\n}\n\n/**\n * @since 3.10.0\n */\nexport declare namespace PropertySignature {\n  /**\n   * @since 3.10.0\n   */\n  export type Token = \"?:\" | \":\"\n\n  /**\n   * @since 3.10.0\n   */\n  export type Any<Key extends PropertyKey = PropertyKey> = PropertySignature<\n    Token,\n    any,\n    Key,\n    Token,\n    any,\n    boolean,\n    unknown\n  >\n\n  /**\n   * @since 3.10.0\n   */\n  export type All<Key extends PropertyKey = PropertyKey> =\n    | Any<Key>\n    | PropertySignature<Token, never, Key, Token, any, boolean, unknown>\n    | PropertySignature<Token, any, Key, Token, never, boolean, unknown>\n    | PropertySignature<Token, never, Key, Token, never, boolean, unknown>\n\n  /**\n   * @since 3.10.0\n   */\n  export type AST =\n    | PropertySignatureDeclaration\n    | PropertySignatureTransformation\n\n  /**\n   * @since 3.10.0\n   */\n  export interface Annotations<A> extends Annotations.Doc<A> {\n    readonly missingMessage?: AST.MissingMessageAnnotation\n  }\n}\n\nconst formatPropertySignatureToken = (isOptional: boolean): string => isOptional ? \"\\\"?:\\\"\" : \"\\\":\\\"\"\n\n/**\n * @category PropertySignature\n * @since 3.10.0\n */\nexport class PropertySignatureDeclaration extends AST.OptionalType {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"PropertySignatureDeclaration\"\n  constructor(\n    type: AST.AST,\n    isOptional: boolean,\n    readonly isReadonly: boolean,\n    annotations: AST.Annotations,\n    readonly defaultValue: (() => unknown) | undefined\n  ) {\n    super(type, isOptional, annotations)\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    const token = formatPropertySignatureToken(this.isOptional)\n    const type = String(this.type)\n    return `PropertySignature<${token}, ${type}, never, ${token}, ${type}>`\n  }\n}\n\n/**\n * @category PropertySignature\n * @since 3.10.0\n */\nexport class FromPropertySignature extends AST.OptionalType {\n  constructor(\n    type: AST.AST,\n    isOptional: boolean,\n    readonly isReadonly: boolean,\n    annotations: AST.Annotations,\n    readonly fromKey?: PropertyKey | undefined\n  ) {\n    super(type, isOptional, annotations)\n  }\n}\n\n/**\n * @category PropertySignature\n * @since 3.10.0\n */\nexport class ToPropertySignature extends AST.OptionalType {\n  constructor(\n    type: AST.AST,\n    isOptional: boolean,\n    readonly isReadonly: boolean,\n    annotations: AST.Annotations,\n    readonly defaultValue: (() => unknown) | undefined\n  ) {\n    super(type, isOptional, annotations)\n  }\n}\n\nconst formatPropertyKey = (p: PropertyKey | undefined): string => {\n  if (p === undefined) {\n    return \"never\"\n  }\n  if (Predicate.isString(p)) {\n    return JSON.stringify(p)\n  }\n  return String(p)\n}\n\n/**\n * @category PropertySignature\n * @since 3.10.0\n */\nexport class PropertySignatureTransformation {\n  /**\n   * @since 3.10.0\n   */\n  readonly _tag = \"PropertySignatureTransformation\"\n  constructor(\n    readonly from: FromPropertySignature,\n    readonly to: ToPropertySignature,\n    readonly decode: AST.PropertySignatureTransformation[\"decode\"],\n    readonly encode: AST.PropertySignatureTransformation[\"encode\"]\n  ) {}\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return `PropertySignature<${formatPropertySignatureToken(this.to.isOptional)}, ${this.to.type}, ${\n      formatPropertyKey(this.from.fromKey)\n    }, ${formatPropertySignatureToken(this.from.isOptional)}, ${this.from.type}>`\n  }\n}\n\nconst mergeSignatureAnnotations = (\n  ast: PropertySignature.AST,\n  annotations: AST.Annotations\n): PropertySignature.AST => {\n  switch (ast._tag) {\n    case \"PropertySignatureDeclaration\": {\n      return new PropertySignatureDeclaration(\n        ast.type,\n        ast.isOptional,\n        ast.isReadonly,\n        { ...ast.annotations, ...annotations },\n        ast.defaultValue\n      )\n    }\n    case \"PropertySignatureTransformation\": {\n      return new PropertySignatureTransformation(\n        ast.from,\n        new ToPropertySignature(ast.to.type, ast.to.isOptional, ast.to.isReadonly, {\n          ...ast.to.annotations,\n          ...annotations\n        }, ast.to.defaultValue),\n        ast.decode,\n        ast.encode\n      )\n    }\n  }\n}\n\n/**\n * @since 3.10.0\n * @category symbol\n */\nexport const PropertySignatureTypeId: unique symbol = Symbol.for(\"effect/PropertySignature\")\n\n/**\n * @since 3.10.0\n * @category symbol\n */\nexport type PropertySignatureTypeId = typeof PropertySignatureTypeId\n\n/**\n * @since 3.10.0\n * @category guards\n */\nexport const isPropertySignature = (u: unknown): u is PropertySignature.All =>\n  Predicate.hasProperty(u, PropertySignatureTypeId)\n\n/**\n * @category PropertySignature\n * @since 3.10.0\n */\nexport interface PropertySignature<\n  TypeToken extends PropertySignature.Token,\n  Type,\n  Key extends PropertyKey,\n  EncodedToken extends PropertySignature.Token,\n  Encoded,\n  HasDefault extends boolean = false,\n  R = never\n> extends Schema.Variance<Type, Encoded, R>, Pipeable {\n  readonly [PropertySignatureTypeId]: null\n  readonly _TypeToken: TypeToken\n  readonly _EncodedToken: EncodedToken\n  readonly _HasDefault: HasDefault\n  readonly _Key: Key\n  readonly ast: PropertySignature.AST\n\n  annotations(\n    annotations: PropertySignature.Annotations<Type>\n  ): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R>\n}\n\nclass PropertySignatureImpl<\n  TypeToken extends PropertySignature.Token,\n  Type,\n  Key extends PropertyKey,\n  EncodedToken extends PropertySignature.Token,\n  Encoded,\n  HasDefault extends boolean = false,\n  R = never\n> implements PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R> {\n  readonly [TypeId]!: Schema.Variance<Type, Encoded, R>[TypeId]\n  readonly [PropertySignatureTypeId] = null\n  readonly _TypeToken!: TypeToken\n  readonly _Key!: Key\n  readonly _EncodedToken!: EncodedToken\n  readonly _HasDefault!: HasDefault\n\n  constructor(\n    readonly ast: PropertySignature.AST\n  ) {}\n\n  pipe() {\n    return pipeArguments(this, arguments)\n  }\n\n  annotations(\n    annotations: PropertySignature.Annotations<Type>\n  ): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R> {\n    return new PropertySignatureImpl(mergeSignatureAnnotations(this.ast, toASTAnnotations(annotations)))\n  }\n\n  toString() {\n    return String(this.ast)\n  }\n}\n\n/**\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const makePropertySignature = <\n  TypeToken extends PropertySignature.Token,\n  Type,\n  Key extends PropertyKey,\n  EncodedToken extends PropertySignature.Token,\n  Encoded,\n  HasDefault extends boolean = false,\n  R = never\n>(ast: PropertySignature.AST) =>\n  new PropertySignatureImpl<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R>(ast)\n\nclass PropertySignatureWithFromImpl<\n  From extends Schema.All,\n  TypeToken extends PropertySignature.Token,\n  Type,\n  Key extends PropertyKey,\n  EncodedToken extends PropertySignature.Token,\n  Encoded,\n  HasDefault extends boolean = false,\n  R = never\n> extends PropertySignatureImpl<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R> {\n  constructor(ast: PropertySignature.AST, readonly from: From) {\n    super(ast)\n  }\n  annotations(\n    annotations: PropertySignature.Annotations<Type>\n  ): PropertySignatureWithFromImpl<From, TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R> {\n    return new PropertySignatureWithFromImpl(\n      mergeSignatureAnnotations(this.ast, toASTAnnotations(annotations)),\n      this.from\n    )\n  }\n}\n\n/**\n * @category API interface\n * @since 1.0.0\n */\nexport interface propertySignature<S extends Schema.All>\n  extends PropertySignature<\":\", Schema.Type<S>, never, \":\", Schema.Encoded<S>, false, Schema.Context<S>>\n{\n  readonly from: S\n  annotations(annotations: PropertySignature.Annotations<Schema.Type<S>>): propertySignature<S>\n}\n\n/**\n * Lifts a `Schema` into a `PropertySignature`.\n *\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const propertySignature = <S extends Schema.All>(\n  self: S\n): propertySignature<S> =>\n  new PropertySignatureWithFromImpl(\n    new PropertySignatureDeclaration(self.ast, false, true, {}, undefined),\n    self\n  )\n\n/**\n * Enhances a property signature with a default constructor value.\n *\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const withConstructorDefault: {\n  /**\n   * Enhances a property signature with a default constructor value.\n   *\n   * @category PropertySignature\n   * @since 3.10.0\n   */\n  <Type>(defaultValue: () => Types.NoInfer<Type>): <\n    TypeToken extends PropertySignature.Token,\n    Key extends PropertyKey,\n    EncodedToken extends PropertySignature.Token,\n    Encoded,\n    R\n  >(\n    self: PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, boolean, R>\n  ) => PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, true, R>\n  /**\n   * Enhances a property signature with a default constructor value.\n   *\n   * @category PropertySignature\n   * @since 3.10.0\n   */\n  <\n    TypeToken extends PropertySignature.Token,\n    Type,\n    Key extends PropertyKey,\n    EncodedToken extends PropertySignature.Token,\n    Encoded,\n    R\n  >(\n    self: PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, boolean, R>,\n    defaultValue: () => Types.NoInfer<Type>\n  ): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, true, R>\n} = dual(2, <\n  TypeToken extends PropertySignature.Token,\n  Type,\n  Key extends PropertyKey,\n  EncodedToken extends PropertySignature.Token,\n  Encoded,\n  R\n>(\n  self: PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, boolean, R>,\n  defaultValue: () => Types.NoInfer<Type>\n): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, true, R> => {\n  const ast = self.ast\n  switch (ast._tag) {\n    case \"PropertySignatureDeclaration\":\n      return makePropertySignature(\n        new PropertySignatureDeclaration(ast.type, ast.isOptional, ast.isReadonly, ast.annotations, defaultValue)\n      )\n    case \"PropertySignatureTransformation\":\n      return makePropertySignature(\n        new PropertySignatureTransformation(\n          ast.from,\n          new ToPropertySignature(ast.to.type, ast.to.isOptional, ast.to.isReadonly, ast.to.annotations, defaultValue),\n          ast.decode,\n          ast.encode\n        )\n      )\n  }\n})\n\nconst applyDefaultValue = <A>(o: option_.Option<A>, defaultValue: () => A) =>\n  option_.match(o, {\n    onNone: () => option_.some(defaultValue()),\n    onSome: (value) => option_.some(value === undefined ? defaultValue() : value)\n  })\n\nconst pruneUndefined = (ast: AST.AST): AST.AST | undefined =>\n  AST.pruneUndefined(ast, pruneUndefined, (ast) => {\n    const pruned = pruneUndefined(ast.to)\n    if (pruned) {\n      return new AST.Transformation(ast.from, pruned, ast.transformation)\n    }\n  })\n\n/**\n * Enhances a property signature with a default decoding value.\n *\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const withDecodingDefault: {\n  /**\n   * Enhances a property signature with a default decoding value.\n   *\n   * @category PropertySignature\n   * @since 3.10.0\n   */\n  <Type>(defaultValue: () => Types.NoInfer<Exclude<Type, undefined>>): <\n    Key extends PropertyKey,\n    Encoded,\n    R\n  >(\n    self: PropertySignature<\"?:\", Type, Key, \"?:\", Encoded, false, R>\n  ) => PropertySignature<\":\", Exclude<Type, undefined>, Key, \"?:\", Encoded, false, R>\n  /**\n   * Enhances a property signature with a default decoding value.\n   *\n   * @category PropertySignature\n   * @since 3.10.0\n   */\n  <\n    Type,\n    Key extends PropertyKey,\n    Encoded,\n    R\n  >(\n    self: PropertySignature<\"?:\", Type, Key, \"?:\", Encoded, false, R>,\n    defaultValue: () => Types.NoInfer<Exclude<Type, undefined>>\n  ): PropertySignature<\":\", Exclude<Type, undefined>, Key, \"?:\", Encoded, false, R>\n} = dual(2, <\n  Type,\n  Key extends PropertyKey,\n  Encoded,\n  R\n>(\n  self: PropertySignature<\"?:\", Type, Key, \"?:\", Encoded, false, R>,\n  defaultValue: () => Types.NoInfer<Exclude<Type, undefined>>\n): PropertySignature<\":\", Exclude<Type, undefined>, Key, \"?:\", Encoded, false, R> => {\n  const ast = self.ast\n  switch (ast._tag) {\n    case \"PropertySignatureDeclaration\": {\n      const to = AST.typeAST(ast.type)\n      return makePropertySignature(\n        new PropertySignatureTransformation(\n          new FromPropertySignature(ast.type, ast.isOptional, ast.isReadonly, ast.annotations),\n          new ToPropertySignature(pruneUndefined(to) ?? to, false, true, {}, ast.defaultValue),\n          (o) => applyDefaultValue(o, defaultValue),\n          identity\n        )\n      )\n    }\n    case \"PropertySignatureTransformation\": {\n      const to = ast.to.type\n      return makePropertySignature(\n        new PropertySignatureTransformation(\n          ast.from,\n          new ToPropertySignature(\n            pruneUndefined(to) ?? to,\n            false,\n            ast.to.isReadonly,\n            ast.to.annotations,\n            ast.to.defaultValue\n          ),\n          (o) => applyDefaultValue(ast.decode(o), defaultValue),\n          ast.encode\n        )\n      )\n    }\n  }\n})\n\n/**\n * Enhances a property signature with a default decoding value and a default constructor value.\n *\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const withDefaults: {\n  /**\n   * Enhances a property signature with a default decoding value and a default constructor value.\n   *\n   * @category PropertySignature\n   * @since 3.10.0\n   */\n  <Type>(\n    defaults: {\n      constructor: () => Types.NoInfer<Exclude<Type, undefined>>\n      decoding: () => Types.NoInfer<Exclude<Type, undefined>>\n    }\n  ): <\n    Key extends PropertyKey,\n    Encoded,\n    R\n  >(\n    self: PropertySignature<\"?:\", Type, Key, \"?:\", Encoded, boolean, R>\n  ) => PropertySignature<\":\", Exclude<Type, undefined>, Key, \"?:\", Encoded, true, R>\n  /**\n   * Enhances a property signature with a default decoding value and a default constructor value.\n   *\n   * @category PropertySignature\n   * @since 3.10.0\n   */\n  <\n    Type,\n    Key extends PropertyKey,\n    Encoded,\n    R\n  >(\n    self: PropertySignature<\"?:\", Type, Key, \"?:\", Encoded, boolean, R>,\n    defaults: {\n      constructor: () => Types.NoInfer<Exclude<Type, undefined>>\n      decoding: () => Types.NoInfer<Exclude<Type, undefined>>\n    }\n  ): PropertySignature<\":\", Exclude<Type, undefined>, Key, \"?:\", Encoded, true, R>\n} = dual(2, <\n  Type,\n  Key extends PropertyKey,\n  Encoded,\n  R\n>(\n  self: PropertySignature<\"?:\", Type, Key, \"?:\", Encoded, false, R>,\n  defaults: {\n    constructor: () => Types.NoInfer<Exclude<Type, undefined>>\n    decoding: () => Types.NoInfer<Exclude<Type, undefined>>\n  }\n): PropertySignature<\":\", Exclude<Type, undefined>, Key, \"?:\", Encoded, true, R> =>\n  self.pipe(withDecodingDefault(defaults.decoding), withConstructorDefault(defaults.constructor)))\n\n/**\n * Enhances a property signature by specifying a different key for it in the Encoded type.\n *\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const fromKey: {\n  /**\n   * Enhances a property signature by specifying a different key for it in the Encoded type.\n   *\n   * @category PropertySignature\n   * @since 3.10.0\n   */\n  <Key extends PropertyKey>(key: Key): <\n    TypeToken extends PropertySignature.Token,\n    Type,\n    EncodedToken extends PropertySignature.Token,\n    Encoded,\n    HasDefault extends boolean,\n    R\n  >(\n    self: PropertySignature<TypeToken, Type, PropertyKey, EncodedToken, Encoded, HasDefault, R>\n  ) => PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R>\n  /**\n   * Enhances a property signature by specifying a different key for it in the Encoded type.\n   *\n   * @category PropertySignature\n   * @since 3.10.0\n   */\n  <\n    Type,\n    TypeToken extends PropertySignature.Token,\n    Encoded,\n    EncodedToken extends PropertySignature.Token,\n    HasDefault extends boolean,\n    R,\n    Key extends PropertyKey\n  >(\n    self: PropertySignature<TypeToken, Type, PropertyKey, EncodedToken, Encoded, HasDefault, R>,\n    key: Key\n  ): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R>\n} = dual(2, <\n  Type,\n  TypeToken extends PropertySignature.Token,\n  Encoded,\n  EncodedToken extends PropertySignature.Token,\n  HasDefault extends boolean,\n  R,\n  Key extends PropertyKey\n>(\n  self: PropertySignature<TypeToken, Type, PropertyKey, EncodedToken, Encoded, HasDefault, R>,\n  key: Key\n): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R> => {\n  const ast = self.ast\n  switch (ast._tag) {\n    case \"PropertySignatureDeclaration\": {\n      return makePropertySignature(\n        new PropertySignatureTransformation(\n          new FromPropertySignature(\n            ast.type,\n            ast.isOptional,\n            ast.isReadonly,\n            ast.annotations,\n            key\n          ),\n          new ToPropertySignature(AST.typeAST(ast.type), ast.isOptional, ast.isReadonly, {}, ast.defaultValue),\n          identity,\n          identity\n        )\n      )\n    }\n    case \"PropertySignatureTransformation\":\n      return makePropertySignature(\n        new PropertySignatureTransformation(\n          new FromPropertySignature(\n            ast.from.type,\n            ast.from.isOptional,\n            ast.from.isReadonly,\n            ast.from.annotations,\n            key\n          ),\n          ast.to,\n          ast.decode,\n          ast.encode\n        )\n      )\n  }\n})\n\n/**\n * Converts an optional property to a required one through a transformation `Option -> Type`.\n *\n * - `decode`: `none` as argument means the value is missing in the input.\n * - `encode`: `none` as return value means the value will be missing in the output.\n *\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const optionalToRequired = <FA, FI, FR, TA, TI, TR>(\n  from: Schema<FA, FI, FR>,\n  to: Schema<TA, TI, TR>,\n  options: {\n    readonly decode: (o: option_.Option<FA>) => TI\n    readonly encode: (ti: TI) => option_.Option<FA>\n  }\n): PropertySignature<\":\", TA, never, \"?:\", FI, false, FR | TR> =>\n  makePropertySignature(\n    new PropertySignatureTransformation(\n      new FromPropertySignature(from.ast, true, true, {}, undefined),\n      new ToPropertySignature(to.ast, false, true, {}, undefined),\n      (o) => option_.some(options.decode(o)),\n      option_.flatMap(options.encode)\n    )\n  )\n\n/**\n * Converts an optional property to a required one through a transformation `Type -> Option`.\n *\n * - `decode`: `none` as return value means the value will be missing in the output.\n * - `encode`: `none` as argument means the value is missing in the input.\n *\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const requiredToOptional = <FA, FI, FR, TA, TI, TR>(\n  from: Schema<FA, FI, FR>,\n  to: Schema<TA, TI, TR>,\n  options: {\n    readonly decode: (fa: FA) => option_.Option<TI>\n    readonly encode: (o: option_.Option<TI>) => FA\n  }\n): PropertySignature<\"?:\", TA, never, \":\", FI, false, FR | TR> =>\n  makePropertySignature(\n    new PropertySignatureTransformation(\n      new FromPropertySignature(from.ast, false, true, {}, undefined),\n      new ToPropertySignature(to.ast, true, true, {}, undefined),\n      option_.flatMap(options.decode),\n      (o) => option_.some(options.encode(o))\n    )\n  )\n\n/**\n * Converts an optional property to another optional property through a transformation `Option -> Option`.\n *\n * - `decode`:\n *   - `none` as argument means the value is missing in the input.\n *   - `none` as return value means the value will be missing in the output.\n * - `encode`:\n *   - `none` as argument means the value is missing in the input.\n *   - `none` as return value means the value will be missing in the output.\n *\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const optionalToOptional = <FA, FI, FR, TA, TI, TR>(\n  from: Schema<FA, FI, FR>,\n  to: Schema<TA, TI, TR>,\n  options: {\n    readonly decode: (o: option_.Option<FA>) => option_.Option<TI>\n    readonly encode: (o: option_.Option<TI>) => option_.Option<FA>\n  }\n): PropertySignature<\"?:\", TA, never, \"?:\", FI, false, FR | TR> =>\n  makePropertySignature(\n    new PropertySignatureTransformation(\n      new FromPropertySignature(from.ast, true, true, {}, undefined),\n      new ToPropertySignature(to.ast, true, true, {}, undefined),\n      options.decode,\n      options.encode\n    )\n  )\n\n/**\n * @since 3.10.0\n */\nexport type OptionalOptions<A> = {\n  readonly default?: never\n  readonly as?: never\n  readonly exact?: true\n  readonly nullable?: true\n} | {\n  readonly default: LazyArg<A>\n  readonly as?: never\n  readonly exact?: true\n  readonly nullable?: true\n} | {\n  readonly as: \"Option\"\n  readonly default?: never\n  readonly exact?: never\n  readonly nullable?: never\n  readonly onNoneEncoding?: LazyArg<option_.Option<undefined>>\n} | {\n  readonly as: \"Option\"\n  readonly default?: never\n  readonly exact?: never\n  readonly nullable: true\n  readonly onNoneEncoding?: LazyArg<option_.Option<null | undefined>>\n} | {\n  readonly as: \"Option\"\n  readonly default?: never\n  readonly exact: true\n  readonly nullable?: never\n  readonly onNoneEncoding?: never\n} | {\n  readonly as: \"Option\"\n  readonly default?: never\n  readonly exact: true\n  readonly nullable: true\n  readonly onNoneEncoding?: LazyArg<option_.Option<null>>\n} | undefined\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface optional<S extends Schema.All> extends\n  PropertySignature<\n    \"?:\",\n    Schema.Type<S> | undefined,\n    never,\n    \"?:\",\n    Schema.Encoded<S> | undefined,\n    false,\n    Schema.Context<S>\n  >\n{\n  readonly from: S\n  annotations(annotations: PropertySignature.Annotations<Schema.Type<S> | undefined>): optional<S>\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface optionalWith<S extends Schema.All, Options> extends\n  PropertySignature<\n    Types.Has<Options, \"as\" | \"default\"> extends true ? \":\" : \"?:\",\n    | (Types.Has<Options, \"as\"> extends true ? option_.Option<Schema.Type<S>> : Schema.Type<S>)\n    | (Types.Has<Options, \"as\" | \"default\" | \"exact\"> extends true ? never : undefined),\n    never,\n    \"?:\",\n    | Schema.Encoded<S>\n    | (Types.Has<Options, \"nullable\"> extends true ? null : never)\n    | (Types.Has<Options, \"exact\"> extends true ? never : undefined),\n    Types.Has<Options, \"default\">,\n    Schema.Context<S>\n  >\n{\n  readonly from: S\n  annotations(\n    annotations: PropertySignature.Annotations<\n      | (Types.Has<Options, \"as\"> extends true ? option_.Option<Schema.Type<S>> : Schema.Type<S>)\n      | (Types.Has<Options, \"as\" | \"default\" | \"exact\"> extends true ? never : undefined)\n    >\n  ): optionalWith<S, Options>\n}\n\nconst optionalPropertySignatureAST = <A, I, R>(\n  self: Schema<A, I, R>,\n  options?: {\n    readonly exact?: true\n    readonly default?: () => A\n    readonly nullable?: true\n    readonly as?: \"Option\"\n    readonly onNoneEncoding?: () => option_.Option<never>\n  }\n): PropertySignature.AST => {\n  const isExact = options?.exact\n  const defaultValue = options?.default\n  const isNullable = options?.nullable\n  const asOption = options?.as == \"Option\"\n  const asOptionEncode = options?.onNoneEncoding ? option_.orElse(options.onNoneEncoding) : identity\n\n  if (isExact) {\n    if (defaultValue) {\n      if (isNullable) {\n        return withConstructorDefault(\n          optionalToRequired(\n            NullOr(self),\n            typeSchema(self),\n            {\n              decode: option_.match({ onNone: defaultValue, onSome: (a) => a === null ? defaultValue() : a }),\n              encode: option_.some\n            }\n          ),\n          defaultValue\n        ).ast\n      } else {\n        return withConstructorDefault(\n          optionalToRequired(\n            self,\n            typeSchema(self),\n            { decode: option_.match({ onNone: defaultValue, onSome: identity }), encode: option_.some }\n          ),\n          defaultValue\n        ).ast\n      }\n    } else if (asOption) {\n      const to = OptionFromSelf_(typeSchema(self))\n      if (isNullable) {\n        return optionalToRequired(\n          NullOr(self),\n          to,\n          {\n            decode: option_.filter(Predicate.isNotNull<A | null>),\n            encode: asOptionEncode\n          }\n        ).ast\n      } else {\n        return optionalToRequired(\n          self,\n          to,\n          { decode: identity, encode: identity }\n        ).ast\n      }\n    } else {\n      if (isNullable) {\n        return optionalToOptional(\n          NullOr(self),\n          typeSchema(self),\n          { decode: option_.filter(Predicate.isNotNull<A | null>), encode: identity }\n        ).ast\n      } else {\n        return new PropertySignatureDeclaration(self.ast, true, true, {}, undefined)\n      }\n    }\n  } else {\n    if (defaultValue) {\n      if (isNullable) {\n        return withConstructorDefault(\n          optionalToRequired(\n            NullishOr(self),\n            typeSchema(self),\n            {\n              decode: option_.match({ onNone: defaultValue, onSome: (a) => (a == null ? defaultValue() : a) }),\n              encode: option_.some\n            }\n          ),\n          defaultValue\n        ).ast\n      } else {\n        return withConstructorDefault(\n          optionalToRequired(\n            UndefinedOr(self),\n            typeSchema(self),\n            {\n              decode: option_.match({ onNone: defaultValue, onSome: (a) => (a === undefined ? defaultValue() : a) }),\n              encode: option_.some\n            }\n          ),\n          defaultValue\n        ).ast\n      }\n    } else if (asOption) {\n      const to = OptionFromSelf_(typeSchema(self))\n      if (isNullable) {\n        return optionalToRequired(\n          NullishOr(self),\n          to,\n          {\n            decode: option_.filter<A | null | undefined, A>((a): a is A => a != null),\n            encode: asOptionEncode\n          }\n        ).ast\n      } else {\n        return optionalToRequired(\n          UndefinedOr(self),\n          to,\n          {\n            decode: option_.filter(Predicate.isNotUndefined<A | undefined>),\n            encode: asOptionEncode\n          }\n        ).ast\n      }\n    } else {\n      if (isNullable) {\n        return optionalToOptional(\n          NullishOr(self),\n          UndefinedOr(typeSchema(self)),\n          { decode: option_.filter(Predicate.isNotNull<A | null | undefined>), encode: identity }\n        ).ast\n      } else {\n        return new PropertySignatureDeclaration(UndefinedOr(self).ast, true, true, {}, undefined)\n      }\n    }\n  }\n}\n\n/**\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const optional = <S extends Schema.All>(self: S): optional<S> => {\n  const ast = self.ast === AST.undefinedKeyword || self.ast === AST.neverKeyword\n    ? AST.undefinedKeyword\n    : UndefinedOr(self).ast\n  return new PropertySignatureWithFromImpl(new PropertySignatureDeclaration(ast, true, true, {}, undefined), self)\n}\n\n/**\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const optionalWith: {\n  /**\n   * @category PropertySignature\n   * @since 3.10.0\n   */\n  <S extends Schema.All, Options extends OptionalOptions<Schema.Type<S>>>(options: Options): (self: S) => optionalWith<S, Options>\n  /**\n   * @category PropertySignature\n   * @since 3.10.0\n   */\n  <S extends Schema.All, Options extends OptionalOptions<Schema.Type<S>>>(self: S, options: Options): optionalWith<S, Options>\n} = dual((args) => isSchema(args[0]), (self, options) => {\n  return new PropertySignatureWithFromImpl(optionalPropertySignatureAST(self, options), self)\n})\n\n/**\n * @since 3.10.0\n */\nexport declare namespace Struct {\n  /**\n   * Useful for creating a type that can be used to add custom constraints to the fields of a struct.\n   *\n   * ```ts\n   * import { Schema } from \"effect\"\n   *\n   * const f = <Fields extends Record<\"a\" | \"b\", Schema.Struct.Field>>(\n   *   schema: Schema.Struct<Fields>\n   * ) => {\n   *   return schema.omit(\"a\")\n   * }\n   *\n   * //      ┌─── Schema.Struct<{ b: typeof Schema.Number; }>\n   * //      ▼\n   * const result = f(Schema.Struct({ a: Schema.String, b: Schema.Number }))\n   * ```\n   * @since 3.13.11\n   */\n  export type Field =\n    | Schema.All\n    | PropertySignature.All\n\n  /**\n   * @since 3.10.0\n   */\n  export type Fields = { readonly [x: PropertyKey]: Field }\n\n  type OptionalEncodedPropertySignature =\n    | PropertySignature<PropertySignature.Token, any, PropertyKey, \"?:\", any, boolean, unknown>\n    | PropertySignature<PropertySignature.Token, any, PropertyKey, \"?:\", never, boolean, unknown>\n    | PropertySignature<PropertySignature.Token, never, PropertyKey, \"?:\", any, boolean, unknown>\n    | PropertySignature<PropertySignature.Token, never, PropertyKey, \"?:\", never, boolean, unknown>\n\n  type EncodedOptionalKeys<Fields extends Struct.Fields> = {\n    [K in keyof Fields]: Fields[K] extends OptionalEncodedPropertySignature ? K\n      : never\n  }[keyof Fields]\n\n  type OptionalTypePropertySignature =\n    | PropertySignature<\"?:\", any, PropertyKey, PropertySignature.Token, any, boolean, unknown>\n    | PropertySignature<\"?:\", any, PropertyKey, PropertySignature.Token, never, boolean, unknown>\n    | PropertySignature<\"?:\", never, PropertyKey, PropertySignature.Token, any, boolean, unknown>\n    | PropertySignature<\"?:\", never, PropertyKey, PropertySignature.Token, never, boolean, unknown>\n\n  // type TypeOptionalKeys<Fields extends Struct.Fields> = {\n  //   [K in keyof Fields]: Fields[K] extends OptionalTypePropertySignature ? K : never\n  // }[keyof Fields]\n\n  /**\n   * @since 3.10.0\n   */\n  export type Type<F extends Fields> = Types.UnionToIntersection<\n    {\n      [K in keyof F]: F[K] extends OptionalTypePropertySignature ? { readonly [H in K]?: Schema.Type<F[H]> } :\n        { readonly [h in K]: Schema.Type<F[h]> }\n    }[keyof F]\n  > extends infer Q ? Q : never\n\n  type Key<F extends Fields, K extends keyof F> = [K] extends [never] ? never :\n    F[K] extends PropertySignature.All<infer Key> ? [Key] extends [never] ? K : Key :\n    K\n\n  /**\n   * @since 3.10.0\n   */\n  export type Encoded<F extends Fields> =\n    & { readonly [K in Exclude<keyof F, EncodedOptionalKeys<F>> as Key<F, K>]: Schema.Encoded<F[K]> }\n    & { readonly [K in EncodedOptionalKeys<F> as Key<F, K>]?: Schema.Encoded<F[K]> }\n\n  /**\n   * @since 3.10.0\n   */\n  export type Context<F extends Fields> = Schema.Context<F[keyof F]>\n\n  type PropertySignatureWithDefault =\n    | PropertySignature<PropertySignature.Token, any, PropertyKey, PropertySignature.Token, any, true, unknown>\n    | PropertySignature<PropertySignature.Token, any, PropertyKey, PropertySignature.Token, never, true, unknown>\n    | PropertySignature<PropertySignature.Token, never, PropertyKey, PropertySignature.Token, any, true, unknown>\n    | PropertySignature<PropertySignature.Token, never, PropertyKey, PropertySignature.Token, never, true, unknown>\n\n  /**\n   * @since 3.10.0\n   */\n  export type Constructor<F extends Fields> = Types.UnionToIntersection<\n    {\n      [K in keyof F]: F[K] extends OptionalTypePropertySignature ? { readonly [H in K]?: Schema.Type<F[H]> } :\n        F[K] extends PropertySignatureWithDefault ? { readonly [H in K]?: Schema.Type<F[H]> } :\n        { readonly [h in K]: Schema.Type<F[h]> }\n    }[keyof F]\n  > extends infer Q ? Q : never\n}\n\n/**\n * @since 3.10.0\n */\nexport declare namespace IndexSignature {\n  /**\n   * @since 3.10.0\n   */\n  export type Record = { readonly key: Schema.All; readonly value: Schema.All }\n\n  /**\n   * @since 3.10.0\n   */\n  export type Records = ReadonlyArray<Record>\n\n  /**\n   * @since 3.10.0\n   */\n  export type NonEmptyRecords = array_.NonEmptyReadonlyArray<Record>\n\n  type MergeTuple<T extends ReadonlyArray<unknown>> = T extends readonly [infer Head, ...infer Tail] ?\n    Head & MergeTuple<Tail>\n    : {}\n\n  /**\n   * @since 3.10.0\n   */\n  export type Type<Records extends IndexSignature.Records> = MergeTuple<\n    {\n      readonly [K in keyof Records]: {\n        readonly [P in Schema.Type<Records[K][\"key\"]>]: Schema.Type<Records[K][\"value\"]>\n      }\n    }\n  >\n\n  /**\n   * @since 3.10.0\n   */\n  export type Encoded<Records extends IndexSignature.Records> = MergeTuple<\n    {\n      readonly [K in keyof Records]: {\n        readonly [P in Schema.Encoded<Records[K][\"key\"]>]: Schema.Encoded<Records[K][\"value\"]>\n      }\n    }\n  >\n\n  /**\n   * @since 3.10.0\n   */\n  export type Context<Records extends IndexSignature.Records> = {\n    [K in keyof Records]: Schema.Context<Records[K][\"key\"]> | Schema.Context<Records[K][\"value\"]>\n  }[number]\n}\n\n/**\n * @since 3.10.0\n */\nexport declare namespace TypeLiteral {\n  /**\n   * @since 3.10.0\n   */\n  export type Type<Fields extends Struct.Fields, Records extends IndexSignature.Records> =\n    & Struct.Type<Fields>\n    & IndexSignature.Type<Records>\n\n  /**\n   * @since 3.10.0\n   */\n  export type Encoded<Fields extends Struct.Fields, Records extends IndexSignature.Records> =\n    & Struct.Encoded<Fields>\n    & IndexSignature.Encoded<Records>\n\n  /**\n   * @since 3.10.0\n   */\n  export type Constructor<Fields extends Struct.Fields, Records extends IndexSignature.Records> =\n    & Struct.Constructor<Fields>\n    & IndexSignature.Type<Records>\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface TypeLiteral<\n  Fields extends Struct.Fields,\n  Records extends IndexSignature.Records\n> extends\n  AnnotableClass<\n    TypeLiteral<Fields, Records>,\n    Simplify<TypeLiteral.Type<Fields, Records>>,\n    Simplify<TypeLiteral.Encoded<Fields, Records>>,\n    | Struct.Context<Fields>\n    | IndexSignature.Context<Records>\n  >\n{\n  readonly fields: Readonly<Fields>\n  readonly records: Readonly<Records>\n  annotations(\n    annotations: Annotations.Schema<Simplify<TypeLiteral.Type<Fields, Records>>>\n  ): TypeLiteral<Fields, Records>\n  make(\n    props: RequiredKeys<TypeLiteral.Constructor<Fields, Records>> extends never\n      ? void | Simplify<TypeLiteral.Constructor<Fields, Records>>\n      : Simplify<TypeLiteral.Constructor<Fields, Records>>,\n    options?: MakeOptions\n  ): Simplify<TypeLiteral.Type<Fields, Records>>\n}\n\nconst preserveMissingMessageAnnotation = AST.pickAnnotations([AST.MissingMessageAnnotationId])\n\nconst getDefaultTypeLiteralAST = <\n  Fields extends Struct.Fields,\n  const Records extends IndexSignature.Records\n>(fields: Fields, records: Records) => {\n  const ownKeys = Reflect.ownKeys(fields)\n  const pss: Array<AST.PropertySignature> = []\n  if (ownKeys.length > 0) {\n    const from: Array<AST.PropertySignature> = []\n    const to: Array<AST.PropertySignature> = []\n    const transformations: Array<AST.PropertySignatureTransformation> = []\n    for (let i = 0; i < ownKeys.length; i++) {\n      const key = ownKeys[i]\n      const field = fields[key]\n      if (isPropertySignature(field)) {\n        const ast: PropertySignature.AST = field.ast\n        switch (ast._tag) {\n          case \"PropertySignatureDeclaration\": {\n            const type = ast.type\n            const isOptional = ast.isOptional\n            const toAnnotations = ast.annotations\n            from.push(new AST.PropertySignature(key, type, isOptional, true, preserveMissingMessageAnnotation(ast)))\n            to.push(new AST.PropertySignature(key, AST.typeAST(type), isOptional, true, toAnnotations))\n            pss.push(\n              new AST.PropertySignature(key, type, isOptional, true, toAnnotations)\n            )\n            break\n          }\n          case \"PropertySignatureTransformation\": {\n            const fromKey = ast.from.fromKey ?? key\n            from.push(\n              new AST.PropertySignature(fromKey, ast.from.type, ast.from.isOptional, true, ast.from.annotations)\n            )\n            to.push(\n              new AST.PropertySignature(key, ast.to.type, ast.to.isOptional, true, ast.to.annotations)\n            )\n            transformations.push(new AST.PropertySignatureTransformation(fromKey, key, ast.decode, ast.encode))\n            break\n          }\n        }\n      } else {\n        from.push(new AST.PropertySignature(key, field.ast, false, true))\n        to.push(new AST.PropertySignature(key, AST.typeAST(field.ast), false, true))\n        pss.push(new AST.PropertySignature(key, field.ast, false, true))\n      }\n    }\n    if (array_.isNonEmptyReadonlyArray(transformations)) {\n      const issFrom: Array<AST.IndexSignature> = []\n      const issTo: Array<AST.IndexSignature> = []\n      for (const r of records) {\n        const { indexSignatures, propertySignatures } = AST.record(r.key.ast, r.value.ast)\n        propertySignatures.forEach((ps) => {\n          from.push(ps)\n          to.push(\n            new AST.PropertySignature(ps.name, AST.typeAST(ps.type), ps.isOptional, ps.isReadonly, ps.annotations)\n          )\n        })\n        indexSignatures.forEach((is) => {\n          issFrom.push(is)\n          issTo.push(new AST.IndexSignature(is.parameter, AST.typeAST(is.type), is.isReadonly))\n        })\n      }\n      return new AST.Transformation(\n        new AST.TypeLiteral(from, issFrom, { [AST.AutoTitleAnnotationId]: \"Struct (Encoded side)\" }),\n        new AST.TypeLiteral(to, issTo, { [AST.AutoTitleAnnotationId]: \"Struct (Type side)\" }),\n        new AST.TypeLiteralTransformation(transformations)\n      )\n    }\n  }\n  const iss: Array<AST.IndexSignature> = []\n  for (const r of records) {\n    const { indexSignatures, propertySignatures } = AST.record(r.key.ast, r.value.ast)\n    propertySignatures.forEach((ps) => pss.push(ps))\n    indexSignatures.forEach((is) => iss.push(is))\n  }\n  return new AST.TypeLiteral(pss, iss)\n}\n\nconst lazilyMergeDefaults = (\n  fields: Struct.Fields,\n  out: Record<PropertyKey, unknown>\n): { [x: string | symbol]: unknown } => {\n  const ownKeys = Reflect.ownKeys(fields)\n  for (const key of ownKeys) {\n    const field = fields[key]\n    if (out[key] === undefined && isPropertySignature(field)) {\n      const ast = field.ast\n      const defaultValue = ast._tag === \"PropertySignatureDeclaration\" ? ast.defaultValue : ast.to.defaultValue\n      if (defaultValue !== undefined) {\n        out[key] = defaultValue()\n      }\n    }\n  }\n  return out\n}\n\nfunction makeTypeLiteralClass<Fields extends Struct.Fields, const Records extends IndexSignature.Records>(\n  fields: Fields,\n  records: Records,\n  ast: AST.AST = getDefaultTypeLiteralAST(fields, records)\n): TypeLiteral<Fields, Records> {\n  return class TypeLiteralClass extends make<\n    Simplify<TypeLiteral.Type<Fields, Records>>,\n    Simplify<TypeLiteral.Encoded<Fields, Records>>,\n    | Struct.Context<Fields>\n    | IndexSignature.Context<Records>\n  >(ast) {\n    static override annotations(\n      annotations: Annotations.Schema<Simplify<TypeLiteral.Type<Fields, Records>>>\n    ): TypeLiteral<Fields, Records> {\n      return makeTypeLiteralClass(this.fields, this.records, mergeSchemaAnnotations(this.ast, annotations))\n    }\n\n    static fields = { ...fields }\n\n    static records = [...records] as Records\n\n    static make = (\n      props: Simplify<TypeLiteral.Constructor<Fields, Records>>,\n      options?: MakeOptions\n    ): Simplify<TypeLiteral.Type<Fields, Records>> => {\n      const propsWithDefaults: any = lazilyMergeDefaults(fields, { ...props as any })\n      return getDisableValidationMakeOption(options)\n        ? propsWithDefaults\n        : ParseResult.validateSync(this)(propsWithDefaults)\n    }\n\n    static pick(...keys: Array<keyof Fields>): Struct<Simplify<Pick<Fields, typeof keys[number]>>> {\n      return Struct(struct_.pick(fields, ...keys) as any)\n    }\n\n    static omit(...keys: Array<keyof Fields>): Struct<Simplify<Omit<Fields, typeof keys[number]>>> {\n      return Struct(struct_.omit(fields, ...keys) as any)\n    }\n  }\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface Struct<Fields extends Struct.Fields> extends\n  AnnotableClass<\n    Struct<Fields>,\n    Simplify<Struct.Type<Fields>>,\n    Simplify<Struct.Encoded<Fields>>,\n    Struct.Context<Fields>\n  >\n{\n  readonly fields: Readonly<Fields>\n  readonly records: readonly []\n  make(\n    props: RequiredKeys<Struct.Constructor<Fields>> extends never ? void | Simplify<Struct.Constructor<Fields>>\n      : Simplify<Struct.Constructor<Fields>>,\n    options?: MakeOptions\n  ): Simplify<Struct.Type<Fields>>\n\n  annotations(annotations: Annotations.Schema<Simplify<Struct.Type<Fields>>>): Struct<Fields>\n  pick<Keys extends ReadonlyArray<keyof Fields>>(...keys: Keys): Struct<Simplify<Pick<Fields, Keys[number]>>>\n  omit<Keys extends ReadonlyArray<keyof Fields>>(...keys: Keys): Struct<Simplify<Omit<Fields, Keys[number]>>>\n}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport function Struct<Fields extends Struct.Fields, const Records extends IndexSignature.NonEmptyRecords>(\n  fields: Fields,\n  ...records: Records\n): TypeLiteral<Fields, Records>\nexport function Struct<Fields extends Struct.Fields>(fields: Fields): Struct<Fields>\nexport function Struct<Fields extends Struct.Fields, const Records extends IndexSignature.Records>(\n  fields: Fields,\n  ...records: Records\n): TypeLiteral<Fields, Records> {\n  return makeTypeLiteralClass(fields, records)\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface tag<Tag extends AST.LiteralValue> extends PropertySignature<\":\", Tag, never, \":\", Tag, true, never> {}\n\n/**\n * Returns a property signature that represents a tag.\n * A tag is a literal value that is used to distinguish between different types of objects.\n * The tag is optional when using the `make` method.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Schema } from \"effect\"\n *\n * const User = Schema.Struct({\n *   _tag: Schema.tag(\"User\"),\n *   name: Schema.String,\n *   age: Schema.Number\n * })\n *\n * assert.deepStrictEqual(User.make({ name: \"John\", age: 44 }), { _tag: \"User\", name: \"John\", age: 44 })\n * ```\n *\n * @see {@link TaggedStruct}\n *\n * @since 3.10.0\n */\nexport const tag = <Tag extends AST.LiteralValue>(tag: Tag): tag<Tag> =>\n  Literal(tag).pipe(propertySignature, withConstructorDefault(() => tag))\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport type TaggedStruct<Tag extends AST.LiteralValue, Fields extends Struct.Fields> = Struct<\n  { _tag: tag<Tag> } & Fields\n>\n\n/**\n * A tagged struct is a struct that has a tag property that is used to distinguish between different types of objects.\n *\n * The tag is optional when using the `make` method.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Schema } from \"effect\"\n *\n * const User = Schema.TaggedStruct(\"User\", {\n *   name: Schema.String,\n *   age: Schema.Number\n * })\n *\n * assert.deepStrictEqual(User.make({ name: \"John\", age: 44 }), { _tag: \"User\", name: \"John\", age: 44 })\n * ```\n *\n * @category constructors\n * @since 3.10.0\n */\nexport const TaggedStruct = <Tag extends AST.LiteralValue, Fields extends Struct.Fields>(\n  value: Tag,\n  fields: Fields\n): TaggedStruct<Tag, Fields> => Struct({ _tag: tag(value), ...fields })\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface Record$<K extends Schema.All, V extends Schema.All> extends\n  AnnotableClass<\n    Record$<K, V>,\n    { readonly [P in Schema.Type<K>]: Schema.Type<V> },\n    { readonly [P in Schema.Encoded<K>]: Schema.Encoded<V> },\n    | Schema.Context<K>\n    | Schema.Context<V>\n  >\n{\n  readonly fields: {}\n  readonly records: readonly [{ readonly key: K; readonly value: V }]\n  readonly key: K\n  readonly value: V\n  make(\n    props: void | { readonly [P in Schema.Type<K>]: Schema.Type<V> },\n    options?: MakeOptions\n  ): { readonly [P in Schema.Type<K>]: Schema.Type<V> }\n  annotations(annotations: Annotations.Schema<{ readonly [P in Schema.Type<K>]: Schema.Type<V> }>): Record$<K, V>\n}\n\nfunction makeRecordClass<K extends Schema.All, V extends Schema.All>(\n  key: K,\n  value: V,\n  ast?: AST.AST\n): Record$<K, V> {\n  return class RecordClass extends makeTypeLiteralClass({}, [{ key, value }], ast) {\n    static override annotations(\n      annotations: Annotations.Schema<{ readonly [P in Schema.Type<K>]: Schema.Type<V> }>\n    ): Record$<K, V> {\n      return makeRecordClass(key, value, mergeSchemaAnnotations(this.ast, annotations))\n    }\n\n    static key = key\n\n    static value = value\n  }\n}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const Record = <K extends Schema.All, V extends Schema.All>(\n  options: { readonly key: K; readonly value: V }\n): Record$<K, V> => makeRecordClass(options.key, options.value)\n\n/**\n * @category struct transformations\n * @since 3.10.0\n */\nexport const pick = <A, I, Keys extends ReadonlyArray<keyof A & keyof I>>(...keys: Keys) =>\n<R>(\n  self: Schema<A, I, R>\n): SchemaClass<Simplify<Pick<A, Keys[number]>>, Simplify<Pick<I, Keys[number]>>, R> => make(AST.pick(self.ast, keys))\n\n/**\n * @category struct transformations\n * @since 3.10.0\n */\nexport const omit = <A, I, Keys extends ReadonlyArray<keyof A & keyof I>>(...keys: Keys) =>\n<R>(\n  self: Schema<A, I, R>\n): SchemaClass<Simplify<Omit<A, Keys[number]>>, Simplify<Omit<I, Keys[number]>>, R> => make(AST.omit(self.ast, keys))\n\n/**\n * Given a schema `Schema<A, I, R>` and a key `key: K`, this function extracts a specific field from the `A` type,\n * producing a new schema that represents a transformation from the `{ readonly [key]: I[K] }` type to `A[K]`.\n *\n * @example\n * ```ts\n * import * as Schema from \"effect/Schema\"\n *\n * // ---------------------------------------------\n * // use case: pull out a single field from a\n * // struct through a transformation\n * // ---------------------------------------------\n *\n * const mytable = Schema.Struct({\n *   column1: Schema.NumberFromString,\n *   column2: Schema.Number\n * })\n *\n * // const pullOutColumn: S.Schema<number, {\n * //     readonly column1: string;\n * // }, never>\n * const pullOutColumn = mytable.pipe(Schema.pluck(\"column1\"))\n *\n * console.log(Schema.decodeUnknownEither(Schema.Array(pullOutColumn))([{ column1: \"1\", column2: 100 }, { column1: \"2\", column2: 300 }]))\n * // Output: { _id: 'Either', _tag: 'Right', right: [ 1, 2 ] }\n * ```\n *\n * @category struct transformations\n * @since 3.10.0\n */\nexport const pluck: {\n  /**\n   * Given a schema `Schema<A, I, R>` and a key `key: K`, this function extracts a specific field from the `A` type,\n   * producing a new schema that represents a transformation from the `{ readonly [key]: I[K] }` type to `A[K]`.\n   *\n   * @example\n   * ```ts\n   * import * as Schema from \"effect/Schema\"\n   *\n   * // ---------------------------------------------\n   * // use case: pull out a single field from a\n   * // struct through a transformation\n   * // ---------------------------------------------\n   *\n   * const mytable = Schema.Struct({\n   *   column1: Schema.NumberFromString,\n   *   column2: Schema.Number\n   * })\n   *\n   * // const pullOutColumn: S.Schema<number, {\n   * //     readonly column1: string;\n   * // }, never>\n   * const pullOutColumn = mytable.pipe(Schema.pluck(\"column1\"))\n   *\n   * console.log(Schema.decodeUnknownEither(Schema.Array(pullOutColumn))([{ column1: \"1\", column2: 100 }, { column1: \"2\", column2: 300 }]))\n   * // Output: { _id: 'Either', _tag: 'Right', right: [ 1, 2 ] }\n   * ```\n   *\n   * @category struct transformations\n   * @since 3.10.0\n   */\n  <A, I, K extends keyof A & keyof I>(key: K): <R>(schema: Schema<A, I, R>) => SchemaClass<A[K], Simplify<Pick<I, K>>, R>\n  /**\n   * Given a schema `Schema<A, I, R>` and a key `key: K`, this function extracts a specific field from the `A` type,\n   * producing a new schema that represents a transformation from the `{ readonly [key]: I[K] }` type to `A[K]`.\n   *\n   * @example\n   * ```ts\n   * import * as Schema from \"effect/Schema\"\n   *\n   * // ---------------------------------------------\n   * // use case: pull out a single field from a\n   * // struct through a transformation\n   * // ---------------------------------------------\n   *\n   * const mytable = Schema.Struct({\n   *   column1: Schema.NumberFromString,\n   *   column2: Schema.Number\n   * })\n   *\n   * // const pullOutColumn: S.Schema<number, {\n   * //     readonly column1: string;\n   * // }, never>\n   * const pullOutColumn = mytable.pipe(Schema.pluck(\"column1\"))\n   *\n   * console.log(Schema.decodeUnknownEither(Schema.Array(pullOutColumn))([{ column1: \"1\", column2: 100 }, { column1: \"2\", column2: 300 }]))\n   * // Output: { _id: 'Either', _tag: 'Right', right: [ 1, 2 ] }\n   * ```\n   *\n   * @category struct transformations\n   * @since 3.10.0\n   */\n  <A, I, R, K extends keyof A & keyof I>(schema: Schema<A, I, R>, key: K): SchemaClass<A[K], Simplify<Pick<I, K>>, R>\n} = dual(\n  2,\n  <A, I, R, K extends keyof A & keyof I>(\n    schema: Schema<A, I, R>,\n    key: K\n  ): Schema<A[K], Pick<I, K>, R> => {\n    const ps = AST.getPropertyKeyIndexedAccess(AST.typeAST(schema.ast), key)\n    const value = make</**\n     * Given a schema `Schema<A, I, R>` and a key `key: K`, this function extracts a specific field from the `A` type,\n     * producing a new schema that represents a transformation from the `{ readonly [key]: I[K] }` type to `A[K]`.\n     *\n     * @example\n     * ```ts\n     * import * as Schema from \"effect/Schema\"\n     *\n     * // ---------------------------------------------\n     * // use case: pull out a single field from a\n     * // struct through a transformation\n     * // ---------------------------------------------\n     *\n     * const mytable = Schema.Struct({\n     *   column1: Schema.NumberFromString,\n     *   column2: Schema.Number\n     * })\n     *\n     * // const pullOutColumn: S.Schema<number, {\n     * //     readonly column1: string;\n     * // }, never>\n     * const pullOutColumn = mytable.pipe(Schema.pluck(\"column1\"))\n     *\n     * console.log(Schema.decodeUnknownEither(Schema.Array(pullOutColumn))([{ column1: \"1\", column2: 100 }, { column1: \"2\", column2: 300 }]))\n     * // Output: { _id: 'Either', _tag: 'Right', right: [ 1, 2 ] }\n     * ```\n     *\n     * @category struct transformations\n     * @since 3.10.0\n     */\n    A[K], /**\n     * Given a schema `Schema<A, I, R>` and a key `key: K`, this function extracts a specific field from the `A` type,\n     * producing a new schema that represents a transformation from the `{ readonly [key]: I[K] }` type to `A[K]`.\n     *\n     * @example\n     * ```ts\n     * import * as Schema from \"effect/Schema\"\n     *\n     * // ---------------------------------------------\n     * // use case: pull out a single field from a\n     * // struct through a transformation\n     * // ---------------------------------------------\n     *\n     * const mytable = Schema.Struct({\n     *   column1: Schema.NumberFromString,\n     *   column2: Schema.Number\n     * })\n     *\n     * // const pullOutColumn: S.Schema<number, {\n     * //     readonly column1: string;\n     * // }, never>\n     * const pullOutColumn = mytable.pipe(Schema.pluck(\"column1\"))\n     *\n     * console.log(Schema.decodeUnknownEither(Schema.Array(pullOutColumn))([{ column1: \"1\", column2: 100 }, { column1: \"2\", column2: 300 }]))\n     * // Output: { _id: 'Either', _tag: 'Right', right: [ 1, 2 ] }\n     * ```\n     *\n     * @category struct transformations\n     * @since 3.10.0\n     */\n    A[K], /**\n     * Given a schema `Schema<A, I, R>` and a key `key: K`, this function extracts a specific field from the `A` type,\n     * producing a new schema that represents a transformation from the `{ readonly [key]: I[K] }` type to `A[K]`.\n     *\n     * @example\n     * ```ts\n     * import * as Schema from \"effect/Schema\"\n     *\n     * // ---------------------------------------------\n     * // use case: pull out a single field from a\n     * // struct through a transformation\n     * // ---------------------------------------------\n     *\n     * const mytable = Schema.Struct({\n     *   column1: Schema.NumberFromString,\n     *   column2: Schema.Number\n     * })\n     *\n     * // const pullOutColumn: S.Schema<number, {\n     * //     readonly column1: string;\n     * // }, never>\n     * const pullOutColumn = mytable.pipe(Schema.pluck(\"column1\"))\n     *\n     * console.log(Schema.decodeUnknownEither(Schema.Array(pullOutColumn))([{ column1: \"1\", column2: 100 }, { column1: \"2\", column2: 300 }]))\n     * // Output: { _id: 'Either', _tag: 'Right', right: [ 1, 2 ] }\n     * ```\n     *\n     * @category struct transformations\n     * @since 3.10.0\n     */\n    R>(ps.isOptional ? AST.orUndefined(ps.type) : ps.type)\n    const out = transform(\n      schema.pipe(pick(key)),\n      value,\n      {\n        strict: true,\n        decode: (i) => i[key],\n        encode: (a) => ps.isOptional && a === undefined ? {} : { [key]: a } as any\n      }\n    )\n    return out\n  }\n)\n\n/**\n * @category branding\n * @since 3.10.0\n */\nexport interface BrandSchema<A extends Brand<any>, I = A, R = never>\n  extends AnnotableClass<BrandSchema<A, I, R>, A, I, R>\n{\n  make(a: Brand.Unbranded<A>, options?: MakeOptions): A\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface brand<S extends Schema.Any, B extends string | symbol>\n  extends BrandSchema<Schema.Type<S> & Brand<B>, Schema.Encoded<S>, Schema.Context<S>>\n{\n  readonly from: S\n  annotations(annotations: Annotations.Schema<Schema.Type<S> & Brand<B>>): brand<S, B>\n}\n\nfunction makeBrandClass<S extends Schema.Any, B extends string | symbol>(\n  from: S,\n  ast: AST.AST\n): brand<S, B> {\n  return class BrandClass extends make<Schema.Type<S> & Brand<B>, Schema.Encoded<S>, Schema.Context<S>>(ast) {\n    static override annotations(annotations: Annotations.Schema<Schema.Type<S> & Brand<B>>): brand<S, B> {\n      return makeBrandClass(this.from, mergeSchemaAnnotations(this.ast, annotations))\n    }\n\n    static make = (a: Brand.Unbranded<Schema.Type<S> & Brand<B>>, options?: MakeOptions): Schema.Type<S> & Brand<B> => {\n      return getDisableValidationMakeOption(options) ? a : ParseResult.validateSync(this)(a)\n    }\n\n    static from = from\n  }\n}\n\n/**\n * Returns a nominal branded schema by applying a brand to a given schema.\n *\n * ```\n * Schema<A> + B -> Schema<A & Brand<B>>\n * ```\n *\n * @example\n * ```ts\n * import * as Schema from \"effect/Schema\"\n *\n * const Int = Schema.Number.pipe(Schema.int(), Schema.brand(\"Int\"))\n * type Int = Schema.Schema.Type<typeof Int> // number & Brand<\"Int\">\n * ```\n *\n * @category branding\n * @since 3.10.0\n */\nexport const brand = <S extends Schema.Any, B extends string | symbol>(\n  brand: B,\n  annotations?: Annotations.Schema<Schema.Type<S> & Brand<B>>\n) =>\n(self: S): brand<S, B> => {\n  const annotation: AST.BrandAnnotation = option_.match(AST.getBrandAnnotation(self.ast), {\n    onNone: () => [brand],\n    onSome: (brands) => [...brands, brand]\n  })\n  const ast = AST.annotations(\n    self.ast,\n    toASTAnnotations({\n      [AST.BrandAnnotationId]: annotation,\n      ...annotations\n    })\n  )\n  return makeBrandClass(self, ast)\n}\n\n/**\n * @category combinators\n * @since 3.10.0\n */\nexport const partial = <A, I, R>(\n  self: Schema<A, I, R>\n): SchemaClass<{ [K in keyof A]?: A[K] | undefined }, { [K in keyof I]?: I[K] | undefined }, R> =>\n  make(AST.partial(self.ast))\n\n/**\n * @category combinators\n * @since 3.10.0\n */\nexport const partialWith: {\n  /**\n   * @category combinators\n   * @since 3.10.0\n   */\n  <const Options extends { readonly exact: true }>(options: Options): <A, I, R>(\n    self: Schema<A, I, R>\n  ) => SchemaClass<{ [K in keyof A]?: A[K] }, { [K in keyof I]?: I[K] }, R>\n  /**\n   * @category combinators\n   * @since 3.10.0\n   */\n  <A, I, R, const Options extends { readonly exact: true } | undefined>(self: Schema<A, I, R>, options: Options): SchemaClass<{ [K in keyof A]?: A[K] }, { [K in keyof I]?: I[K] }, R>\n} = dual((args) => isSchema(args[0]), <A, I, R>(\n  self: Schema<A, I, R>,\n  options: { readonly exact: true }\n): SchemaClass<Partial<A>, Partial<I>, R> => make(AST.partial(self.ast, options)))\n\n/**\n * @category combinators\n * @since 3.10.0\n */\nexport const required = <A, I, R>(\n  self: Schema<A, I, R>\n): SchemaClass<{ [K in keyof A]-?: A[K] }, { [K in keyof I]-?: I[K] }, R> => make(AST.required(self.ast))\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface mutable<S extends Schema.Any> extends\n  AnnotableClass<\n    mutable<S>,\n    SimplifyMutable<Schema.Type<S>>,\n    SimplifyMutable<Schema.Encoded<S>>,\n    Schema.Context<S>\n  >\n{}\n\n/**\n * Creates a new schema with shallow mutability applied to its properties.\n *\n * @category combinators\n * @since 3.10.0\n */\nexport const mutable = <S extends Schema.Any>(schema: S): mutable<S> => make(AST.mutable(schema.ast))\n\nconst intersectTypeLiterals = (\n  x: AST.AST,\n  y: AST.AST,\n  path: ReadonlyArray<PropertyKey>\n): AST.TypeLiteral => {\n  if (AST.isTypeLiteral(x) && AST.isTypeLiteral(y)) {\n    const propertySignatures = [...x.propertySignatures]\n    for (const ps of y.propertySignatures) {\n      const name = ps.name\n      const i = propertySignatures.findIndex((ps) => ps.name === name)\n      if (i === -1) {\n        propertySignatures.push(ps)\n      } else {\n        const { isOptional, type } = propertySignatures[i]\n        propertySignatures[i] = new AST.PropertySignature(\n          name,\n          extendAST(type, ps.type, path.concat(name)),\n          isOptional,\n          true\n        )\n      }\n    }\n    return new AST.TypeLiteral(\n      propertySignatures,\n      x.indexSignatures.concat(y.indexSignatures)\n    )\n  }\n  throw new Error(errors_.getSchemaExtendErrorMessage(x, y, path))\n}\n\nconst preserveRefinementAnnotations = AST.omitAnnotations([AST.IdentifierAnnotationId])\n\nconst addRefinementToMembers = (refinement: AST.Refinement, asts: ReadonlyArray<AST.AST>): Array<AST.Refinement> =>\n  asts.map((ast) => new AST.Refinement(ast, refinement.filter, preserveRefinementAnnotations(refinement)))\n\nconst extendAST = (x: AST.AST, y: AST.AST, path: ReadonlyArray<PropertyKey>): AST.AST =>\n  AST.Union.make(intersectUnionMembers([x], [y], path))\n\nconst getTypes = (ast: AST.AST): ReadonlyArray<AST.AST> => AST.isUnion(ast) ? ast.types : [ast]\n\nconst intersectUnionMembers = (\n  xs: ReadonlyArray<AST.AST>,\n  ys: ReadonlyArray<AST.AST>,\n  path: ReadonlyArray<PropertyKey>\n): Array<AST.AST> =>\n  array_.flatMap(xs, (x) =>\n    array_.flatMap(ys, (y) => {\n      switch (y._tag) {\n        case \"Literal\": {\n          if (\n            (Predicate.isString(y.literal) && AST.isStringKeyword(x) ||\n              (Predicate.isNumber(y.literal) && AST.isNumberKeyword(x)) ||\n              (Predicate.isBoolean(y.literal) && AST.isBooleanKeyword(x)))\n          ) {\n            return [y]\n          }\n          break\n        }\n        case \"StringKeyword\": {\n          if (y === AST.stringKeyword) {\n            if (AST.isStringKeyword(x) || (AST.isLiteral(x) && Predicate.isString(x.literal))) {\n              return [x]\n            } else if (AST.isRefinement(x)) {\n              return addRefinementToMembers(x, intersectUnionMembers(getTypes(x.from), [y], path))\n            }\n          } else if (x === AST.stringKeyword) {\n            return [y]\n          }\n          break\n        }\n        case \"NumberKeyword\": {\n          if (y === AST.numberKeyword) {\n            if (AST.isNumberKeyword(x) || (AST.isLiteral(x) && Predicate.isNumber(x.literal))) {\n              return [x]\n            } else if (AST.isRefinement(x)) {\n              return addRefinementToMembers(x, intersectUnionMembers(getTypes(x.from), [y], path))\n            }\n          } else if (x === AST.numberKeyword) {\n            return [y]\n          }\n          break\n        }\n        case \"BooleanKeyword\": {\n          if (y === AST.booleanKeyword) {\n            if (AST.isBooleanKeyword(x) || (AST.isLiteral(x) && Predicate.isBoolean(x.literal))) {\n              return [x]\n            } else if (AST.isRefinement(x)) {\n              return addRefinementToMembers(x, intersectUnionMembers(getTypes(x.from), [y], path))\n            }\n          } else if (x === AST.booleanKeyword) {\n            return [y]\n          }\n          break\n        }\n        case \"Union\":\n          return intersectUnionMembers(getTypes(x), y.types, path)\n        case \"Suspend\":\n          return [new AST.Suspend(() => extendAST(x, y.f(), path))]\n        case \"Refinement\":\n          return addRefinementToMembers(y, intersectUnionMembers(getTypes(x), getTypes(y.from), path))\n        case \"TypeLiteral\": {\n          switch (x._tag) {\n            case \"Union\":\n              return intersectUnionMembers(x.types, [y], path)\n            case \"Suspend\":\n              return [new AST.Suspend(() => extendAST(x.f(), y, path))]\n            case \"Refinement\":\n              return addRefinementToMembers(x, intersectUnionMembers(getTypes(x.from), [y], path))\n            case \"TypeLiteral\":\n              return [intersectTypeLiterals(x, y, path)]\n            case \"Transformation\": {\n              const transformation = x.transformation\n              const from = intersectTypeLiterals(x.from, y, path)\n              const to = intersectTypeLiterals(x.to, AST.typeAST(y), path)\n              switch (transformation._tag) {\n                case \"TypeLiteralTransformation\":\n                  return [\n                    new AST.Transformation(\n                      from,\n                      to,\n                      new AST.TypeLiteralTransformation(transformation.propertySignatureTransformations)\n                    )\n                  ]\n                case \"ComposeTransformation\":\n                  return [new AST.Transformation(from, to, AST.composeTransformation)]\n                case \"FinalTransformation\":\n                  return [\n                    new AST.Transformation(\n                      from,\n                      to,\n                      new AST.FinalTransformation(\n                        (fromA, options, ast, fromI) =>\n                          ParseResult.map(\n                            transformation.decode(fromA, options, ast, fromI),\n                            (partial) => ({ ...fromA, ...partial })\n                          ),\n                        (toI, options, ast, toA) =>\n                          ParseResult.map(\n                            transformation.encode(toI, options, ast, toA),\n                            (partial) => ({ ...toI, ...partial })\n                          )\n                      )\n                    )\n                  ]\n              }\n            }\n          }\n          break\n        }\n        case \"Transformation\": {\n          if (AST.isTransformation(x)) {\n            if (\n              AST.isTypeLiteralTransformation(y.transformation) && AST.isTypeLiteralTransformation(x.transformation)\n            ) {\n              return [\n                new AST.Transformation(\n                  intersectTypeLiterals(x.from, y.from, path),\n                  intersectTypeLiterals(x.to, y.to, path),\n                  new AST.TypeLiteralTransformation(\n                    y.transformation.propertySignatureTransformations.concat(\n                      x.transformation.propertySignatureTransformations\n                    )\n                  )\n                )\n              ]\n            }\n          } else {\n            return intersectUnionMembers([y], [x], path)\n          }\n          break\n        }\n      }\n      throw new Error(errors_.getSchemaExtendErrorMessage(x, y, path))\n    }))\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface extend<Self extends Schema.Any, That extends Schema.Any> extends\n  AnnotableClass<\n    extend<Self, That>,\n    Schema.Type<Self> & Schema.Type<That>,\n    Schema.Encoded<Self> & Schema.Encoded<That>,\n    Schema.Context<Self> | Schema.Context<That>\n  >\n{}\n\n/**\n * Extends a schema with another schema.\n *\n * Not all extensions are supported, and their support depends on the nature of\n * the involved schemas.\n *\n * Possible extensions include:\n * - `Schema.String` with another `Schema.String` refinement or a string literal\n * - `Schema.Number` with another `Schema.Number` refinement or a number literal\n * - `Schema.Boolean` with another `Schema.Boolean` refinement or a boolean\n *   literal\n * - A struct with another struct where overlapping fields support extension\n * - A struct with in index signature\n * - A struct with a union of supported schemas\n * - A refinement of a struct with a supported schema\n * - A suspend of a struct with a supported schema\n * - A transformation between structs where the “from” and “to” sides have no\n *   overlapping fields with the target struct\n *\n * @example\n * ```ts\n * import * as Schema from \"effect/Schema\"\n *\n * const schema = Schema.Struct({\n *   a: Schema.String,\n *   b: Schema.String\n * })\n *\n * // const extended: Schema<\n * //   {\n * //     readonly a: string\n * //     readonly b: string\n * //   } & {\n * //     readonly c: string\n * //   } & {\n * //     readonly [x: string]: string\n * //   }\n * // >\n * const extended = Schema.asSchema(schema.pipe(\n *   Schema.extend(Schema.Struct({ c: Schema.String })), // <= you can add more fields\n *   Schema.extend(Schema.Record({ key: Schema.String, value: Schema.String })) // <= you can add index signatures\n * ))\n * ```\n *\n * @category combinators\n * @since 3.10.0\n */\nexport const extend: {\n  /**\n   * Extends a schema with another schema.\n   *\n   * Not all extensions are supported, and their support depends on the nature of\n   * the involved schemas.\n   *\n   * Possible extensions include:\n   * - `Schema.String` with another `Schema.String` refinement or a string literal\n   * - `Schema.Number` with another `Schema.Number` refinement or a number literal\n   * - `Schema.Boolean` with another `Schema.Boolean` refinement or a boolean\n   *   literal\n   * - A struct with another struct where overlapping fields support extension\n   * - A struct with in index signature\n   * - A struct with a union of supported schemas\n   * - A refinement of a struct with a supported schema\n   * - A suspend of a struct with a supported schema\n   * - A transformation between structs where the “from” and “to” sides have no\n   *   overlapping fields with the target struct\n   *\n   * @example\n   * ```ts\n   * import * as Schema from \"effect/Schema\"\n   *\n   * const schema = Schema.Struct({\n   *   a: Schema.String,\n   *   b: Schema.String\n   * })\n   *\n   * // const extended: Schema<\n   * //   {\n   * //     readonly a: string\n   * //     readonly b: string\n   * //   } & {\n   * //     readonly c: string\n   * //   } & {\n   * //     readonly [x: string]: string\n   * //   }\n   * // >\n   * const extended = Schema.asSchema(schema.pipe(\n   *   Schema.extend(Schema.Struct({ c: Schema.String })), // <= you can add more fields\n   *   Schema.extend(Schema.Record({ key: Schema.String, value: Schema.String })) // <= you can add index signatures\n   * ))\n   * ```\n   *\n   * @category combinators\n   * @since 3.10.0\n   */\n  <That extends Schema.Any>(that: That): <Self extends Schema.Any>(self: Self) => extend<Self, That>\n  /**\n   * Extends a schema with another schema.\n   *\n   * Not all extensions are supported, and their support depends on the nature of\n   * the involved schemas.\n   *\n   * Possible extensions include:\n   * - `Schema.String` with another `Schema.String` refinement or a string literal\n   * - `Schema.Number` with another `Schema.Number` refinement or a number literal\n   * - `Schema.Boolean` with another `Schema.Boolean` refinement or a boolean\n   *   literal\n   * - A struct with another struct where overlapping fields support extension\n   * - A struct with in index signature\n   * - A struct with a union of supported schemas\n   * - A refinement of a struct with a supported schema\n   * - A suspend of a struct with a supported schema\n   * - A transformation between structs where the “from” and “to” sides have no\n   *   overlapping fields with the target struct\n   *\n   * @example\n   * ```ts\n   * import * as Schema from \"effect/Schema\"\n   *\n   * const schema = Schema.Struct({\n   *   a: Schema.String,\n   *   b: Schema.String\n   * })\n   *\n   * // const extended: Schema<\n   * //   {\n   * //     readonly a: string\n   * //     readonly b: string\n   * //   } & {\n   * //     readonly c: string\n   * //   } & {\n   * //     readonly [x: string]: string\n   * //   }\n   * // >\n   * const extended = Schema.asSchema(schema.pipe(\n   *   Schema.extend(Schema.Struct({ c: Schema.String })), // <= you can add more fields\n   *   Schema.extend(Schema.Record({ key: Schema.String, value: Schema.String })) // <= you can add index signatures\n   * ))\n   * ```\n   *\n   * @category combinators\n   * @since 3.10.0\n   */\n  <Self extends Schema.Any, That extends Schema.Any>(self: Self, that: That): extend<Self, That>\n} = dual(\n  2,\n  <Self extends Schema.Any, That extends Schema.Any>(self: Self, that: That) => make(extendAST(self.ast, that.ast, []))\n)\n\n/**\n * @category combinators\n * @since 3.10.0\n */\nexport const compose: {\n  /**\n   * @category combinators\n   * @since 3.10.0\n   */\n  <To extends Schema.Any, From extends Schema.Any, C extends Schema.Type<From>>(to: To & Schema<Schema.Type<To>, C, Schema.Context<To>>): (from: From) => transform<From, To>\n  /**\n   * @category combinators\n   * @since 3.10.0\n   */\n  <To extends Schema.Any>(to: To): <From extends Schema.Any, B extends Schema.Encoded<To>>(\n    from: From & Schema<B, Schema.Encoded<From>, Schema.Context<From>>\n  ) => transform<From, To>\n  /**\n   * @category combinators\n   * @since 3.10.0\n   */\n  <To extends Schema.Any>(to: To, options?: { readonly strict: true }): <From extends Schema.Any>(\n    from: From & Schema<Schema.Encoded<To>, Schema.Encoded<From>, Schema.Context<From>>\n  ) => transform<From, To>\n  /**\n   * @category combinators\n   * @since 3.10.0\n   */\n  <To extends Schema.Any>(to: To, options: { readonly strict: false }): <From extends Schema.Any>(from: From) => transform<From, To>\n\n  /**\n   * @category combinators\n   * @since 3.10.0\n   */\n  <From extends Schema.Any, To extends Schema.Any, C extends Schema.Type<From>>(from: From, to: To & Schema<Schema.Type<To>, C, Schema.Context<To>>): transform<From, To>\n  /**\n   * @category combinators\n   * @since 3.10.0\n   */\n  <From extends Schema.Any, B extends Schema.Encoded<To>, To extends Schema.Any>(from: From & Schema<B, Schema.Encoded<From>, Schema.Context<From>>, to: To): transform<From, To>\n  /**\n   * @category combinators\n   * @since 3.10.0\n   */\n  <From extends Schema.Any, To extends Schema.Any>(\n    from: From & Schema<Schema.Encoded<To>, Schema.Encoded<From>, Schema.Context<From>>,\n    to: To,\n    options?: { readonly strict: true }\n  ): transform<From, To>\n  /**\n   * @category combinators\n   * @since 3.10.0\n   */\n  <From extends Schema.Any, To extends Schema.Any>(from: From, to: To, options: { readonly strict: false }): transform<From, To>\n} = dual(\n  (args) => isSchema(args[1]),\n  <B, A, R1, D, C, R2>(from: Schema<B, A, R1>, to: Schema<D, C, R2>): SchemaClass<D, A, R1 | R2> =>\n    makeTransformationClass(from, to, AST.compose(from.ast, to.ast))\n)\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface suspend<A, I, R> extends AnnotableClass<suspend<A, I, R>, A, I, R> {}\n\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const suspend = <A, I, R>(f: () => Schema<A, I, R>): suspend<A, I, R> => make(new AST.Suspend(() => f().ast))\n\n/**\n * @since 3.10.0\n * @category symbol\n */\nexport const RefineSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/Refine\")\n\n/**\n * @since 3.10.0\n * @category symbol\n */\nexport type RefineSchemaId = typeof RefineSchemaId\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface refine<A, From extends Schema.Any>\n  extends AnnotableClass<refine<A, From>, A, Schema.Encoded<From>, Schema.Context<From>>\n{\n  /** The following is required for {@link HasFields} to work */\n  readonly [RefineSchemaId]: From\n  readonly from: From\n  readonly filter: (\n    a: Schema.Type<From>,\n    options: ParseOptions,\n    self: AST.Refinement\n  ) => option_.Option<ParseResult.ParseIssue>\n  make(a: Schema.Type<From>, options?: MakeOptions): A\n}\n\nfunction makeRefineClass<From extends Schema.Any, A>(\n  from: From,\n  filter: (a: Schema.Type<From>, options: ParseOptions, self: AST.Refinement) => option_.Option<ParseResult.ParseIssue>,\n  ast: AST.AST\n): refine<A, From> {\n  return class RefineClass extends make<A, Schema.Encoded<From>, Schema.Context<From>>(ast) {\n    static override annotations(annotations: Annotations.Schema<A>): refine<A, From> {\n      return makeRefineClass(this.from, this.filter, mergeSchemaAnnotations(this.ast, annotations))\n    }\n\n    static [RefineSchemaId] = from\n\n    static from = from\n\n    static filter = filter\n\n    static make = (a: Schema.Type<From>, options?: MakeOptions): A => {\n      return getDisableValidationMakeOption(options) ? a : ParseResult.validateSync(this)(a)\n    }\n  }\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface filter<From extends Schema.Any> extends refine<Schema.Type<From>, From> {}\n\nconst fromFilterPredicateReturnTypeItem = (\n  item: FilterOutput,\n  ast: AST.Refinement | AST.Transformation,\n  input: unknown\n): option_.Option<ParseResult.ParseIssue> => {\n  if (Predicate.isBoolean(item)) {\n    return item\n      ? option_.none()\n      : option_.some(new ParseResult.Type(ast, input))\n  }\n  if (Predicate.isString(item)) {\n    return option_.some(new ParseResult.Type(ast, input, item))\n  }\n  if (item !== undefined) {\n    if (\"_tag\" in item) {\n      return option_.some(item)\n    }\n    const issue = new ParseResult.Type(ast, input, item.message)\n    return option_.some(\n      array_.isNonEmptyReadonlyArray(item.path) ? new ParseResult.Pointer(item.path, input, issue) : issue\n    )\n  }\n  return option_.none()\n}\n\nconst toFilterParseIssue = (\n  out: FilterReturnType,\n  ast: AST.Refinement | AST.Transformation,\n  input: unknown\n): option_.Option<ParseResult.ParseIssue> => {\n  if (util_.isSingle(out)) {\n    return fromFilterPredicateReturnTypeItem(out, ast, input)\n  }\n  if (array_.isNonEmptyReadonlyArray(out)) {\n    const issues = array_.filterMap(out, (issue) => fromFilterPredicateReturnTypeItem(issue, ast, input))\n    if (array_.isNonEmptyReadonlyArray(issues)) {\n      return option_.some(issues.length === 1 ? issues[0] : new ParseResult.Composite(ast, input, issues))\n    }\n  }\n  return option_.none()\n}\n\n/**\n * @category filtering\n * @since 3.10.0\n */\nexport interface FilterIssue {\n  readonly path: ReadonlyArray<PropertyKey>\n  readonly message: string\n}\n\n/**\n * @category filtering\n * @since 3.10.0\n */\nexport type FilterOutput = undefined | boolean | string | ParseResult.ParseIssue | FilterIssue\n\ntype FilterReturnType = FilterOutput | ReadonlyArray<FilterOutput>\n\n/**\n * @category filtering\n * @since 3.10.0\n */\nexport function filter<C extends A, B extends A, A = C>(\n  refinement: (a: A, options: ParseOptions, self: AST.Refinement) => a is B,\n  annotations?: Annotations.Filter<C & B, C>\n): <I, R>(self: Schema<C, I, R>) => refine<C & B, Schema<A, I, R>>\nexport function filter<A, B extends A>(\n  refinement: (a: A, options: ParseOptions, self: AST.Refinement) => a is B,\n  annotations?: Annotations.Filter<B, A>\n): <I, R>(self: Schema<A, I, R>) => refine<B, Schema<A, I, R>>\nexport function filter<S extends Schema.Any>(\n  predicate: (\n    a: Types.NoInfer<Schema.Type<S>>,\n    options: ParseOptions,\n    self: AST.Refinement\n  ) => FilterReturnType,\n  annotations?: Annotations.Filter<Types.NoInfer<Schema.Type<S>>>\n): (self: S) => filter<S>\nexport function filter<A>(\n  predicate: (\n    a: A,\n    options: ParseOptions,\n    self: AST.Refinement\n  ) => FilterReturnType,\n  annotations?: Annotations.Filter<A>\n): <I, R>(self: Schema<A, I, R>) => refine<A, Schema<A, I, R>> {\n  return <I, R>(self: Schema<A, I, R>) => {\n    function filter(input: A, options: AST.ParseOptions, ast: AST.Refinement) {\n      return toFilterParseIssue(predicate(input, options, ast), ast, input)\n    }\n    const ast = new AST.Refinement(\n      self.ast,\n      filter,\n      toASTAnnotations(annotations)\n    )\n    return makeRefineClass(self, filter, ast)\n  }\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface filterEffect<S extends Schema.Any, FD = never>\n  extends transformOrFail<S, SchemaClass<Schema.Type<S>>, FD>\n{}\n\n/**\n * @category transformations\n * @since 3.10.0\n */\nexport const filterEffect: {\n  /**\n   * @category transformations\n   * @since 3.10.0\n   */\n  <S extends Schema.Any, FD>(\n    f: (\n      a: Types.NoInfer<Schema.Type<S>>,\n      options: ParseOptions,\n      self: AST.Transformation\n    ) => Effect.Effect<FilterReturnType, never, FD>\n  ): (self: S) => filterEffect<S, FD>\n  /**\n   * @category transformations\n   * @since 3.10.0\n   */\n  <S extends Schema.Any, RD>(\n    self: S,\n    f: (\n      a: Types.NoInfer<Schema.Type<S>>,\n      options: ParseOptions,\n      self: AST.Transformation\n    ) => Effect.Effect<FilterReturnType, never, RD>\n  ): filterEffect<S, RD>\n} = dual(2, <S extends Schema.Any, FD>(\n  self: S,\n  f: (\n    a: Types.NoInfer<Schema.Type<S>>,\n    options: ParseOptions,\n    self: AST.Transformation\n  ) => Effect.Effect<FilterReturnType, never, FD>\n): filterEffect<S, FD> =>\n  transformOrFail(\n    self,\n    typeSchema(self),\n    {\n      strict: true,\n      decode: (i, options, ast) =>\n        ParseResult.flatMap(\n          f(i, options, ast),\n          (filterReturnType) =>\n            option_.match(toFilterParseIssue(filterReturnType, ast, i), {\n              onNone: () => ParseResult.succeed(i),\n              onSome: ParseResult.fail\n            })\n        ),\n      encode: (a) => ParseResult.succeed(a)\n    }\n  ))\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface transformOrFail<From extends Schema.All, To extends Schema.All, R = never> extends\n  AnnotableClass<\n    transformOrFail<From, To, R>,\n    Schema.Type<To>,\n    Schema.Encoded<From>,\n    Schema.Context<From> | Schema.Context<To> | R\n  >\n{\n  readonly from: From\n  readonly to: To\n}\n\nfunction makeTransformationClass<From extends Schema.Any, To extends Schema.Any, R>(\n  from: From,\n  to: To,\n  ast: AST.AST\n): transformOrFail<From, To, R> {\n  return class TransformationClass\n    extends make<Schema.Type<To>, Schema.Encoded<From>, Schema.Context<From> | Schema.Context<To> | R>(ast)\n  {\n    static override annotations(annotations: Annotations.Schema<Schema.Type<To>>) {\n      return makeTransformationClass<From, To, R>(\n        this.from,\n        this.to,\n        mergeSchemaAnnotations(this.ast, annotations)\n      )\n    }\n\n    static from = from\n\n    static to = to\n  }\n}\n\n/**\n * Create a new `Schema` by transforming the input and output of an existing `Schema`\n * using the provided decoding functions.\n *\n * @category transformations\n * @since 3.10.0\n */\nexport const transformOrFail: {\n  /**\n   * Create a new `Schema` by transforming the input and output of an existing `Schema`\n   * using the provided decoding functions.\n   *\n   * @category transformations\n   * @since 3.10.0\n   */\n  <To extends Schema.Any, From extends Schema.Any, RD, RE>(\n    to: To,\n    options: {\n      readonly decode: (\n        fromA: Schema.Type<From>,\n        options: ParseOptions,\n        ast: AST.Transformation,\n        fromI: Schema.Encoded<From>\n      ) => Effect.Effect<Schema.Encoded<To>, ParseResult.ParseIssue, RD>\n      readonly encode: (\n        toI: Schema.Encoded<To>,\n        options: ParseOptions,\n        ast: AST.Transformation,\n        toA: Schema.Type<To>\n      ) => Effect.Effect<Schema.Type<From>, ParseResult.ParseIssue, RE>\n      readonly strict?: true\n    } | {\n      readonly decode: (\n        fromA: Schema.Type<From>,\n        options: ParseOptions,\n        ast: AST.Transformation,\n        fromI: Schema.Encoded<From>\n      ) => Effect.Effect<unknown, ParseResult.ParseIssue, RD>\n      readonly encode: (\n        toI: Schema.Encoded<To>,\n        options: ParseOptions,\n        ast: AST.Transformation,\n        toA: Schema.Type<To>\n      ) => Effect.Effect<unknown, ParseResult.ParseIssue, RE>\n      readonly strict: false\n    }\n  ): (from: From) => transformOrFail<From, To, RD | RE>\n  /**\n   * Create a new `Schema` by transforming the input and output of an existing `Schema`\n   * using the provided decoding functions.\n   *\n   * @category transformations\n   * @since 3.10.0\n   */\n  <To extends Schema.Any, From extends Schema.Any, RD, RE>(\n    from: From,\n    to: To,\n    options: {\n      readonly decode: (\n        fromA: Schema.Type<From>,\n        options: ParseOptions,\n        ast: AST.Transformation,\n        fromI: Schema.Encoded<From>\n      ) => Effect.Effect<Schema.Encoded<To>, ParseResult.ParseIssue, RD>\n      readonly encode: (\n        toI: Schema.Encoded<To>,\n        options: ParseOptions,\n        ast: AST.Transformation,\n        toA: Schema.Type<To>\n      ) => Effect.Effect<Schema.Type<From>, ParseResult.ParseIssue, RE>\n      readonly strict?: true\n    } | {\n      readonly decode: (\n        fromA: Schema.Type<From>,\n        options: ParseOptions,\n        ast: AST.Transformation,\n        fromI: Schema.Encoded<From>\n      ) => Effect.Effect<unknown, ParseResult.ParseIssue, RD>\n      readonly encode: (\n        toI: Schema.Encoded<To>,\n        options: ParseOptions,\n        ast: AST.Transformation,\n        toA: Schema.Type<To>\n      ) => Effect.Effect<unknown, ParseResult.ParseIssue, RE>\n      readonly strict: false\n    }\n  ): transformOrFail<From, To, RD | RE>\n} = dual((args) => isSchema(args[0]) && isSchema(args[1]), <FromA, FromI, FromR, ToA, ToI, ToR, RD, RE>(\n  from: Schema<FromA, FromI, FromR>,\n  to: Schema<ToA, ToI, ToR>,\n  options: {\n    readonly decode: (\n      fromA: FromA,\n      options: ParseOptions,\n      ast: AST.Transformation,\n      fromI: FromI\n    ) => Effect.Effect<ToI, ParseResult.ParseIssue, RD>\n    readonly encode: (\n      toI: ToI,\n      options: ParseOptions,\n      ast: AST.Transformation,\n      toA: ToA\n    ) => Effect.Effect<FromA, ParseResult.ParseIssue, RE>\n  }\n): Schema<ToA, FromI, FromR | ToR | RD | RE> =>\n  makeTransformationClass(\n    from,\n    to,\n    new AST.Transformation(\n      from.ast,\n      to.ast,\n      new AST.FinalTransformation(options.decode, options.encode)\n    )\n  ))\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface transform<From extends Schema.All, To extends Schema.All> extends transformOrFail<From, To> {\n  annotations(annotations: Annotations.Schema<Schema.Type<To>>): transform<From, To>\n}\n\n/**\n * Create a new `Schema` by transforming the input and output of an existing `Schema`\n * using the provided mapping functions.\n *\n * @category transformations\n * @since 3.10.0\n */\nexport const transform: {\n  /**\n   * Create a new `Schema` by transforming the input and output of an existing `Schema`\n   * using the provided mapping functions.\n   *\n   * @category transformations\n   * @since 3.10.0\n   */\n  <To extends Schema.Any, From extends Schema.Any>(\n    to: To,\n    options: {\n      readonly decode: (fromA: Schema.Type<From>, fromI: Schema.Encoded<From>) => Schema.Encoded<To>\n      readonly encode: (toI: Schema.Encoded<To>, toA: Schema.Type<To>) => Schema.Type<From>\n      readonly strict?: true\n    } | {\n      readonly decode: (fromA: Schema.Type<From>, fromI: Schema.Encoded<From>) => unknown\n      readonly encode: (toI: Schema.Encoded<To>, toA: Schema.Type<To>) => unknown\n      readonly strict: false\n    }\n  ): (from: From) => transform<From, To>\n  /**\n   * Create a new `Schema` by transforming the input and output of an existing `Schema`\n   * using the provided mapping functions.\n   *\n   * @category transformations\n   * @since 3.10.0\n   */\n  <To extends Schema.Any, From extends Schema.Any>(\n    from: From,\n    to: To,\n    options: {\n      readonly decode: (fromA: Schema.Type<From>, fromI: Schema.Encoded<From>) => Schema.Encoded<To>\n      readonly encode: (toI: Schema.Encoded<To>, toA: Schema.Type<To>) => Schema.Type<From>\n      readonly strict?: true\n    } | {\n      readonly decode: (fromA: Schema.Type<From>, fromI: Schema.Encoded<From>) => unknown\n      readonly encode: (toI: Schema.Encoded<To>, toA: Schema.Type<To>) => unknown\n      readonly strict: false\n    }\n  ): transform<From, To>\n} = dual(\n  (args) => isSchema(args[0]) && isSchema(args[1]),\n  <FromA, FromI, FromR, ToA, ToI, ToR>(\n    from: Schema<FromA, FromI, FromR>,\n    to: Schema<ToA, ToI, ToR>,\n    options: {\n      readonly decode: (fromA: FromA, fromI: FromI) => ToI\n      readonly encode: (toI: ToI, toA: ToA) => FromA\n    }\n  ): Schema<ToA, FromI, FromR | ToR> =>\n    transformOrFail(\n      from,\n      to,\n      {\n        strict: true,\n        decode: (fromA, _options, _ast, toA) => ParseResult.succeed(options.decode(fromA, toA)),\n        encode: (toI, _options, _ast, toA) => ParseResult.succeed(options.encode(toI, toA))\n      }\n    )\n)\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface transformLiteral<Type extends AST.LiteralValue, Encoded extends AST.LiteralValue>\n  extends transform<Literal<[Encoded]>, Literal<[Type]>>\n{\n  annotations(annotations: Annotations.Schema<Type>): transformLiteral<Type, Encoded>\n}\n\n/**\n * Creates a new `Schema` which transforms literal values.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import * as S from \"effect/Schema\"\n *\n * const schema = S.transformLiteral(0, \"a\")\n *\n * assert.deepStrictEqual(S.decodeSync(schema)(0), \"a\")\n * ```\n *\n * @category constructors\n * @since 3.10.0\n */\nexport function transformLiteral<Encoded extends AST.LiteralValue, Type extends AST.LiteralValue>(\n  from: Encoded,\n  to: Type\n): transformLiteral<Type, Encoded> {\n  return transform(Literal(from), Literal(to), {\n    strict: true,\n    decode: () => to,\n    encode: () => from\n  })\n}\n\n/**\n * Creates a new `Schema` which maps between corresponding literal values.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import * as S from \"effect/Schema\"\n *\n * const Animal = S.transformLiterals(\n *   [0, \"cat\"],\n *   [1, \"dog\"],\n *   [2, \"cow\"]\n * )\n *\n * assert.deepStrictEqual(S.decodeSync(Animal)(1), \"dog\")\n * ```\n *\n * @category constructors\n * @since 3.10.0\n */\nexport function transformLiterals<const A extends AST.Members<readonly [from: AST.LiteralValue, to: AST.LiteralValue]>>(\n  ...pairs: A\n): Union<{ -readonly [I in keyof A]: transformLiteral<A[I][1], A[I][0]> }>\nexport function transformLiterals<Encoded extends AST.LiteralValue, Type extends AST.LiteralValue>(\n  pairs: [Encoded, Type]\n): transformLiteral<Type, Encoded>\nexport function transformLiterals<\n  const A extends ReadonlyArray<readonly [from: AST.LiteralValue, to: AST.LiteralValue]>\n>(...pairs: A): Schema<A[number][1], A[number][0]>\nexport function transformLiterals<\n  const A extends ReadonlyArray<readonly [from: AST.LiteralValue, to: AST.LiteralValue]>\n>(...pairs: A): Schema<A[number][1], A[number][0]> {\n  return Union(...pairs.map(([from, to]) => transformLiteral(from, to)))\n}\n\n/**\n * Attaches a property signature with the specified key and value to the schema.\n * This API is useful when you want to add a property to your schema which doesn't describe the shape of the input,\n * but rather maps to another schema, for example when you want to add a discriminant to a simple union.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import * as S from \"effect/Schema\"\n * import { pipe } from \"effect/Function\"\n *\n * const Circle = S.Struct({ radius: S.Number })\n * const Square = S.Struct({ sideLength: S.Number })\n * const Shape = S.Union(\n *   Circle.pipe(S.attachPropertySignature(\"kind\", \"circle\")),\n *   Square.pipe(S.attachPropertySignature(\"kind\", \"square\"))\n * )\n *\n * assert.deepStrictEqual(S.decodeSync(Shape)({ radius: 10 }), {\n *   kind: \"circle\",\n *   radius: 10\n * })\n * ```\n *\n * @category combinators\n * @since 3.10.0\n */\nexport const attachPropertySignature: {\n  /**\n   * Attaches a property signature with the specified key and value to the schema.\n   * This API is useful when you want to add a property to your schema which doesn't describe the shape of the input,\n   * but rather maps to another schema, for example when you want to add a discriminant to a simple union.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import * as S from \"effect/Schema\"\n   * import { pipe } from \"effect/Function\"\n   *\n   * const Circle = S.Struct({ radius: S.Number })\n   * const Square = S.Struct({ sideLength: S.Number })\n   * const Shape = S.Union(\n   *   Circle.pipe(S.attachPropertySignature(\"kind\", \"circle\")),\n   *   Square.pipe(S.attachPropertySignature(\"kind\", \"square\"))\n   * )\n   *\n   * assert.deepStrictEqual(S.decodeSync(Shape)({ radius: 10 }), {\n   *   kind: \"circle\",\n   *   radius: 10\n   * })\n   * ```\n   *\n   * @category combinators\n   * @since 3.10.0\n   */\n  <K extends PropertyKey, V extends AST.LiteralValue | symbol, A>(\n    key: K,\n    value: V,\n    annotations?: Annotations.Schema<A & { readonly [k in K]: V }>\n  ): <I, R>(\n    schema: Schema<A, I, R>\n  ) => SchemaClass<A & { readonly [k in K]: V }, I, R>\n  /**\n   * Attaches a property signature with the specified key and value to the schema.\n   * This API is useful when you want to add a property to your schema which doesn't describe the shape of the input,\n   * but rather maps to another schema, for example when you want to add a discriminant to a simple union.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import * as S from \"effect/Schema\"\n   * import { pipe } from \"effect/Function\"\n   *\n   * const Circle = S.Struct({ radius: S.Number })\n   * const Square = S.Struct({ sideLength: S.Number })\n   * const Shape = S.Union(\n   *   Circle.pipe(S.attachPropertySignature(\"kind\", \"circle\")),\n   *   Square.pipe(S.attachPropertySignature(\"kind\", \"square\"))\n   * )\n   *\n   * assert.deepStrictEqual(S.decodeSync(Shape)({ radius: 10 }), {\n   *   kind: \"circle\",\n   *   radius: 10\n   * })\n   * ```\n   *\n   * @category combinators\n   * @since 3.10.0\n   */\n  <A, I, R, K extends PropertyKey, V extends AST.LiteralValue | symbol>(\n    schema: Schema<A, I, R>,\n    key: K,\n    value: V,\n    annotations?: Annotations.Schema<A & { readonly [k in K]: V }>\n  ): SchemaClass<A & { readonly [k in K]: V }, I, R>\n} = dual(\n  (args) => isSchema(args[0]),\n  <A, I, R, K extends PropertyKey, V extends AST.LiteralValue | symbol>(\n    schema: Schema<A, I, R>,\n    key: K,\n    value: V,\n    annotations?: Annotations.Schema<A & { readonly [k in K]: V }>\n  ): SchemaClass<A & { readonly [k in K]: V }, I, R> => {\n    const ast = extend(\n      typeSchema(schema),\n      Struct({ [key]: Predicate.isSymbol(value) ? UniqueSymbolFromSelf(value) : Literal(value) })\n    ).ast\n    return make(\n      new AST.Transformation(\n        schema.ast,\n        annotations ? mergeSchemaAnnotations(ast, annotations) : ast,\n        new AST.TypeLiteralTransformation(\n          [\n            new AST.PropertySignatureTransformation(\n              key,\n              key,\n              () => option_.some(value),\n              () => option_.none()\n            )\n          ]\n        )\n      )\n    )\n  }\n)\n\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport declare namespace Annotations {\n  /**\n   * @category annotations\n   * @since 3.10.0\n   */\n  export interface Doc<A> extends AST.Annotations {\n    readonly title?: AST.TitleAnnotation\n    readonly description?: AST.DescriptionAnnotation\n    readonly documentation?: AST.DocumentationAnnotation\n    readonly examples?: AST.ExamplesAnnotation<A>\n    readonly default?: AST.DefaultAnnotation<A>\n  }\n\n  /**\n   * @since 3.10.0\n   */\n  export interface Schema<A, TypeParameters extends ReadonlyArray<any> = readonly []> extends Doc<A> {\n    readonly identifier?: AST.IdentifierAnnotation\n    readonly message?: AST.MessageAnnotation\n    readonly schemaId?: AST.SchemaIdAnnotation\n    readonly jsonSchema?: AST.JSONSchemaAnnotation\n    readonly arbitrary?: ArbitraryAnnotation<A, TypeParameters>\n    readonly pretty?: pretty_.PrettyAnnotation<A, TypeParameters>\n    readonly equivalence?: AST.EquivalenceAnnotation<A, TypeParameters>\n    readonly concurrency?: AST.ConcurrencyAnnotation\n    readonly batching?: AST.BatchingAnnotation\n    readonly parseIssueTitle?: AST.ParseIssueTitleAnnotation\n    readonly parseOptions?: AST.ParseOptions\n    readonly decodingFallback?: AST.DecodingFallbackAnnotation<A>\n  }\n\n  /**\n   * @since 3.11.6\n   */\n  export interface GenericSchema<A> extends Schema<A> {\n    readonly arbitrary?: (..._: any) => LazyArbitrary<A>\n    readonly pretty?: (..._: any) => pretty_.Pretty<A>\n    readonly equivalence?: (..._: any) => Equivalence.Equivalence<A>\n  }\n\n  // TODO(4.0): replace `readonly [P]` with `readonly []`\n  /**\n   * @since 3.10.0\n   */\n  export interface Filter<A, P = A> extends Schema<A, readonly [P]> {}\n}\n\n/**\n * Merges a set of new annotations with existing ones, potentially overwriting\n * any duplicates.\n *\n * @category annotations\n * @since 3.10.0\n */\nexport const annotations: {\n  /**\n   * Merges a set of new annotations with existing ones, potentially overwriting\n   * any duplicates.\n   *\n   * @category annotations\n   * @since 3.10.0\n   */\n  <S extends Annotable.All>(annotations: Annotations.GenericSchema<Schema.Type<S>>): (self: S) => Annotable.Self<S>\n  /**\n   * Merges a set of new annotations with existing ones, potentially overwriting\n   * any duplicates.\n   *\n   * @category annotations\n   * @since 3.10.0\n   */\n  <S extends Annotable.All>(self: S, annotations: Annotations.GenericSchema<Schema.Type<S>>): Annotable.Self<S>\n} = dual(\n  2,\n  <A, I, R>(self: Schema<A, I, R>, annotations: Annotations.GenericSchema<A>): Schema<A, I, R> =>\n    self.annotations(annotations)\n)\n\ntype Rename<A, M> = {\n  [\n    K in keyof A as K extends keyof M ? M[K] extends PropertyKey ? M[K]\n      : never\n      : K\n  ]: A[K]\n}\n\n/**\n * @category renaming\n * @since 3.10.0\n */\nexport const rename: {\n  /**\n   * @category renaming\n   * @since 3.10.0\n   */\n  <\n    A,\n    const M extends\n      & { readonly [K in keyof A]?: PropertyKey }\n      & { readonly [K in Exclude<keyof M, keyof A>]: never }\n  >(mapping: M): <I, R>(self: Schema<A, I, R>) => SchemaClass<Simplify<Rename<A, M>>, I, R>\n  /**\n   * @category renaming\n   * @since 3.10.0\n   */\n  <\n    A,\n    I,\n    R,\n    const M extends\n      & { readonly [K in keyof A]?: PropertyKey }\n      & { readonly [K in Exclude<keyof M, keyof A>]: never }\n  >(self: Schema<A, I, R>, mapping: M): SchemaClass<Simplify<Rename<A, M>>, I, R>\n} = dual(\n  2,\n  <\n    A,\n    I,\n    R,\n    const M extends\n      & { readonly [K in keyof A]?: PropertyKey }\n      & { readonly [K in Exclude<keyof M, keyof A>]: never }\n  >(\n    self: Schema<A, I, R>,\n    mapping: M\n  ): SchemaClass<Simplify<Rename<A, M>>, I, R> => make(AST.rename(self.ast, mapping))\n)\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const TrimmedSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/Trimmed\")\n\n/**\n * Verifies that a string contains no leading or trailing whitespaces.\n *\n * Note. This combinator does not make any transformations, it only validates.\n * If what you were looking for was a combinator to trim strings, then check out the `trim` combinator.\n *\n * @category string filters\n * @since 3.10.0\n */\nexport const trimmed = <S extends Schema.Any>(\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends string>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter((a) => a === a.trim(), {\n      schemaId: TrimmedSchemaId,\n      title: \"trimmed\",\n      description: \"a string with no leading or trailing whitespace\",\n      jsonSchema: { pattern: \"^\\\\S[\\\\s\\\\S]*\\\\S$|^\\\\S$|^$\" },\n      ...annotations\n    })\n  )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const MaxLengthSchemaId: unique symbol = schemaId_.MaxLengthSchemaId\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport type MaxLengthSchemaId = typeof MaxLengthSchemaId\n\n/**\n * @category string filters\n * @since 3.10.0\n */\nexport const maxLength =\n  <S extends Schema.Any>(maxLength: number, annotations?: Annotations.Filter<Schema.Type<S>>) =>\n  <A extends string>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n    self.pipe(\n      filter(\n        (a) => a.length <= maxLength,\n        {\n          schemaId: MaxLengthSchemaId,\n          title: `maxLength(${maxLength})`,\n          description: `a string at most ${maxLength} character(s) long`,\n          jsonSchema: { maxLength },\n          ...annotations\n        }\n      )\n    )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const MinLengthSchemaId: unique symbol = schemaId_.MinLengthSchemaId\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport type MinLengthSchemaId = typeof MinLengthSchemaId\n\n/**\n * @category string filters\n * @since 3.10.0\n */\nexport const minLength = <S extends Schema.Any>(\n  minLength: number,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends string>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter(\n      (a) => a.length >= minLength,\n      {\n        schemaId: MinLengthSchemaId,\n        title: `minLength(${minLength})`,\n        description: `a string at least ${minLength} character(s) long`,\n        jsonSchema: { minLength },\n        ...annotations\n      }\n    )\n  )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LengthSchemaId: unique symbol = schemaId_.LengthSchemaId\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport type LengthSchemaId = typeof LengthSchemaId\n\n/**\n * @category string filters\n * @since 3.10.0\n */\nexport const length = <S extends Schema.Any>(\n  length: number | { readonly min: number; readonly max: number },\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends string>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> => {\n  const minLength = Predicate.isObject(length) ? Math.max(0, Math.floor(length.min)) : Math.max(0, Math.floor(length))\n  const maxLength = Predicate.isObject(length) ? Math.max(minLength, Math.floor(length.max)) : minLength\n  if (minLength !== maxLength) {\n    return self.pipe(\n      filter((a) => a.length >= minLength && a.length <= maxLength, {\n        schemaId: LengthSchemaId,\n        title: `length({ min: ${minLength}, max: ${maxLength})`,\n        description: `a string at least ${minLength} character(s) and at most ${maxLength} character(s) long`,\n        jsonSchema: { minLength, maxLength },\n        ...annotations\n      })\n    )\n  }\n  return self.pipe(\n    filter((a) => a.length === minLength, {\n      schemaId: LengthSchemaId,\n      title: `length(${minLength})`,\n      description: minLength === 1 ? `a single character` : `a string ${minLength} character(s) long`,\n      jsonSchema: { minLength, maxLength: minLength },\n      ...annotations\n    })\n  )\n}\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const PatternSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/Pattern\")\n\n/**\n * @category string filters\n * @since 3.10.0\n */\nexport const pattern = <S extends Schema.Any>(\n  regex: RegExp,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends string>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> => {\n  const source = regex.source\n  return self.pipe(\n    filter(\n      (a) => {\n        // The following line ensures that `lastIndex` is reset to `0` in case the user has specified the `g` flag\n        regex.lastIndex = 0\n        return regex.test(a)\n      },\n      {\n        schemaId: PatternSchemaId,\n        [PatternSchemaId]: { regex },\n        // title: `pattern(/${source}/)`, // avoiding this because it can be very long\n        description: `a string matching the pattern ${source}`,\n        jsonSchema: { pattern: source },\n        ...annotations\n      }\n    )\n  )\n}\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const StartsWithSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/StartsWith\")\n\n/**\n * @category string filters\n * @since 3.10.0\n */\nexport const startsWith = <S extends Schema.Any>(\n  startsWith: string,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends string>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> => {\n  const formatted = JSON.stringify(startsWith)\n  return self.pipe(\n    filter(\n      (a) => a.startsWith(startsWith),\n      {\n        schemaId: StartsWithSchemaId,\n        [StartsWithSchemaId]: { startsWith },\n        title: `startsWith(${formatted})`,\n        description: `a string starting with ${formatted}`,\n        jsonSchema: { pattern: `^${startsWith}` },\n        ...annotations\n      }\n    )\n  )\n}\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const EndsWithSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/EndsWith\")\n\n/**\n * @category string filters\n * @since 3.10.0\n */\nexport const endsWith = <S extends Schema.Any>(\n  endsWith: string,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends string>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> => {\n  const formatted = JSON.stringify(endsWith)\n  return self.pipe(\n    filter(\n      (a) => a.endsWith(endsWith),\n      {\n        schemaId: EndsWithSchemaId,\n        [EndsWithSchemaId]: { endsWith },\n        title: `endsWith(${formatted})`,\n        description: `a string ending with ${formatted}`,\n        jsonSchema: { pattern: `^.*${endsWith}$` },\n        ...annotations\n      }\n    )\n  )\n}\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const IncludesSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/Includes\")\n\n/**\n * @category string filters\n * @since 3.10.0\n */\nexport const includes = <S extends Schema.Any>(\n  searchString: string,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends string>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> => {\n  const formatted = JSON.stringify(searchString)\n  return self.pipe(\n    filter(\n      (a) => a.includes(searchString),\n      {\n        schemaId: IncludesSchemaId,\n        [IncludesSchemaId]: { includes: searchString },\n        title: `includes(${formatted})`,\n        description: `a string including ${formatted}`,\n        jsonSchema: { pattern: `.*${searchString}.*` },\n        ...annotations\n      }\n    )\n  )\n}\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LowercasedSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/Lowercased\")\n\n/**\n * Verifies that a string is lowercased.\n *\n * @category string filters\n * @since 3.10.0\n */\nexport const lowercased =\n  <S extends Schema.Any>(annotations?: Annotations.Filter<Schema.Type<S>>) =>\n  <A extends string>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n    self.pipe(\n      filter((a) => a === a.toLowerCase(), {\n        schemaId: LowercasedSchemaId,\n        title: \"lowercased\",\n        description: \"a lowercase string\",\n        jsonSchema: { pattern: \"^[^A-Z]*$\" },\n        ...annotations\n      })\n    )\n\n/**\n * @category string constructors\n * @since 3.10.0\n */\nexport class Lowercased extends String$.pipe(\n  lowercased({ identifier: \"Lowercased\" })\n) {}\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const UppercasedSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/Uppercased\")\n\n/**\n * Verifies that a string is uppercased.\n *\n * @category string filters\n * @since 3.10.0\n */\nexport const uppercased =\n  <S extends Schema.Any>(annotations?: Annotations.Filter<Schema.Type<S>>) =>\n  <A extends string>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n    self.pipe(\n      filter((a) => a === a.toUpperCase(), {\n        schemaId: UppercasedSchemaId,\n        title: \"uppercased\",\n        description: \"an uppercase string\",\n        jsonSchema: { pattern: \"^[^a-z]*$\" },\n        ...annotations\n      })\n    )\n\n/**\n * @category string constructors\n * @since 3.10.0\n */\nexport class Uppercased extends String$.pipe(\n  uppercased({ identifier: \"Uppercased\" })\n) {}\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const CapitalizedSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/Capitalized\")\n\n/**\n * Verifies that a string is capitalized.\n *\n * @category string filters\n * @since 3.10.0\n */\nexport const capitalized =\n  <S extends Schema.Any>(annotations?: Annotations.Filter<Schema.Type<S>>) =>\n  <A extends string>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n    self.pipe(\n      filter((a) => a[0]?.toUpperCase() === a[0], {\n        schemaId: CapitalizedSchemaId,\n        title: \"capitalized\",\n        description: \"a capitalized string\",\n        jsonSchema: { pattern: \"^[^a-z]?.*$\" },\n        ...annotations\n      })\n    )\n\n/**\n * @category string constructors\n * @since 3.10.0\n */\nexport class Capitalized extends String$.pipe(\n  capitalized({ identifier: \"Capitalized\" })\n) {}\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const UncapitalizedSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/Uncapitalized\")\n\n/**\n * Verifies that a string is uncapitalized.\n *\n * @category string filters\n * @since 3.10.0\n */\nexport const uncapitalized =\n  <S extends Schema.Any>(annotations?: Annotations.Filter<Schema.Type<S>>) =>\n  <A extends string>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n    self.pipe(\n      filter((a) => a[0]?.toLowerCase() === a[0], {\n        schemaId: UncapitalizedSchemaId,\n        title: \"uncapitalized\",\n        description: \"a uncapitalized string\",\n        jsonSchema: { pattern: \"^[^A-Z]?.*$\" },\n        ...annotations\n      })\n    )\n\n/**\n * @category string constructors\n * @since 3.10.0\n */\nexport class Uncapitalized extends String$.pipe(\n  uncapitalized({ identifier: \"Uncapitalized\" })\n) {}\n\n/**\n * A schema representing a single character.\n *\n * @category string constructors\n * @since 3.10.0\n */\nexport class Char extends String$.pipe(length(1, { identifier: \"Char\" })) {}\n\n/**\n * @category string filters\n * @since 3.10.0\n */\nexport const nonEmptyString = <S extends Schema.Any>(\n  annotations?: Annotations.Filter<Schema.Type<S>>\n): <A extends string>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>) => filter<S> =>\n  minLength(1, {\n    title: \"nonEmptyString\",\n    description: \"a non empty string\",\n    ...annotations\n  })\n\n/**\n * This schema converts a string to lowercase.\n *\n * @category string transformations\n * @since 3.10.0\n */\nexport class Lowercase extends transform(\n  String$.annotations({ description: \"a string that will be converted to lowercase\" }),\n  Lowercased,\n  {\n    strict: true,\n    decode: (i) => i.toLowerCase(),\n    encode: identity\n  }\n).annotations({ identifier: \"Lowercase\" }) {}\n\n/**\n * This schema converts a string to uppercase.\n *\n * @category string transformations\n * @since 3.10.0\n */\nexport class Uppercase extends transform(\n  String$.annotations({ description: \"a string that will be converted to uppercase\" }),\n  Uppercased,\n  {\n    strict: true,\n    decode: (i) => i.toUpperCase(),\n    encode: identity\n  }\n).annotations({ identifier: \"Uppercase\" }) {}\n\n/**\n * This schema converts a string to capitalized one.\n *\n * @category string transformations\n * @since 3.10.0\n */\nexport class Capitalize extends transform(\n  String$.annotations({ description: \"a string that will be converted to a capitalized format\" }),\n  Capitalized,\n  {\n    strict: true,\n    decode: (i) => string_.capitalize(i),\n    encode: identity\n  }\n).annotations({ identifier: \"Capitalize\" }) {}\n\n/**\n * This schema converts a string to uncapitalized one.\n *\n * @category string transformations\n * @since 3.10.0\n */\nexport class Uncapitalize extends transform(\n  String$.annotations({ description: \"a string that will be converted to an uncapitalized format\" }),\n  Uncapitalized,\n  {\n    strict: true,\n    decode: (i) => string_.uncapitalize(i),\n    encode: identity\n  }\n).annotations({ identifier: \"Uncapitalize\" }) {}\n\n/**\n * @category string constructors\n * @since 3.10.0\n */\nexport class Trimmed extends String$.pipe(\n  trimmed({ identifier: \"Trimmed\" })\n) {}\n\n/**\n * Useful for validating strings that must contain meaningful characters without\n * leading or trailing whitespace.\n *\n * @example\n * ```ts\n * import { Schema } from \"effect\"\n *\n * console.log(Schema.decodeOption(Schema.NonEmptyTrimmedString)(\"\")) // Option.none()\n * console.log(Schema.decodeOption(Schema.NonEmptyTrimmedString)(\" a \")) // Option.none()\n * console.log(Schema.decodeOption(Schema.NonEmptyTrimmedString)(\"a\")) // Option.some(\"a\")\n * ```\n *\n * @category string constructors\n * @since 3.10.0\n */\nexport class NonEmptyTrimmedString extends Trimmed.pipe(\n  nonEmptyString({ identifier: \"NonEmptyTrimmedString\" })\n) {}\n\n/**\n * This schema allows removing whitespaces from the beginning and end of a string.\n *\n * @category string transformations\n * @since 3.10.0\n */\nexport class Trim extends transform(\n  String$.annotations({ description: \"a string that will be trimmed\" }),\n  Trimmed,\n  {\n    strict: true,\n    decode: (i) => i.trim(),\n    encode: identity\n  }\n).annotations({ identifier: \"Trim\" }) {}\n\n/**\n * Returns a schema that allows splitting a string into an array of strings.\n *\n * @category string transformations\n * @since 3.10.0\n */\nexport const split = (separator: string): transform<SchemaClass<string>, Array$<typeof String$>> =>\n  transform(\n    String$.annotations({ description: \"a string that will be split\" }),\n    Array$(String$),\n    {\n      strict: true,\n      decode: (i) => i.split(separator),\n      encode: (a) => a.join(separator)\n    }\n  )\n\n/**\n * @since 3.10.0\n */\nexport type ParseJsonOptions = {\n  readonly reviver?: Parameters<typeof JSON.parse>[1]\n  readonly replacer?: Parameters<typeof JSON.stringify>[1]\n  readonly space?: Parameters<typeof JSON.stringify>[2]\n}\n\nconst getErrorMessage = (e: unknown): string => e instanceof Error ? e.message : String(e)\n\nconst getParseJsonTransformation = (options?: ParseJsonOptions): SchemaClass<unknown, string> =>\n  transformOrFail(\n    String$.annotations({ description: \"a string to be decoded into JSON\" }),\n    Unknown,\n    {\n      strict: true,\n      decode: (i, _, ast) =>\n        ParseResult.try({\n          try: () => JSON.parse(i, options?.reviver),\n          catch: (e) => new ParseResult.Type(ast, i, getErrorMessage(e))\n        }),\n      encode: (a, _, ast) =>\n        ParseResult.try({\n          try: () => JSON.stringify(a, options?.replacer, options?.space),\n          catch: (e) => new ParseResult.Type(ast, a, getErrorMessage(e))\n        })\n    }\n  ).annotations({\n    title: \"parseJson\",\n    schemaId: AST.ParseJsonSchemaId\n  })\n\n/**\n * The `ParseJson` combinator provides a method to convert JSON strings into the `unknown` type using the underlying\n * functionality of `JSON.parse`. It also utilizes `JSON.stringify` for encoding.\n *\n * You can optionally provide a `ParseJsonOptions` to configure both `JSON.parse` and `JSON.stringify` executions.\n *\n * Optionally, you can pass a schema `Schema<A, I, R>` to obtain an `A` type instead of `unknown`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import * as Schema from \"effect/Schema\"\n *\n * assert.deepStrictEqual(Schema.decodeUnknownSync(Schema.parseJson())(`{\"a\":\"1\"}`), { a: \"1\" })\n * assert.deepStrictEqual(Schema.decodeUnknownSync(Schema.parseJson(Schema.Struct({ a: Schema.NumberFromString })))(`{\"a\":\"1\"}`), { a: 1 })\n * ```\n *\n * @category string transformations\n * @since 3.10.0\n */\nexport const parseJson: {\n  /**\n   * The `ParseJson` combinator provides a method to convert JSON strings into the `unknown` type using the underlying\n   * functionality of `JSON.parse`. It also utilizes `JSON.stringify` for encoding.\n   *\n   * You can optionally provide a `ParseJsonOptions` to configure both `JSON.parse` and `JSON.stringify` executions.\n   *\n   * Optionally, you can pass a schema `Schema<A, I, R>` to obtain an `A` type instead of `unknown`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import * as Schema from \"effect/Schema\"\n   *\n   * assert.deepStrictEqual(Schema.decodeUnknownSync(Schema.parseJson())(`{\"a\":\"1\"}`), { a: \"1\" })\n   * assert.deepStrictEqual(Schema.decodeUnknownSync(Schema.parseJson(Schema.Struct({ a: Schema.NumberFromString })))(`{\"a\":\"1\"}`), { a: 1 })\n   * ```\n   *\n   * @category string transformations\n   * @since 3.10.0\n   */\n  <S extends Schema.Any>(schema: S, options?: ParseJsonOptions): transform<SchemaClass<unknown, string>, S>\n  /**\n   * The `ParseJson` combinator provides a method to convert JSON strings into the `unknown` type using the underlying\n   * functionality of `JSON.parse`. It also utilizes `JSON.stringify` for encoding.\n   *\n   * You can optionally provide a `ParseJsonOptions` to configure both `JSON.parse` and `JSON.stringify` executions.\n   *\n   * Optionally, you can pass a schema `Schema<A, I, R>` to obtain an `A` type instead of `unknown`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import * as Schema from \"effect/Schema\"\n   *\n   * assert.deepStrictEqual(Schema.decodeUnknownSync(Schema.parseJson())(`{\"a\":\"1\"}`), { a: \"1\" })\n   * assert.deepStrictEqual(Schema.decodeUnknownSync(Schema.parseJson(Schema.Struct({ a: Schema.NumberFromString })))(`{\"a\":\"1\"}`), { a: 1 })\n   * ```\n   *\n   * @category string transformations\n   * @since 3.10.0\n   */\n  (options?: ParseJsonOptions): SchemaClass<unknown, string>\n} = <A, I, R>(schemaOrOptions?: Schema<A, I, R> | ParseJsonOptions, o?: ParseJsonOptions) =>\n  isSchema(schemaOrOptions)\n    ? compose(parseJson(o), schemaOrOptions) as any\n    : getParseJsonTransformation(schemaOrOptions as ParseJsonOptions | undefined)\n\n/**\n * @category string constructors\n * @since 3.10.0\n */\nexport class NonEmptyString extends String$.pipe(\n  nonEmptyString({ identifier: \"NonEmptyString\" })\n) {}\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const UUIDSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/UUID\")\n\nconst uuidRegexp = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i\n\n/**\n * Represents a Universally Unique Identifier (UUID).\n *\n * This schema ensures that the provided string adheres to the standard UUID format.\n *\n * @category string constructors\n * @since 3.10.0\n */\nexport class UUID extends String$.pipe(\n  pattern(uuidRegexp, {\n    schemaId: UUIDSchemaId,\n    identifier: \"UUID\",\n    jsonSchema: {\n      format: \"uuid\",\n      pattern: uuidRegexp.source\n    },\n    description: \"a Universally Unique Identifier\",\n    arbitrary: (): LazyArbitrary<string> => (fc) => fc.uuid()\n  })\n) {}\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const ULIDSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/ULID\")\n\nconst ulidRegexp = /^[0-7][0-9A-HJKMNP-TV-Z]{25}$/i\n\n/**\n * Represents a Universally Unique Lexicographically Sortable Identifier (ULID).\n *\n * ULIDs are designed to be compact, URL-safe, and ordered, making them suitable for use as identifiers.\n * This schema ensures that the provided string adheres to the standard ULID format.\n *\n * @category string constructors\n * @since 3.10.0\n */\nexport class ULID extends String$.pipe(\n  pattern(ulidRegexp, {\n    schemaId: ULIDSchemaId,\n    identifier: \"ULID\",\n    description: \"a Universally Unique Lexicographically Sortable Identifier\",\n    arbitrary: (): LazyArbitrary<string> => (fc) => fc.ulid()\n  })\n) {}\n\n/**\n * Defines a schema that represents a `URL` object.\n *\n * @category URL constructors\n * @since 3.11.0\n */\nexport class URLFromSelf extends instanceOf(URL, {\n  identifier: \"URLFromSelf\",\n  arbitrary: (): LazyArbitrary<URL> => (fc) => fc.webUrl().map((s) => new URL(s)),\n  pretty: () => (url) => url.toString()\n}) {}\n\n/** @ignore */\nclass URL$ extends transformOrFail(\n  String$.annotations({ description: \"a string to be decoded into a URL\" }),\n  URLFromSelf,\n  {\n    strict: true,\n    decode: (i, _, ast) =>\n      ParseResult.try({\n        try: () => new URL(i),\n        catch: (e) =>\n          new ParseResult.Type(\n            ast,\n            i,\n            `Unable to decode ${JSON.stringify(i)} into a URL. ${getErrorMessage(e)}`\n          )\n      }),\n    encode: (a) => ParseResult.succeed(a.toString())\n  }\n).annotations({\n  identifier: \"URL\",\n  pretty: () => (url) => url.toString()\n}) {}\n\nexport {\n  /**\n   * Defines a schema that attempts to convert a `string` to a `URL` object using\n   * the `new URL` constructor.\n   *\n   * @category URL transformations\n   * @since 3.11.0\n   */\n  URL$ as URL\n}\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const FiniteSchemaId: unique symbol = schemaId_.FiniteSchemaId\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport type FiniteSchemaId = typeof FiniteSchemaId\n\n/**\n * Ensures that the provided value is a finite number (excluding NaN, +Infinity, and -Infinity).\n *\n * @category number filters\n * @since 3.10.0\n */\nexport const finite =\n  <S extends Schema.Any>(annotations?: Annotations.Filter<Schema.Type<S>>) =>\n  <A extends number>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n    self.pipe(\n      filter(Number.isFinite, {\n        schemaId: FiniteSchemaId,\n        title: \"finite\",\n        description: \"a finite number\",\n        jsonSchema: {},\n        ...annotations\n      })\n    )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const GreaterThanSchemaId: unique symbol = schemaId_.GreaterThanSchemaId\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport type GreaterThanSchemaId = typeof GreaterThanSchemaId\n\n/**\n * This filter checks whether the provided number is greater than the specified minimum.\n *\n * @category number filters\n * @since 3.10.0\n */\nexport const greaterThan = <S extends Schema.Any>(\n  exclusiveMinimum: number,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends number>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter((a) => a > exclusiveMinimum, {\n      schemaId: GreaterThanSchemaId,\n      title: `greaterThan(${exclusiveMinimum})`,\n      description: exclusiveMinimum === 0 ? \"a positive number\" : `a number greater than ${exclusiveMinimum}`,\n      jsonSchema: { exclusiveMinimum },\n      ...annotations\n    })\n  )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const GreaterThanOrEqualToSchemaId: unique symbol = schemaId_.GreaterThanOrEqualToSchemaId\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport type GreaterThanOrEqualToSchemaId = typeof GreaterThanOrEqualToSchemaId\n\n/**\n * This filter checks whether the provided number is greater than or equal to the specified minimum.\n *\n * @category number filters\n * @since 3.10.0\n */\nexport const greaterThanOrEqualTo = <S extends Schema.Any>(\n  minimum: number,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends number>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter((a) => a >= minimum, {\n      schemaId: GreaterThanOrEqualToSchemaId,\n      title: `greaterThanOrEqualTo(${minimum})`,\n      description: minimum === 0 ? \"a non-negative number\" : `a number greater than or equal to ${minimum}`,\n      jsonSchema: { minimum },\n      ...annotations\n    })\n  )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const MultipleOfSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/MultipleOf\")\n\n/**\n * @category number filters\n * @since 3.10.0\n */\nexport const multipleOf = <S extends Schema.Any>(\n  divisor: number,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends number>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> => {\n  const positiveDivisor = Math.abs(divisor) // spec requires positive divisor\n  return self.pipe(\n    filter((a) => number_.remainder(a, divisor) === 0, {\n      schemaId: MultipleOfSchemaId,\n      title: `multipleOf(${positiveDivisor})`,\n      description: `a number divisible by ${positiveDivisor}`,\n      jsonSchema: { multipleOf: positiveDivisor },\n      ...annotations\n    })\n  )\n}\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const IntSchemaId: unique symbol = schemaId_.IntSchemaId\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport type IntSchemaId = typeof IntSchemaId\n\n/**\n * Ensures that the provided value is an integer number (excluding NaN, +Infinity, and -Infinity).\n *\n * @category number filters\n * @since 3.10.0\n */\nexport const int =\n  <S extends Schema.Any>(annotations?: Annotations.Filter<Schema.Type<S>>) =>\n  <A extends number>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n    self.pipe(\n      filter((a) => Number.isSafeInteger(a), {\n        schemaId: IntSchemaId,\n        title: \"int\",\n        description: \"an integer\",\n        jsonSchema: { type: \"integer\" },\n        ...annotations\n      })\n    )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LessThanSchemaId: unique symbol = schemaId_.LessThanSchemaId\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport type LessThanSchemaId = typeof LessThanSchemaId\n\n/**\n * This filter checks whether the provided number is less than the specified maximum.\n *\n * @category number filters\n * @since 3.10.0\n */\nexport const lessThan =\n  <S extends Schema.Any>(exclusiveMaximum: number, annotations?: Annotations.Filter<Schema.Type<S>>) =>\n  <A extends number>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n    self.pipe(\n      filter((a) => a < exclusiveMaximum, {\n        schemaId: LessThanSchemaId,\n        title: `lessThan(${exclusiveMaximum})`,\n        description: exclusiveMaximum === 0 ? \"a negative number\" : `a number less than ${exclusiveMaximum}`,\n        jsonSchema: { exclusiveMaximum },\n        ...annotations\n      })\n    )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LessThanOrEqualToSchemaId: unique symbol = schemaId_.LessThanOrEqualToSchemaId\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport type LessThanOrEqualToSchemaId = typeof LessThanOrEqualToSchemaId\n\n/**\n * This schema checks whether the provided number is less than or equal to the specified maximum.\n *\n * @category number filters\n * @since 3.10.0\n */\nexport const lessThanOrEqualTo = <S extends Schema.Any>(\n  maximum: number,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends number>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter((a) => a <= maximum, {\n      schemaId: LessThanOrEqualToSchemaId,\n      title: `lessThanOrEqualTo(${maximum})`,\n      description: maximum === 0 ? \"a non-positive number\" : `a number less than or equal to ${maximum}`,\n      jsonSchema: { maximum },\n      ...annotations\n    })\n  )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const BetweenSchemaId: unique symbol = schemaId_.BetweenSchemaId\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport type BetweenSchemaId = typeof BetweenSchemaId\n\n/**\n * This filter checks whether the provided number falls within the specified minimum and maximum values.\n *\n * @category number filters\n * @since 3.10.0\n */\nexport const between = <S extends Schema.Any>(\n  minimum: number,\n  maximum: number,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends number>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter((a) => a >= minimum && a <= maximum, {\n      schemaId: BetweenSchemaId,\n      title: `between(${minimum}, ${maximum})`,\n      description: `a number between ${minimum} and ${maximum}`,\n      jsonSchema: { minimum, maximum },\n      ...annotations\n    })\n  )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const NonNaNSchemaId: unique symbol = schemaId_.NonNaNSchemaId\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport type NonNaNSchemaId = typeof NonNaNSchemaId\n\n/**\n * @category number filters\n * @since 3.10.0\n */\nexport const nonNaN =\n  <S extends Schema.Any>(annotations?: Annotations.Filter<Schema.Type<S>>) =>\n  <A extends number>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n    self.pipe(\n      filter((a) => !Number.isNaN(a), {\n        schemaId: NonNaNSchemaId,\n        title: \"nonNaN\",\n        description: \"a number excluding NaN\",\n        ...annotations\n      })\n    )\n\n/**\n * @category number filters\n * @since 3.10.0\n */\nexport const positive = <S extends Schema.Any>(\n  annotations?: Annotations.Filter<Schema.Type<S>>\n): <A extends number>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>) => filter<S> =>\n  greaterThan(0, { title: \"positive\", ...annotations })\n\n/**\n * @category number filters\n * @since 3.10.0\n */\nexport const negative = <S extends Schema.Any>(\n  annotations?: Annotations.Filter<Schema.Type<S>>\n): <A extends number>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>) => filter<S> =>\n  lessThan(0, { title: \"negative\", ...annotations })\n\n/**\n * @category number filters\n * @since 3.10.0\n */\nexport const nonPositive = <S extends Schema.Any>(\n  annotations?: Annotations.Filter<Schema.Type<S>>\n): <A extends number>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>) => filter<S> =>\n  lessThanOrEqualTo(0, { title: \"nonPositive\", ...annotations })\n\n/**\n * @category number filters\n * @since 3.10.0\n */\nexport const nonNegative = <S extends Schema.Any>(\n  annotations?: Annotations.Filter<Schema.Type<S>>\n): <A extends number>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>) => filter<S> =>\n  greaterThanOrEqualTo(0, { title: \"nonNegative\", ...annotations })\n\n/**\n * Clamps a number between a minimum and a maximum value.\n *\n * @category number transformations\n * @since 3.10.0\n */\nexport const clamp = (minimum: number, maximum: number) =>\n<S extends Schema.Any, A extends number>(\n  self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>\n): transform<S, filter<SchemaClass<A>>> => {\n  return transform(\n    self,\n    typeSchema(self).pipe(between(minimum, maximum)),\n    {\n      strict: false,\n      decode: (i) => number_.clamp(i, { minimum, maximum }),\n      encode: identity\n    }\n  )\n}\n\n/**\n * Transforms a `string` into a `number` by parsing the string using the `parse`\n * function of the `effect/Number` module.\n *\n * It returns an error if the value can't be converted (for example when\n * non-numeric characters are provided).\n *\n * The following special string values are supported: \"NaN\", \"Infinity\",\n * \"-Infinity\".\n *\n * @category number transformations\n * @since 3.10.0\n */\nexport function parseNumber<S extends Schema.Any, A extends string>(\n  self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>\n): transformOrFail<S, typeof Number$> {\n  return transformOrFail(\n    self,\n    Number$,\n    {\n      strict: false,\n      decode: (i, _, ast) =>\n        ParseResult.fromOption(\n          number_.parse(i),\n          () => new ParseResult.Type(ast, i, `Unable to decode ${JSON.stringify(i)} into a number`)\n        ),\n      encode: (a) => ParseResult.succeed(String(a))\n    }\n  )\n}\n\n/**\n * This schema transforms a `string` into a `number` by parsing the string using the `parse` function of the `effect/Number` module.\n *\n * It returns an error if the value can't be converted (for example when non-numeric characters are provided).\n *\n * The following special string values are supported: \"NaN\", \"Infinity\", \"-Infinity\".\n *\n * @category number transformations\n * @since 3.10.0\n */\nexport class NumberFromString extends parseNumber(String$.annotations({\n  description: \"a string to be decoded into a number\"\n})).annotations({ identifier: \"NumberFromString\" }) {}\n\n/**\n * @category number constructors\n * @since 3.10.0\n */\nexport class Finite extends Number$.pipe(finite({ identifier: \"Finite\" })) {}\n\n/**\n * @category number constructors\n * @since 3.10.0\n */\nexport class Int extends Number$.pipe(int({ identifier: \"Int\" })) {}\n\n/**\n * @category number constructors\n * @since 3.10.0\n */\nexport class NonNaN extends Number$.pipe(nonNaN({ identifier: \"NonNaN\" })) {}\n\n/**\n * @category number constructors\n * @since 3.10.0\n */\nexport class Positive extends Number$.pipe(\n  positive({ identifier: \"Positive\" })\n) {}\n\n/**\n * @category number constructors\n * @since 3.10.0\n */\nexport class Negative extends Number$.pipe(\n  negative({ identifier: \"Negative\" })\n) {}\n\n/**\n * @category number constructors\n * @since 3.10.0\n */\nexport class NonPositive extends Number$.pipe(\n  nonPositive({ identifier: \"NonPositive\" })\n) {}\n\n/**\n * @category number constructors\n * @since 3.10.0\n */\nexport class NonNegative extends Number$.pipe(\n  nonNegative({ identifier: \"NonNegative\" })\n) {}\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const JsonNumberSchemaId: unique symbol = schemaId_.JsonNumberSchemaId\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport type JsonNumberSchemaId = typeof JsonNumberSchemaId\n\n/**\n * The `JsonNumber` is a schema for representing JSON numbers. It ensures that the provided value is a valid\n * number by filtering out `NaN` and `(+/-) Infinity`. This is useful when you want to validate and represent numbers in JSON\n * format.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import * as Schema from \"effect/Schema\"\n *\n * const is = Schema.is(S.JsonNumber)\n *\n * assert.deepStrictEqual(is(42), true)\n * assert.deepStrictEqual(is(Number.NaN), false)\n * assert.deepStrictEqual(is(Number.POSITIVE_INFINITY), false)\n * assert.deepStrictEqual(is(Number.NEGATIVE_INFINITY), false)\n * ```\n *\n * @category number constructors\n * @since 3.10.0\n */\nexport class JsonNumber extends Number$.pipe(\n  finite({\n    schemaId: JsonNumberSchemaId,\n    identifier: \"JsonNumber\"\n  })\n) {}\n\n/**\n * @category boolean transformations\n * @since 3.10.0\n */\nexport class Not extends transform(Boolean$.annotations({ description: \"a boolean that will be negated\" }), Boolean$, {\n  strict: true,\n  decode: (i) => boolean_.not(i),\n  encode: (a) => boolean_.not(a)\n}) {}\n\nconst encodeSymbol = (sym: symbol, ast: AST.AST) => {\n  const key = Symbol.keyFor(sym)\n  return key === undefined\n    ? ParseResult.fail(\n      new ParseResult.Type(ast, sym, `Unable to encode a unique symbol ${String(sym)} into a string`)\n    )\n    : ParseResult.succeed(key)\n}\n\nconst decodeSymbol = (s: string) => ParseResult.succeed(Symbol.for(s))\n\n/** @ignore */\nclass Symbol$ extends transformOrFail(\n  String$.annotations({ description: \"a string to be decoded into a globally shared symbol\" }),\n  SymbolFromSelf,\n  {\n    strict: false,\n    decode: (i) => decodeSymbol(i),\n    encode: (a, _, ast) => encodeSymbol(a, ast)\n  }\n).annotations({ identifier: \"Symbol\" }) {}\n\nexport {\n  /**\n   * Converts a string key into a globally shared symbol.\n   *\n   * @category symbol transformations\n   * @since 3.10.0\n   */\n  Symbol$ as Symbol\n}\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const GreaterThanBigIntSchemaId: unique symbol = schemaId_.GreaterThanBigintSchemaId\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport type GreaterThanBigIntSchemaId = typeof GreaterThanBigIntSchemaId\n\n/**\n * @category bigint filters\n * @since 3.10.0\n */\nexport const greaterThanBigInt = <S extends Schema.Any>(\n  min: bigint,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends bigint>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter((a) => a > min, {\n      schemaId: GreaterThanBigIntSchemaId,\n      [GreaterThanBigIntSchemaId]: { min },\n      title: `greaterThanBigInt(${min})`,\n      description: min === 0n ? \"a positive bigint\" : `a bigint greater than ${min}n`,\n      ...annotations\n    })\n  )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const GreaterThanOrEqualToBigIntSchemaId: unique symbol = schemaId_.GreaterThanOrEqualToBigIntSchemaId\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport type GreaterThanOrEqualToBigIntSchemaId = typeof GreaterThanOrEqualToBigIntSchemaId\n\n/**\n * @category bigint filters\n * @since 3.10.0\n */\nexport const greaterThanOrEqualToBigInt = <S extends Schema.Any>(\n  min: bigint,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends bigint>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter((a) => a >= min, {\n      schemaId: GreaterThanOrEqualToBigIntSchemaId,\n      [GreaterThanOrEqualToBigIntSchemaId]: { min },\n      title: `greaterThanOrEqualToBigInt(${min})`,\n      description: min === 0n\n        ? \"a non-negative bigint\"\n        : `a bigint greater than or equal to ${min}n`,\n      ...annotations\n    })\n  )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LessThanBigIntSchemaId: unique symbol = schemaId_.LessThanBigIntSchemaId\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport type LessThanBigIntSchemaId = typeof LessThanBigIntSchemaId\n\n/**\n * @category bigint filters\n * @since 3.10.0\n */\nexport const lessThanBigInt = <S extends Schema.Any>(\n  max: bigint,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends bigint>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter((a) => a < max, {\n      schemaId: LessThanBigIntSchemaId,\n      [LessThanBigIntSchemaId]: { max },\n      title: `lessThanBigInt(${max})`,\n      description: max === 0n ? \"a negative bigint\" : `a bigint less than ${max}n`,\n      ...annotations\n    })\n  )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LessThanOrEqualToBigIntSchemaId: unique symbol = schemaId_.LessThanOrEqualToBigIntSchemaId\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport type LessThanOrEqualToBigIntSchemaId = typeof LessThanOrEqualToBigIntSchemaId\n\n/**\n * @category bigint filters\n * @since 3.10.0\n */\nexport const lessThanOrEqualToBigInt = <S extends Schema.Any>(\n  max: bigint,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends bigint>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter((a) => a <= max, {\n      schemaId: LessThanOrEqualToBigIntSchemaId,\n      [LessThanOrEqualToBigIntSchemaId]: { max },\n      title: `lessThanOrEqualToBigInt(${max})`,\n      description: max === 0n ? \"a non-positive bigint\" : `a bigint less than or equal to ${max}n`,\n      ...annotations\n    })\n  )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const BetweenBigIntSchemaId: unique symbol = schemaId_.BetweenBigintSchemaId\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport type BetweenBigIntSchemaId = typeof BetweenBigIntSchemaId\n\n/**\n * @category bigint filters\n * @since 3.10.0\n */\nexport const betweenBigInt = <S extends Schema.Any>(\n  min: bigint,\n  max: bigint,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends bigint>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter((a) => a >= min && a <= max, {\n      schemaId: BetweenBigIntSchemaId,\n      [BetweenBigIntSchemaId]: { min, max },\n      title: `betweenBigInt(${min}, ${max})`,\n      description: `a bigint between ${min}n and ${max}n`,\n      ...annotations\n    })\n  )\n\n/**\n * @category bigint filters\n * @since 3.10.0\n */\nexport const positiveBigInt = <S extends Schema.Any>(\n  annotations?: Annotations.Filter<Schema.Type<S>>\n): <A extends bigint>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>) => filter<S> =>\n  greaterThanBigInt(0n, { title: \"positiveBigInt\", ...annotations })\n\n/**\n * @category bigint filters\n * @since 3.10.0\n */\nexport const negativeBigInt = <S extends Schema.Any>(\n  annotations?: Annotations.Filter<Schema.Type<S>>\n): <A extends bigint>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>) => filter<S> =>\n  lessThanBigInt(0n, { title: \"negativeBigInt\", ...annotations })\n\n/**\n * @category bigint filters\n * @since 3.10.0\n */\nexport const nonNegativeBigInt = <S extends Schema.Any>(\n  annotations?: Annotations.Filter<Schema.Type<S>>\n): <A extends bigint>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>) => filter<S> =>\n  greaterThanOrEqualToBigInt(0n, { title: \"nonNegativeBigInt\", ...annotations })\n\n/**\n * @category bigint filters\n * @since 3.10.0\n */\nexport const nonPositiveBigInt = <S extends Schema.Any>(\n  annotations?: Annotations.Filter<Schema.Type<S>>\n): <A extends bigint>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>) => filter<S> =>\n  lessThanOrEqualToBigInt(0n, { title: \"nonPositiveBigInt\", ...annotations })\n\n/**\n * Clamps a bigint between a minimum and a maximum value.\n *\n * @category bigint transformations\n * @since 3.10.0\n */\nexport const clampBigInt = (minimum: bigint, maximum: bigint) =>\n<S extends Schema.Any, A extends bigint>(\n  self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>\n): transform<S, filter<SchemaClass<A>>> =>\n  transform(\n    self,\n    self.pipe(typeSchema, betweenBigInt(minimum, maximum)),\n    {\n      strict: false,\n      decode: (i) => bigInt_.clamp(i, { minimum, maximum }),\n      encode: identity\n    }\n  )\n\n/** @ignore */\nclass BigInt$ extends transformOrFail(\n  String$.annotations({ description: \"a string to be decoded into a bigint\" }),\n  BigIntFromSelf,\n  {\n    strict: true,\n    decode: (i, _, ast) =>\n      ParseResult.fromOption(\n        bigInt_.fromString(i),\n        () => new ParseResult.Type(ast, i, `Unable to decode ${JSON.stringify(i)} into a bigint`)\n      ),\n    encode: (a) => ParseResult.succeed(String(a))\n  }\n).annotations({ identifier: \"BigInt\" }) {}\n\nexport {\n  /**\n   * This schema transforms a `string` into a `bigint` by parsing the string using the `BigInt` function.\n   *\n   * It returns an error if the value can't be converted (for example when non-numeric characters are provided).\n   *\n   * @category bigint transformations\n   * @since 3.10.0\n   */\n  BigInt$ as BigInt\n}\n\n/**\n * @category bigint constructors\n * @since 3.10.0\n */\nexport const PositiveBigIntFromSelf: filter<Schema<bigint>> = BigIntFromSelf.pipe(\n  positiveBigInt({ identifier: \"PositiveBigintFromSelf\" })\n)\n\n/**\n * @category bigint constructors\n * @since 3.10.0\n */\nexport const PositiveBigInt: filter<Schema<bigint, string>> = BigInt$.pipe(\n  positiveBigInt({ identifier: \"PositiveBigint\" })\n)\n\n/**\n * @category bigint constructors\n * @since 3.10.0\n */\nexport const NegativeBigIntFromSelf: filter<Schema<bigint>> = BigIntFromSelf.pipe(\n  negativeBigInt({ identifier: \"NegativeBigintFromSelf\" })\n)\n\n/**\n * @category bigint constructors\n * @since 3.10.0\n */\nexport const NegativeBigInt: filter<Schema<bigint, string>> = BigInt$.pipe(\n  negativeBigInt({ identifier: \"NegativeBigint\" })\n)\n\n/**\n * @category bigint constructors\n * @since 3.10.0\n */\nexport const NonPositiveBigIntFromSelf: filter<Schema<bigint>> = BigIntFromSelf.pipe(\n  nonPositiveBigInt({ identifier: \"NonPositiveBigintFromSelf\" })\n)\n\n/**\n * @category bigint constructors\n * @since 3.10.0\n */\nexport const NonPositiveBigInt: filter<Schema<bigint, string>> = BigInt$.pipe(\n  nonPositiveBigInt({ identifier: \"NonPositiveBigint\" })\n)\n\n/**\n * @category bigint constructors\n * @since 3.10.0\n */\nexport const NonNegativeBigIntFromSelf: filter<Schema<bigint>> = BigIntFromSelf.pipe(\n  nonNegativeBigInt({ identifier: \"NonNegativeBigintFromSelf\" })\n)\n\n/**\n * @category bigint constructors\n * @since 3.10.0\n */\nexport const NonNegativeBigInt: filter<Schema<bigint, string>> = BigInt$.pipe(\n  nonNegativeBigInt({ identifier: \"NonNegativeBigint\" })\n)\n\n/**\n * This schema transforms a `number` into a `bigint` by parsing the number using the `BigInt` function.\n *\n * It returns an error if the value can't be safely encoded as a `number` due to being out of range.\n *\n * @category bigint transformations\n * @since 3.10.0\n */\nexport class BigIntFromNumber extends transformOrFail(\n  Number$.annotations({ description: \"a number to be decoded into a bigint\" }),\n  BigIntFromSelf.pipe(betweenBigInt(BigInt(Number.MIN_SAFE_INTEGER), BigInt(Number.MAX_SAFE_INTEGER))),\n  {\n    strict: true,\n    decode: (i, _, ast) =>\n      ParseResult.fromOption(\n        bigInt_.fromNumber(i),\n        () => new ParseResult.Type(ast, i, `Unable to decode ${i} into a bigint`)\n      ),\n    encode: (a, _, ast) =>\n      ParseResult.fromOption(\n        bigInt_.toNumber(a),\n        () => new ParseResult.Type(ast, a, `Unable to encode ${a}n into a number`)\n      )\n  }\n).annotations({ identifier: \"BigIntFromNumber\" }) {}\n\nconst redactedArbitrary = <A>(value: LazyArbitrary<A>): LazyArbitrary<redacted_.Redacted<A>> => (fc) =>\n  value(fc).map(redacted_.make)\n\nconst toComposite = <A, R, B>(\n  eff: Effect.Effect<A, ParseResult.ParseIssue, R>,\n  onSuccess: (a: A) => B,\n  ast: AST.AST,\n  actual: unknown\n): Effect.Effect<B, ParseResult.Composite, R> =>\n  ParseResult.mapBoth(eff, {\n    onFailure: (e) => new ParseResult.Composite(ast, actual, e),\n    onSuccess\n  })\n\nconst redactedParse = <A, R>(\n  decodeUnknown: ParseResult.DecodeUnknown<A, R>\n): ParseResult.DeclarationDecodeUnknown<redacted_.Redacted<A>, R> =>\n(u, options, ast) =>\n  redacted_.isRedacted(u) ?\n    toComposite(decodeUnknown(redacted_.value(u), options), redacted_.make, ast, u) :\n    ParseResult.fail(new ParseResult.Type(ast, u))\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface RedactedFromSelf<Value extends Schema.Any> extends\n  AnnotableDeclare<\n    RedactedFromSelf<Value>,\n    redacted_.Redacted<Schema.Type<Value>>,\n    redacted_.Redacted<Schema.Encoded<Value>>,\n    [Value]\n  >\n{}\n\n/**\n * @category Redacted constructors\n * @since 3.10.0\n */\nexport const RedactedFromSelf = <Value extends Schema.Any>(value: Value): RedactedFromSelf<Value> =>\n  declare(\n    [value],\n    {\n      decode: (value) => redactedParse(ParseResult.decodeUnknown(value)),\n      encode: (value) => redactedParse(ParseResult.encodeUnknown(value))\n    },\n    {\n      description: \"Redacted(<redacted>)\",\n      pretty: () => () => \"Redacted(<redacted>)\",\n      arbitrary: redactedArbitrary,\n      equivalence: redacted_.getEquivalence\n    }\n  )\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface Redacted<Value extends Schema.Any>\n  extends transform<Value, RedactedFromSelf<SchemaClass<Schema.Type<Value>>>>\n{}\n\n/**\n * A transformation that transform a `Schema<A, I, R>` into a\n * `RedactedFromSelf<A>`.\n *\n * @category Redacted transformations\n * @since 3.10.0\n */\nexport function Redacted<Value extends Schema.Any>(value: Value): Redacted<Value> {\n  return transform(\n    value,\n    RedactedFromSelf(typeSchema(asSchema(value))),\n    {\n      strict: true,\n      decode: (i) => redacted_.make(i),\n      encode: (a) => redacted_.value(a)\n    }\n  )\n}\n\n/**\n * @category Duration constructors\n * @since 3.10.0\n */\nexport class DurationFromSelf extends declare(\n  duration_.isDuration,\n  {\n    identifier: \"DurationFromSelf\",\n    pretty: (): pretty_.Pretty<duration_.Duration> => String,\n    arbitrary: (): LazyArbitrary<duration_.Duration> => (fc) =>\n      fc.oneof(\n        fc.constant(duration_.infinity),\n        fc.bigInt({ min: 0n }).map((_) => duration_.nanos(_)),\n        fc.maxSafeNat().map((_) => duration_.millis(_))\n      ),\n    equivalence: (): Equivalence.Equivalence<duration_.Duration> => duration_.Equivalence\n  }\n) {}\n\n/**\n * A schema that transforms a non negative `bigint` into a `Duration`. Treats\n * the value as the number of nanoseconds.\n *\n * @category Duration transformations\n * @since 3.10.0\n */\nexport class DurationFromNanos extends transformOrFail(\n  NonNegativeBigIntFromSelf.annotations({ description: \"a bigint to be decoded into a Duration\" }),\n  DurationFromSelf.pipe(filter((duration) => duration_.isFinite(duration), { description: \"a finite duration\" })),\n  {\n    strict: true,\n    decode: (i) => ParseResult.succeed(duration_.nanos(i)),\n    encode: (a, _, ast) =>\n      option_.match(duration_.toNanos(a), {\n        onNone: () => ParseResult.fail(new ParseResult.Type(ast, a, `Unable to encode ${a} into a bigint`)),\n        onSome: (nanos) => ParseResult.succeed(nanos)\n      })\n  }\n).annotations({ identifier: \"DurationFromNanos\" }) {}\n\n/**\n * A non-negative integer. +Infinity is excluded.\n *\n * @category number constructors\n * @since 3.11.10\n */\nexport const NonNegativeInt = NonNegative.pipe(int()).annotations({ identifier: \"NonNegativeInt\" })\n\n/**\n * A schema that transforms a (possibly Infinite) non negative number into a\n * `Duration`. Treats the value as the number of milliseconds.\n *\n * @category Duration transformations\n * @since 3.10.0\n */\nexport class DurationFromMillis extends transform(\n  NonNegative.annotations({\n    description: \"a non-negative number to be decoded into a Duration\"\n  }),\n  DurationFromSelf,\n  {\n    strict: true,\n    decode: (i) => duration_.millis(i),\n    encode: (a) => duration_.toMillis(a)\n  }\n).annotations({ identifier: \"DurationFromMillis\" }) {}\n\nconst DurationValueMillis = TaggedStruct(\"Millis\", { millis: NonNegativeInt })\nconst DurationValueNanos = TaggedStruct(\"Nanos\", { nanos: BigInt$ })\nconst DurationValueInfinity = TaggedStruct(\"Infinity\", {})\nconst durationValueInfinity = DurationValueInfinity.make({})\n\n/**\n * @category Duration utils\n * @since 3.12.8\n */\nexport type DurationEncoded =\n  | {\n    readonly _tag: \"Millis\"\n    readonly millis: number\n  }\n  | {\n    readonly _tag: \"Nanos\"\n    readonly nanos: string\n  }\n  | {\n    readonly _tag: \"Infinity\"\n  }\n\nconst DurationValue: Schema<duration_.DurationValue, DurationEncoded> = Union(\n  DurationValueMillis,\n  DurationValueNanos,\n  DurationValueInfinity\n).annotations({\n  identifier: \"DurationValue\",\n  description: \"an JSON-compatible tagged union to be decoded into a Duration\"\n})\n\nconst FiniteHRTime = Tuple(\n  element(NonNegativeInt).annotations({ title: \"seconds\" }),\n  element(NonNegativeInt).annotations({ title: \"nanos\" })\n).annotations({ identifier: \"FiniteHRTime\" })\n\nconst InfiniteHRTime = Tuple(Literal(-1), Literal(0)).annotations({ identifier: \"InfiniteHRTime\" })\n\nconst HRTime: Schema<readonly [seconds: number, nanos: number]> = Union(FiniteHRTime, InfiniteHRTime).annotations({\n  identifier: \"HRTime\",\n  description: \"a tuple of seconds and nanos to be decoded into a Duration\"\n})\n\nconst isDurationValue = (u: duration_.DurationValue | typeof HRTime.Type): u is duration_.DurationValue =>\n  typeof u === \"object\"\n\n// TODO(4.0): remove HRTime union member\n/**\n * A schema that converts a JSON-compatible tagged union into a `Duration`.\n *\n * @category Duration transformations\n * @since 3.10.0\n */\nexport class Duration extends transform(\n  Union(DurationValue, HRTime),\n  DurationFromSelf,\n  {\n    strict: true,\n    decode: (i) => {\n      if (isDurationValue(i)) {\n        switch (i._tag) {\n          case \"Millis\":\n            return duration_.millis(i.millis)\n          case \"Nanos\":\n            return duration_.nanos(i.nanos)\n          case \"Infinity\":\n            return duration_.infinity\n        }\n      }\n      const [seconds, nanos] = i\n      return seconds === -1 ? duration_.infinity : duration_.nanos(BigInt(seconds) * BigInt(1e9) + BigInt(nanos))\n    },\n    encode: (a) => {\n      switch (a.value._tag) {\n        case \"Millis\":\n          return DurationValueMillis.make({ millis: a.value.millis })\n        case \"Nanos\":\n          return DurationValueNanos.make({ nanos: a.value.nanos })\n        case \"Infinity\":\n          return durationValueInfinity\n      }\n    }\n  }\n).annotations({ identifier: \"Duration\" }) {}\n\n/**\n * Clamps a `Duration` between a minimum and a maximum value.\n *\n * @category Duration transformations\n * @since 3.10.0\n */\nexport const clampDuration =\n  (minimum: duration_.DurationInput, maximum: duration_.DurationInput) =>\n  <S extends Schema.Any, A extends duration_.Duration>(\n    self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>\n  ): transform<S, filter<SchemaClass<A>>> =>\n    transform(\n      self,\n      self.pipe(typeSchema, betweenDuration(minimum, maximum)),\n      {\n        strict: false,\n        decode: (i) => duration_.clamp(i, { minimum, maximum }),\n        encode: identity\n      }\n    )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LessThanDurationSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/LessThanDuration\")\n\n/**\n * @category Duration filters\n * @since 3.10.0\n */\nexport const lessThanDuration = <S extends Schema.Any>(\n  max: duration_.DurationInput,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends duration_.Duration>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter((a) => duration_.lessThan(a, max), {\n      schemaId: LessThanDurationSchemaId,\n      [LessThanDurationSchemaId]: { max },\n      title: `lessThanDuration(${max})`,\n      description: `a Duration less than ${duration_.decode(max)}`,\n      ...annotations\n    })\n  )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LessThanOrEqualToDurationSchemaId: unique symbol = Symbol.for(\n  \"effect/schema/LessThanOrEqualToDuration\"\n)\n\n/**\n * @category Duration filters\n * @since 3.10.0\n */\nexport const lessThanOrEqualToDuration = <S extends Schema.Any>(\n  max: duration_.DurationInput,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends duration_.Duration>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter((a) => duration_.lessThanOrEqualTo(a, max), {\n      schemaId: LessThanDurationSchemaId,\n      [LessThanDurationSchemaId]: { max },\n      title: `lessThanOrEqualToDuration(${max})`,\n      description: `a Duration less than or equal to ${duration_.decode(max)}`,\n      ...annotations\n    })\n  )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const GreaterThanDurationSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/GreaterThanDuration\")\n\n/**\n * @category Duration filters\n * @since 3.10.0\n */\nexport const greaterThanDuration = <S extends Schema.Any>(\n  min: duration_.DurationInput,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends duration_.Duration>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter((a) => duration_.greaterThan(a, min), {\n      schemaId: GreaterThanDurationSchemaId,\n      [GreaterThanDurationSchemaId]: { min },\n      title: `greaterThanDuration(${min})`,\n      description: `a Duration greater than ${duration_.decode(min)}`,\n      ...annotations\n    })\n  )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const GreaterThanOrEqualToDurationSchemaId: unique symbol = Symbol.for(\n  \"effect/schema/GreaterThanOrEqualToDuration\"\n)\n\n/**\n * @category Duration filters\n * @since 3.10.0\n */\nexport const greaterThanOrEqualToDuration = <S extends Schema.Any>(\n  min: duration_.DurationInput,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends duration_.Duration>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter((a) => duration_.greaterThanOrEqualTo(a, min), {\n      schemaId: GreaterThanOrEqualToDurationSchemaId,\n      [GreaterThanOrEqualToDurationSchemaId]: { min },\n      title: `greaterThanOrEqualToDuration(${min})`,\n      description: `a Duration greater than or equal to ${duration_.decode(min)}`,\n      ...annotations\n    })\n  )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const BetweenDurationSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/BetweenDuration\")\n\n/**\n * @category Duration filters\n * @since 3.10.0\n */\nexport const betweenDuration = <S extends Schema.Any>(\n  minimum: duration_.DurationInput,\n  maximum: duration_.DurationInput,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends duration_.Duration>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter((a) => duration_.between(a, { minimum, maximum }), {\n      schemaId: BetweenDurationSchemaId,\n      [BetweenDurationSchemaId]: { maximum, minimum },\n      title: `betweenDuration(${minimum}, ${maximum})`,\n      description: `a Duration between ${duration_.decode(minimum)} and ${duration_.decode(maximum)}`,\n      ...annotations\n    })\n  )\n\n/**\n * @category Uint8Array constructors\n * @since 3.10.0\n */\nexport class Uint8ArrayFromSelf extends declare(\n  Predicate.isUint8Array,\n  {\n    identifier: \"Uint8ArrayFromSelf\",\n    pretty: (): pretty_.Pretty<Uint8Array> => (u8arr) => `new Uint8Array(${JSON.stringify(Array.from(u8arr))})`,\n    arbitrary: (): LazyArbitrary<Uint8Array> => (fc) => fc.uint8Array(),\n    equivalence: (): Equivalence.Equivalence<Uint8Array> => array_.getEquivalence(Equal.equals) as any\n  }\n) {}\n\n/**\n * @category number constructors\n * @since 3.11.10\n */\nexport class Uint8 extends Number$.pipe(\n  between(0, 255, {\n    identifier: \"Uint8\",\n    description: \"a 8-bit unsigned integer\"\n  })\n) {}\n\n/** @ignore */\nclass Uint8Array$ extends transform(\n  Array$(Uint8).annotations({\n    description: \"an array of 8-bit unsigned integers to be decoded into a Uint8Array\"\n  }),\n  Uint8ArrayFromSelf,\n  {\n    strict: true,\n    decode: (i) => Uint8Array.from(i),\n    encode: (a) => Array.from(a)\n  }\n).annotations({ identifier: \"Uint8Array\" }) {}\n\nexport {\n  /**\n   * A schema that transforms an array of numbers into a `Uint8Array`.\n   *\n   * @category Uint8Array transformations\n   * @since 3.10.0\n   */\n  Uint8Array$ as Uint8Array\n}\n\nconst makeUint8ArrayTransformation = (\n  id: string,\n  decode: (s: string) => either_.Either<Uint8Array, Encoding.DecodeException>,\n  encode: (u: Uint8Array) => string\n) =>\n  transformOrFail(\n    String$.annotations({ description: \"a string to be decoded into a Uint8Array\" }),\n    Uint8ArrayFromSelf,\n    {\n      strict: true,\n      decode: (i, _, ast) =>\n        either_.mapLeft(\n          decode(i),\n          (decodeException) => new ParseResult.Type(ast, i, decodeException.message)\n        ),\n      encode: (a) => ParseResult.succeed(encode(a))\n    }\n  ).annotations({ identifier: id })\n\n/**\n * Decodes a base64 (RFC4648) encoded string into a `Uint8Array`.\n *\n * @category Uint8Array transformations\n * @since 3.10.0\n */\nexport const Uint8ArrayFromBase64: Schema<Uint8Array, string> = makeUint8ArrayTransformation(\n  \"Uint8ArrayFromBase64\",\n  Encoding.decodeBase64,\n  Encoding.encodeBase64\n)\n\n/**\n * Decodes a base64 (URL) encoded string into a `Uint8Array`.\n *\n * @category Uint8Array transformations\n * @since 3.10.0\n */\nexport const Uint8ArrayFromBase64Url: Schema<Uint8Array, string> = makeUint8ArrayTransformation(\n  \"Uint8ArrayFromBase64Url\",\n  Encoding.decodeBase64Url,\n  Encoding.encodeBase64Url\n)\n\n/**\n * Decodes a hex encoded string into a `Uint8Array`.\n *\n * @category Uint8Array transformations\n * @since 3.10.0\n */\nexport const Uint8ArrayFromHex: Schema<Uint8Array, string> = makeUint8ArrayTransformation(\n  \"Uint8ArrayFromHex\",\n  Encoding.decodeHex,\n  Encoding.encodeHex\n)\n\nconst makeEncodingTransformation = (\n  id: string,\n  decode: (s: string) => either_.Either<string, Encoding.DecodeException>,\n  encode: (u: string) => string\n) =>\n  transformOrFail(\n    String$.annotations({\n      description: `A string that is interpreted as being ${id}-encoded and will be decoded into a UTF-8 string`\n    }),\n    String$,\n    {\n      strict: true,\n      decode: (i, _, ast) =>\n        either_.mapLeft(\n          decode(i),\n          (decodeException) => new ParseResult.Type(ast, i, decodeException.message)\n        ),\n      encode: (a) => ParseResult.succeed(encode(a))\n    }\n  ).annotations({ identifier: `StringFrom${id}` })\n\n/**\n * Decodes a base64 (RFC4648) encoded string into a UTF-8 string.\n *\n * @category string transformations\n * @since 3.10.0\n */\nexport const StringFromBase64: Schema<string> = makeEncodingTransformation(\n  \"Base64\",\n  Encoding.decodeBase64String,\n  Encoding.encodeBase64\n)\n\n/**\n * Decodes a base64 (URL) encoded string into a UTF-8 string.\n *\n * @category string transformations\n * @since 3.10.0\n */\nexport const StringFromBase64Url: Schema<string> = makeEncodingTransformation(\n  \"Base64Url\",\n  Encoding.decodeBase64UrlString,\n  Encoding.encodeBase64Url\n)\n\n/**\n * Decodes a hex encoded string into a UTF-8 string.\n *\n * @category string transformations\n * @since 3.10.0\n */\nexport const StringFromHex: Schema<string> = makeEncodingTransformation(\n  \"Hex\",\n  Encoding.decodeHexString,\n  Encoding.encodeHex\n)\n\n/**\n * Decodes a URI component encoded string into a UTF-8 string.\n * Can be used to store data in a URL.\n *\n * @example\n * ```ts\n * import { Schema } from \"effect\"\n *\n * const PaginationSchema = Schema.Struct({\n *   maxItemPerPage: Schema.Number,\n *   page: Schema.Number\n * })\n *\n * const UrlSchema = Schema.compose(Schema.StringFromUriComponent, Schema.parseJson(PaginationSchema))\n *\n * console.log(Schema.encodeSync(UrlSchema)({ maxItemPerPage: 10, page: 1 }))\n * // Output: %7B%22maxItemPerPage%22%3A10%2C%22page%22%3A1%7D\n * ```\n *\n * @category string transformations\n * @since 3.12.0\n */\nexport const StringFromUriComponent = transformOrFail(\n  String$.annotations({\n    description: `A string that is interpreted as being UriComponent-encoded and will be decoded into a UTF-8 string`\n  }),\n  String$,\n  {\n    strict: true,\n    decode: (i, _, ast) =>\n      either_.mapLeft(\n        Encoding.decodeUriComponent(i),\n        (decodeException) => new ParseResult.Type(ast, i, decodeException.message)\n      ),\n    encode: (a, _, ast) =>\n      either_.mapLeft(\n        Encoding.encodeUriComponent(a),\n        (encodeException) => new ParseResult.Type(ast, a, encodeException.message)\n      )\n  }\n).annotations({ identifier: `StringFromUriComponent` })\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const MinItemsSchemaId: unique symbol = schemaId_.MinItemsSchemaId\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport type MinItemsSchemaId = typeof MinItemsSchemaId\n\n/**\n * @category ReadonlyArray filters\n * @since 3.10.0\n */\nexport const minItems = <S extends Schema.Any>(\n  n: number,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends ReadonlyArray<any>>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> => {\n  const minItems = Math.floor(n)\n  if (minItems < 1) {\n    throw new Error(\n      errors_.getInvalidArgumentErrorMessage(`Expected an integer greater than or equal to 1, actual ${n}`)\n    )\n  }\n  return self.pipe(\n    filter(\n      (a) => a.length >= minItems,\n      {\n        schemaId: MinItemsSchemaId,\n        title: `minItems(${minItems})`,\n        description: `an array of at least ${minItems} item(s)`,\n        jsonSchema: { minItems },\n        [AST.StableFilterAnnotationId]: true,\n        ...annotations\n      }\n    )\n  )\n}\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const MaxItemsSchemaId: unique symbol = schemaId_.MaxItemsSchemaId\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport type MaxItemsSchemaId = typeof MaxItemsSchemaId\n\n/**\n * @category ReadonlyArray filters\n * @since 3.10.0\n */\nexport const maxItems = <S extends Schema.Any>(\n  n: number,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends ReadonlyArray<any>>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> => {\n  const maxItems = Math.floor(n)\n  if (maxItems < 1) {\n    throw new Error(\n      errors_.getInvalidArgumentErrorMessage(`Expected an integer greater than or equal to 1, actual ${n}`)\n    )\n  }\n  return self.pipe(\n    filter((a) => a.length <= maxItems, {\n      schemaId: MaxItemsSchemaId,\n      title: `maxItems(${maxItems})`,\n      description: `an array of at most ${maxItems} item(s)`,\n      jsonSchema: { maxItems },\n      [AST.StableFilterAnnotationId]: true,\n      ...annotations\n    })\n  )\n}\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const ItemsCountSchemaId: unique symbol = schemaId_.ItemsCountSchemaId\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport type ItemsCountSchemaId = typeof ItemsCountSchemaId\n\n/**\n * @category ReadonlyArray filters\n * @since 3.10.0\n */\nexport const itemsCount = <S extends Schema.Any>(\n  n: number,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends ReadonlyArray<any>>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> => {\n  const itemsCount = Math.floor(n)\n  if (itemsCount < 0) {\n    throw new Error(\n      errors_.getInvalidArgumentErrorMessage(`Expected an integer greater than or equal to 0, actual ${n}`)\n    )\n  }\n  return self.pipe(\n    filter((a) => a.length === itemsCount, {\n      schemaId: ItemsCountSchemaId,\n      title: `itemsCount(${itemsCount})`,\n      description: `an array of exactly ${itemsCount} item(s)`,\n      jsonSchema: { minItems: itemsCount, maxItems: itemsCount },\n      [AST.StableFilterAnnotationId]: true,\n      ...annotations\n    })\n  )\n}\n\n/**\n * @category ReadonlyArray transformations\n * @since 3.10.0\n */\nexport const getNumberIndexedAccess = <A extends ReadonlyArray<any>, I extends ReadonlyArray<any>, R>(\n  self: Schema<A, I, R>\n): SchemaClass<A[number], I[number], R> => make(AST.getNumberIndexedAccess(self.ast))\n\n/**\n * Get the first element of a `ReadonlyArray`, or `None` if the array is empty.\n *\n * @category ReadonlyArray transformations\n * @since 3.10.0\n */\nexport function head<S extends Schema.Any, A extends ReadonlyArray<unknown>>(\n  self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>\n): transform<S, OptionFromSelf<SchemaClass<A[number]>>> {\n  return transform(\n    self,\n    OptionFromSelf(getNumberIndexedAccess(typeSchema(self))),\n    {\n      strict: false,\n      decode: (i) => array_.head(i),\n      encode: (a) =>\n        option_.match(a, {\n          onNone: () => [],\n          onSome: array_.of\n        })\n    }\n  )\n}\n\n/**\n * Get the first element of a `NonEmptyReadonlyArray`.\n *\n * @category NonEmptyReadonlyArray transformations\n * @since 3.12.0\n */\nexport function headNonEmpty<S extends Schema.Any, A extends array_.NonEmptyReadonlyArray<unknown>>(\n  self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>\n): transform<S, SchemaClass<A[number]>> {\n  return transform(\n    self,\n    getNumberIndexedAccess(typeSchema(self)),\n    {\n      strict: false,\n      decode: (i) => array_.headNonEmpty(i),\n      encode: (a) => array_.of(a)\n    }\n  )\n}\n\n/**\n * Retrieves the first element of a `ReadonlyArray`.\n *\n * If the array is empty, it returns the `fallback` argument if provided; otherwise, it fails.\n *\n * @category ReadonlyArray transformations\n * @since 3.10.0\n */\nexport const headOrElse: {\n  /**\n   * Retrieves the first element of a `ReadonlyArray`.\n   *\n   * If the array is empty, it returns the `fallback` argument if provided; otherwise, it fails.\n   *\n   * @category ReadonlyArray transformations\n   * @since 3.10.0\n   */\n  <S extends Schema.Any, A extends ReadonlyArray<unknown>>(fallback?: LazyArg<A[number]>): (\n    self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>\n  ) => transform<S, SchemaClass<A[number]>>\n  /**\n   * Retrieves the first element of a `ReadonlyArray`.\n   *\n   * If the array is empty, it returns the `fallback` argument if provided; otherwise, it fails.\n   *\n   * @category ReadonlyArray transformations\n   * @since 3.10.0\n   */\n  <S extends Schema.Any, A extends ReadonlyArray<unknown>>(\n    self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>,\n    fallback?: LazyArg<A[number]>\n  ): transform<S, SchemaClass<A[number]>>\n} = dual(\n  (args) => isSchema(args[0]),\n  <A, I, R>(\n    self: Schema<ReadonlyArray<A>, I, R>,\n    fallback?: LazyArg<A>\n  ): transform<Schema<ReadonlyArray<A>, I, R>, SchemaClass<A>> =>\n    transformOrFail(\n      self,\n      getNumberIndexedAccess(typeSchema(self)),\n      {\n        strict: true,\n        decode: (i, _, ast) =>\n          i.length > 0\n            ? ParseResult.succeed(i[0])\n            : fallback\n            ? ParseResult.succeed(fallback())\n            : ParseResult.fail(new ParseResult.Type(ast, i, \"Unable to retrieve the first element of an empty array\")),\n        encode: (a) => ParseResult.succeed(array_.of(a))\n      }\n    )\n)\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const ValidDateSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/ValidDate\")\n\n/**\n * Defines a filter that specifically rejects invalid dates, such as `new\n * Date(\"Invalid Date\")`. This filter ensures that only properly formatted and\n * valid date objects are accepted, enhancing data integrity by preventing\n * erroneous date values from being processed.\n *\n * @category Date filters\n * @since 3.10.0\n */\nexport const validDate =\n  <S extends Schema.Any>(annotations?: Annotations.Filter<Schema.Type<S>>) =>\n  <A extends Date>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n    self.pipe(\n      filter((a) => !Number.isNaN(a.getTime()), {\n        schemaId: ValidDateSchemaId,\n        [ValidDateSchemaId]: { noInvalidDate: true },\n        title: \"validDate\",\n        description: \"a valid Date\",\n        ...annotations\n      })\n    )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LessThanDateSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/LessThanDate\")\n\n/**\n * @category Date filters\n * @since 3.10.0\n */\nexport const lessThanDate = <S extends Schema.Any>(\n  max: Date,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends Date>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter((a: Date) => a < max, {\n      schemaId: LessThanDateSchemaId,\n      [LessThanDateSchemaId]: { max },\n      title: `lessThanDate(${util_.formatDate(max)})`,\n      description: `a date before ${util_.formatDate(max)}`,\n      ...annotations\n    })\n  )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LessThanOrEqualToDateSchemaId: unique symbol = Symbol.for(\n  \"effect/schema/LessThanOrEqualToDate\"\n)\n\n/**\n * @category Date filters\n * @since 3.10.0\n */\nexport const lessThanOrEqualToDate = <S extends Schema.Any>(\n  max: Date,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends Date>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter((a: Date) => a <= max, {\n      schemaId: LessThanOrEqualToDateSchemaId,\n      [LessThanOrEqualToDateSchemaId]: { max },\n      title: `lessThanOrEqualToDate(${util_.formatDate(max)})`,\n      description: `a date before or equal to ${util_.formatDate(max)}`,\n      ...annotations\n    })\n  )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const GreaterThanDateSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/GreaterThanDate\")\n\n/**\n * @category Date filters\n * @since 3.10.0\n */\nexport const greaterThanDate = <S extends Schema.Any>(\n  min: Date,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends Date>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter((a: Date) => a > min, {\n      schemaId: GreaterThanDateSchemaId,\n      [GreaterThanDateSchemaId]: { min },\n      title: `greaterThanDate(${util_.formatDate(min)})`,\n      description: `a date after ${util_.formatDate(min)}`,\n      ...annotations\n    })\n  )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const GreaterThanOrEqualToDateSchemaId: unique symbol = Symbol.for(\n  \"effect/schema/GreaterThanOrEqualToDate\"\n)\n\n/**\n * @category Date filters\n * @since 3.10.0\n */\nexport const greaterThanOrEqualToDate = <S extends Schema.Any>(\n  min: Date,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends Date>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter((a: Date) => a >= min, {\n      schemaId: GreaterThanOrEqualToDateSchemaId,\n      [GreaterThanOrEqualToDateSchemaId]: { min },\n      title: `greaterThanOrEqualToDate(${util_.formatDate(min)})`,\n      description: `a date after or equal to ${util_.formatDate(min)}`,\n      ...annotations\n    })\n  )\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const BetweenDateSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/BetweenDate\")\n\n/**\n * @category Date filters\n * @since 3.10.0\n */\nexport const betweenDate = <S extends Schema.Any>(\n  min: Date,\n  max: Date,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends Date>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n  self.pipe(\n    filter((a: Date) => a <= max && a >= min, {\n      schemaId: BetweenDateSchemaId,\n      [BetweenDateSchemaId]: { max, min },\n      title: `betweenDate(${util_.formatDate(min)}, ${util_.formatDate(max)})`,\n      description: `a date between ${util_.formatDate(min)} and ${util_.formatDate(max)}`,\n      ...annotations\n    })\n  )\n\n/**\n * @category schema id\n * @since 3.11.8\n */\nexport const DateFromSelfSchemaId: unique symbol = schemaId_.DateFromSelfSchemaId\n\n/**\n * @category schema id\n * @since 3.11.8\n */\nexport type DateFromSelfSchemaId = typeof DateFromSelfSchemaId\n\n/**\n * Describes a schema that accommodates potentially invalid `Date` instances,\n * such as `new Date(\"Invalid Date\")`, without rejection.\n *\n * @category Date constructors\n * @since 3.10.0\n */\nexport class DateFromSelf extends declare(\n  Predicate.isDate,\n  {\n    identifier: \"DateFromSelf\",\n    schemaId: DateFromSelfSchemaId,\n    [DateFromSelfSchemaId]: { noInvalidDate: false },\n    description: \"a potentially invalid Date instance\",\n    pretty: () => (date) => `new Date(${JSON.stringify(date)})`,\n    arbitrary: () => (fc) => fc.date({ noInvalidDate: false }),\n    equivalence: () => Equivalence.Date\n  }\n) {}\n\n/**\n * Defines a schema that ensures only valid dates are accepted. This schema\n * rejects values like `new Date(\"Invalid Date\")`, which, despite being a `Date`\n * instance, represents an invalid date. Such stringent validation ensures that\n * all date objects processed through this schema are properly formed and\n * represent real dates.\n *\n * @category Date constructors\n * @since 3.10.0\n */\nexport class ValidDateFromSelf extends DateFromSelf.pipe(\n  validDate({\n    identifier: \"ValidDateFromSelf\",\n    description: \"a valid Date instance\"\n  })\n) {}\n\n/**\n * Defines a schema that attempts to convert a `string` to a `Date` object using\n * the `new Date` constructor. This conversion is lenient, meaning it does not\n * reject strings that do not form valid dates (e.g., using `new Date(\"Invalid\n * Date\")` results in a `Date` object, despite being invalid).\n *\n * @category Date transformations\n * @since 3.10.0\n */\nexport class DateFromString extends transform(\n  String$.annotations({ description: \"a string to be decoded into a Date\" }),\n  DateFromSelf,\n  {\n    strict: true,\n    decode: (i) => new Date(i),\n    encode: (a) => util_.formatDate(a)\n  }\n).annotations({ identifier: \"DateFromString\" }) {}\n\n/** @ignore */\nclass Date$ extends DateFromString.pipe(\n  validDate({ identifier: \"Date\" })\n) {}\n\nexport {\n  /**\n   * This schema converts a `string` into a `Date` object using the `new Date`\n   * constructor. It ensures that only valid date strings are accepted,\n   * rejecting any strings that would result in an invalid date, such as `new\n   * Date(\"Invalid Date\")`.\n   *\n   * @category Date transformations\n   * @since 3.10.0\n   */\n  Date$ as Date\n}\n\n/**\n * Defines a schema that converts a `number` into a `Date` object using the `new\n * Date` constructor. This schema does not validate the numerical input,\n * allowing potentially invalid values such as `NaN`, `Infinity`, and\n * `-Infinity` to be converted into `Date` objects. During the encoding process,\n * any invalid `Date` object will be encoded to `NaN`.\n *\n * @category Date transformations\n * @since 3.10.0\n */\nexport class DateFromNumber extends transform(\n  Number$.annotations({ description: \"a number to be decoded into a Date\" }),\n  DateFromSelf,\n  {\n    strict: true,\n    decode: (i) => new Date(i),\n    encode: (a) => a.getTime()\n  }\n).annotations({ identifier: \"DateFromNumber\" }) {}\n\n/**\n * Describes a schema that represents a `DateTime.Utc` instance.\n *\n * @category DateTime.Utc constructors\n * @since 3.10.0\n */\nexport class DateTimeUtcFromSelf extends declare(\n  (u) => dateTime.isDateTime(u) && dateTime.isUtc(u),\n  {\n    identifier: \"DateTimeUtcFromSelf\",\n    description: \"a DateTime.Utc instance\",\n    pretty: (): pretty_.Pretty<dateTime.Utc> => (dateTime) => dateTime.toString(),\n    arbitrary: (): LazyArbitrary<dateTime.Utc> => (fc) =>\n      fc.date({ noInvalidDate: true }).map((date) => dateTime.unsafeFromDate(date)),\n    equivalence: () => dateTime.Equivalence\n  }\n) {}\n\nconst decodeDateTimeUtc = <A extends dateTime.DateTime.Input>(input: A, ast: AST.AST) =>\n  ParseResult.try({\n    try: () => dateTime.unsafeMake(input),\n    catch: () => new ParseResult.Type(ast, input, `Unable to decode ${util_.formatUnknown(input)} into a DateTime.Utc`)\n  })\n\n/**\n * Defines a schema that attempts to convert a `number` to a `DateTime.Utc` instance using the `DateTime.unsafeMake` constructor.\n *\n * @category DateTime.Utc transformations\n * @since 3.10.0\n */\nexport class DateTimeUtcFromNumber extends transformOrFail(\n  Number$.annotations({ description: \"a number to be decoded into a DateTime.Utc\" }),\n  DateTimeUtcFromSelf,\n  {\n    strict: true,\n    decode: (i, _, ast) => decodeDateTimeUtc(i, ast),\n    encode: (a) => ParseResult.succeed(dateTime.toEpochMillis(a))\n  }\n).annotations({ identifier: \"DateTimeUtcFromNumber\" }) {}\n\n/**\n * Defines a schema that attempts to convert a `Date` to a `DateTime.Utc` instance using the `DateTime.unsafeMake` constructor.\n *\n * @category DateTime.Utc transformations\n * @since 3.12.0\n */\nexport class DateTimeUtcFromDate extends transformOrFail(\n  DateFromSelf.annotations({ description: \"a Date to be decoded into a DateTime.Utc\" }),\n  DateTimeUtcFromSelf,\n  {\n    strict: true,\n    decode: (i, _, ast) => decodeDateTimeUtc(i, ast),\n    encode: (a) => ParseResult.succeed(dateTime.toDateUtc(a))\n  }\n).annotations({ identifier: \"DateTimeUtcFromDate\" }) {}\n\n/**\n * Defines a schema that attempts to convert a `string` to a `DateTime.Utc` instance using the `DateTime.unsafeMake` constructor.\n *\n * @category DateTime.Utc transformations\n * @since 3.10.0\n */\nexport class DateTimeUtc extends transformOrFail(\n  String$.annotations({ description: \"a string to be decoded into a DateTime.Utc\" }),\n  DateTimeUtcFromSelf,\n  {\n    strict: true,\n    decode: (i, _, ast) => decodeDateTimeUtc(i, ast),\n    encode: (a) => ParseResult.succeed(dateTime.formatIso(a))\n  }\n).annotations({ identifier: \"DateTimeUtc\" }) {}\n\nconst timeZoneOffsetArbitrary = (): LazyArbitrary<dateTime.TimeZone.Offset> => (fc) =>\n  fc.integer({ min: -12 * 60 * 60 * 1000, max: 14 * 60 * 60 * 1000 }).map(dateTime.zoneMakeOffset)\n\n/**\n * Describes a schema that represents a `TimeZone.Offset` instance.\n *\n * @category TimeZone constructors\n * @since 3.10.0\n */\nexport class TimeZoneOffsetFromSelf extends declare(\n  dateTime.isTimeZoneOffset,\n  {\n    identifier: \"TimeZoneOffsetFromSelf\",\n    description: \"a TimeZone.Offset instance\",\n    pretty: (): pretty_.Pretty<dateTime.TimeZone.Offset> => (zone) => zone.toString(),\n    arbitrary: timeZoneOffsetArbitrary\n  }\n) {}\n\n/**\n * Defines a schema that converts a `number` to a `TimeZone.Offset` instance using the `DateTime.zoneMakeOffset` constructor.\n *\n * @category TimeZone transformations\n * @since 3.10.0\n */\nexport class TimeZoneOffset extends transform(\n  Number$.annotations({ description: \"a number to be decoded into a TimeZone.Offset\" }),\n  TimeZoneOffsetFromSelf,\n  {\n    strict: true,\n    decode: (i) => dateTime.zoneMakeOffset(i),\n    encode: (a) => a.offset\n  }\n).annotations({ identifier: \"TimeZoneOffset\" }) {}\n\nconst timeZoneNamedArbitrary = (): LazyArbitrary<dateTime.TimeZone.Named> => (fc) =>\n  fc.constantFrom(...Intl.supportedValuesOf(\"timeZone\")).map(dateTime.zoneUnsafeMakeNamed)\n\n/**\n * Describes a schema that represents a `TimeZone.Named` instance.\n *\n * @category TimeZone constructors\n * @since 3.10.0\n */\nexport class TimeZoneNamedFromSelf extends declare(\n  dateTime.isTimeZoneNamed,\n  {\n    identifier: \"TimeZoneNamedFromSelf\",\n    description: \"a TimeZone.Named instance\",\n    pretty: (): pretty_.Pretty<dateTime.TimeZone.Named> => (zone) => zone.toString(),\n    arbitrary: timeZoneNamedArbitrary\n  }\n) {}\n\n/**\n * Defines a schema that attempts to convert a `string` to a `TimeZone.Named` instance using the `DateTime.zoneUnsafeMakeNamed` constructor.\n *\n * @category TimeZone transformations\n * @since 3.10.0\n */\nexport class TimeZoneNamed extends transformOrFail(\n  String$.annotations({ description: \"a string to be decoded into a TimeZone.Named\" }),\n  TimeZoneNamedFromSelf,\n  {\n    strict: true,\n    decode: (i, _, ast) =>\n      ParseResult.try({\n        try: () => dateTime.zoneUnsafeMakeNamed(i),\n        catch: () => new ParseResult.Type(ast, i, `Unable to decode ${JSON.stringify(i)} into a TimeZone.Named`)\n      }),\n    encode: (a) => ParseResult.succeed(a.id)\n  }\n).annotations({ identifier: \"TimeZoneNamed\" }) {}\n\n/**\n * @category TimeZone constructors\n * @since 3.10.0\n */\nexport class TimeZoneFromSelf extends Union(TimeZoneOffsetFromSelf, TimeZoneNamedFromSelf) {}\n\n/**\n * Defines a schema that attempts to convert a `string` to a `TimeZone` using the `DateTime.zoneFromString` constructor.\n *\n * @category TimeZone transformations\n * @since 3.10.0\n */\nexport class TimeZone extends transformOrFail(\n  String$.annotations({ description: \"a string to be decoded into a TimeZone\" }),\n  TimeZoneFromSelf,\n  {\n    strict: true,\n    decode: (i, _, ast) =>\n      option_.match(dateTime.zoneFromString(i), {\n        onNone: () =>\n          ParseResult.fail(new ParseResult.Type(ast, i, `Unable to decode ${JSON.stringify(i)} into a TimeZone`)),\n        onSome: ParseResult.succeed\n      }),\n    encode: (a) => ParseResult.succeed(dateTime.zoneToString(a))\n  }\n).annotations({ identifier: \"TimeZone\" }) {}\n\nconst timeZoneArbitrary: LazyArbitrary<dateTime.TimeZone> = (fc) =>\n  fc.oneof(\n    timeZoneOffsetArbitrary()(fc),\n    timeZoneNamedArbitrary()(fc)\n  )\n\n/**\n * Describes a schema that represents a `DateTime.Zoned` instance.\n *\n * @category DateTime.Zoned constructors\n * @since 3.10.0\n */\nexport class DateTimeZonedFromSelf extends declare(\n  (u) => dateTime.isDateTime(u) && dateTime.isZoned(u),\n  {\n    identifier: \"DateTimeZonedFromSelf\",\n    description: \"a DateTime.Zoned instance\",\n    pretty: (): pretty_.Pretty<dateTime.Zoned> => (dateTime) => dateTime.toString(),\n    arbitrary: (): LazyArbitrary<dateTime.Zoned> => (fc) =>\n      fc.tuple(\n        fc.integer({\n          // time zone db supports +/- 1000 years or so\n          min: -31536000000000,\n          max: 31536000000000\n        }),\n        timeZoneArbitrary(fc)\n      ).map(([millis, timeZone]) => dateTime.unsafeMakeZoned(millis, { timeZone })),\n    equivalence: () => dateTime.Equivalence\n  }\n) {}\n\n/**\n * Defines a schema that attempts to convert a `string` to a `DateTime.Zoned` instance.\n *\n * @category DateTime.Zoned transformations\n * @since 3.10.0\n */\nexport class DateTimeZoned extends transformOrFail(\n  String$.annotations({ description: \"a string to be decoded into a DateTime.Zoned\" }),\n  DateTimeZonedFromSelf,\n  {\n    strict: true,\n    decode: (i, _, ast) =>\n      option_.match(dateTime.makeZonedFromString(i), {\n        onNone: () =>\n          ParseResult.fail(new ParseResult.Type(ast, i, `Unable to decode ${JSON.stringify(i)} into a DateTime.Zoned`)),\n        onSome: ParseResult.succeed\n      }),\n    encode: (a) => ParseResult.succeed(dateTime.formatIsoZoned(a))\n  }\n).annotations({ identifier: \"DateTimeZoned\" }) {}\n\n/**\n * @category Option utils\n * @since 3.10.0\n */\nexport type OptionEncoded<I> =\n  | {\n    readonly _tag: \"None\"\n  }\n  | {\n    readonly _tag: \"Some\"\n    readonly value: I\n  }\n\nconst OptionNoneEncoded = Struct({\n  _tag: Literal(\"None\")\n}).annotations({ description: \"NoneEncoded\" })\n\nconst optionSomeEncoded = <Value extends Schema.Any>(value: Value) =>\n  Struct({\n    _tag: Literal(\"Some\"),\n    value\n  }).annotations({ description: `SomeEncoded<${format(value)}>` })\n\nconst optionEncoded = <Value extends Schema.Any>(value: Value) =>\n  Union(\n    OptionNoneEncoded,\n    optionSomeEncoded(value)\n  ).annotations({\n    description: `OptionEncoded<${format(value)}>`\n  })\n\nconst optionDecode = <A>(input: OptionEncoded<A>): option_.Option<A> =>\n  input._tag === \"None\" ? option_.none() : option_.some(input.value)\n\nconst optionArbitrary =\n  <A>(value: LazyArbitrary<A>, ctx: ArbitraryGenerationContext): LazyArbitrary<option_.Option<A>> => (fc) =>\n    fc.oneof(\n      ctx,\n      fc.record({ _tag: fc.constant(\"None\" as const) }),\n      fc.record({ _tag: fc.constant(\"Some\" as const), value: value(fc) })\n    ).map(optionDecode)\n\nconst optionPretty = <A>(value: pretty_.Pretty<A>): pretty_.Pretty<option_.Option<A>> =>\n  option_.match({\n    onNone: () => \"none()\",\n    onSome: (a) => `some(${value(a)})`\n  })\n\nconst optionParse =\n  <A, R>(decodeUnknown: ParseResult.DecodeUnknown<A, R>): ParseResult.DeclarationDecodeUnknown<option_.Option<A>, R> =>\n  (u, options, ast) =>\n    option_.isOption(u) ?\n      option_.isNone(u) ?\n        ParseResult.succeed(option_.none())\n        : toComposite(decodeUnknown(u.value, options), option_.some, ast, u)\n      : ParseResult.fail(new ParseResult.Type(ast, u))\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface OptionFromSelf<Value extends Schema.Any> extends\n  AnnotableDeclare<\n    OptionFromSelf<Value>,\n    option_.Option<Schema.Type<Value>>,\n    option_.Option<Schema.Encoded<Value>>,\n    [Value]\n  >\n{}\n\nconst OptionFromSelf_ = <Value extends Schema.Any>(value: Value): OptionFromSelf<Value> => {\n  return declare(\n    [value],\n    {\n      decode: (value) => optionParse(ParseResult.decodeUnknown(value)),\n      encode: (value) => optionParse(ParseResult.encodeUnknown(value))\n    },\n    {\n      pretty: optionPretty,\n      arbitrary: optionArbitrary,\n      equivalence: option_.getEquivalence\n    }\n  )\n}\n\n/**\n * @category Option transformations\n * @since 3.10.0\n */\nexport const OptionFromSelf = <Value extends Schema.Any>(value: Value): OptionFromSelf<Value> => {\n  return OptionFromSelf_(value).annotations({ description: `Option<${format(value)}>` })\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface Option<Value extends Schema.Any> extends\n  transform<\n    Union<[\n      Struct<{ _tag: Literal<[\"None\"]> }>,\n      Struct<{ _tag: Literal<[\"Some\"]>; value: Value }>\n    ]>,\n    OptionFromSelf<SchemaClass<Schema.Type<Value>>>\n  >\n{}\n\nconst makeNoneEncoded = {\n  _tag: \"None\"\n} as const\n\nconst makeSomeEncoded = <A>(value: A) => ({\n  _tag: \"Some\",\n  value\n} as const)\n\n/**\n * @category Option transformations\n * @since 3.10.0\n */\nexport function Option<Value extends Schema.Any>(value: Value): Option<Value> {\n  const value_ = asSchema(value)\n  const out = transform(\n    optionEncoded(value_),\n    OptionFromSelf(typeSchema(value_)),\n    {\n      strict: true,\n      decode: (i) => optionDecode(i),\n      encode: (a) =>\n        option_.match(a, {\n          onNone: () => makeNoneEncoded,\n          onSome: makeSomeEncoded\n        })\n    }\n  )\n  return out as any\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface OptionFromNullOr<Value extends Schema.Any>\n  extends transform<NullOr<Value>, OptionFromSelf<SchemaClass<Schema.Type<Value>>>>\n{}\n\n/**\n * @category Option transformations\n * @since 3.10.0\n */\nexport function OptionFromNullOr<Value extends Schema.Any>(value: Value): OptionFromNullOr<Value> {\n  return transform(NullOr(value), OptionFromSelf(typeSchema(asSchema(value))), {\n    strict: true,\n    decode: (i) => option_.fromNullable(i),\n    encode: (a) => option_.getOrNull(a)\n  })\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface OptionFromNullishOr<Value extends Schema.Any>\n  extends transform<NullishOr<Value>, OptionFromSelf<SchemaClass<Schema.Type<Value>>>>\n{}\n\n/**\n * @category Option transformations\n * @since 3.10.0\n */\nexport function OptionFromNullishOr<Value extends Schema.Any>(\n  value: Value,\n  onNoneEncoding: null | undefined\n): OptionFromNullishOr<Value> {\n  return transform(\n    NullishOr(value),\n    OptionFromSelf(typeSchema(asSchema(value))),\n    {\n      strict: true,\n      decode: (i) => option_.fromNullable(i),\n      encode: onNoneEncoding === null ?\n        (a) => option_.getOrNull(a) :\n        (a) => option_.getOrUndefined(a)\n    }\n  )\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface OptionFromUndefinedOr<Value extends Schema.Any>\n  extends transform<UndefinedOr<Value>, OptionFromSelf<SchemaClass<Schema.Type<Value>>>>\n{}\n\n/**\n * @category Option transformations\n * @since 3.10.0\n */\nexport function OptionFromUndefinedOr<Value extends Schema.Any>(value: Value): OptionFromUndefinedOr<Value> {\n  return transform(UndefinedOr(value), OptionFromSelf(typeSchema(asSchema(value))), {\n    strict: true,\n    decode: (i) => option_.fromNullable(i),\n    encode: (a) => option_.getOrUndefined(a)\n  })\n}\n\n/**\n * Transforms strings into an Option type, effectively filtering out empty or\n * whitespace-only strings by trimming them and checking their length. Returns\n * `none` for invalid inputs and `some` for valid non-empty strings.\n *\n * @example\n * ```ts\n * import { Schema } from \"effect\"\n *\n * console.log(Schema.decodeSync(Schema.OptionFromNonEmptyTrimmedString)(\"\")) // Option.none()\n * console.log(Schema.decodeSync(Schema.OptionFromNonEmptyTrimmedString)(\" a \")) // Option.some(\"a\")\n * console.log(Schema.decodeSync(Schema.OptionFromNonEmptyTrimmedString)(\"a\")) // Option.some(\"a\")\n * ```\n *\n * @category Option transformations\n * @since 3.10.0\n */\nexport class OptionFromNonEmptyTrimmedString extends transform(String$, OptionFromSelf(NonEmptyTrimmedString), {\n  strict: true,\n  decode: (i) => option_.filter(option_.some(i.trim()), string_.isNonEmpty),\n  encode: (a) => option_.getOrElse(a, () => \"\")\n}) {}\n\n/**\n * @category Either utils\n * @since 3.10.0\n */\nexport type RightEncoded<IA> = {\n  readonly _tag: \"Right\"\n  readonly right: IA\n}\n\n/**\n * @category Either utils\n * @since 3.10.0\n */\nexport type LeftEncoded<IE> = {\n  readonly _tag: \"Left\"\n  readonly left: IE\n}\n\n/**\n * @category Either utils\n * @since 3.10.0\n */\nexport type EitherEncoded<IR, IL> = RightEncoded<IR> | LeftEncoded<IL>\n\nconst rightEncoded = <Right extends Schema.All>(right: Right) =>\n  Struct({\n    _tag: Literal(\"Right\"),\n    right\n  }).annotations({ description: `RightEncoded<${format(right)}>` })\n\nconst leftEncoded = <Left extends Schema.All>(left: Left) =>\n  Struct({\n    _tag: Literal(\"Left\"),\n    left\n  }).annotations({ description: `LeftEncoded<${format(left)}>` })\n\nconst eitherEncoded = <Right extends Schema.All, Left extends Schema.All>(\n  right: Right,\n  left: Left\n) =>\n  Union(rightEncoded(right), leftEncoded(left)).annotations({\n    description: `EitherEncoded<${format(left)}, ${format(right)}>`\n  })\n\nconst eitherDecode = <R, L>(input: EitherEncoded<R, L>): either_.Either<R, L> =>\n  input._tag === \"Left\" ? either_.left(input.left) : either_.right(input.right)\n\nconst eitherArbitrary = <R, L>(\n  right: LazyArbitrary<R>,\n  left: LazyArbitrary<L>\n): LazyArbitrary<either_.Either<R, L>> =>\n(fc) =>\n  fc.oneof(\n    fc.record({ _tag: fc.constant(\"Left\" as const), left: left(fc) }),\n    fc.record({ _tag: fc.constant(\"Right\" as const), right: right(fc) })\n  ).map(eitherDecode)\n\nconst eitherPretty = <R, L>(\n  right: pretty_.Pretty<R>,\n  left: pretty_.Pretty<L>\n): pretty_.Pretty<either_.Either<R, L>> =>\n  either_.match({\n    onLeft: (e) => `left(${left(e)})`,\n    onRight: (a) => `right(${right(a)})`\n  })\n\nconst eitherParse = <RR, R, LR, L>(\n  parseRight: ParseResult.DecodeUnknown<R, RR>,\n  decodeUnknownLeft: ParseResult.DecodeUnknown<L, LR>\n): ParseResult.DeclarationDecodeUnknown<either_.Either<R, L>, LR | RR> =>\n(u, options, ast) =>\n  either_.isEither(u) ?\n    either_.match(u, {\n      onLeft: (left) => toComposite(decodeUnknownLeft(left, options), either_.left, ast, u),\n      onRight: (right) => toComposite(parseRight(right, options), either_.right, ast, u)\n    })\n    : ParseResult.fail(new ParseResult.Type(ast, u))\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface EitherFromSelf<R extends Schema.All, L extends Schema.All> extends\n  AnnotableDeclare<\n    EitherFromSelf<R, L>,\n    either_.Either<Schema.Type<R>, Schema.Type<L>>,\n    either_.Either<Schema.Encoded<R>, Schema.Encoded<L>>,\n    [R, L]\n  >\n{}\n\n/**\n * @category Either transformations\n * @since 3.10.0\n */\nexport const EitherFromSelf = <R extends Schema.All, L extends Schema.All>({ left, right }: {\n  readonly left: L\n  readonly right: R\n}): EitherFromSelf<R, L> => {\n  return declare(\n    [right, left],\n    {\n      decode: (right, left) => eitherParse(ParseResult.decodeUnknown(right), ParseResult.decodeUnknown(left)),\n      encode: (right, left) => eitherParse(ParseResult.encodeUnknown(right), ParseResult.encodeUnknown(left))\n    },\n    {\n      description: `Either<${format(right)}, ${format(left)}>`,\n      pretty: eitherPretty,\n      arbitrary: eitherArbitrary,\n      equivalence: (right, left) => either_.getEquivalence({ left, right })\n    }\n  )\n}\n\nconst makeLeftEncoded = <E>(left: E) => (({\n  _tag: \"Left\",\n  left\n}) as const)\nconst makeRightEncoded = <A>(right: A) => (({\n  _tag: \"Right\",\n  right\n}) as const)\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface Either<Right extends Schema.All, Left extends Schema.All> extends\n  transform<\n    Union<[\n      Struct<{\n        _tag: Literal<[\"Right\"]>\n        right: Right\n      }>,\n      Struct<{\n        _tag: Literal<[\"Left\"]>\n        left: Left\n      }>\n    ]>,\n    EitherFromSelf<SchemaClass<Schema.Type<Right>>, SchemaClass<Schema.Type<Left>>>\n  >\n{}\n\n/**\n * @category Either transformations\n * @since 3.10.0\n */\nexport const Either = <R extends Schema.All, L extends Schema.All>({ left, right }: {\n  readonly left: L\n  readonly right: R\n}): Either<R, L> => {\n  const right_ = asSchema(right)\n  const left_ = asSchema(left)\n  const out = transform(\n    eitherEncoded(right_, left_),\n    EitherFromSelf({ left: typeSchema(left_), right: typeSchema(right_) }),\n    {\n      strict: true,\n      decode: (i) => eitherDecode(i),\n      encode: (a) =>\n        either_.match(a, {\n          onLeft: makeLeftEncoded,\n          onRight: makeRightEncoded\n        })\n    }\n  )\n  return out as any\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface EitherFromUnion<Right extends Schema.All, Left extends Schema.All> extends\n  transform<\n    Union<[\n      transform<Right, Struct<{ _tag: Literal<[\"Right\"]>; right: SchemaClass<Schema.Type<Right>> }>>,\n      transform<Left, Struct<{ _tag: Literal<[\"Left\"]>; right: SchemaClass<Schema.Type<Left>> }>>\n    ]>,\n    EitherFromSelf<SchemaClass<Schema.Type<Right>>, SchemaClass<Schema.Type<Left>>>\n  >\n{}\n\n/**\n * @example\n * ```ts\n * import * as Schema from \"effect/Schema\"\n *\n * // Schema<string | number, Either<string, number>>\n * Schema.EitherFromUnion({ left: Schema.String, right: Schema.Number })\n * ```\n *\n * @category Either transformations\n * @since 3.10.0\n */\nexport const EitherFromUnion = <Right extends Schema.All, Left extends Schema.All>({ left, right }: {\n  readonly left: Left\n  readonly right: Right\n}): EitherFromUnion<Right, Left> => {\n  const right_ = asSchema(right)\n  const left_ = asSchema(left)\n  const toright = typeSchema(right_)\n  const toleft = typeSchema(left_)\n  const fromRight = transform(right_, rightEncoded(toright), {\n    strict: true,\n    decode: (i) => makeRightEncoded(i),\n    encode: (a) => a.right\n  })\n  const fromLeft = transform(left_, leftEncoded(toleft), {\n    strict: true,\n    decode: (i) => makeLeftEncoded(i),\n    encode: (a) => a.left\n  })\n  const out = transform(\n    Union(fromRight, fromLeft),\n    EitherFromSelf({ left: toleft, right: toright }),\n    {\n      strict: true,\n      decode: (i) => i._tag === \"Left\" ? either_.left(i.left) : either_.right(i.right),\n      encode: (a) =>\n        either_.match(a, {\n          onLeft: makeLeftEncoded,\n          onRight: makeRightEncoded\n        })\n    }\n  )\n  return out as any\n}\n\nconst mapArbitrary = <K, V>(\n  key: LazyArbitrary<K>,\n  value: LazyArbitrary<V>,\n  ctx: ArbitraryGenerationContext\n): LazyArbitrary<Map<K, V>> => {\n  return (fc) => {\n    const items = fc.array(fc.tuple(key(fc), value(fc)))\n    return (ctx.depthIdentifier !== undefined ? fc.oneof(ctx, fc.constant([]), items) : items).map((as) => new Map(as))\n  }\n}\n\nconst readonlyMapPretty = <K, V>(\n  key: pretty_.Pretty<K>,\n  value: pretty_.Pretty<V>\n): pretty_.Pretty<ReadonlyMap<K, V>> =>\n(map) =>\n  `new Map([${\n    Array.from(map.entries())\n      .map(([k, v]) => `[${key(k)}, ${value(v)}]`)\n      .join(\", \")\n  }])`\n\nconst readonlyMapEquivalence = <K, V>(\n  key: Equivalence.Equivalence<K>,\n  value: Equivalence.Equivalence<V>\n): Equivalence.Equivalence<ReadonlyMap<K, V>> => {\n  const arrayEquivalence = array_.getEquivalence(\n    Equivalence.make<[K, V]>(([ka, va], [kb, vb]) => key(ka, kb) && value(va, vb))\n  )\n  return Equivalence.make((a, b) => arrayEquivalence(Array.from(a.entries()), Array.from(b.entries())))\n}\n\nconst readonlyMapParse = <R, K, V>(\n  decodeUnknown: ParseResult.DecodeUnknown<ReadonlyArray<readonly [K, V]>, R>\n): ParseResult.DeclarationDecodeUnknown<ReadonlyMap<K, V>, R> =>\n(u, options, ast) =>\n  Predicate.isMap(u) ?\n    toComposite(decodeUnknown(Array.from(u.entries()), options), (as) => new Map(as), ast, u)\n    : ParseResult.fail(new ParseResult.Type(ast, u))\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface ReadonlyMapFromSelf<K extends Schema.Any, V extends Schema.Any> extends\n  AnnotableDeclare<\n    ReadonlyMapFromSelf<K, V>,\n    ReadonlyMap<Schema.Type<K>, Schema.Type<V>>,\n    ReadonlyMap<Schema.Encoded<K>, Schema.Encoded<V>>,\n    [K, V]\n  >\n{}\n\nconst mapFromSelf_ = <K extends Schema.Any, V extends Schema.Any>(\n  key: K,\n  value: V,\n  description: string\n): ReadonlyMapFromSelf<K, V> =>\n  declare(\n    [key, value],\n    {\n      decode: (Key, Value) => readonlyMapParse(ParseResult.decodeUnknown(Array$(Tuple(Key, Value)))),\n      encode: (Key, Value) => readonlyMapParse(ParseResult.encodeUnknown(Array$(Tuple(Key, Value))))\n    },\n    {\n      description,\n      pretty: readonlyMapPretty,\n      arbitrary: mapArbitrary,\n      equivalence: readonlyMapEquivalence\n    }\n  )\n\n/**\n * @category ReadonlyMap\n * @since 3.10.0\n */\nexport const ReadonlyMapFromSelf = <K extends Schema.Any, V extends Schema.Any>({ key, value }: {\n  readonly key: K\n  readonly value: V\n}): ReadonlyMapFromSelf<K, V> => mapFromSelf_(key, value, `ReadonlyMap<${format(key)}, ${format(value)}>`)\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface MapFromSelf<K extends Schema.Any, V extends Schema.Any> extends\n  AnnotableDeclare<\n    MapFromSelf<K, V>,\n    Map<Schema.Type<K>, Schema.Type<V>>,\n    ReadonlyMap<Schema.Encoded<K>, Schema.Encoded<V>>,\n    [K, V]\n  >\n{}\n\n/**\n * @category Map\n * @since 3.10.0\n */\nexport const MapFromSelf = <K extends Schema.Any, V extends Schema.Any>({ key, value }: {\n  readonly key: K\n  readonly value: V\n}): MapFromSelf<K, V> => mapFromSelf_(key, value, `Map<${format(key)}, ${format(value)}>`) as any\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface ReadonlyMap$<K extends Schema.Any, V extends Schema.Any>\n  extends transform<Array$<Tuple2<K, V>>, ReadonlyMapFromSelf<SchemaClass<Schema.Type<K>>, SchemaClass<Schema.Type<V>>>>\n{}\n\n/**\n * @category ReadonlyMap transformations\n * @since 3.10.0\n */\nexport function ReadonlyMap<K extends Schema.Any, V extends Schema.Any>({ key, value }: {\n  readonly key: K\n  readonly value: V\n}): ReadonlyMap$<K, V> {\n  return transform(\n    Array$(Tuple(key, value)),\n    ReadonlyMapFromSelf({ key: typeSchema(asSchema(key)), value: typeSchema(asSchema(value)) }),\n    {\n      strict: true,\n      decode: (i) => new Map(i),\n      encode: (a) => Array.from(a.entries())\n    }\n  )\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface Map$<K extends Schema.Any, V extends Schema.Any>\n  extends transform<Array$<Tuple2<K, V>>, MapFromSelf<SchemaClass<Schema.Type<K>>, SchemaClass<Schema.Type<V>>>>\n{}\n\n/** @ignore */\nfunction map<K extends Schema.Any, V extends Schema.Any>({ key, value }: {\n  readonly key: K\n  readonly value: V\n}): Map$<K, V> {\n  return transform(\n    Array$(Tuple(key, value)),\n    MapFromSelf({ key: typeSchema(asSchema(key)), value: typeSchema(asSchema(value)) }),\n    {\n      strict: true,\n      decode: (i) => new Map(i),\n      encode: (a) => Array.from(a.entries())\n    }\n  )\n}\n\nexport {\n  /**\n   * @category Map transformations\n   * @since 3.10.0\n   */\n  map as Map\n}\n\n/**\n * @category ReadonlyMap transformations\n * @since 3.10.0\n */\nexport const ReadonlyMapFromRecord = <KA, KR, VA, VI, VR>({ key, value }: {\n  key: Schema<KA, string, KR>\n  value: Schema<VA, VI, VR>\n}): SchemaClass<ReadonlyMap<KA, VA>, { readonly [x: string]: VI }, KR | VR> =>\n  transform(\n    Record({ key: encodedBoundSchema(key), value }).annotations({\n      description: \"a record to be decoded into a ReadonlyMap\"\n    }),\n    ReadonlyMapFromSelf({ key, value: typeSchema(value) }),\n    {\n      strict: true,\n      decode: (i) => new Map(Object.entries(i)),\n      encode: (a) => Object.fromEntries(a)\n    }\n  )\n\n/**\n * @category Map transformations\n * @since 3.10.0\n */\nexport const MapFromRecord = <KA, KR, VA, VI, VR>({ key, value }: {\n  key: Schema<KA, string, KR>\n  value: Schema<VA, VI, VR>\n}): SchemaClass<Map<KA, VA>, { readonly [x: string]: VI }, KR | VR> =>\n  transform(\n    Record({ key: encodedBoundSchema(key), value }).annotations({\n      description: \"a record to be decoded into a Map\"\n    }),\n    MapFromSelf({ key, value: typeSchema(value) }),\n    {\n      strict: true,\n      decode: (i) => new Map(Object.entries(i)),\n      encode: (a) => Object.fromEntries(a)\n    }\n  )\n\nconst setArbitrary =\n  <A>(item: LazyArbitrary<A>, ctx: ArbitraryGenerationContext): LazyArbitrary<ReadonlySet<A>> => (fc) => {\n    const items = fc.array(item(fc))\n    return (ctx.depthIdentifier !== undefined ? fc.oneof(ctx, fc.constant([]), items) : items).map((as) => new Set(as))\n  }\n\nconst readonlySetPretty = <A>(item: pretty_.Pretty<A>): pretty_.Pretty<ReadonlySet<A>> => (set) =>\n  `new Set([${Array.from(set.values()).map((a) => item(a)).join(\", \")}])`\n\nconst readonlySetEquivalence = <A>(\n  item: Equivalence.Equivalence<A>\n): Equivalence.Equivalence<ReadonlySet<A>> => {\n  const arrayEquivalence = array_.getEquivalence(item)\n  return Equivalence.make((a, b) => arrayEquivalence(Array.from(a.values()), Array.from(b.values())))\n}\n\nconst readonlySetParse = <A, R>(\n  decodeUnknown: ParseResult.DecodeUnknown<ReadonlyArray<A>, R>\n): ParseResult.DeclarationDecodeUnknown<ReadonlySet<A>, R> =>\n(u, options, ast) =>\n  Predicate.isSet(u) ?\n    toComposite(decodeUnknown(Array.from(u.values()), options), (as) => new Set(as), ast, u)\n    : ParseResult.fail(new ParseResult.Type(ast, u))\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface ReadonlySetFromSelf<Value extends Schema.Any> extends\n  AnnotableDeclare<\n    ReadonlySetFromSelf<Value>,\n    ReadonlySet<Schema.Type<Value>>,\n    ReadonlySet<Schema.Encoded<Value>>,\n    [Value]\n  >\n{}\n\nconst setFromSelf_ = <Value extends Schema.Any>(value: Value, description: string): ReadonlySetFromSelf<Value> =>\n  declare(\n    [value],\n    {\n      decode: (item) => readonlySetParse(ParseResult.decodeUnknown(Array$(item))),\n      encode: (item) => readonlySetParse(ParseResult.encodeUnknown(Array$(item)))\n    },\n    {\n      description,\n      pretty: readonlySetPretty,\n      arbitrary: setArbitrary,\n      equivalence: readonlySetEquivalence\n    }\n  )\n\n/**\n * @category ReadonlySet\n * @since 3.10.0\n */\nexport const ReadonlySetFromSelf = <Value extends Schema.Any>(value: Value): ReadonlySetFromSelf<Value> =>\n  setFromSelf_(value, `ReadonlySet<${format(value)}>`)\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface SetFromSelf<Value extends Schema.Any> extends\n  AnnotableDeclare<\n    SetFromSelf<Value>,\n    Set<Schema.Type<Value>>,\n    ReadonlySet<Schema.Encoded<Value>>,\n    [Value]\n  >\n{}\n\n/**\n * @category Set\n * @since 3.10.0\n */\nexport const SetFromSelf = <Value extends Schema.Any>(value: Value): SetFromSelf<Value> =>\n  setFromSelf_(value, `Set<${format(value)}>`) as any\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface ReadonlySet$<Value extends Schema.Any>\n  extends transform<Array$<Value>, ReadonlySetFromSelf<SchemaClass<Schema.Type<Value>>>>\n{}\n\n/**\n * @category ReadonlySet transformations\n * @since 3.10.0\n */\nexport function ReadonlySet<Value extends Schema.Any>(value: Value): ReadonlySet$<Value> {\n  return transform(\n    Array$(value),\n    ReadonlySetFromSelf(typeSchema(asSchema(value))),\n    {\n      strict: true,\n      decode: (i) => new Set(i),\n      encode: (a) => Array.from(a)\n    }\n  )\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface Set$<Value extends Schema.Any>\n  extends transform<Array$<Value>, SetFromSelf<SchemaClass<Schema.Type<Value>>>>\n{}\n\n/** @ignore */\nfunction set<Value extends Schema.Any>(value: Value): Set$<Value> {\n  return transform(\n    Array$(value),\n    SetFromSelf(typeSchema(asSchema(value))),\n    {\n      strict: true,\n      decode: (i) => new Set(i),\n      encode: (a) => Array.from(a)\n    }\n  )\n}\n\nexport {\n  /**\n   * @category Set transformations\n   * @since 3.10.0\n   */\n  set as Set\n}\n\nconst bigDecimalPretty = (): pretty_.Pretty<bigDecimal_.BigDecimal> => (val) =>\n  `BigDecimal(${bigDecimal_.format(bigDecimal_.normalize(val))})`\n\nconst bigDecimalArbitrary = (): LazyArbitrary<bigDecimal_.BigDecimal> => (fc) =>\n  fc.tuple(fc.bigInt(), fc.integer({ min: 0, max: 18 }))\n    .map(([value, scale]) => bigDecimal_.make(value, scale))\n\n/**\n * @category BigDecimal constructors\n * @since 3.10.0\n */\nexport class BigDecimalFromSelf extends declare(\n  bigDecimal_.isBigDecimal,\n  {\n    identifier: \"BigDecimalFromSelf\",\n    pretty: bigDecimalPretty,\n    arbitrary: bigDecimalArbitrary,\n    equivalence: () => bigDecimal_.Equivalence\n  }\n) {}\n\n/**\n * @category BigDecimal transformations\n * @since 3.10.0\n */\nexport class BigDecimal extends transformOrFail(\n  String$.annotations({ description: \"a string to be decoded into a BigDecimal\" }),\n  BigDecimalFromSelf,\n  {\n    strict: true,\n    decode: (i, _, ast) =>\n      bigDecimal_.fromString(i).pipe(option_.match({\n        onNone: () =>\n          ParseResult.fail(new ParseResult.Type(ast, i, `Unable to decode ${JSON.stringify(i)} into a BigDecimal`)),\n        onSome: (val) => ParseResult.succeed(bigDecimal_.normalize(val))\n      })),\n    encode: (a) => ParseResult.succeed(bigDecimal_.format(bigDecimal_.normalize(a)))\n  }\n).annotations({ identifier: \"BigDecimal\" }) {}\n\n/**\n * A schema that transforms a `number` into a `BigDecimal`.\n * When encoding, this Schema will produce incorrect results if the BigDecimal exceeds the 64-bit range of a number.\n *\n * @category BigDecimal transformations\n * @since 3.10.0\n */\nexport class BigDecimalFromNumber extends transform(\n  Number$.annotations({ description: \"a number to be decoded into a BigDecimal\" }),\n  BigDecimalFromSelf,\n  {\n    strict: true,\n    decode: (i) => bigDecimal_.unsafeFromNumber(i),\n    encode: (a) => bigDecimal_.unsafeToNumber(a)\n  }\n).annotations({ identifier: \"BigDecimalFromNumber\" }) {}\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const GreaterThanBigDecimalSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/GreaterThanBigDecimal\")\n\n/**\n * @category BigDecimal filters\n * @since 3.10.0\n */\nexport const greaterThanBigDecimal =\n  <S extends Schema.Any>(min: bigDecimal_.BigDecimal, annotations?: Annotations.Filter<Schema.Type<S>>) =>\n  <A extends bigDecimal_.BigDecimal>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> => {\n    const formatted = bigDecimal_.format(min)\n    return self.pipe(\n      filter((a) => bigDecimal_.greaterThan(a, min), {\n        schemaId: GreaterThanBigDecimalSchemaId,\n        [GreaterThanBigDecimalSchemaId]: { min },\n        title: `greaterThanBigDecimal(${formatted})`,\n        description: `a BigDecimal greater than ${formatted}`,\n        ...annotations\n      })\n    )\n  }\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const GreaterThanOrEqualToBigDecimalSchemaId: unique symbol = Symbol.for(\n  \"effect/schema/GreaterThanOrEqualToBigDecimal\"\n)\n\n/**\n * @category BigDecimal filters\n * @since 3.10.0\n */\nexport const greaterThanOrEqualToBigDecimal =\n  <S extends Schema.Any>(min: bigDecimal_.BigDecimal, annotations?: Annotations.Filter<Schema.Type<S>>) =>\n  <A extends bigDecimal_.BigDecimal>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> => {\n    const formatted = bigDecimal_.format(min)\n    return self.pipe(\n      filter((a) => bigDecimal_.greaterThanOrEqualTo(a, min), {\n        schemaId: GreaterThanOrEqualToBigDecimalSchemaId,\n        [GreaterThanOrEqualToBigDecimalSchemaId]: { min },\n        title: `greaterThanOrEqualToBigDecimal(${formatted})`,\n        description: `a BigDecimal greater than or equal to ${formatted}`,\n        ...annotations\n      })\n    )\n  }\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LessThanBigDecimalSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/LessThanBigDecimal\")\n\n/**\n * @category BigDecimal filters\n * @since 3.10.0\n */\nexport const lessThanBigDecimal =\n  <S extends Schema.Any>(max: bigDecimal_.BigDecimal, annotations?: Annotations.Filter<Schema.Type<S>>) =>\n  <A extends bigDecimal_.BigDecimal>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> => {\n    const formatted = bigDecimal_.format(max)\n    return self.pipe(\n      filter((a) => bigDecimal_.lessThan(a, max), {\n        schemaId: LessThanBigDecimalSchemaId,\n        [LessThanBigDecimalSchemaId]: { max },\n        title: `lessThanBigDecimal(${formatted})`,\n        description: `a BigDecimal less than ${formatted}`,\n        ...annotations\n      })\n    )\n  }\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LessThanOrEqualToBigDecimalSchemaId: unique symbol = Symbol.for(\n  \"effect/schema/LessThanOrEqualToBigDecimal\"\n)\n\n/**\n * @category BigDecimal filters\n * @since 3.10.0\n */\nexport const lessThanOrEqualToBigDecimal =\n  <S extends Schema.Any>(max: bigDecimal_.BigDecimal, annotations?: Annotations.Filter<Schema.Type<S>>) =>\n  <A extends bigDecimal_.BigDecimal>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> => {\n    const formatted = bigDecimal_.format(max)\n    return self.pipe(\n      filter((a) => bigDecimal_.lessThanOrEqualTo(a, max), {\n        schemaId: LessThanOrEqualToBigDecimalSchemaId,\n        [LessThanOrEqualToBigDecimalSchemaId]: { max },\n        title: `lessThanOrEqualToBigDecimal(${formatted})`,\n        description: `a BigDecimal less than or equal to ${formatted}`,\n        ...annotations\n      })\n    )\n  }\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const PositiveBigDecimalSchemaId: unique symbol = Symbol.for(\n  \"effect/schema/PositiveBigDecimal\"\n)\n\n/**\n * @category BigDecimal filters\n * @since 3.10.0\n */\nexport const positiveBigDecimal =\n  <S extends Schema.Any>(annotations?: Annotations.Filter<Schema.Type<S>>) =>\n  <A extends bigDecimal_.BigDecimal>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n    self.pipe(\n      filter((a) => bigDecimal_.isPositive(a), {\n        schemaId: PositiveBigDecimalSchemaId,\n        title: \"positiveBigDecimal\",\n        description: `a positive BigDecimal`,\n        ...annotations\n      })\n    )\n\n/**\n * @category BigDecimal constructors\n * @since 3.10.0\n */\nexport const PositiveBigDecimalFromSelf: filter<Schema<bigDecimal_.BigDecimal>> = BigDecimalFromSelf.pipe(\n  positiveBigDecimal({ identifier: \"PositiveBigDecimalFromSelf\" })\n)\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const NonNegativeBigDecimalSchemaId: unique symbol = Symbol.for(\n  \"effect/schema/NonNegativeBigDecimal\"\n)\n\n/**\n * @category BigDecimal filters\n * @since 3.10.0\n */\nexport const nonNegativeBigDecimal =\n  <S extends Schema.Any>(annotations?: Annotations.Filter<Schema.Type<S>>) =>\n  <A extends bigDecimal_.BigDecimal>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n    self.pipe(\n      filter((a) => a.value >= 0n, {\n        schemaId: NonNegativeBigDecimalSchemaId,\n        title: \"nonNegativeBigDecimal\",\n        description: `a non-negative BigDecimal`,\n        ...annotations\n      })\n    )\n\n/**\n * @category BigDecimal constructors\n * @since 3.10.0\n */\nexport const NonNegativeBigDecimalFromSelf: filter<Schema<bigDecimal_.BigDecimal>> = BigDecimalFromSelf.pipe(\n  nonNegativeBigDecimal({ identifier: \"NonNegativeBigDecimalFromSelf\" })\n)\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const NegativeBigDecimalSchemaId: unique symbol = Symbol.for(\n  \"effect/schema/NegativeBigDecimal\"\n)\n\n/**\n * @category BigDecimal filters\n * @since 3.10.0\n */\nexport const negativeBigDecimal =\n  <S extends Schema.Any>(annotations?: Annotations.Filter<Schema.Type<S>>) =>\n  <A extends bigDecimal_.BigDecimal>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n    self.pipe(\n      filter((a) => bigDecimal_.isNegative(a), {\n        schemaId: NegativeBigDecimalSchemaId,\n        title: \"negativeBigDecimal\",\n        description: `a negative BigDecimal`,\n        ...annotations\n      })\n    )\n\n/**\n * @category BigDecimal constructors\n * @since 3.10.0\n */\nexport const NegativeBigDecimalFromSelf: filter<Schema<bigDecimal_.BigDecimal>> = BigDecimalFromSelf.pipe(\n  negativeBigDecimal({ identifier: \"NegativeBigDecimalFromSelf\" })\n)\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const NonPositiveBigDecimalSchemaId: unique symbol = Symbol.for(\n  \"effect/schema/NonPositiveBigDecimal\"\n)\n\n/**\n * @category BigDecimal filters\n * @since 3.10.0\n */\nexport const nonPositiveBigDecimal =\n  <S extends Schema.Any>(annotations?: Annotations.Filter<Schema.Type<S>>) =>\n  <A extends bigDecimal_.BigDecimal>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> =>\n    self.pipe(\n      filter((a) => a.value <= 0n, {\n        schemaId: NonPositiveBigDecimalSchemaId,\n        title: \"nonPositiveBigDecimal\",\n        description: `a non-positive BigDecimal`,\n        ...annotations\n      })\n    )\n\n/**\n * @category BigDecimal constructors\n * @since 3.10.0\n */\nexport const NonPositiveBigDecimalFromSelf: filter<Schema<bigDecimal_.BigDecimal>> = BigDecimalFromSelf.pipe(\n  nonPositiveBigDecimal({ identifier: \"NonPositiveBigDecimalFromSelf\" })\n)\n\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const BetweenBigDecimalSchemaId: unique symbol = Symbol.for(\"effect/SchemaId/BetweenBigDecimal\")\n\n/**\n * @category BigDecimal filters\n * @since 3.10.0\n */\nexport const betweenBigDecimal = <S extends Schema.Any>(\n  minimum: bigDecimal_.BigDecimal,\n  maximum: bigDecimal_.BigDecimal,\n  annotations?: Annotations.Filter<Schema.Type<S>>\n) =>\n<A extends bigDecimal_.BigDecimal>(self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>): filter<S> => {\n  const formattedMinimum = bigDecimal_.format(minimum)\n  const formattedMaximum = bigDecimal_.format(maximum)\n  return self.pipe(\n    filter((a) => bigDecimal_.between(a, { minimum, maximum }), {\n      schemaId: BetweenBigDecimalSchemaId,\n      [BetweenBigDecimalSchemaId]: { maximum, minimum },\n      title: `betweenBigDecimal(${formattedMinimum}, ${formattedMaximum})`,\n      description: `a BigDecimal between ${formattedMinimum} and ${formattedMaximum}`,\n      ...annotations\n    })\n  )\n}\n\n/**\n * Clamps a `BigDecimal` between a minimum and a maximum value.\n *\n * @category BigDecimal transformations\n * @since 3.10.0\n */\nexport const clampBigDecimal =\n  (minimum: bigDecimal_.BigDecimal, maximum: bigDecimal_.BigDecimal) =>\n  <S extends Schema.Any, A extends bigDecimal_.BigDecimal>(\n    self: S & Schema<A, Schema.Encoded<S>, Schema.Context<S>>\n  ): transform<S, filter<SchemaClass<A>>> =>\n    transform(\n      self,\n      self.pipe(typeSchema, betweenBigDecimal(minimum, maximum)),\n      {\n        strict: false,\n        decode: (i) => bigDecimal_.clamp(i, { minimum, maximum }),\n        encode: identity\n      }\n    )\n\nconst chunkArbitrary =\n  <A>(item: LazyArbitrary<A>, ctx: ArbitraryGenerationContext): LazyArbitrary<chunk_.Chunk<A>> => (fc) => {\n    const items = fc.array(item(fc))\n    return (ctx.depthIdentifier !== undefined ? fc.oneof(ctx, fc.constant([]), items) : items).map(chunk_.fromIterable)\n  }\n\nconst chunkPretty = <A>(item: pretty_.Pretty<A>): pretty_.Pretty<chunk_.Chunk<A>> => (c) =>\n  `Chunk(${chunk_.toReadonlyArray(c).map(item).join(\", \")})`\n\nconst chunkParse = <A, R>(\n  decodeUnknown: ParseResult.DecodeUnknown<ReadonlyArray<A>, R>\n): ParseResult.DeclarationDecodeUnknown<chunk_.Chunk<A>, R> =>\n(u, options, ast) =>\n  chunk_.isChunk(u) ?\n    chunk_.isEmpty(u) ?\n      ParseResult.succeed(chunk_.empty())\n      : toComposite(decodeUnknown(chunk_.toReadonlyArray(u), options), chunk_.fromIterable, ast, u)\n    : ParseResult.fail(new ParseResult.Type(ast, u))\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface ChunkFromSelf<Value extends Schema.Any> extends\n  AnnotableDeclare<\n    ChunkFromSelf<Value>,\n    chunk_.Chunk<Schema.Type<Value>>,\n    chunk_.Chunk<Schema.Encoded<Value>>,\n    [Value]\n  >\n{}\n\n/**\n * @category Chunk\n * @since 3.10.0\n */\nexport const ChunkFromSelf = <Value extends Schema.Any>(value: Value): ChunkFromSelf<Value> => {\n  return declare(\n    [value],\n    {\n      decode: (item) => chunkParse(ParseResult.decodeUnknown(Array$(item))),\n      encode: (item) => chunkParse(ParseResult.encodeUnknown(Array$(item)))\n    },\n    {\n      description: `Chunk<${format(value)}>`,\n      pretty: chunkPretty,\n      arbitrary: chunkArbitrary,\n      equivalence: chunk_.getEquivalence\n    }\n  )\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface Chunk<Value extends Schema.Any>\n  extends transform<Array$<Value>, ChunkFromSelf<SchemaClass<Schema.Type<Value>>>>\n{}\n\n/**\n * @category Chunk transformations\n * @since 3.10.0\n */\nexport function Chunk<Value extends Schema.Any>(value: Value): Chunk<Value> {\n  return transform(\n    Array$(value),\n    ChunkFromSelf(typeSchema(asSchema(value))),\n    {\n      strict: true,\n      decode: (i) => i.length === 0 ? chunk_.empty() : chunk_.fromIterable(i),\n      encode: (a) => chunk_.toReadonlyArray(a)\n    }\n  )\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface NonEmptyChunkFromSelf<Value extends Schema.Any> extends\n  AnnotableDeclare<\n    NonEmptyChunkFromSelf<Value>,\n    chunk_.NonEmptyChunk<Schema.Type<Value>>,\n    chunk_.NonEmptyChunk<Schema.Encoded<Value>>,\n    [Value]\n  >\n{}\n\nconst nonEmptyChunkArbitrary = <A>(item: LazyArbitrary<A>): LazyArbitrary<chunk_.NonEmptyChunk<A>> => (fc) =>\n  fastCheck_.array(item(fc), { minLength: 1 }).map((as) => chunk_.unsafeFromNonEmptyArray(as as any))\n\nconst nonEmptyChunkPretty = <A>(item: pretty_.Pretty<A>): pretty_.Pretty<chunk_.NonEmptyChunk<A>> => (c) =>\n  `NonEmptyChunk(${chunk_.toReadonlyArray(c).map(item).join(\", \")})`\n\nconst nonEmptyChunkParse = <A, R>(\n  decodeUnknown: ParseResult.DecodeUnknown<array_.NonEmptyReadonlyArray<A>, R>\n): ParseResult.DeclarationDecodeUnknown<chunk_.NonEmptyChunk<A>, R> =>\n(u, options, ast) =>\n  chunk_.isChunk(u) && chunk_.isNonEmpty(u)\n    ? toComposite(decodeUnknown(chunk_.toReadonlyArray(u), options), chunk_.unsafeFromNonEmptyArray, ast, u)\n    : ParseResult.fail(new ParseResult.Type(ast, u))\n\n/**\n * @category Chunk\n * @since 3.10.0\n */\nexport const NonEmptyChunkFromSelf = <Value extends Schema.Any>(value: Value): NonEmptyChunkFromSelf<Value> => {\n  return declare(\n    [value],\n    {\n      decode: (item) => nonEmptyChunkParse(ParseResult.decodeUnknown(NonEmptyArray(item))),\n      encode: (item) => nonEmptyChunkParse(ParseResult.encodeUnknown(NonEmptyArray(item)))\n    },\n    {\n      description: `NonEmptyChunk<${format(value)}>`,\n      pretty: nonEmptyChunkPretty,\n      arbitrary: nonEmptyChunkArbitrary,\n      equivalence: chunk_.getEquivalence\n    }\n  )\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface NonEmptyChunk<Value extends Schema.Any>\n  extends transform<NonEmptyArray<Value>, NonEmptyChunkFromSelf<SchemaClass<Schema.Type<Value>>>>\n{}\n\n/**\n * @category Chunk transformations\n * @since 3.10.0\n */\nexport function NonEmptyChunk<Value extends Schema.Any>(value: Value): NonEmptyChunk<Value> {\n  return transform(\n    NonEmptyArray(value),\n    NonEmptyChunkFromSelf(typeSchema(asSchema(value))),\n    {\n      strict: true,\n      decode: (i) => chunk_.unsafeFromNonEmptyArray(i),\n      encode: (a) => chunk_.toReadonlyArray(a)\n    }\n  )\n}\n\nconst decodeData = <A extends Readonly<Record<string, unknown>> | ReadonlyArray<unknown>>(a: A): A =>\n  Array.isArray(a) ? data_.array(a) : data_.struct(a)\n\nconst dataArbitrary = <A extends Readonly<Record<string, unknown>> | ReadonlyArray<unknown>>(\n  item: LazyArbitrary<A>\n): LazyArbitrary<A> =>\n(fc) => item(fc).map(decodeData)\n\nconst dataPretty = <A extends Readonly<Record<string, unknown>> | ReadonlyArray<unknown>>(\n  item: pretty_.Pretty<A>\n): pretty_.Pretty<A> =>\n(d) => `Data(${item(d)})`\n\nconst dataParse = <R, A extends Readonly<Record<string, unknown>> | ReadonlyArray<unknown>>(\n  decodeUnknown: ParseResult.DecodeUnknown<A, R>\n): ParseResult.DeclarationDecodeUnknown<A, R> =>\n(u, options, ast) =>\n  Equal.isEqual(u) ?\n    toComposite(decodeUnknown(u, options), decodeData, ast, u)\n    : ParseResult.fail(new ParseResult.Type(ast, u))\n\n/**\n * @category api interface\n * @since 3.13.3\n */\nexport interface DataFromSelf<Value extends Schema.Any> extends\n  AnnotableDeclare<\n    DataFromSelf<Value>,\n    Schema.Type<Value>,\n    Schema.Encoded<Value>,\n    [Value]\n  >\n{}\n\n/**\n * Type and Encoded must extend `Readonly<Record<string, any>> |\n * ReadonlyArray<any>` to be compatible with this API.\n *\n * @category Data transformations\n * @since 3.10.0\n */\nexport const DataFromSelf = <\n  S extends Schema.Any,\n  A extends Readonly<Record<string, unknown>> | ReadonlyArray<unknown>,\n  I extends Readonly<Record<string, unknown>> | ReadonlyArray<unknown>\n>(value: S & Schema<A & Schema.Type<S>, I & Schema.Encoded<S>, Schema.Context<S>>): DataFromSelf<S> => {\n  return declare(\n    [value],\n    {\n      decode: (item) => dataParse(ParseResult.decodeUnknown(item)),\n      encode: (item) => dataParse(ParseResult.encodeUnknown(item))\n    },\n    {\n      description: `Data<${format(value)}>`,\n      pretty: dataPretty,\n      arbitrary: dataArbitrary\n    }\n  )\n}\n\n/**\n * @category api interface\n * @since 3.13.3\n */\nexport interface Data<Value extends Schema.Any>\n  extends transform<Value, DataFromSelf<SchemaClass<Schema.Type<Value>>>>\n{}\n\n/**\n * Type and Encoded must extend `Readonly<Record<string, any>> |\n * ReadonlyArray<any>` to be compatible with this API.\n *\n * @category Data transformations\n * @since 3.10.0\n */\nexport const Data = <\n  S extends Schema.Any,\n  A extends Readonly<Record<string, unknown>> | ReadonlyArray<unknown>,\n  I extends Readonly<Record<string, unknown>> | ReadonlyArray<unknown>\n>(value: S & Schema<A & Schema.Type<S>, I & Schema.Encoded<S>, Schema.Context<S>>): Data<S> => {\n  return transform(\n    value,\n    DataFromSelf(typeSchema(value)),\n    {\n      strict: false,\n      decode: (i) => decodeData(i),\n      encode: (a) => Array.isArray(a) ? Array.from(a) : Object.assign({}, a)\n    }\n  )\n}\n\ntype MissingSelfGeneric<Usage extends string, Params extends string = \"\"> =\n  `Missing \\`Self\\` generic - use \\`class Self extends ${Usage}<Self>()(${Params}{ ... })\\``\n\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T]\n\ntype ClassAnnotations<Self, A> =\n  | Annotations.Schema<Self>\n  | readonly [\n    // Annotations for the \"to\" schema\n    Annotations.Schema<Self> | undefined,\n    // Annotations for the \"transformation schema\n    (Annotations.Schema<Self> | undefined)?,\n    // Annotations for the \"from\" schema\n    Annotations.Schema<A>?\n  ]\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface Class<Self, Fields extends Struct.Fields, I, R, C, Inherited, Proto>\n  extends Schema<Self, Simplify<I>, R>\n{\n  new(\n    props: RequiredKeys<C> extends never ? void | Simplify<C> : Simplify<C>,\n    options?: MakeOptions\n  ): Struct.Type<Fields> & Inherited & Proto\n\n  /** @since 3.10.0 */\n  readonly ast: AST.Transformation\n\n  make<C extends new(...args: Array<any>) => any>(this: C, ...args: ConstructorParameters<C>): InstanceType<C>\n\n  annotations(annotations: Annotations.Schema<Self>): SchemaClass<Self, Simplify<I>, R>\n\n  readonly fields: { readonly [K in keyof Fields]: Fields[K] }\n\n  readonly identifier: string\n\n  /**\n   * @example\n   * ```ts\n   * import { Schema } from \"effect\"\n   *\n   * class MyClass extends Schema.Class<MyClass>(\"MyClass\")({\n   *  myField: Schema.String\n   * }) {\n   *  myMethod() {\n   *    return this.myField + \"my\"\n   *  }\n   * }\n   *\n   * class NextClass extends MyClass.extend<NextClass>(\"NextClass\")({\n   *  nextField: Schema.Number\n   * }) {\n   *  nextMethod() {\n   *    return this.myMethod() + this.myField + this.nextField\n   *  }\n   * }\n   * ```\n   */\n  extend<Extended = never>(identifier: string): <NewFields extends Struct.Fields>(\n    fields: NewFields | HasFields<NewFields>,\n    annotations?: ClassAnnotations<Extended, Simplify<Struct.Type<Fields & NewFields>>>\n  ) => [Extended] extends [never] ? MissingSelfGeneric<\"Base.extend\">\n    : Class<\n      Extended,\n      Fields & NewFields,\n      I & Struct.Encoded<NewFields>,\n      R | Struct.Context<NewFields>,\n      C & Struct.Constructor<NewFields>,\n      Self,\n      Proto\n    >\n\n  /**\n   * @example\n   * ```ts\n   * import { Effect, Schema } from \"effect\"\n   *\n   * class MyClass extends Schema.Class<MyClass>(\"MyClass\")({\n   *   myField: Schema.String\n   * }) {\n   *   myMethod() {\n   *     return this.myField + \"my\"\n   *   }\n   * }\n   *\n   * class NextClass extends MyClass.transformOrFail<NextClass>(\"NextClass\")({\n   *   nextField: Schema.Number\n   * }, {\n   *   decode: (i) =>\n   *     Effect.succeed({\n   *       myField: i.myField,\n   *       nextField: i.myField.length\n   *     }),\n   *   encode: (a) => Effect.succeed({ myField: a.myField })\n   * }) {\n   *   nextMethod() {\n   *     return this.myMethod() + this.myField + this.nextField\n   *   }\n   * }\n   * ```\n   */\n  transformOrFail<Transformed = never>(identifier: string): <\n    NewFields extends Struct.Fields,\n    R2,\n    R3\n  >(\n    fields: NewFields,\n    options: {\n      readonly decode: (\n        input: Simplify<Struct.Type<Fields>>,\n        options: ParseOptions,\n        ast: AST.Transformation\n      ) => Effect.Effect<Simplify<Struct.Type<Fields & NewFields>>, ParseResult.ParseIssue, R2>\n      readonly encode: (\n        input: Simplify<Struct.Type<Fields & NewFields>>,\n        options: ParseOptions,\n        ast: AST.Transformation\n      ) => Effect.Effect<Struct.Type<Fields>, ParseResult.ParseIssue, R3>\n    },\n    annotations?: ClassAnnotations<Transformed, Simplify<Struct.Type<Fields & NewFields>>>\n  ) => [Transformed] extends [never] ? MissingSelfGeneric<\"Base.transformOrFail\">\n    : Class<\n      Transformed,\n      Fields & NewFields,\n      I,\n      R | Struct.Context<NewFields> | R2 | R3,\n      C & Struct.Constructor<NewFields>,\n      Self,\n      Proto\n    >\n\n  /**\n   * @example\n   * ```ts\n   * import { Effect, Schema } from \"effect\"\n   *\n   * class MyClass extends Schema.Class<MyClass>(\"MyClass\")({\n   *   myField: Schema.String\n   * }) {\n   *   myMethod() {\n   *     return this.myField + \"my\"\n   *   }\n   * }\n   *\n   * class NextClass extends MyClass.transformOrFailFrom<NextClass>(\"NextClass\")({\n   *   nextField: Schema.Number\n   * }, {\n   *   decode: (i) =>\n   *     Effect.succeed({\n   *       myField: i.myField,\n   *       nextField: i.myField.length\n   *     }),\n   *   encode: (a) => Effect.succeed({ myField: a.myField })\n   * }) {\n   *   nextMethod() {\n   *     return this.myMethod() + this.myField + this.nextField\n   *   }\n   * }\n   * ```\n   */\n  transformOrFailFrom<Transformed = never>(identifier: string): <\n    NewFields extends Struct.Fields,\n    R2,\n    R3\n  >(\n    fields: NewFields,\n    options: {\n      readonly decode: (\n        input: Simplify<I>,\n        options: ParseOptions,\n        ast: AST.Transformation\n      ) => Effect.Effect<Simplify<I & Struct.Encoded<NewFields>>, ParseResult.ParseIssue, R2>\n      readonly encode: (\n        input: Simplify<I & Struct.Encoded<NewFields>>,\n        options: ParseOptions,\n        ast: AST.Transformation\n      ) => Effect.Effect<I, ParseResult.ParseIssue, R3>\n    },\n    annotations?: ClassAnnotations<Transformed, Simplify<Struct.Type<Fields & NewFields>>>\n  ) => [Transformed] extends [never] ? MissingSelfGeneric<\"Base.transformOrFailFrom\">\n    : Class<\n      Transformed,\n      Fields & NewFields,\n      I,\n      R | Struct.Context<NewFields> | R2 | R3,\n      C & Struct.Constructor<NewFields>,\n      Self,\n      Proto\n    >\n}\n\ntype HasFields<Fields extends Struct.Fields> = Struct<Fields> | {\n  readonly [RefineSchemaId]: HasFields<Fields>\n}\n\nconst isField = (u: unknown) => isSchema(u) || isPropertySignature(u)\n\nconst isFields = <Fields extends Struct.Fields>(fields: object): fields is Fields =>\n  Reflect.ownKeys(fields).every((key) => isField((fields as any)[key]))\n\nconst getFields = <Fields extends Struct.Fields>(hasFields: HasFields<Fields>): Fields =>\n  \"fields\" in hasFields ? hasFields.fields : getFields(hasFields[RefineSchemaId])\n\nconst getSchemaFromFieldsOr = <Fields extends Struct.Fields>(fieldsOr: Fields | HasFields<Fields>): Schema.Any =>\n  isFields(fieldsOr) ? Struct(fieldsOr) : isSchema(fieldsOr) ? fieldsOr : Struct(getFields(fieldsOr))\n\nconst getFieldsFromFieldsOr = <Fields extends Struct.Fields>(fieldsOr: Fields | HasFields<Fields>): Fields =>\n  isFields(fieldsOr) ? fieldsOr : getFields(fieldsOr)\n\n/**\n * @example\n * ```ts\n * import { Schema } from \"effect\"\n *\n * class MyClass extends Schema.Class<MyClass>(\"MyClass\")({\n *  someField: Schema.String\n * }) {\n *  someMethod() {\n *    return this.someField + \"bar\"\n *  }\n * }\n * ```\n *\n * @category classes\n * @since 3.10.0\n */\nexport const Class = <Self = never>(identifier: string) =>\n<Fields extends Struct.Fields>(\n  fieldsOr: Fields | HasFields<Fields>,\n  annotations?: ClassAnnotations<Self, Simplify<Struct.Type<Fields>>>\n): [Self] extends [never] ? MissingSelfGeneric<\"Class\">\n  : Class<\n    Self,\n    Fields,\n    Struct.Encoded<Fields>,\n    Struct.Context<Fields>,\n    Struct.Constructor<Fields>,\n    {},\n    {}\n  > =>\n  makeClass({\n    kind: \"Class\",\n    identifier,\n    schema: getSchemaFromFieldsOr(fieldsOr),\n    fields: getFieldsFromFieldsOr(fieldsOr),\n    Base: data_.Class,\n    annotations\n  })\n\n/** @internal */\nexport const getClassTag = <Tag extends string>(tag: Tag) =>\n  withConstructorDefault(propertySignature(Literal(tag)), () => tag)\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface TaggedClass<Self, Tag extends string, Fields extends Struct.Fields> extends\n  Class<\n    Self,\n    Fields,\n    Struct.Encoded<Fields>,\n    Struct.Context<Fields>,\n    Struct.Constructor<Omit<Fields, \"_tag\">>,\n    {},\n    {}\n  >\n{\n  readonly _tag: Tag\n}\n\n/**\n * @example\n * ```ts\n * import { Schema } from \"effect\"\n *\n * class MyClass extends Schema.TaggedClass<MyClass>(\"MyClass\")(\"MyClass\", {\n *  a: Schema.String\n * }) {}\n * ```\n *\n * @category classes\n * @since 3.10.0\n */\nexport const TaggedClass = <Self = never>(identifier?: string) =>\n<Tag extends string, Fields extends Struct.Fields>(\n  tag: Tag,\n  fieldsOr: Fields | HasFields<Fields>,\n  annotations?: ClassAnnotations<Self, Simplify<Struct.Type<{ readonly _tag: tag<Tag> } & Fields>>>\n): [Self] extends [never] ? MissingSelfGeneric<\"TaggedClass\", `\"Tag\", `>\n  : TaggedClass<Self, Tag, { readonly _tag: tag<Tag> } & Fields> =>\n{\n  const fields = getFieldsFromFieldsOr(fieldsOr)\n  const schema = getSchemaFromFieldsOr(fieldsOr)\n  const newFields = { _tag: getClassTag(tag) }\n  const taggedFields = extendFields(newFields, fields)\n  return class TaggedClass extends makeClass({\n    kind: \"TaggedClass\",\n    identifier: identifier ?? tag,\n    schema: extend(schema, Struct(newFields)),\n    fields: taggedFields,\n    Base: data_.Class,\n    annotations\n  }) {\n    static _tag = tag\n  } as any\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface TaggedErrorClass<Self, Tag extends string, Fields extends Struct.Fields> extends\n  Class<\n    Self,\n    Fields,\n    Struct.Encoded<Fields>,\n    Struct.Context<Fields>,\n    Struct.Constructor<Omit<Fields, \"_tag\">>,\n    {},\n    cause_.YieldableError\n  >\n{\n  readonly _tag: Tag\n}\n\n/**\n * @example\n * ```ts\n * import { Schema } from \"effect\"\n *\n * class MyError extends Schema.TaggedError<MyError>(\"MyError\")(\n *   \"MyError\",\n *   {\n *     module: Schema.String,\n *     method: Schema.String,\n *     description: Schema.String\n *   }\n * ) {\n *   get message(): string {\n *     return `${this.module}.${this.method}: ${this.description}`\n *   }\n * }\n * ```\n * @category classes\n * @since 3.10.0\n */\nexport const TaggedError = <Self = never>(identifier?: string) =>\n<Tag extends string, Fields extends Struct.Fields>(\n  tag: Tag,\n  fieldsOr: Fields | HasFields<Fields>,\n  annotations?: ClassAnnotations<Self, Simplify<Struct.Type<{ readonly _tag: tag<Tag> } & Fields>>>\n): [Self] extends [never] ? MissingSelfGeneric<\"TaggedError\", `\"Tag\", `>\n  : TaggedErrorClass<\n    Self,\n    Tag,\n    { readonly _tag: tag<Tag> } & Fields\n  > =>\n{\n  class Base extends data_.Error {}\n  ;(Base.prototype as any).name = tag\n  const fields = getFieldsFromFieldsOr(fieldsOr)\n  const schema = getSchemaFromFieldsOr(fieldsOr)\n  const newFields = { _tag: getClassTag(tag) }\n  const taggedFields = extendFields(newFields, fields)\n  const hasMessageField = \"message\" in taggedFields\n  class TaggedErrorClass extends makeClass({\n    kind: \"TaggedError\",\n    identifier: identifier ?? tag,\n    schema: extend(schema, Struct(newFields)),\n    fields: taggedFields,\n    Base,\n    annotations,\n    disableToString: true\n  }) {\n    static _tag = tag\n  }\n\n  if (!hasMessageField) {\n    Object.defineProperty(TaggedErrorClass.prototype, \"message\", {\n      get() {\n        return `{ ${\n          Reflect.ownKeys(fields)\n            .map((p: any) => `${util_.formatPropertyKey(p)}: ${util_.formatUnknown((this)[p])}`)\n            .join(\", \")\n        } }`\n      },\n      enumerable: false, // mirrors the built-in Error.prototype.message, whose descriptor is also non-enumerable\n      configurable: true\n    })\n  }\n\n  return TaggedErrorClass as any\n}\n\nconst extendFields = (a: Struct.Fields, b: Struct.Fields): Struct.Fields => {\n  const out = { ...a }\n  for (const key of Reflect.ownKeys(b)) {\n    if (key in a) {\n      throw new Error(errors_.getASTDuplicatePropertySignatureErrorMessage(key))\n    }\n    out[key] = b[key]\n  }\n  return out\n}\n\n/**\n * @category Constructor utils\n * @since 3.13.4\n */\nexport type MakeOptions = boolean | {\n  readonly disableValidation?: boolean | undefined\n}\n\nfunction getDisableValidationMakeOption(options: MakeOptions | undefined): boolean {\n  return Predicate.isBoolean(options) ? options : options?.disableValidation ?? false\n}\n\nconst astCache = globalValue(\"effect/Schema/astCache\", () => new WeakMap<any, AST.AST>())\n\nconst getClassAnnotations = <Self, A>(\n  annotations: ClassAnnotations<Self, A> | undefined\n): [Annotations.Schema<Self>?, Annotations.Schema<Self>?, Annotations.Schema<A>?] => {\n  if (annotations === undefined) {\n    return []\n  } else if (Array.isArray(annotations)) {\n    return annotations as any\n  } else {\n    return [annotations] as any\n  }\n}\n\nconst makeClass = <Fields extends Struct.Fields>(\n  { Base, annotations, disableToString, fields, identifier, kind, schema }: {\n    kind: \"Class\" | \"TaggedClass\" | \"TaggedError\" | \"TaggedRequest\"\n    identifier: string\n    schema: Schema.Any\n    fields: Fields\n    Base: new(...args: ReadonlyArray<any>) => any\n    annotations?: ClassAnnotations<any, any> | undefined\n    disableToString?: boolean | undefined\n  }\n): any => {\n  const classSymbol = Symbol.for(`effect/Schema/${kind}/${identifier}`)\n\n  const [typeAnnotations, transformationAnnotations, encodedAnnotations] = getClassAnnotations(annotations)\n\n  const typeSchema_ = typeSchema(schema)\n\n  const declarationSurrogate = typeSchema_.annotations({\n    identifier,\n    ...typeAnnotations\n  })\n\n  const typeSide = typeSchema_.annotations({\n    [AST.AutoTitleAnnotationId]: `${identifier} (Type side)`,\n    ...typeAnnotations\n  })\n\n  const constructorSchema = schema.annotations({\n    [AST.AutoTitleAnnotationId]: `${identifier} (Constructor)`,\n    ...typeAnnotations\n  })\n\n  const encodedSide = schema.annotations({\n    [AST.AutoTitleAnnotationId]: `${identifier} (Encoded side)`,\n    ...encodedAnnotations\n  })\n\n  const transformationSurrogate = schema.annotations({\n    ...encodedAnnotations,\n    ...typeAnnotations,\n    ...transformationAnnotations\n  })\n\n  const fallbackInstanceOf = (u: unknown) => Predicate.hasProperty(u, classSymbol) && ParseResult.is(typeSide)(u)\n\n  const klass = class extends Base {\n    constructor(\n      props: { [x: string | symbol]: unknown } = {},\n      options: MakeOptions = false\n    ) {\n      props = { ...props }\n      if (kind !== \"Class\") {\n        delete props[\"_tag\"]\n      }\n      props = lazilyMergeDefaults(fields, props)\n      if (!getDisableValidationMakeOption(options)) {\n        props = ParseResult.validateSync(constructorSchema)(props)\n      }\n      super(props, true)\n    }\n\n    // ----------------\n    // Schema interface\n    // ----------------\n\n    static [TypeId] = variance\n\n    static get ast(): AST.AST {\n      let out = astCache.get(this)\n      if (out) {\n        return out\n      }\n\n      const declaration: Schema.Any = declare(\n        [schema],\n        {\n          decode: () => (input, _, ast) =>\n            input instanceof this || fallbackInstanceOf(input)\n              ? ParseResult.succeed(input)\n              : ParseResult.fail(new ParseResult.Type(ast, input)),\n          encode: () => (input, options) =>\n            input instanceof this\n              ? ParseResult.succeed(input)\n              : ParseResult.map(\n                ParseResult.encodeUnknown(typeSide)(input, options),\n                (props) => new this(props, true)\n              )\n        },\n        {\n          identifier,\n          pretty: (pretty) => (self: any) => `${identifier}(${pretty(self)})`,\n          // @ts-expect-error\n          arbitrary: (arb) => (fc) => arb(fc).map((props) => new this(props)),\n          equivalence: identity,\n          [AST.SurrogateAnnotationId]: declarationSurrogate.ast,\n          ...typeAnnotations\n        }\n      )\n\n      out = transform(\n        encodedSide,\n        declaration,\n        {\n          strict: true,\n          decode: (i) => new this(i, true),\n          encode: identity\n        }\n      ).annotations({\n        [AST.SurrogateAnnotationId]: transformationSurrogate.ast,\n        ...transformationAnnotations\n      }).ast\n\n      astCache.set(this, out)\n\n      return out\n    }\n\n    static pipe() {\n      return pipeArguments(this, arguments)\n    }\n\n    static annotations(annotations: Annotations.Schema<any>) {\n      return make(this.ast).annotations(annotations)\n    }\n\n    static toString() {\n      return `(${String(encodedSide)} <-> ${identifier})`\n    }\n\n    // ----------------\n    // Class interface\n    // ----------------\n\n    static make(...args: Array<any>) {\n      return new this(...args)\n    }\n\n    static fields = { ...fields }\n\n    static identifier = identifier\n\n    static extend<Extended, NewFields extends Struct.Fields>(identifier: string) {\n      return (\n        newFieldsOr: NewFields | HasFields<NewFields>,\n        annotations?: ClassAnnotations<Extended, Simplify<Struct.Type<Fields & NewFields>>>\n      ) => {\n        const newFields = getFieldsFromFieldsOr(newFieldsOr)\n        const newSchema = getSchemaFromFieldsOr(newFieldsOr)\n        const extendedFields = extendFields(fields, newFields)\n        return makeClass({\n          kind,\n          identifier,\n          schema: extend(schema, newSchema),\n          fields: extendedFields,\n          Base: this,\n          annotations\n        })\n      }\n    }\n\n    static transformOrFail<Transformed, NewFields extends Struct.Fields>(identifier: string) {\n      return (\n        newFieldsOr: NewFields,\n        options: any,\n        annotations?: ClassAnnotations<Transformed, Simplify<Struct.Type<Fields & NewFields>>>\n      ) => {\n        const transformedFields: Struct.Fields = extendFields(fields, newFieldsOr)\n        return makeClass({\n          kind,\n          identifier,\n          schema: transformOrFail(\n            schema,\n            typeSchema(Struct(transformedFields)),\n            options\n          ),\n          fields: transformedFields,\n          Base: this,\n          annotations\n        })\n      }\n    }\n\n    static transformOrFailFrom<Transformed, NewFields extends Struct.Fields>(identifier: string) {\n      return (\n        newFields: NewFields,\n        options: any,\n        annotations?: ClassAnnotations<Transformed, Simplify<Struct.Type<Fields & NewFields>>>\n      ) => {\n        const transformedFields: Struct.Fields = extendFields(fields, newFields)\n        return makeClass({\n          kind,\n          identifier,\n          schema: transformOrFail(\n            encodedSchema(schema),\n            Struct(transformedFields),\n            options\n          ),\n          fields: transformedFields,\n          Base: this,\n          annotations\n        })\n      }\n    }\n\n    // ----------------\n    // other\n    // ----------------\n\n    get [classSymbol]() {\n      return classSymbol\n    }\n  }\n  if (disableToString !== true) {\n    Object.defineProperty(klass.prototype, \"toString\", {\n      value() {\n        return `${identifier}({ ${\n          Reflect.ownKeys(fields).map((p: any) => `${util_.formatPropertyKey(p)}: ${util_.formatUnknown(this[p])}`)\n            .join(\", \")\n        } })`\n      },\n      configurable: true,\n      writable: true\n    })\n  }\n  return klass\n}\n\n/**\n * @category FiberId\n * @since 3.10.0\n */\nexport type FiberIdEncoded =\n  | {\n    readonly _tag: \"Composite\"\n    readonly left: FiberIdEncoded\n    readonly right: FiberIdEncoded\n  }\n  | {\n    readonly _tag: \"None\"\n  }\n  | {\n    readonly _tag: \"Runtime\"\n    readonly id: number\n    readonly startTimeMillis: number\n  }\n\nconst FiberIdNoneEncoded = Struct({\n  _tag: Literal(\"None\")\n}).annotations({ identifier: \"FiberIdNoneEncoded\" })\n\nconst FiberIdRuntimeEncoded = Struct({\n  _tag: Literal(\"Runtime\"),\n  id: Int,\n  startTimeMillis: Int\n}).annotations({ identifier: \"FiberIdRuntimeEncoded\" })\n\nconst FiberIdCompositeEncoded = Struct({\n  _tag: Literal(\"Composite\"),\n  left: suspend(() => FiberIdEncoded),\n  right: suspend(() => FiberIdEncoded)\n}).annotations({ identifier: \"FiberIdCompositeEncoded\" })\n\nconst FiberIdEncoded: Schema<FiberIdEncoded> = Union(\n  FiberIdNoneEncoded,\n  FiberIdRuntimeEncoded,\n  FiberIdCompositeEncoded\n).annotations({ identifier: \"FiberIdEncoded\" })\n\nconst fiberIdArbitrary: LazyArbitrary<fiberId_.FiberId> = (fc) =>\n  fc.letrec((tie) => ({\n    None: fc.record({ _tag: fc.constant(\"None\" as const) }),\n    Runtime: fc.record({ _tag: fc.constant(\"Runtime\" as const), id: fc.integer(), startTimeMillis: fc.integer() }),\n    Composite: fc.record({ _tag: fc.constant(\"Composite\" as const), left: tie(\"FiberId\"), right: tie(\"FiberId\") }),\n    FiberId: fc.oneof(tie(\"None\"), tie(\"Runtime\"), tie(\"Composite\")) as any as fastCheck_.Arbitrary<fiberId_.FiberId>\n  })).FiberId.map(fiberIdDecode)\n\nconst fiberIdPretty: pretty_.Pretty<fiberId_.FiberId> = (fiberId) => {\n  switch (fiberId._tag) {\n    case \"None\":\n      return \"FiberId.none\"\n    case \"Runtime\":\n      return `FiberId.runtime(${fiberId.id}, ${fiberId.startTimeMillis})`\n    case \"Composite\":\n      return `FiberId.composite(${fiberIdPretty(fiberId.right)}, ${fiberIdPretty(fiberId.left)})`\n  }\n}\n\n/**\n * @category FiberId constructors\n * @since 3.10.0\n */\nexport class FiberIdFromSelf extends declare(\n  fiberId_.isFiberId,\n  {\n    identifier: \"FiberIdFromSelf\",\n    pretty: () => fiberIdPretty,\n    arbitrary: () => fiberIdArbitrary\n  }\n) {}\n\nconst fiberIdDecode = (input: FiberIdEncoded): fiberId_.FiberId => {\n  switch (input._tag) {\n    case \"None\":\n      return fiberId_.none\n    case \"Runtime\":\n      return fiberId_.runtime(input.id, input.startTimeMillis)\n    case \"Composite\":\n      return fiberId_.composite(fiberIdDecode(input.left), fiberIdDecode(input.right))\n  }\n}\n\nconst fiberIdEncode = (input: fiberId_.FiberId): FiberIdEncoded => {\n  switch (input._tag) {\n    case \"None\":\n      return { _tag: \"None\" }\n    case \"Runtime\":\n      return { _tag: \"Runtime\", id: input.id, startTimeMillis: input.startTimeMillis }\n    case \"Composite\":\n      return {\n        _tag: \"Composite\",\n        left: fiberIdEncode(input.left),\n        right: fiberIdEncode(input.right)\n      }\n  }\n}\n\n/**\n * @category FiberId transformations\n * @since 3.10.0\n */\nexport class FiberId extends transform(\n  FiberIdEncoded,\n  FiberIdFromSelf,\n  {\n    strict: true,\n    decode: (i) => fiberIdDecode(i),\n    encode: (a) => fiberIdEncode(a)\n  }\n).annotations({ identifier: \"FiberId\" }) {}\n\n/**\n * @category Cause utils\n * @since 3.10.0\n */\nexport type CauseEncoded<E, D> =\n  | {\n    readonly _tag: \"Empty\"\n  }\n  | {\n    readonly _tag: \"Fail\"\n    readonly error: E\n  }\n  | {\n    readonly _tag: \"Die\"\n    readonly defect: D\n  }\n  | {\n    readonly _tag: \"Interrupt\"\n    readonly fiberId: FiberIdEncoded\n  }\n  | {\n    readonly _tag: \"Sequential\"\n    readonly left: CauseEncoded<E, D>\n    readonly right: CauseEncoded<E, D>\n  }\n  | {\n    readonly _tag: \"Parallel\"\n    readonly left: CauseEncoded<E, D>\n    readonly right: CauseEncoded<E, D>\n  }\n\nconst causeDieEncoded = <Defect extends Schema.Any>(defect: Defect) =>\n  Struct({\n    _tag: Literal(\"Die\"),\n    defect\n  })\n\nconst CauseEmptyEncoded = Struct({\n  _tag: Literal(\"Empty\")\n})\n\nconst causeFailEncoded = <E extends Schema.Any>(error: E) =>\n  Struct({\n    _tag: Literal(\"Fail\"),\n    error\n  })\n\nconst CauseInterruptEncoded = Struct({\n  _tag: Literal(\"Interrupt\"),\n  fiberId: FiberIdEncoded\n})\n\nlet causeEncodedId = 0\n\nconst causeEncoded = <E extends Schema.All, D extends Schema.All>(\n  error: E,\n  defect: D\n): SchemaClass<\n  CauseEncoded<Schema.Type<E>, Schema.Type<D>>,\n  CauseEncoded<Schema.Encoded<E>, Schema.Encoded<D>>,\n  Schema.Context<E> | Schema.Context<D>\n> => {\n  const error_ = asSchema(error)\n  const defect_ = asSchema(defect)\n  const suspended = suspend((): Schema<\n    CauseEncoded<Schema.Type<E>, Schema.Type<D>>,\n    CauseEncoded<Schema.Encoded<E>, Schema.Encoded<D>>,\n    Schema.Context<E> | Schema.Context<D>\n  > => out)\n  const out = Union(\n    CauseEmptyEncoded,\n    causeFailEncoded(error_),\n    causeDieEncoded(defect_),\n    CauseInterruptEncoded,\n    Struct({\n      _tag: Literal(\"Sequential\"),\n      left: suspended,\n      right: suspended\n    }),\n    Struct({\n      _tag: Literal(\"Parallel\"),\n      left: suspended,\n      right: suspended\n    })\n  ).annotations({\n    title: `CauseEncoded<${format(error)}>`,\n    [AST.JSONIdentifierAnnotationId]: `CauseEncoded${causeEncodedId++}`\n  })\n  return out\n}\n\nconst causeArbitrary = <E>(\n  error: LazyArbitrary<E>,\n  defect: LazyArbitrary<unknown>\n): LazyArbitrary<cause_.Cause<E>> =>\n(fc) =>\n  fc.letrec((tie) => ({\n    Empty: fc.record({ _tag: fc.constant(\"Empty\" as const) }),\n    Fail: fc.record({ _tag: fc.constant(\"Fail\" as const), error: error(fc) }),\n    Die: fc.record({ _tag: fc.constant(\"Die\" as const), defect: defect(fc) }),\n    Interrupt: fc.record({ _tag: fc.constant(\"Interrupt\" as const), fiberId: fiberIdArbitrary(fc) }),\n    Sequential: fc.record({ _tag: fc.constant(\"Sequential\" as const), left: tie(\"Cause\"), right: tie(\"Cause\") }),\n    Parallel: fc.record({ _tag: fc.constant(\"Parallel\" as const), left: tie(\"Cause\"), right: tie(\"Cause\") }),\n    Cause: fc.oneof(\n      tie(\"Empty\"),\n      tie(\"Fail\"),\n      tie(\"Die\"),\n      tie(\"Interrupt\"),\n      tie(\"Sequential\"),\n      tie(\"Parallel\")\n    ) as any as fastCheck_.Arbitrary<cause_.Cause<E>>\n  })).Cause.map(causeDecode)\n\nconst causePretty = <E>(error: pretty_.Pretty<E>): pretty_.Pretty<cause_.Cause<E>> => (cause) => {\n  const f = (cause: cause_.Cause<E>): string => {\n    switch (cause._tag) {\n      case \"Empty\":\n        return \"Cause.empty\"\n      case \"Fail\":\n        return `Cause.fail(${error(cause.error)})`\n      case \"Die\":\n        return `Cause.die(${cause_.pretty(cause)})`\n      case \"Interrupt\":\n        return `Cause.interrupt(${fiberIdPretty(cause.fiberId)})`\n      case \"Sequential\":\n        return `Cause.sequential(${f(cause.left)}, ${f(cause.right)})`\n      case \"Parallel\":\n        return `Cause.parallel(${f(cause.left)}, ${f(cause.right)})`\n    }\n  }\n  return f(cause)\n}\n\nconst causeParse = <A, D, R>(\n  decodeUnknown: ParseResult.DecodeUnknown<CauseEncoded<A, D>, R>\n): ParseResult.DeclarationDecodeUnknown<cause_.Cause<A>, R> =>\n(u, options, ast) =>\n  cause_.isCause(u) ?\n    toComposite(decodeUnknown(causeEncode(u), options), causeDecode, ast, u)\n    : ParseResult.fail(new ParseResult.Type(ast, u))\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface CauseFromSelf<E extends Schema.All, D extends Schema.All> extends\n  AnnotableDeclare<\n    CauseFromSelf<E, D>,\n    cause_.Cause<Schema.Type<E>>,\n    cause_.Cause<Schema.Encoded<E>>,\n    [E, D]\n  >\n{}\n\n/**\n * @category Cause transformations\n * @since 3.10.0\n */\nexport const CauseFromSelf = <E extends Schema.All, D extends Schema.All>({ defect, error }: {\n  readonly error: E\n  readonly defect: D\n}): CauseFromSelf<E, D> => {\n  return declare(\n    [error, defect],\n    {\n      decode: (error, defect) => causeParse(ParseResult.decodeUnknown(causeEncoded(error, defect))),\n      encode: (error, defect) => causeParse(ParseResult.encodeUnknown(causeEncoded(error, defect)))\n    },\n    {\n      title: `Cause<${error.ast}>`,\n      pretty: causePretty,\n      arbitrary: causeArbitrary\n    }\n  )\n}\n\nfunction causeDecode<E>(cause: CauseEncoded<E, unknown>): cause_.Cause<E> {\n  switch (cause._tag) {\n    case \"Empty\":\n      return cause_.empty\n    case \"Fail\":\n      return cause_.fail(cause.error)\n    case \"Die\":\n      return cause_.die(cause.defect)\n    case \"Interrupt\":\n      return cause_.interrupt(fiberIdDecode(cause.fiberId))\n    case \"Sequential\":\n      return cause_.sequential(causeDecode(cause.left), causeDecode(cause.right))\n    case \"Parallel\":\n      return cause_.parallel(causeDecode(cause.left), causeDecode(cause.right))\n  }\n}\n\nfunction causeEncode<E>(cause: cause_.Cause<E>): CauseEncoded<E, unknown> {\n  switch (cause._tag) {\n    case \"Empty\":\n      return { _tag: \"Empty\" }\n    case \"Fail\":\n      return { _tag: \"Fail\", error: cause.error }\n    case \"Die\":\n      return { _tag: \"Die\", defect: cause.defect }\n    case \"Interrupt\":\n      return { _tag: \"Interrupt\", fiberId: cause.fiberId }\n    case \"Sequential\":\n      return {\n        _tag: \"Sequential\",\n        left: causeEncode(cause.left),\n        right: causeEncode(cause.right)\n      }\n    case \"Parallel\":\n      return {\n        _tag: \"Parallel\",\n        left: causeEncode(cause.left),\n        right: causeEncode(cause.right)\n      }\n  }\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface Cause<E extends Schema.All, D extends Schema.All> extends\n  transform<\n    SchemaClass<\n      CauseEncoded<Schema.Type<E>, Schema.Type<Defect>>,\n      CauseEncoded<Schema.Encoded<E>, Schema.Encoded<Defect>>,\n      Schema.Context<E> | Schema.Context<D>\n    >,\n    CauseFromSelf<SchemaClass<Schema.Type<E>>, SchemaClass<Schema.Type<D>>>\n  >\n{}\n\n/**\n * @category Cause transformations\n * @since 3.10.0\n */\nexport const Cause = <E extends Schema.All, D extends Schema.All>({ defect, error }: {\n  readonly error: E\n  readonly defect: D\n}): Cause<E, D> => {\n  const error_ = asSchema(error)\n  const defect_ = asSchema(defect)\n  const out = transform(\n    causeEncoded(error_, defect_),\n    CauseFromSelf({ error: typeSchema(error_), defect: typeSchema(defect_) }),\n    {\n      strict: false,\n      decode: (i) => causeDecode(i),\n      encode: (a) => causeEncode(a)\n    }\n  )\n  return out as any\n}\n\n/**\n * Defines a schema for handling JavaScript errors (`Error` instances) and other types of defects.\n * It decodes objects into Error instances if they match the expected structure (i.e., have a `message` and optionally a `name` and `stack`),\n * or converts other values to their string representations.\n *\n * When encoding, it converts `Error` instances back into plain objects containing only the error's name and message,\n * or other values into their string forms.\n *\n * This is useful for serializing and deserializing errors across network boundaries where error objects do not natively serialize.\n *\n * @category defect\n * @since 3.10.0\n */\nexport class Defect extends transform(\n  Unknown,\n  Unknown,\n  {\n    strict: true,\n    decode: (i) => {\n      if (Predicate.isObject(i) && \"message\" in i && typeof i.message === \"string\") {\n        const err = new Error(i.message, { cause: i })\n        if (\"name\" in i && typeof i.name === \"string\") {\n          err.name = i.name\n        }\n        err.stack = \"stack\" in i && typeof i.stack === \"string\" ? i.stack : \"\"\n        return err\n      }\n      return internalCause_.prettyErrorMessage(i)\n    },\n    encode: (a) => {\n      if (a instanceof Error) {\n        return {\n          name: a.name,\n          message: a.message\n          // no stack because of security reasons\n        }\n      }\n      return internalCause_.prettyErrorMessage(a)\n    }\n  }\n).annotations({ identifier: \"Defect\" }) {}\n\n/**\n * @category Exit utils\n * @since 3.10.0\n */\nexport type ExitEncoded<A, E, D> =\n  | {\n    readonly _tag: \"Failure\"\n    readonly cause: CauseEncoded<E, D>\n  }\n  | {\n    readonly _tag: \"Success\"\n    readonly value: A\n  }\n\nconst exitFailureEncoded = <E extends Schema.All, D extends Schema.All>(\n  error: E,\n  defect: D\n) =>\n  Struct({\n    _tag: Literal(\"Failure\"),\n    cause: causeEncoded(error, defect)\n  })\n\nconst exitSuccessEncoded = <A extends Schema.All>(\n  value: A\n) =>\n  Struct({\n    _tag: Literal(\"Success\"),\n    value\n  })\n\nconst exitEncoded = <A extends Schema.All, E extends Schema.All, D extends Schema.Any>(\n  value: A,\n  error: E,\n  defect: D\n) => {\n  return Union(\n    exitFailureEncoded(error, defect),\n    exitSuccessEncoded(value)\n  ).annotations({\n    title: `ExitEncoded<${format(value)}, ${format(error)}, ${format(defect)}>`\n  })\n}\n\nconst exitDecode = <A, E>(input: ExitEncoded<A, E, unknown>): exit_.Exit<A, E> => {\n  switch (input._tag) {\n    case \"Failure\":\n      return exit_.failCause(causeDecode(input.cause))\n    case \"Success\":\n      return exit_.succeed(input.value)\n  }\n}\n\nconst exitArbitrary = <A, E>(\n  value: LazyArbitrary<A>,\n  error: LazyArbitrary<E>,\n  defect: LazyArbitrary<unknown>\n): LazyArbitrary<exit_.Exit<A, E>> =>\n(fc) =>\n  fc.oneof(\n    fc.record({ _tag: fc.constant(\"Failure\" as const), cause: causeArbitrary(error, defect)(fc) }),\n    fc.record({ _tag: fc.constant(\"Success\" as const), value: value(fc) })\n  ).map(exitDecode)\n\nconst exitPretty =\n  <A, E>(value: pretty_.Pretty<A>, error: pretty_.Pretty<E>): pretty_.Pretty<exit_.Exit<A, E>> => (exit) =>\n    exit._tag === \"Failure\"\n      ? `Exit.failCause(${causePretty(error)(exit.cause)})`\n      : `Exit.succeed(${value(exit.value)})`\n\nconst exitParse = <A, R, E, ER>(\n  decodeUnknownValue: ParseResult.DecodeUnknown<A, R>,\n  decodeUnknownCause: ParseResult.DecodeUnknown<cause_.Cause<E>, ER>\n): ParseResult.DeclarationDecodeUnknown<exit_.Exit<A, E>, ER | R> =>\n(u, options, ast) =>\n  exit_.isExit(u) ?\n    exit_.match(u, {\n      onFailure: (cause) => toComposite(decodeUnknownCause(cause, options), exit_.failCause, ast, u),\n      onSuccess: (value) => toComposite(decodeUnknownValue(value, options), exit_.succeed, ast, u)\n    })\n    : ParseResult.fail(new ParseResult.Type(ast, u))\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface ExitFromSelf<A extends Schema.All, E extends Schema.All, D extends Schema.All>\n  extends\n    AnnotableDeclare<\n      ExitFromSelf<A, E, D>,\n      exit_.Exit<Schema.Type<A>, Schema.Type<E>>,\n      exit_.Exit<Schema.Encoded<A>, Schema.Encoded<E>>,\n      [A, E, D]\n    >\n{}\n\n/**\n * @category Exit transformations\n * @since 3.10.0\n */\nexport const ExitFromSelf = <A extends Schema.All, E extends Schema.All, D extends Schema.All>(\n  { defect, failure, success }: {\n    readonly failure: E\n    readonly success: A\n    readonly defect: D\n  }\n): ExitFromSelf<A, E, D> =>\n  declare(\n    [success, failure, defect],\n    {\n      decode: (success, failure, defect) =>\n        exitParse(\n          ParseResult.decodeUnknown(success),\n          ParseResult.decodeUnknown(CauseFromSelf({ error: failure, defect }))\n        ),\n      encode: (success, failure, defect) =>\n        exitParse(\n          ParseResult.encodeUnknown(success),\n          ParseResult.encodeUnknown(CauseFromSelf({ error: failure, defect }))\n        )\n    },\n    {\n      title: `Exit<${success.ast}, ${failure.ast}>`,\n      pretty: exitPretty,\n      arbitrary: exitArbitrary\n    }\n  )\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface Exit<A extends Schema.All, E extends Schema.All, D extends Schema.All> extends\n  transform<\n    Union<[\n      Struct<{\n        _tag: Literal<[\"Failure\"]>\n        cause: SchemaClass<\n          CauseEncoded<Schema.Type<E>, Schema.Type<D>>,\n          CauseEncoded<Schema.Encoded<E>, Schema.Encoded<D>>,\n          Schema.Context<E> | Schema.Context<D>\n        >\n      }>,\n      Struct<{\n        _tag: Literal<[\"Success\"]>\n        value: A\n      }>\n    ]>,\n    ExitFromSelf<SchemaClass<Schema.Type<A>>, SchemaClass<Schema.Type<E>>, SchemaClass<Schema.Type<D>>>\n  >\n{}\n\n/**\n * @category Exit transformations\n * @since 3.10.0\n */\nexport const Exit = <A extends Schema.All, E extends Schema.All, D extends Schema.All>(\n  { defect, failure, success }: {\n    readonly failure: E\n    readonly success: A\n    readonly defect: D\n  }\n): Exit<A, E, D> => {\n  const success_ = asSchema(success)\n  const failure_ = asSchema(failure)\n  const defect_ = asSchema(defect)\n  const out = transform(\n    exitEncoded(success_, failure_, defect_),\n    ExitFromSelf({ failure: typeSchema(failure_), success: typeSchema(success_), defect: typeSchema(defect_) }),\n    {\n      strict: false,\n      decode: (i) => exitDecode(i),\n      encode: (a) =>\n        a._tag === \"Failure\"\n          ? { _tag: \"Failure\", cause: a.cause } as const\n          : { _tag: \"Success\", value: a.value } as const\n    }\n  )\n  return out as any\n}\n\nconst hashSetArbitrary =\n  <A>(item: LazyArbitrary<A>, ctx: ArbitraryGenerationContext): LazyArbitrary<hashSet_.HashSet<A>> => (fc) => {\n    const items = fc.array(item(fc))\n    return (ctx.depthIdentifier !== undefined ? fc.oneof(ctx, fc.constant([]), items) : items).map(\n      hashSet_.fromIterable\n    )\n  }\n\nconst hashSetPretty = <A>(item: pretty_.Pretty<A>): pretty_.Pretty<hashSet_.HashSet<A>> => (set) =>\n  `HashSet(${Array.from(set).map((a) => item(a)).join(\", \")})`\n\nconst hashSetEquivalence = <A>(\n  item: Equivalence.Equivalence<A>\n): Equivalence.Equivalence<hashSet_.HashSet<A>> => {\n  const arrayEquivalence = array_.getEquivalence(item)\n  return Equivalence.make((a, b) => arrayEquivalence(Array.from(a), Array.from(b)))\n}\n\nconst hashSetParse = <A, R>(\n  decodeUnknown: ParseResult.DecodeUnknown<ReadonlyArray<A>, R>\n): ParseResult.DeclarationDecodeUnknown<hashSet_.HashSet<A>, R> =>\n(u, options, ast) =>\n  hashSet_.isHashSet(u) ?\n    toComposite(decodeUnknown(Array.from(u), options), hashSet_.fromIterable, ast, u)\n    : ParseResult.fail(new ParseResult.Type(ast, u))\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface HashSetFromSelf<Value extends Schema.Any> extends\n  AnnotableDeclare<\n    HashSetFromSelf<Value>,\n    hashSet_.HashSet<Schema.Type<Value>>,\n    hashSet_.HashSet<Schema.Encoded<Value>>,\n    [Value]\n  >\n{}\n\n/**\n * @category HashSet transformations\n * @since 3.10.0\n */\nexport const HashSetFromSelf = <Value extends Schema.Any>(\n  value: Value\n): HashSetFromSelf<Value> => {\n  return declare(\n    [value],\n    {\n      decode: (item) => hashSetParse(ParseResult.decodeUnknown(Array$(item))),\n      encode: (item) => hashSetParse(ParseResult.encodeUnknown(Array$(item)))\n    },\n    {\n      description: `HashSet<${format(value)}>`,\n      pretty: hashSetPretty,\n      arbitrary: hashSetArbitrary,\n      equivalence: hashSetEquivalence\n    }\n  )\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface HashSet<Value extends Schema.Any>\n  extends transform<Array$<Value>, HashSetFromSelf<SchemaClass<Schema.Type<Value>>>>\n{}\n\n/**\n * @category HashSet transformations\n * @since 3.10.0\n */\nexport function HashSet<Value extends Schema.Any>(value: Value): HashSet<Value> {\n  return transform(\n    Array$(value),\n    HashSetFromSelf(typeSchema(asSchema(value))),\n    {\n      strict: true,\n      decode: (i) => hashSet_.fromIterable(i),\n      encode: (a) => Array.from(a)\n    }\n  )\n}\n\nconst hashMapArbitrary = <K, V>(\n  key: LazyArbitrary<K>,\n  value: LazyArbitrary<V>,\n  ctx: ArbitraryGenerationContext\n): LazyArbitrary<hashMap_.HashMap<K, V>> =>\n(fc) => {\n  const items = fc.array(fc.tuple(key(fc), value(fc)))\n  return (ctx.depthIdentifier !== undefined ? fc.oneof(ctx, fc.constant([]), items) : items).map(hashMap_.fromIterable)\n}\n\nconst hashMapPretty = <K, V>(\n  key: pretty_.Pretty<K>,\n  value: pretty_.Pretty<V>\n): pretty_.Pretty<hashMap_.HashMap<K, V>> =>\n(map) =>\n  `HashMap([${\n    Array.from(map)\n      .map(([k, v]) => `[${key(k)}, ${value(v)}]`)\n      .join(\", \")\n  }])`\n\nconst hashMapEquivalence = <K, V>(\n  key: Equivalence.Equivalence<K>,\n  value: Equivalence.Equivalence<V>\n): Equivalence.Equivalence<hashMap_.HashMap<K, V>> => {\n  const arrayEquivalence = array_.getEquivalence(\n    Equivalence.make<[K, V]>(([ka, va], [kb, vb]) => key(ka, kb) && value(va, vb))\n  )\n  return Equivalence.make((a, b) => arrayEquivalence(Array.from(a), Array.from(b)))\n}\n\nconst hashMapParse = <R, K, V>(\n  decodeUnknown: ParseResult.DecodeUnknown<ReadonlyArray<readonly [K, V]>, R>\n): ParseResult.DeclarationDecodeUnknown<hashMap_.HashMap<K, V>, R> =>\n(u, options, ast) =>\n  hashMap_.isHashMap(u) ?\n    toComposite(decodeUnknown(Array.from(u), options), hashMap_.fromIterable, ast, u)\n    : ParseResult.fail(new ParseResult.Type(ast, u))\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface HashMapFromSelf<K extends Schema.Any, V extends Schema.Any> extends\n  AnnotableDeclare<\n    HashMapFromSelf<K, V>,\n    hashMap_.HashMap<Schema.Type<K>, Schema.Type<V>>,\n    hashMap_.HashMap<Schema.Encoded<K>, Schema.Encoded<V>>,\n    [K, V]\n  >\n{}\n\n/**\n * @category HashMap transformations\n * @since 3.10.0\n */\nexport const HashMapFromSelf = <K extends Schema.Any, V extends Schema.Any>({ key, value }: {\n  readonly key: K\n  readonly value: V\n}): HashMapFromSelf<K, V> => {\n  return declare(\n    [key, value],\n    {\n      decode: (key, value) => hashMapParse(ParseResult.decodeUnknown(Array$(Tuple(key, value)))),\n      encode: (key, value) => hashMapParse(ParseResult.encodeUnknown(Array$(Tuple(key, value))))\n    },\n    {\n      description: `HashMap<${format(key)}, ${format(value)}>`,\n      pretty: hashMapPretty,\n      arbitrary: hashMapArbitrary,\n      equivalence: hashMapEquivalence\n    }\n  )\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface HashMap<K extends Schema.Any, V extends Schema.Any>\n  extends transform<Array$<Tuple2<K, V>>, HashMapFromSelf<SchemaClass<Schema.Type<K>>, SchemaClass<Schema.Type<V>>>>\n{}\n\n/**\n * @category HashMap transformations\n * @since 3.10.0\n */\nexport const HashMap = <K extends Schema.Any, V extends Schema.Any>({ key, value }: {\n  readonly key: K\n  readonly value: V\n}): HashMap<K, V> => {\n  return transform(\n    Array$(Tuple(key, value)),\n    HashMapFromSelf({ key: typeSchema(asSchema(key)), value: typeSchema(asSchema(value)) }),\n    {\n      strict: true,\n      decode: (i) => hashMap_.fromIterable(i),\n      encode: (a) => Array.from(a)\n    }\n  )\n}\n\nconst listArbitrary =\n  <A>(item: LazyArbitrary<A>, ctx: ArbitraryGenerationContext): LazyArbitrary<list_.List<A>> => (fc) => {\n    const items = fc.array(item(fc))\n    return (ctx.depthIdentifier !== undefined ? fc.oneof(ctx, fc.constant([]), items) : items).map(list_.fromIterable)\n  }\n\nconst listPretty = <A>(item: pretty_.Pretty<A>): pretty_.Pretty<list_.List<A>> => (set) =>\n  `List(${Array.from(set).map((a) => item(a)).join(\", \")})`\n\nconst listEquivalence = <A>(\n  item: Equivalence.Equivalence<A>\n): Equivalence.Equivalence<list_.List<A>> => {\n  const arrayEquivalence = array_.getEquivalence(item)\n  return Equivalence.make((a, b) => arrayEquivalence(Array.from(a), Array.from(b)))\n}\n\nconst listParse = <A, R>(\n  decodeUnknown: ParseResult.DecodeUnknown<ReadonlyArray<A>, R>\n): ParseResult.DeclarationDecodeUnknown<list_.List<A>, R> =>\n(u, options, ast) =>\n  list_.isList(u) ?\n    toComposite(decodeUnknown(Array.from(u), options), list_.fromIterable, ast, u)\n    : ParseResult.fail(new ParseResult.Type(ast, u))\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface ListFromSelf<Value extends Schema.Any> extends\n  AnnotableDeclare<\n    ListFromSelf<Value>,\n    list_.List<Schema.Type<Value>>,\n    list_.List<Schema.Encoded<Value>>,\n    [Value]\n  >\n{}\n\n/**\n * @category List transformations\n * @since 3.10.0\n */\nexport const ListFromSelf = <Value extends Schema.Any>(\n  value: Value\n): ListFromSelf<Value> => {\n  return declare(\n    [value],\n    {\n      decode: (item) => listParse(ParseResult.decodeUnknown(Array$(item))),\n      encode: (item) => listParse(ParseResult.encodeUnknown(Array$(item)))\n    },\n    {\n      description: `List<${format(value)}>`,\n      pretty: listPretty,\n      arbitrary: listArbitrary,\n      equivalence: listEquivalence\n    }\n  )\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface List<Value extends Schema.Any>\n  extends transform<Array$<Value>, ListFromSelf<SchemaClass<Schema.Type<Value>>>>\n{}\n\n/**\n * @category List transformations\n * @since 3.10.0\n */\nexport function List<Value extends Schema.Any>(value: Value): List<Value> {\n  return transform(\n    Array$(value),\n    ListFromSelf(typeSchema(asSchema(value))),\n    {\n      strict: true,\n      decode: (i) => list_.fromIterable(i),\n      encode: (a) => Array.from(a)\n    }\n  )\n}\n\nconst sortedSetArbitrary = <A>(\n  item: LazyArbitrary<A>,\n  ord: Order.Order<A>,\n  ctx: ArbitraryGenerationContext\n): LazyArbitrary<sortedSet_.SortedSet<A>> =>\n(fc) => {\n  const items = fc.array(item(fc))\n  return (ctx.depthIdentifier !== undefined ? fc.oneof(ctx, fc.constant([]), items) : items).map((as) =>\n    sortedSet_.fromIterable(as, ord)\n  )\n}\n\nconst sortedSetPretty = <A>(item: pretty_.Pretty<A>): pretty_.Pretty<sortedSet_.SortedSet<A>> => (set) =>\n  `new SortedSet([${Array.from(sortedSet_.values(set)).map((a) => item(a)).join(\", \")}])`\n\nconst sortedSetParse = <A, R>(\n  decodeUnknown: ParseResult.DecodeUnknown<ReadonlyArray<A>, R>,\n  ord: Order.Order<A>\n): ParseResult.DeclarationDecodeUnknown<sortedSet_.SortedSet<A>, R> =>\n(u, options, ast) =>\n  sortedSet_.isSortedSet(u) ?\n    toComposite(\n      decodeUnknown(Array.from(sortedSet_.values(u)), options),\n      (as): sortedSet_.SortedSet<A> => sortedSet_.fromIterable(as, ord),\n      ast,\n      u\n    )\n    : ParseResult.fail(new ParseResult.Type(ast, u))\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface SortedSetFromSelf<Value extends Schema.Any> extends\n  AnnotableDeclare<\n    SortedSetFromSelf<Value>,\n    sortedSet_.SortedSet<Schema.Type<Value>>,\n    sortedSet_.SortedSet<Schema.Encoded<Value>>,\n    [Value]\n  >\n{}\n\n/**\n * @category SortedSet transformations\n * @since 3.10.0\n */\nexport const SortedSetFromSelf = <Value extends Schema.Any>(\n  value: Value,\n  ordA: Order.Order<Schema.Type<Value>>,\n  ordI: Order.Order<Schema.Encoded<Value>>\n): SortedSetFromSelf<Value> => {\n  return declare(\n    [value],\n    {\n      decode: (item) => sortedSetParse(ParseResult.decodeUnknown(Array$(item)), ordA),\n      encode: (item) => sortedSetParse(ParseResult.encodeUnknown(Array$(item)), ordI)\n    },\n    {\n      description: `SortedSet<${format(value)}>`,\n      pretty: sortedSetPretty,\n      arbitrary: (arb, ctx) => sortedSetArbitrary(arb, ordA, ctx),\n      equivalence: () => sortedSet_.getEquivalence<Schema.Type<Value>>()\n    }\n  )\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface SortedSet<Value extends Schema.Any>\n  extends transform<Array$<Value>, SortedSetFromSelf<SchemaClass<Schema.Type<Value>>>>\n{}\n\n/**\n * @category SortedSet transformations\n * @since 3.10.0\n */\nexport function SortedSet<Value extends Schema.Any>(\n  value: Value,\n  ordA: Order.Order<Schema.Type<Value>>\n): SortedSet<Value> {\n  const to = typeSchema(asSchema(value))\n  return transform(\n    Array$(value),\n    SortedSetFromSelf<typeof to>(to, ordA, ordA),\n    {\n      strict: true,\n      decode: (i) => sortedSet_.fromIterable(i, ordA),\n      encode: (a) => Array.from(sortedSet_.values(a))\n    }\n  )\n}\n\n/**\n * Converts an arbitrary value to a `boolean` by testing whether it is truthy.\n * Uses `!!val` to coerce the value to a `boolean`.\n *\n * @see https://developer.mozilla.org/docs/Glossary/Truthy\n *\n * @category boolean constructors\n * @since 3.10.0\n */\nexport class BooleanFromUnknown extends transform(\n  Unknown,\n  Boolean$,\n  {\n    strict: true,\n    decode: (i) => Predicate.isTruthy(i),\n    encode: identity\n  }\n).annotations({ identifier: \"BooleanFromUnknown\" }) {}\n\n/**\n * Converts an `string` value into its corresponding `boolean`\n * (\"true\" as `true` and \"false\" as `false`).\n *\n * @category boolean transformations\n * @since 3.11.0\n */\nexport class BooleanFromString extends transform(\n  Literal(\"true\", \"false\").annotations({ description: \"a string to be decoded into a boolean\" }),\n  Boolean$,\n  {\n    strict: true,\n    decode: (i) => i === \"true\",\n    encode: (a) => a ? \"true\" : \"false\"\n  }\n).annotations({ identifier: \"BooleanFromString\" }) {}\n\n/**\n * @category Config validations\n * @since 3.10.0\n */\nexport const Config = <A, I extends string>(name: string, schema: Schema<A, I>): config_.Config<A> => {\n  const decodeUnknownEither = ParseResult.decodeUnknownEither(schema)\n  return config_.string(name).pipe(\n    config_.mapOrFail((s) =>\n      decodeUnknownEither(s).pipe(\n        either_.mapLeft((error) => configError_.InvalidData([], ParseResult.TreeFormatter.formatIssueSync(error)))\n      )\n    )\n  )\n}\n\n// ---------------------------------------------\n// Serializable\n// ---------------------------------------------\n\n/**\n * @since 3.10.0\n * @category symbol\n */\nexport const symbolSerializable: unique symbol = Symbol.for(\n  \"effect/Schema/Serializable/symbol\"\n)\n\n/**\n * The `Serializable` trait allows objects to define their own schema for\n * serialization.\n *\n * @since 3.10.0\n * @category model\n */\nexport interface Serializable<A, I, R> {\n  readonly [symbolSerializable]: Schema<A, I, R>\n}\n\n/**\n * @since 3.10.0\n * @category model\n */\nexport declare namespace Serializable {\n  /**\n   * @since 3.10.0\n   */\n  export type Type<T> = T extends Serializable<infer A, infer _I, infer _R> ? A : never\n  /**\n   * @since 3.10.0\n   */\n  export type Encoded<T> = T extends Serializable<infer _A, infer I, infer _R> ? I : never\n  /**\n   * @since 3.10.0\n   */\n  export type Context<T> = T extends Serializable<infer _A, infer _I, infer R> ? R : never\n  /**\n   * @since 3.10.0\n   */\n  export type Any = Serializable<any, any, unknown>\n  /**\n   * @since 3.10.0\n   */\n  export type All =\n    | Any\n    | Serializable<any, never, unknown>\n    | Serializable<never, any, unknown>\n    | Serializable<never, never, unknown>\n}\n\n/**\n * @since 3.10.0\n */\nexport const asSerializable = <S extends Serializable.All>(\n  serializable: S\n): Serializable<Serializable.Type<S>, Serializable.Encoded<S>, Serializable.Context<S>> => serializable as any\n\n/**\n * @since 3.10.0\n * @category accessor\n */\nexport const serializableSchema = <A, I, R>(self: Serializable<A, I, R>): Schema<A, I, R> => self[symbolSerializable]\n\n/**\n * @since 3.10.0\n * @category encoding\n */\nexport const serialize = <A, I, R>(self: Serializable<A, I, R>): Effect.Effect<I, ParseResult.ParseError, R> =>\n  encodeUnknown(self[symbolSerializable])(self)\n\n/**\n * @since 3.10.0\n * @category decoding\n */\nexport const deserialize: {\n  /**\n   * @since 3.10.0\n   * @category decoding\n   */\n  (value: unknown): <A, I, R>(self: Serializable<A, I, R>) => Effect.Effect<A, ParseResult.ParseError, R>\n  /**\n   * @since 3.10.0\n   * @category decoding\n   */\n  <A, I, R>(self: Serializable<A, I, R>, value: unknown): Effect.Effect<A, ParseResult.ParseError, R>\n} = dual(\n  2,\n  <A, I, R>(self: Serializable<A, I, R>, value: unknown): Effect.Effect<A, ParseResult.ParseError, R> =>\n    decodeUnknown(self[symbolSerializable])(value)\n)\n\n/**\n * @since 3.10.0\n * @category symbol\n */\nexport const symbolWithResult: unique symbol = Symbol.for(\n  \"effect/Schema/Serializable/symbolResult\"\n)\n\n/**\n * The `WithResult` trait is designed to encapsulate the outcome of an\n * operation, distinguishing between success and failure cases. Each case is\n * associated with a schema that defines the structure and types of the success\n * or failure data.\n *\n * @since 3.10.0\n * @category model\n */\nexport interface WithResult<Success, SuccessEncoded, Failure, FailureEncoded, ResultR> {\n  readonly [symbolWithResult]: {\n    readonly success: Schema<Success, SuccessEncoded, ResultR>\n    readonly failure: Schema<Failure, FailureEncoded, ResultR>\n  }\n}\n\n/**\n * @since 3.10.0\n * @category model\n */\nexport declare namespace WithResult {\n  /**\n   * @since 3.10.0\n   */\n  export type Success<T> = T extends WithResult<infer _A, infer _I, infer _E, infer _EI, infer _R> ? _A : never\n  /**\n   * @since 3.10.0\n   */\n  export type SuccessEncoded<T> = T extends WithResult<infer _A, infer _I, infer _E, infer _EI, infer _R> ? _I : never\n  /**\n   * @since 3.10.0\n   */\n  export type Failure<T> = T extends WithResult<infer _A, infer _I, infer _E, infer _EI, infer _R> ? _E : never\n  /**\n   * @since 3.10.0\n   */\n  export type FailureEncoded<T> = T extends WithResult<infer _A, infer _I, infer _E, infer _EI, infer _R> ? _EI : never\n\n  /**\n   * @since 3.10.0\n   */\n  export type Context<T> = T extends WithResult<infer _SA, infer _SI, infer _FA, infer _FI, infer R> ? R : never\n  /**\n   * @since 3.10.0\n   */\n  export type Any = WithResult<any, any, any, any, unknown>\n  /**\n   * @since 3.10.0\n   */\n  export type All =\n    | Any\n    | WithResult<any, any, never, never, unknown>\n}\n\n/**\n * @since 3.10.0\n */\nexport const asWithResult = <WR extends WithResult.All>(\n  withExit: WR\n): WithResult<\n  WithResult.Success<WR>,\n  WithResult.SuccessEncoded<WR>,\n  WithResult.Failure<WR>,\n  WithResult.FailureEncoded<WR>,\n  WithResult.Context<WR>\n> => withExit as any\n\n/**\n * @since 3.10.0\n * @category accessor\n */\nexport const failureSchema = <SA, SI, FA, FI, R>(self: WithResult<SA, SI, FA, FI, R>): Schema<FA, FI, R> =>\n  self[symbolWithResult].failure\n\n/**\n * @since 3.10.0\n * @category accessor\n */\nexport const successSchema = <SA, SI, FA, FI, R>(self: WithResult<SA, SI, FA, FI, R>): Schema<SA, SI, R> =>\n  self[symbolWithResult].success\n\nconst exitSchemaCache = globalValue(\n  \"effect/Schema/Serializable/exitSchemaCache\",\n  () => new WeakMap<object, Schema<any, any, any>>()\n)\n\n/**\n * @since 3.10.0\n * @category accessor\n */\nexport const exitSchema = <SA, SI, FA, FI, R>(self: WithResult<SA, SI, FA, FI, R>): Schema<\n  exit_.Exit<SA, FA>,\n  ExitEncoded<SI, FI, unknown>,\n  R\n> => {\n  const proto = Object.getPrototypeOf(self)\n  if (!(symbolWithResult in proto)) {\n    return Exit({\n      failure: failureSchema(self),\n      success: successSchema(self),\n      defect: Defect\n    })\n  }\n  let schema = exitSchemaCache.get(proto)\n  if (schema === undefined) {\n    schema = Exit({\n      failure: failureSchema(self),\n      success: successSchema(self),\n      defect: Defect\n    })\n    exitSchemaCache.set(proto, schema)\n  }\n  return schema\n}\n\n/**\n * @since 3.10.0\n * @category encoding\n */\nexport const serializeFailure: {\n  /**\n   * @since 3.10.0\n   * @category encoding\n   */\n  <FA>(value: FA): <SA, SI, FI, R>(\n    self: WithResult<SA, SI, FA, FI, R>\n  ) => Effect.Effect<FI, ParseResult.ParseError, R>\n  /**\n   * @since 3.10.0\n   * @category encoding\n   */\n  <SA, SI, FA, FI, R>(self: WithResult<SA, SI, FA, FI, R>, value: FA): Effect.Effect<FI, ParseResult.ParseError, R>\n} = dual(\n  2,\n  <SA, SI, FA, FI, R>(self: WithResult<SA, SI, FA, FI, R>, value: FA): Effect.Effect<FI, ParseResult.ParseError, R> =>\n    encode(self[symbolWithResult].failure)(value)\n)\n\n/**\n * @since 3.10.0\n * @category decoding\n */\nexport const deserializeFailure: {\n  /**\n   * @since 3.10.0\n   * @category decoding\n   */\n  (value: unknown): <SA, SI, FA, FI, R>(self: WithResult<SA, SI, FA, FI, R>) => Effect.Effect<FA, ParseResult.ParseError, R>\n  /**\n   * @since 3.10.0\n   * @category decoding\n   */\n  <SA, SI, FA, FI, R>(self: WithResult<SA, SI, FA, FI, R>, value: unknown): Effect.Effect<FA, ParseResult.ParseError, R>\n} = dual(\n  2,\n  <SA, SI, FA, FI, R>(\n    self: WithResult<SA, SI, FA, FI, R>,\n    value: unknown\n  ): Effect.Effect<FA, ParseResult.ParseError, R> => decodeUnknown(self[symbolWithResult].failure)(value)\n)\n\n/**\n * @since 3.10.0\n * @category encoding\n */\nexport const serializeSuccess: {\n  /**\n   * @since 3.10.0\n   * @category encoding\n   */\n  <SA>(value: SA): <SI, FA, FI, R>(\n    self: WithResult<SA, SI, FA, FI, R>\n  ) => Effect.Effect<SI, ParseResult.ParseError, R>\n  /**\n   * @since 3.10.0\n   * @category encoding\n   */\n  <SA, SI, FA, FI, R>(self: WithResult<SA, SI, FA, FI, R>, value: SA): Effect.Effect<SI, ParseResult.ParseError, R>\n} = dual(\n  2,\n  <SA, SI, FA, FI, R>(self: WithResult<SA, SI, FA, FI, R>, value: SA): Effect.Effect<SI, ParseResult.ParseError, R> =>\n    encode(self[symbolWithResult].success)(value)\n)\n\n/**\n * @since 3.10.0\n * @category decoding\n */\nexport const deserializeSuccess: {\n  /**\n   * @since 3.10.0\n   * @category decoding\n   */\n  (value: unknown): <SA, SI, FA, FI, R>(\n    self: WithResult<SA, SI, FA, FI, R>\n  ) => Effect.Effect<SA, ParseResult.ParseError, R>\n  /**\n   * @since 3.10.0\n   * @category decoding\n   */\n  <SA, SI, FA, FI, R>(self: WithResult<SA, SI, FA, FI, R>, value: unknown): Effect.Effect<SA, ParseResult.ParseError, R>\n} = dual(\n  2,\n  <SA, SI, FA, FI, R>(\n    self: WithResult<SA, SI, FA, FI, R>,\n    value: unknown\n  ): Effect.Effect<SA, ParseResult.ParseError, R> => decodeUnknown(self[symbolWithResult].success)(value)\n)\n\n/**\n * @since 3.10.0\n * @category encoding\n */\nexport const serializeExit: {\n  /**\n   * @since 3.10.0\n   * @category encoding\n   */\n  <SA, FA>(value: exit_.Exit<SA, FA>): <SI, FI, R>(\n    self: WithResult<SA, SI, FA, FI, R>\n  ) => Effect.Effect<ExitEncoded<SI, FI, unknown>, ParseResult.ParseError, R>\n  /**\n   * @since 3.10.0\n   * @category encoding\n   */\n  <SA, SI, FA, FI, R>(self: WithResult<SA, SI, FA, FI, R>, value: exit_.Exit<SA, FA>): Effect.Effect<ExitEncoded<SI, FI, unknown>, ParseResult.ParseError, R>\n} = dual(2, <SA, SI, FA, FI, R>(\n  self: WithResult<SA, SI, FA, FI, R>,\n  value: exit_.Exit<SA, FA>\n): Effect.Effect<ExitEncoded<SI, FI, unknown>, ParseResult.ParseError, R> => encode(exitSchema(self))(value))\n\n/**\n * @since 3.10.0\n * @category decoding\n */\nexport const deserializeExit: {\n  /**\n   * @since 3.10.0\n   * @category decoding\n   */\n  (value: unknown): <SA, SI, FA, FI, R>(\n    self: WithResult<SA, SI, FA, FI, R>\n  ) => Effect.Effect<exit_.Exit<SA, FA>, ParseResult.ParseError, R>\n  /**\n   * @since 3.10.0\n   * @category decoding\n   */\n  <SA, SI, FA, FI, R>(self: WithResult<SA, SI, FA, FI, R>, value: unknown): Effect.Effect<exit_.Exit<SA, FA>, ParseResult.ParseError, R>\n} = dual(2, <SA, SI, FA, FI, R>(\n  self: WithResult<SA, SI, FA, FI, R>,\n  value: unknown\n): Effect.Effect<exit_.Exit<SA, FA>, ParseResult.ParseError, R> => decodeUnknown(exitSchema(self))(value))\n\n// ---------------------------------------------\n// SerializableWithResult\n// ---------------------------------------------\n\n/**\n * The `SerializableWithResult` trait is specifically designed to model remote\n * procedures that require serialization of their input and output, managing\n * both successful and failed outcomes.\n *\n * This trait combines functionality from both the `Serializable` and `WithResult`\n * traits to handle data serialization and the bifurcation of operation results\n * into success or failure categories.\n *\n * @since 3.10.0\n * @category model\n */\nexport interface SerializableWithResult<\n  A,\n  I,\n  R,\n  Success,\n  SuccessEncoded,\n  Failure,\n  FailureEncoded,\n  ResultR\n> extends Serializable<A, I, R>, WithResult<Success, SuccessEncoded, Failure, FailureEncoded, ResultR> {}\n\n/**\n * @since 3.10.0\n * @category model\n */\nexport declare namespace SerializableWithResult {\n  /**\n   * @since 3.10.0\n   */\n  export type Context<P> = P extends\n    SerializableWithResult<infer _S, infer _SI, infer SR, infer _A, infer _AI, infer _E, infer _EI, infer RR> ? SR | RR\n    : never\n  /**\n   * @since 3.10.0\n   */\n  export type Any = SerializableWithResult<any, any, any, any, any, any, any, unknown>\n  /**\n   * @since 3.10.0\n   */\n  export type All =\n    | Any\n    | SerializableWithResult<any, any, any, any, any, never, never, unknown>\n}\n\n/**\n * @since 3.10.0\n */\nexport const asSerializableWithResult = <SWR extends SerializableWithResult.All>(\n  procedure: SWR\n): SerializableWithResult<\n  Serializable.Type<SWR>,\n  Serializable.Encoded<SWR>,\n  Serializable.Context<SWR>,\n  WithResult.Success<SWR>,\n  WithResult.SuccessEncoded<SWR>,\n  WithResult.Failure<SWR>,\n  WithResult.FailureEncoded<SWR>,\n  WithResult.Context<SWR>\n> => procedure as any\n\n/**\n * @since 3.10.0\n */\nexport interface TaggedRequest<\n  Tag extends string,\n  A,\n  I,\n  R,\n  SuccessType,\n  SuccessEncoded,\n  FailureType,\n  FailureEncoded,\n  ResultR\n> extends\n  Request.Request<SuccessType, FailureType>,\n  SerializableWithResult<\n    A,\n    I,\n    R,\n    SuccessType,\n    SuccessEncoded,\n    FailureType,\n    FailureEncoded,\n    ResultR\n  >\n{\n  readonly _tag: Tag\n}\n\n/**\n * @since 3.10.0\n */\nexport declare namespace TaggedRequest {\n  /**\n   * @since 3.10.0\n   */\n  export type Any = TaggedRequest<string, any, any, any, any, any, any, any, unknown>\n  /**\n   * @since 3.10.0\n   */\n  export type All =\n    | Any\n    | TaggedRequest<string, any, any, any, any, any, never, never, unknown>\n}\n\n/**\n * @category api interface\n * @since 3.10.0\n */\nexport interface TaggedRequestClass<\n  Self,\n  Tag extends string,\n  Payload extends Struct.Fields,\n  Success extends Schema.All,\n  Failure extends Schema.All\n> extends\n  Class<\n    Self,\n    Payload,\n    Struct.Encoded<Payload>,\n    Struct.Context<Payload>,\n    Struct.Constructor<Omit<Payload, \"_tag\">>,\n    TaggedRequest<\n      Tag,\n      Self,\n      Struct.Encoded<Payload>,\n      Struct.Context<Payload>,\n      Schema.Type<Success>,\n      Schema.Encoded<Success>,\n      Schema.Type<Failure>,\n      Schema.Encoded<Failure>,\n      Schema.Context<Success> | Schema.Context<Failure>\n    >,\n    {}\n  >\n{\n  readonly _tag: Tag\n  readonly success: Success\n  readonly failure: Failure\n}\n\n/**\n * @example\n * ```ts\n * import { Schema } from \"effect\"\n *\n * class MyRequest extends Schema.TaggedRequest<MyRequest>(\"MyRequest\")(\"MyRequest\", {\n *  failure: Schema.String,\n *  success: Schema.Number,\n *  payload: { id: Schema.String }\n * }) {}\n * ```\n *\n * @category classes\n * @since 3.10.0\n */\nexport const TaggedRequest =\n  <Self = never>(identifier?: string) =>\n  <Tag extends string, Payload extends Struct.Fields, Success extends Schema.All, Failure extends Schema.All>(\n    tag: Tag,\n    options: {\n      failure: Failure\n      success: Success\n      payload: Payload\n    },\n    annotations?: ClassAnnotations<Self, Simplify<Struct.Type<{ readonly _tag: tag<Tag> } & Payload>>>\n  ): [Self] extends [never] ? MissingSelfGeneric<\"TaggedRequest\", `\"Tag\", SuccessSchema, FailureSchema, `>\n    : TaggedRequestClass<\n      Self,\n      Tag,\n      { readonly _tag: tag<Tag> } & Payload,\n      Success,\n      Failure\n    > =>\n  {\n    const taggedFields = extendFields({ _tag: getClassTag(tag) }, options.payload)\n    return class TaggedRequestClass extends makeClass({\n      kind: \"TaggedRequest\",\n      identifier: identifier ?? tag,\n      schema: Struct(taggedFields),\n      fields: taggedFields,\n      Base: Request.Class<any, any, { readonly _tag: string }>,\n      annotations\n    }) {\n      static _tag = tag\n      static success = options.success\n      static failure = options.failure\n      get [symbolSerializable]() {\n        return this.constructor\n      }\n      get [symbolWithResult]() {\n        return {\n          failure: options.failure,\n          success: options.success\n        }\n      }\n    } as any\n  }\n\n// -------------------------------------------------------------------------------------------------\n// Equivalence compiler\n// -------------------------------------------------------------------------------------------------\n\n/**\n * Given a schema `Schema<A, I, R>`, returns an `Equivalence` instance for `A`.\n *\n * @category Equivalence\n * @since 3.10.0\n */\nexport const equivalence = <A, I, R>(schema: Schema<A, I, R>): Equivalence.Equivalence<A> => go(schema.ast, [])\n\nconst getEquivalenceAnnotation = AST.getAnnotation<AST.EquivalenceAnnotation<any, any>>(AST.EquivalenceAnnotationId)\n\nconst go = (ast: AST.AST, path: ReadonlyArray<PropertyKey>): Equivalence.Equivalence<any> => {\n  const hook = getEquivalenceAnnotation(ast)\n  if (option_.isSome(hook)) {\n    switch (ast._tag) {\n      case \"Declaration\":\n        return hook.value(...ast.typeParameters.map((tp) => go(tp, path)))\n      case \"Refinement\":\n        return hook.value(go(ast.from, path))\n      default:\n        return hook.value()\n    }\n  }\n  switch (ast._tag) {\n    case \"NeverKeyword\":\n      throw new Error(errors_.getEquivalenceUnsupportedErrorMessage(ast, path))\n    case \"Transformation\":\n      return go(ast.to, path)\n    case \"Declaration\":\n    case \"Literal\":\n    case \"StringKeyword\":\n    case \"TemplateLiteral\":\n    case \"UniqueSymbol\":\n    case \"SymbolKeyword\":\n    case \"UnknownKeyword\":\n    case \"AnyKeyword\":\n    case \"NumberKeyword\":\n    case \"BooleanKeyword\":\n    case \"BigIntKeyword\":\n    case \"UndefinedKeyword\":\n    case \"VoidKeyword\":\n    case \"Enums\":\n    case \"ObjectKeyword\":\n      return Equal.equals\n    case \"Refinement\":\n      return go(ast.from, path)\n    case \"Suspend\": {\n      const get = util_.memoizeThunk(() => go(ast.f(), path))\n      return (a, b) => get()(a, b)\n    }\n    case \"TupleType\": {\n      const elements = ast.elements.map((element, i) => go(element.type, path.concat(i)))\n      const rest = ast.rest.map((annotatedAST) => go(annotatedAST.type, path))\n      return Equivalence.make((a, b) => {\n        if (!Array.isArray(a) || !Array.isArray(b)) {\n          return false\n        }\n        const len = a.length\n        if (len !== b.length) {\n          return false\n        }\n        // ---------------------------------------------\n        // handle elements\n        // ---------------------------------------------\n        let i = 0\n        for (; i < Math.min(len, ast.elements.length); i++) {\n          if (!elements[i](a[i], b[i])) {\n            return false\n          }\n        }\n        // ---------------------------------------------\n        // handle rest element\n        // ---------------------------------------------\n        if (array_.isNonEmptyReadonlyArray(rest)) {\n          const [head, ...tail] = rest\n          for (; i < len - tail.length; i++) {\n            if (!head(a[i], b[i])) {\n              return false\n            }\n          }\n          // ---------------------------------------------\n          // handle post rest elements\n          // ---------------------------------------------\n          for (let j = 0; j < tail.length; j++) {\n            i += j\n            if (!tail[j](a[i], b[i])) {\n              return false\n            }\n          }\n        }\n        return true\n      })\n    }\n    case \"TypeLiteral\": {\n      if (ast.propertySignatures.length === 0 && ast.indexSignatures.length === 0) {\n        return Equal.equals\n      }\n      const propertySignatures = ast.propertySignatures.map((ps) => go(ps.type, path.concat(ps.name)))\n      const indexSignatures = ast.indexSignatures.map((is) => go(is.type, path))\n      return Equivalence.make((a, b) => {\n        if (!Predicate.isRecord(a) || !Predicate.isRecord(b)) {\n          return false\n        }\n        const aStringKeys = Object.keys(a)\n        const aSymbolKeys = Object.getOwnPropertySymbols(a)\n        // ---------------------------------------------\n        // handle property signatures\n        // ---------------------------------------------\n        for (let i = 0; i < propertySignatures.length; i++) {\n          const ps = ast.propertySignatures[i]\n          const name = ps.name\n          const aHas = Object.prototype.hasOwnProperty.call(a, name)\n          const bHas = Object.prototype.hasOwnProperty.call(b, name)\n          if (ps.isOptional) {\n            if (aHas !== bHas) {\n              return false\n            }\n          }\n          if (aHas && bHas && !propertySignatures[i](a[name], b[name])) {\n            return false\n          }\n        }\n        // ---------------------------------------------\n        // handle index signatures\n        // ---------------------------------------------\n        let bSymbolKeys: Array<symbol> | undefined\n        let bStringKeys: Array<string> | undefined\n        for (let i = 0; i < indexSignatures.length; i++) {\n          const is = ast.indexSignatures[i]\n          const encodedParameter = AST.getEncodedParameter(is.parameter)\n          const isSymbol = AST.isSymbolKeyword(encodedParameter)\n          if (isSymbol) {\n            bSymbolKeys = bSymbolKeys || Object.getOwnPropertySymbols(b)\n            if (aSymbolKeys.length !== bSymbolKeys.length) {\n              return false\n            }\n          } else {\n            bStringKeys = bStringKeys || Object.keys(b)\n            if (aStringKeys.length !== bStringKeys.length) {\n              return false\n            }\n          }\n          const aKeys = isSymbol ? aSymbolKeys : aStringKeys\n          for (let j = 0; j < aKeys.length; j++) {\n            const key = aKeys[j]\n            if (\n              !Object.prototype.hasOwnProperty.call(b, key) || !indexSignatures[i](a[key], b[key])\n            ) {\n              return false\n            }\n          }\n        }\n        return true\n      })\n    }\n    case \"Union\": {\n      const searchTree = ParseResult.getSearchTree(ast.types, true)\n      const ownKeys = Reflect.ownKeys(searchTree.keys)\n      const len = ownKeys.length\n      return Equivalence.make((a, b) => {\n        let candidates: Array<AST.AST> = []\n        if (len > 0 && Predicate.isRecordOrArray(a)) {\n          for (let i = 0; i < len; i++) {\n            const name = ownKeys[i]\n            const buckets = searchTree.keys[name].buckets\n            if (Object.prototype.hasOwnProperty.call(a, name)) {\n              const literal = String(a[name])\n              if (Object.prototype.hasOwnProperty.call(buckets, literal)) {\n                candidates = candidates.concat(buckets[literal])\n              }\n            }\n          }\n        }\n        if (searchTree.otherwise.length > 0) {\n          candidates = candidates.concat(searchTree.otherwise)\n        }\n        const tuples = candidates.map((ast) => [go(ast, path), ParseResult.is({ ast } as any)] as const)\n        for (let i = 0; i < tuples.length; i++) {\n          const [equivalence, is] = tuples[i]\n          if (is(a) && is(b)) {\n            if (equivalence(a, b)) {\n              return true\n            }\n          }\n        }\n        return false\n      })\n    }\n  }\n}\n\nconst SymbolStruct = TaggedStruct(\"symbol\", {\n  key: String$\n}).annotations({ description: \"an object to be decoded into a globally shared symbol\" })\n\nconst SymbolFromStruct = transformOrFail(\n  SymbolStruct,\n  SymbolFromSelf,\n  {\n    strict: true,\n    decode: (i) => decodeSymbol(i.key),\n    encode: (a, _, ast) => ParseResult.map(encodeSymbol(a, ast), (key) => SymbolStruct.make({ key }))\n  }\n)\n\n/** @ignore */\nclass PropertyKey$ extends Union(String$, Number$, SymbolFromStruct).annotations({ identifier: \"PropertyKey\" }) {}\n\nexport {\n  /**\n   * @since 3.12.5\n   */\n  PropertyKey$ as PropertyKey\n}\n\n/**\n * @category ArrayFormatter\n * @since 3.12.5\n */\nexport class ArrayFormatterIssue extends Struct({\n  _tag: propertySignature(Literal(\n    \"Pointer\",\n    \"Unexpected\",\n    \"Missing\",\n    \"Composite\",\n    \"Refinement\",\n    \"Transformation\",\n    \"Type\",\n    \"Forbidden\"\n  )).annotations({ description: \"The tag identifying the type of parse issue\" }),\n  path: propertySignature(Array$(PropertyKey$)).annotations({\n    description: \"The path to the property where the issue occurred\"\n  }),\n  message: propertySignature(String$).annotations({ description: \"A descriptive message explaining the issue\" })\n}).annotations({\n  identifier: \"ArrayFormatterIssue\",\n  description: \"Represents an issue returned by the ArrayFormatter formatter\"\n}) {}\n","/**\n * The Redacted module provides functionality for handling sensitive information\n * securely within your application. By using the `Redacted` data type, you can\n * ensure that sensitive values are not accidentally exposed in logs or error\n * messages.\n *\n * @since 3.3.0\n */\nimport type * as Equal from \"./Equal.js\"\nimport * as Equivalence from \"./Equivalence.js\"\nimport * as redacted_ from \"./internal/redacted.js\"\nimport type { Pipeable } from \"./Pipeable.js\"\nimport type { Covariant } from \"./Types.js\"\n\n/**\n * @since 3.3.0\n * @category symbols\n */\nexport const RedactedTypeId: unique symbol = redacted_.RedactedTypeId\n\n/**\n * @since 3.3.0\n * @category symbols\n */\nexport type RedactedTypeId = typeof RedactedTypeId\n\n/**\n * @since 3.3.0\n * @category models\n */\nexport interface Redacted<out A = string> extends Redacted.Variance<A>, Equal.Equal, Pipeable {\n}\n\n/**\n * @since 3.3.0\n */\nexport declare namespace Redacted {\n  /**\n   * @since 3.3.0\n   * @category models\n   */\n  export interface Variance<out A> {\n    readonly [RedactedTypeId]: {\n      readonly _A: Covariant<A>\n    }\n  }\n\n  /**\n   * @since 3.3.0\n   * @category type-level\n   */\n  export type Value<T extends Redacted<any>> = [T] extends [Redacted<infer _A>] ? _A : never\n}\n\n/**\n * @since 3.3.0\n * @category refinements\n */\nexport const isRedacted: (u: unknown) => u is Redacted<unknown> = redacted_.isRedacted\n\n/**\n * This function creates a `Redacted<A>` instance from a given value `A`,\n * securely hiding its content.\n *\n * @example\n * ```ts\n * import { Redacted } from \"effect\"\n *\n * const API_KEY = Redacted.make(\"1234567890\")\n * ```\n *\n * @since 3.3.0\n * @category constructors\n */\nexport const make: <A>(value: A) => Redacted<A> = redacted_.make\n\n/**\n * Retrieves the original value from a `Redacted` instance. Use this function\n * with caution, as it exposes the sensitive data.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Redacted } from \"effect\"\n *\n * const API_KEY = Redacted.make(\"1234567890\")\n *\n * assert.equal(Redacted.value(API_KEY), \"1234567890\")\n * ```\n *\n * @since 3.3.0\n * @category getters\n */\nexport const value: <A>(self: Redacted<A>) => A = redacted_.value\n\n/**\n * Erases the underlying value of a `Redacted` instance, rendering it unusable.\n * This function is intended to ensure that sensitive data does not remain in\n * memory longer than necessary.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Redacted } from \"effect\"\n *\n * const API_KEY = Redacted.make(\"1234567890\")\n *\n * assert.equal(Redacted.value(API_KEY), \"1234567890\")\n *\n * Redacted.unsafeWipe(API_KEY)\n *\n * assert.throws(() => Redacted.value(API_KEY), new Error(\"Unable to get redacted value\"))\n * ```\n *\n * @since 3.3.0\n * @category unsafe\n */\nexport const unsafeWipe: <A>(self: Redacted<A>) => boolean = redacted_.unsafeWipe\n\n/**\n * Generates an equivalence relation for `Redacted<A>` values based on an\n * equivalence relation for the underlying values `A`. This function is useful\n * for comparing `Redacted` instances without exposing their contents.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Redacted, Equivalence } from \"effect\"\n *\n * const API_KEY1 = Redacted.make(\"1234567890\")\n * const API_KEY2 = Redacted.make(\"1-34567890\")\n * const API_KEY3 = Redacted.make(\"1234567890\")\n *\n * const equivalence = Redacted.getEquivalence(Equivalence.string)\n *\n * assert.equal(equivalence(API_KEY1, API_KEY2), false)\n * assert.equal(equivalence(API_KEY1, API_KEY3), true)\n * ```\n *\n * @category equivalence\n * @since 3.3.0\n */\nexport const getEquivalence = <A>(isEquivalent: Equivalence.Equivalence<A>): Equivalence.Equivalence<Redacted<A>> =>\n  Equivalence.make((x, y) => isEquivalent(value(x), value(y)))\n","/**\n * Determines if a given element is a DOM element name (i.e. not a React component).\n */\nfunction isHostComponent(element) {\n  return typeof element === 'string';\n}\nexport default isHostComponent;","import isHostComponent from \"../isHostComponent/index.js\";\n\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\nfunction appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n  return {\n    ...otherProps,\n    ownerState: {\n      ...otherProps.ownerState,\n      ...ownerState\n    }\n  };\n}\nexport default appendOwnerState;","import clsx from 'clsx';\nimport extractEventHandlers from \"../extractEventHandlers/index.js\";\nimport omitEventHandlers from \"../omitEventHandlers/index.js\";\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nfunction mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\n    const mergedStyle = {\n      ...additionalProps?.style,\n      ...externalForwardedProps?.style,\n      ...externalSlotProps?.style\n    };\n    const props = {\n      ...additionalProps,\n      ...externalForwardedProps,\n      ...externalSlotProps\n    };\n    if (joinedClasses.length > 0) {\n      props.className = joinedClasses;\n    }\n    if (Object.keys(mergedStyle).length > 0) {\n      props.style = mergedStyle;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  }\n\n  // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = extractEventHandlers({\n    ...externalForwardedProps,\n    ...externalSlotProps\n  });\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n\n  // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n  const joinedClasses = clsx(internalSlotProps?.className, additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\n  const mergedStyle = {\n    ...internalSlotProps?.style,\n    ...additionalProps?.style,\n    ...externalForwardedProps?.style,\n    ...externalSlotProps?.style\n  };\n  const props = {\n    ...internalSlotProps,\n    ...additionalProps,\n    ...otherPropsWithoutEventHandlers,\n    ...componentsPropsWithoutEventHandlers\n  };\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}\nexport default mergeSlotProps;","/**\n * Extracts event handlers from a given object.\n * A prop is considered an event handler if it is a function and its name starts with `on`.\n *\n * @param object An object to extract event handlers from.\n * @param excludeKeys An array of keys to exclude from the returned object.\n */\nfunction extractEventHandlers(object, excludeKeys = []) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default extractEventHandlers;","/**\n * Removes event handlers from the given object.\n * A field is considered an event handler if it is a function with a name beginning with `on`.\n *\n * @param object Object to remove event handlers from.\n * @returns Object with event handlers removed.\n */\nfunction omitEventHandlers(object) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default omitEventHandlers;","/**\n * If `componentProps` is a function, calls it with the provided `ownerState`.\n * Otherwise, just returns `componentProps`.\n */\nfunction resolveComponentProps(componentProps, ownerState, slotState) {\n  if (typeof componentProps === 'function') {\n    return componentProps(ownerState, slotState);\n  }\n  return componentProps;\n}\nexport default resolveComponentProps;","'use client';\n\n// TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- process.env never changes, dependency arrays are intentionally ignored\n/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(props) {\n  const {\n    controlled,\n    default: defaultProp,\n    name,\n    state = 'value'\n  } = props;\n  // isControlled is ignored in the hook dependency lists as it should never change.\n  const {\n    current: isControlled\n  } = React.useRef(controlled !== undefined);\n  const [valueState, setValue] = React.useState(defaultProp);\n  const value = isControlled ? controlled : valueState;\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(() => {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([`MUI: A component is changing the ${isControlled ? '' : 'un'}controlled ${state} state of ${name} to be ${isControlled ? 'un' : ''}controlled.`, 'Elements should not switch from uncontrolled to controlled (or vice versa).', `Decide between using a controlled or uncontrolled ${name} ` + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [state, name, controlled]);\n    const {\n      current: defaultValue\n    } = React.useRef(defaultProp);\n    React.useEffect(() => {\n      if (!isControlled && JSON.stringify(defaultProp) !== JSON.stringify(defaultValue)) {\n        console.error([`MUI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. ` + `To suppress this warning opt to use a controlled ${name}.`].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n  const setValueIfUncontrolled = React.useCallback(newValue => {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n\n  // TODO: provide overloads for the useControlled function to account for the case where either\n  // controlled or default is not undefined.\n  // In that case the return type should be [T, React.Dispatch<React.SetStateAction<T>>]\n  // otherwise it should be [T | undefined, React.Dispatch<React.SetStateAction<T | undefined>>]\n  return [value, setValueIfUncontrolled];\n}","'use client';\n\nimport * as React from 'react';\nimport FormControlContext from \"./FormControlContext.js\";\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","'use client';\n\nimport * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst FormControlContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\nexport default FormControlContext;"],"names":["Symbol","replace","decode","DecodeExceptionTypeId","RedactedSymbolKey","i","bytes","isString","fiberRuntime","level","dual","core","length","self","RedactedTypeId","stripped","HashSet","add","logger","bigint2","for","Base64","SecretTypeId","effect","addLogger","Common","input","toString","ConfigTypeId","that","e","layer","removeLogger","NodeInspectSymbol","DEFAULT_PRECISION","FINITE_INT_REGEX","replaceLoggerScoped","secret","addLoggerScoped","str","Hash","value","bytesToHex","name","supervisor","current","supervisor_","Zip","pipe","primitive","text","redactedRegistry","get","cached","Internal","runtimeFlagsPatch","runtimeFlags","CooperativeYielding","Equal","_","Interruption","TypeId","index","enable","OpSupervision","u","defineProperty","make","internal","WindDown","create","proto","encode","Base64Url","set","disable","getBase64Code","charCodeAt","result","join","withRuntimeFlagsScoped","buffer","toJSON","_id","RuntimeMetrics","Error","message","iterable","map","char","configProvider","nested","delete","Context","tracer","span","charCode","arguments","fromCharCode","Either","exit","options","onEnd","makeSpanScoped","try","code","Hex","byte","port","base64abc","buildWithScope","Number","isInteger","base64codes","undefined","config","o","integer","decodeHex","Chunk","chunk","repeat","EncodeException","bigint0","isSourceUnavailable","isNaN","configError","Date","bigint1","BigInt","bigint10","catch","zero","fail","DecodeException","Object","divide","Option","number","reduceWithContext","normalize","normalized","isDecodeException","trail","digits","literal","literals","String","found","substring","valuesString","scale","n","mapOrFail","label","toUpperCase","find","empty","right","duration","string","Duration","InvalidData","decrement","makeZoned","f","a","Equivalence","equivalence","mapAttempt","error","failSync","_tag","OpCodes","orElseIf","Order","fallback","first","second","suspend","condition","constTrue","flatMap","flatten","orElse","if","order","lessThanOrEqualTo","multiply","option","fresh","ConfigError","description","parse","branded","subtract","hashSet","InternalSecret","fromString","nameOrConfig","isConfig","fromFunction","constructor","either","mapLeft","brandErrors","brandError","divideWithPrecision","num","den","precision","fromIterable","denNegative","newConfig","negateResult","numNegative","liftPredicate","MissingData","quotient","remainder","all","arg","Array","isArray","tuple","iterator","count","struct","sync","q","mapError","r","entries","hashMap","setZone","slice","key","roundTerminal","rest","zipWith","record","clamp","succeed","constant","unwrap","pos","min","lazy","OP_LAZY","validate","merge","zoneUnsafeMakeNamed","withDefault","table","max","valueConfig","zoneMakeOffset","hasProperty","withDescription","zoneMakeNamed","x","zip","zoneMakeNamedEffect","some","wrapped","passthrough","zoneMakeLocal","fromEntries","k","validation","project","abs","locallyEffect","left","unsafeDivide","def","RangeError","isMissingDataOnly","described","fiberRefLocallyWith","zoneToString","gcd","t","locallyScoped","b","OP_ZIP_WITH","fiberRefLocallyScopedWith","scmp","sign","retry","setZoneNamed","scoped","unsafeSetZoneNamed","lessThan","scopedDiscard","scopedContext","service","distance","succeedContext","greaterThan","sqrt","greaterThanOrEqualTo","unsafeSqrt","none","sumAll","out","distanceDurationEither","collection","syncContext","tap","tapError","distanceDuration","tapErrorCause","toRuntime","toRuntimeWithMemoMap","toNumber","provide","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","between","isFuture","unsafeIsFuture","isPast","unwrapEffect","s","unsafeIsPast","trim","unwrapScoped","setClock","clock","defaultServices","currentServices","clockTag","toDateUtc","setConfigProvider","circularLayer","toDate","parentSpan","zonedOffset","random","randomTag","setRequestBatching","requestBatching","fiberRefLocallyScoped","currentRequestBatching","zonedOffsetIso","requestCaching","query","currentCacheEnabled","toEpochMillis","setRequestCache","cache","isEffect","currentCache","scheduler","Scheduler","currentScheduler","negate","removeTime","setTracer","setTracerEnabled","enabled","currentTracerEnabled","divisor","toParts","currentTracerTimingEnabled","Math","setUnhandledErrorLogLevel","currentUnhandledErrorLogLevel","toPartsUtc","setVersionMismatchErrorLogLevel","currentVersionMismatchErrorLogLevel","withSpan","withParentSpan","unsafeRemainder","getPartUtc","makeMemoMap","buildWithMemoMap","getPart","equals","setParts","tag","context","c","unsafeGet","setPartsUtc","CurrentTimeZone","Tag","unsafeFromNumber","getOrThrowWith","safeFromNumber","setZoneCurrent","Effect","zone","fromNumber","withCurrentZone","provideService","isFinite","includes","lead","withCurrentZoneLocal","provideServiceEffect","withCurrentZoneOffset","offset","base","exp","seperator","isSafeInteger","test","withCurrentZoneNamed","dot","search","nowInCurrentZone","now","mutate","mutateUtc","unsafeFromString","mapEpochMillis","format","toExponential","negative","absolute","before","after","location","withDate","zeros","complete","withDateUtc","match","isZero","head","tail","output","isNegative","addDuration","subtractDuration","unsafeToNumber","startOf","isPositive","isBigDecimalArgs","args","isBigDecimal","endOf","ceil","truncated","truncate","sum","nearest","floor","formatLocal","formatUtc","formatIntl","formatIso","digitAt","scaled","formatIsoDate","formatIsoDateUtc","formatIsoOffset","round","mode","formatIsoZoned","layerCurrentZone","Layer","halfCeil","layerCurrentZoneOffset","halfFloor","digit","zoneId","layerCurrentZoneLocal","Predicate","array_","getErrorMessage","getKeysForIndexSignature","reason","details","path","ast","parameter","isNonEmptyReadonlyArray","util_","formatPath","keys","getOwnPropertySymbols","from","memoizeThunk","done","getInvalidArgumentErrorMessage","getUnsupportedSchemaErrorMessage","getMissingAnnotationErrorMessage","getArbitraryUnsupportedErrorMessage","formatDate","date","getArbitraryMissingAnnotationErrorMessage","toISOString","getArbitraryEmptyEnumErrorMessage","CIRCULAR","getEquivalenceUnsupportedErrorMessage","formatUnknown","whitespace","seen","WeakSet","gap","ind","d","safeToString","getJSONSchemaMissingAnnotationErrorMessage","getJSONSchemaMissingIdentifierAnnotationErrorMessage","getJSONSchemaUnsupportedPostRestElementsErrorMessage","getJSONSchemaUnsupportedKeyErrorMessage","formatPropertyKey","wrap","v","body","ctor","prototype","getPrettyMissingAnnotationErrorMessage","ownKeys","getPrettyNeverErrorMessage","Reflect","getPrettyNoMatchingSchemaErrorMessage","actual","go","getSchemaExtendErrorMessage","y","has","getSchemaUnsupportedLiteralSpanErrorMessage","inner","getASTUnsupportedSchemaErrorMessage","isDate","isFunction","getASTUnsupportedKeySchemaErrorMessage","JSON","stringify","isNumber","isBoolean","isSymbol","getASTUnsupportedLiteralErrorMessage","isBigInt","Set","Map","getASTDuplicateIndexSignatureErrorMessage","type","getASTIndexSignatureParameterErrorMessage","getASTRequiredElementFollowinAnOptionalElementErrorMessage","isObject","getASTDuplicatePropertySignatureTransformationErrorMessage","getASTUnsupportedRenameSchemaErrorMessage","getASTDuplicatePropertySignatureErrorMessage","isNonEmpty","isSingle","formatPathKey","DateFromSelfSchemaId","GreaterThanSchemaId","GreaterThanOrEqualToSchemaId","LessThanSchemaId","LessThanOrEqualToSchemaId","IntSchemaId","NonNaNSchemaId","FiniteSchemaId","JsonNumberSchemaId","BetweenSchemaId","GreaterThanBigintSchemaId","GreaterThanOrEqualToBigIntSchemaId","LessThanBigIntSchemaId","LessThanOrEqualToBigIntSchemaId","BetweenBigintSchemaId","MinLengthSchemaId","MaxLengthSchemaId","LengthSchemaId","MinItemsSchemaId","MaxItemsSchemaId","ItemsCountSchemaId","Cause","identity","globalValue","TaggedError","Exit","BrandAnnotationId","Pointer","SchemaIdAnnotationId","issue","MessageAnnotationId","MissingMessageAnnotationId","IdentifierAnnotationId","Unexpected","TitleAnnotationId","AutoTitleAnnotationId","DescriptionAnnotationId","ExamplesAnnotationId","DefaultAnnotationId","Missing","JSONSchemaAnnotationId","ArbitraryAnnotationId","PrettyAnnotationId","EquivalenceAnnotationId","DocumentationAnnotationId","ConcurrencyAnnotationId","Composite","BatchingAnnotationId","issues","ParseIssueTitleAnnotationId","ParseOptionsAnnotationId","DecodingFallbackAnnotationId","SurrogateAnnotationId","Refinement","StableFilterAnnotationId","kind","getAnnotation","annotated","hasOwnProperty","call","annotations","getBrandAnnotation","getSchemaIdAnnotation","getMessageAnnotation","Transformation","getMissingMessageAnnotation","getTitleAnnotation","getAutoTitleAnnotation","getIdentifierAnnotation","getDescriptionAnnotation","Type","getExamplesAnnotation","getDefaultAnnotation","getJSONSchemaAnnotation","getDocumentationAnnotation","Forbidden","getConcurrencyAnnotation","getBatchingAnnotation","getParseIssueTitleAnnotation","getParseOptionsAnnotation","isParseError","ParseErrorTypeId","getDecodingFallbackAnnotation","ParseError","getSurrogateAnnotation","getStableFilterAnnotation","exists","JSONIdentifierAnnotationId","TreeFormatter","formatIssueSync","getJSONIdentifierAnnotation","Inspectable","ParseJsonSchemaId","Declaration","typeParameters","parseError","decodeUnknown","encodeUnknown","_try","getOrElse","getExpected","fromOption","isEither","toJSONAnnotations","createASTGuard","onLeft","onRight","isDeclaration","Literal","eitherOrUndefined","mapBoth","onFailure","onSuccess","isLiteral","$null","catchAll","mergeInternalOptions","overrideOptions","UniqueSymbol","symbol","getEither","isDecoding","parser","goMemo","getSync","getOption","getRight","getEffect","isEffectAllowed","isUniqueSymbol","decodeUnknownSync","schema","UndefinedKeyword","decodeUnknownOption","decodeUnknownEither","decodeUnknownPromise","runPromise","encodeUnknownSync","undefinedKeyword","encodeUnknownOption","encodeUnknownEither","isUndefinedKeyword","encodeUnknownPromise","VoidKeyword","decodeSync","formatKeyword","decodeOption","decodeEither","decodePromise","voidKeyword","isVoidKeyword","validateSync","AST","typeAST","NeverKeyword","validateOption","validateEither","validatePromise","is","exact","isNeverKeyword","asserts","isLeft","encodeSync","encodeOption","encodeEither","unknownKeyword","UnknownKeyword","encodePromise","decodeMemoMap","WeakMap","encodeMemoMap","memoMap","memo","AnyKeyword","raw","parseOptionsAnnotation","parserWithOptions","isSome","decodingFallbackAnnotation","handleForbidden","getConcurrency","getOrUndefined","getBatching","allErrors","errors","ef","hasStableFilter","isComposite","filter","onNone","onSome","ep","anyKeyword","isAnyKeyword","to","dropRightRefinement","StringKeyword","transform","getFinalTransformation","transformation","defaultParseOption","i2","fromRefinement","isUndefined","isNever","stringKeyword","isStringKeyword","enums","NumberKeyword","regex","getTemplateLiteralRegExp","elements","annotatedAST","requiredTypes","isOptional","concat","requiredLen","expectedIndexes","concurrency","batching","Arr","es","stepKey","len","numberKeyword","push","isNumberKeyword","BooleanKeyword","queue","te","booleanKeyword","sortByIndex","nk","isBooleanKeyword","BigIntKeyword","void","bigIntKeyword","isBigIntKeyword","SymbolKeyword","j","symbolKeyword","isSymbolKeyword","ObjectKeyword","objectKeyword","computeResult","isNonEmptyArray","cqueue","isObjectKeyword","state","copy","forEach","Enums","discard","propertySignatures","indexSignatures","expectedKeysMap","expectedKeys","ps","expectedAST","Union","expected","isRecord","isEnums","isTemplateLiteralSpanType","onExcessPropertyError","onExcessProperty","onExcessPropertyPreserve","types","every","inputKeys","templateLiteralSpanUnionTypeToString","templateLiteralSpanTypeToString","isExact","hasKey","TemplateLiteralSpan","TemplateLiteral","spans","indexSignature","formatTemplateLiteral","keu","isRight","vpr","isTemplateLiteral","tv","OptionalType","propertyOrder","indexOf","getRestASTs","TupleType","isReadonly","assign","hasOptionalElement","hasIllegalRequiredElement","searchTree","errors_","getSearchTree","ownKeysLen","astTypesLen","formatTuple","candidates","isRecordOrArray","buckets","formattedElements","matchLeft","onEmpty","onNonEmpty","formattedHead","wrappedHead","formattedTail","literalsUnion","errorAst","TypeLiteral","PropertySignature","fakePropertySignature","isTupleType","otherwise","candidate","pr","finalResult","isParameter","IndexSignature","refinement","getLiterals","annotation","propertySignature","encodedAST","element","parameters","encodedParameter","getEncodedParameter","members","member","formatTypeLiteral","tags","hash","formatIndexSignatures","iss","isTypeLiteral","sortCandidates","sort","mapInput","isRefinement","SyncScheduler","fiber","runFork","flush","literalMap","unsafePoll","isSuccess","boolean","bigint","cause","isUnion","unify","cs","uniques","pretty","compare","pst","propertySignatureTransformations","makeTree","forest","formatIssue","formatTree","drawTree","getOrThrow","runSync","formatError","formatErrorSync","tree","draw","indentation","isLast","formatTransformationKind","formatRefinementKind","getAnnotated","Either_void","getCurrentMessage","messageAnnotation","isMembers","neverKeyword","union","override","createParseIssueGuard","mapMembers","as","isTransformation","getMessage","currentMessage","useInnerMessage","toJSONMemoMap","flatMapNullable","Suspend","getRefinementExpected","getDefaultTypeMessage","formatTypeMessage","getParseIssueTitle","formatForbiddenMessage","formatUnexpectedMessage","formatMissingMessage","missingMessageAnnotation","liftThrowable","isSuspend","parseIssueTitle","makeArrayFormatterIssue","getOrElseExpected","ArrayFormatter","getArrayFormatterIssues","parentTag","FinalTransformation","createTransformationGuard","isFinalTransformation","ComposeTransformation","composeTransformation","isComposeTransformation","PropertySignatureTransformation","isRenamingPropertySignatureTransformation","TypeLiteralTransformation","fromKeys","toKeys","isTypeLiteralTransformation","overrides","getOwnPropertyDescriptors","surrogate","getPrototypeOf","keyof","_keyof","STRING_KEYWORD_PATTERN","NUMBER_KEYWORD_PATTERN","getTemplateLiteralSpanTypePattern","capture","regexp","escape","getTemplateLiteralPattern","handleTemplateLiteralSpanTypeParens","top","pattern","spanPattern","RegExp","getTemplateLiteralCapturingRegExp","getPropertySignatures","getPropertyKeys","getPropertyKeyIndexedAccess","getIndexSignatures","getNumberIndexedAccess","hasOptional","getTypeLiteralPropertySignature","ops","findFirst","reduce","intersection","pick","pss","names","ts","omit","orUndefined","partial","required","mutable","changeMap","getCompiler","compile","pickAnnotations","annotationIds","id","omitAnnotations","preserveTransformationAnnotations","restASTs","p","preserve","changed","allocate","fa","getTransformationFrom","encodedAST_","isBound","borrowedAnnotations","identifier","getJSONIdentifier","suffix","encodedBoundAST","equalsTemplateLiteralSpan","equalsEnums","equalsUnion","getEquivalence","intersectionWith","compose","ab","cd","rename","mapping","getBrands","brands","brand","pruneUndefined","onTransformation","hasUndefined","pruned","redacted_","bigDecimal_","bigInt_","chunk_","config_","configError_","isRedacted","duration_","either_","Encoding","exit_","fastCheck_","fiberId_","hashMap_","hashSet_","internalCause_","schemaId_","list_","number_","option_","ParseResult","pipeArguments","Request","scheduler_","sortedSet_","string_","struct_","SchemaClass","variance","mergeSchemaAnnotations","Encoded","unsafeWipe","_A","_I","_R","makeStandardResult","makeStandardFailureResult","cause_","makeStandardFailureFromParseIssue","isEquivalent","standardSchemaV1","StandardSchemaV1Class","version","vendor","matchEffect","Promise","resolve","addObserver","builtInAnnotations","schemaId","missingMessage","title","examples","default","documentation","jsonSchema","arbitrary","parseOptions","decodingFallback","toASTAnnotations","asSchema","encodedSchema","encodedBoundSchema","typeSchema","isSchema","getDefaultLiteralAST","makeLiteralClass","LiteralClass","Never","pickLiteral","_schema","UniqueSymbolFromSelf","getDefaultEnumsAST","makeEnumsClass","EnumsClass","h","item","next","getTemplateLiteralParserCoercedElement","encoded","strict","NumberFromString","hasCoercions","coerced","TemplateLiteralParser","params","encodedSchemas","schemas","param","re","Tuple","TemplateLiteralParserClass","transformOrFail","exec","source","declareConstructor","makeDeclareClass","tp","declarePrimitive","DeclareClass","declare","BrandSchemaId","fromBrand","makeBrandClass","predicate","InstanceOfSchemaId","instanceOf","Undefined","Void","Null","null","Unknown","Any","BigIntFromSelf","SymbolFromSelf","String$","Number$","Boolean$","Object$","getDefaultUnionAST","m","makeUnionClass","UnionClass","NullOr","UndefinedOr","NullishOr","ElementImpl","optionalElement","_Token","getDefaultTupleTypeAST","el","makeTupleTypeClass","TupleTypeClass","makeArrayClass","ArrayClass","Array$","makeNonEmptyArrayClass","NonEmptyArrayClass","NonEmptyArray","ArrayEnsure","ensure","NonEmptyArrayEnsure","of","formatPropertySignatureToken","PropertySignatureDeclaration","defaultValue","token","FromPropertySignature","fromKey","ToPropertySignature","mergeSignatureAnnotations","PropertySignatureTypeId","isPropertySignature","PropertySignatureImpl","_TypeToken","_Key","_EncodedToken","_HasDefault","makePropertySignature","PropertySignatureWithFromImpl","withConstructorDefault","applyDefaultValue","withDecodingDefault","withDefaults","defaults","decoding","optionalToRequired","requiredToOptional","optionalToOptional","optionalPropertySignatureAST","isNullable","nullable","asOption","asOptionEncode","onNoneEncoding","OptionFromSelf_","isNotNull","isNotUndefined","optional","optionalWith","preserveMissingMessageAnnotation","getDefaultTypeLiteralAST","fields","records","transformations","field","toAnnotations","issFrom","issTo","lazilyMergeDefaults","makeTypeLiteralClass","TypeLiteralClass","props","propsWithDefaults","getDisableValidationMakeOption","Struct","TaggedStruct","makeRecordClass","RecordClass","Record","pluck","BrandClass","partialWith","intersectTypeLiterals","findIndex","extendAST","preserveRefinementAnnotations","addRefinementToMembers","asts","intersectUnionMembers","getTypes","xs","ys","fromA","fromI","toI","toA","extend","makeTransformationClass","RefineSchemaId","makeRefineClass","RefineClass","fromFilterPredicateReturnTypeItem","toFilterParseIssue","filterMap","filterEffect","filterReturnType","TransformationClass","_options","_ast","transformLiteral","transformLiterals","pairs","attachPropertySignature","TrimmedSchemaId","trimmed","maxLength","minLength","PatternSchemaId","lastIndex","StartsWithSchemaId","startsWith","formatted","EndsWithSchemaId","endsWith","IncludesSchemaId","searchString","LowercasedSchemaId","lowercased","toLowerCase","Lowercased","UppercasedSchemaId","uppercased","Uppercased","CapitalizedSchemaId","capitalized","Capitalized","UncapitalizedSchemaId","uncapitalized","Uncapitalized","Char","nonEmptyString","Lowercase","Uppercase","Capitalize","capitalize","Uncapitalize","uncapitalize","Trimmed","NonEmptyTrimmedString","Trim","split","separator","getParseJsonTransformation","reviver","replacer","space","parseJson","schemaOrOptions","NonEmptyString","UUIDSchemaId","uuidRegexp","UUID","fc","uuid","ULIDSchemaId","ulidRegexp","ULID","ulid","URLFromSelf","URL","webUrl","url","URL$","finite","exclusiveMinimum","minimum","MultipleOfSchemaId","multipleOf","positiveDivisor","int","exclusiveMaximum","maximum","nonNaN","positive","nonPositive","nonNegative","parseNumber","Finite","Int","NonNaN","Positive","Negative","NonPositive","NonNegative","JsonNumber","Not","boolean_","not","encodeSymbol","sym","keyFor","decodeSymbol","Symbol$","GreaterThanBigIntSchemaId","greaterThanBigInt","greaterThanOrEqualToBigInt","lessThanBigInt","lessThanOrEqualToBigInt","BetweenBigIntSchemaId","betweenBigInt","positiveBigInt","negativeBigInt","nonNegativeBigInt","nonPositiveBigInt","clampBigInt","BigInt$","PositiveBigIntFromSelf","PositiveBigInt","NegativeBigIntFromSelf","NegativeBigInt","NonPositiveBigIntFromSelf","NonPositiveBigInt","NonNegativeBigIntFromSelf","NonNegativeBigInt","BigIntFromNumber","redactedArbitrary","toComposite","eff","redactedParse","RedactedFromSelf","Redacted","DurationFromSelf","isDuration","oneof","infinity","bigInt","nanos","maxSafeNat","millis","DurationFromNanos","toNanos","NonNegativeInt","DurationFromMillis","toMillis","DurationValueMillis","DurationValueNanos","DurationValueInfinity","durationValueInfinity","DurationValue","FiniteHRTime","InfiniteHRTime","HRTime","isDurationValue","seconds","clampDuration","betweenDuration","LessThanDurationSchemaId","lessThanDuration","LessThanOrEqualToDurationSchemaId","lessThanOrEqualToDuration","GreaterThanDurationSchemaId","greaterThanDuration","GreaterThanOrEqualToDurationSchemaId","greaterThanOrEqualToDuration","BetweenDurationSchemaId","Uint8ArrayFromSelf","isUint8Array","u8arr","uint8Array","Uint8","Uint8Array$","Uint8Array","makeUint8ArrayTransformation","decodeException","Uint8ArrayFromBase64","decodeBase64","encodeBase64","Uint8ArrayFromBase64Url","decodeBase64Url","encodeBase64Url","Uint8ArrayFromHex","encodeHex","makeEncodingTransformation","StringFromBase64","decodeBase64String","StringFromBase64Url","decodeBase64UrlString","StringFromHex","decodeHexString","StringFromUriComponent","decodeUriComponent","encodeUriComponent","encodeException","minItems","maxItems","itemsCount","OptionFromSelf","headNonEmpty","headOrElse","ValidDateSchemaId","validDate","getTime","noInvalidDate","LessThanDateSchemaId","lessThanDate","LessThanOrEqualToDateSchemaId","lessThanOrEqualToDate","GreaterThanDateSchemaId","greaterThanDate","GreaterThanOrEqualToDateSchemaId","greaterThanOrEqualToDate","BetweenDateSchemaId","betweenDate","DateFromSelf","ValidDateFromSelf","DateFromString","Date$","DateFromNumber","DateTimeUtcFromSelf","dateTime","isDateTime","isUtc","unsafeFromDate","decodeDateTimeUtc","unsafeMake","DateTimeUtcFromNumber","DateTimeUtcFromDate","DateTimeUtc","timeZoneOffsetArbitrary","TimeZoneOffsetFromSelf","isTimeZoneOffset","TimeZoneOffset","timeZoneNamedArbitrary","constantFrom","Intl","supportedValuesOf","TimeZoneNamedFromSelf","isTimeZoneNamed","TimeZoneNamed","TimeZoneFromSelf","TimeZone","zoneFromString","timeZoneArbitrary","DateTimeZonedFromSelf","isZoned","timeZone","unsafeMakeZoned","DateTimeZoned","makeZonedFromString","OptionNoneEncoded","optionSomeEncoded","optionEncoded","optionDecode","optionArbitrary","ctx","optionPretty","optionParse","isOption","isNone","makeNoneEncoded","makeSomeEncoded","value_","OptionFromNullOr","fromNullable","getOrNull","OptionFromNullishOr","OptionFromUndefinedOr","OptionFromNonEmptyTrimmedString","rightEncoded","leftEncoded","eitherEncoded","eitherDecode","eitherArbitrary","eitherPretty","eitherParse","parseRight","decodeUnknownLeft","EitherFromSelf","makeLeftEncoded","makeRightEncoded","right_","left_","EitherFromUnion","toright","toleft","fromRight","fromLeft","mapArbitrary","items","array","depthIdentifier","readonlyMapPretty","readonlyMapEquivalence","arrayEquivalence","ka","va","kb","vb","readonlyMapParse","isMap","mapFromSelf_","Key","Value","ReadonlyMapFromSelf","MapFromSelf","ReadonlyMap","ReadonlyMapFromRecord","MapFromRecord","setArbitrary","readonlySetPretty","values","readonlySetEquivalence","readonlySetParse","isSet","setFromSelf_","ReadonlySetFromSelf","SetFromSelf","ReadonlySet","bigDecimalPretty","val","bigDecimalArbitrary","BigDecimalFromSelf","BigDecimal","BigDecimalFromNumber","GreaterThanBigDecimalSchemaId","greaterThanBigDecimal","GreaterThanOrEqualToBigDecimalSchemaId","greaterThanOrEqualToBigDecimal","LessThanBigDecimalSchemaId","lessThanBigDecimal","LessThanOrEqualToBigDecimalSchemaId","lessThanOrEqualToBigDecimal","PositiveBigDecimalSchemaId","positiveBigDecimal","PositiveBigDecimalFromSelf","NonNegativeBigDecimalSchemaId","nonNegativeBigDecimal","NonNegativeBigDecimalFromSelf","NegativeBigDecimalSchemaId","negativeBigDecimal","NegativeBigDecimalFromSelf","NonPositiveBigDecimalSchemaId","nonPositiveBigDecimal","NonPositiveBigDecimalFromSelf","BetweenBigDecimalSchemaId","betweenBigDecimal","formattedMinimum","formattedMaximum","clampBigDecimal","chunkArbitrary","chunkPretty","toReadonlyArray","chunkParse","isChunk","isEmpty","ChunkFromSelf","nonEmptyChunkArbitrary","unsafeFromNonEmptyArray","nonEmptyChunkPretty","nonEmptyChunkParse","NonEmptyChunkFromSelf","NonEmptyChunk","decodeData","data_","dataArbitrary","dataPretty","dataParse","isEqual","DataFromSelf","Data","isField","isFields","getFields","hasFields","getSchemaFromFieldsOr","fieldsOr","getFieldsFromFieldsOr","Class","makeClass","Base","getClassTag","TaggedClass","newFields","taggedFields","extendFields","hasMessageField","TaggedErrorClass","disableToString","enumerable","configurable","disableValidation","astCache","getClassAnnotations","classSymbol","typeAnnotations","transformationAnnotations","encodedAnnotations","typeSchema_","declarationSurrogate","typeSide","constructorSchema","encodedSide","transformationSurrogate","fallbackInstanceOf","klass","declaration","arb","newFieldsOr","newSchema","extendedFields","transformedFields","transformOrFailFrom","writable","FiberIdNoneEncoded","FiberIdRuntimeEncoded","startTimeMillis","FiberIdCompositeEncoded","FiberIdEncoded","fiberIdArbitrary","letrec","tie","None","Runtime","FiberId","fiberIdDecode","fiberIdPretty","fiberId","FiberIdFromSelf","isFiberId","runtime","composite","fiberIdEncode","causeDieEncoded","defect","CauseEmptyEncoded","causeFailEncoded","CauseInterruptEncoded","causeEncodedId","causeEncoded","error_","defect_","suspended","causeArbitrary","Empty","Fail","Die","Interrupt","Sequential","Parallel","causeDecode","causePretty","causeParse","isCause","causeEncode","CauseFromSelf","die","interrupt","sequential","parallel","Defect","err","stack","prettyErrorMessage","exitFailureEncoded","exitSuccessEncoded","exitEncoded","exitDecode","failCause","exitArbitrary","exitPretty","exitParse","decodeUnknownValue","decodeUnknownCause","isExit","ExitFromSelf","failure","success","success_","failure_","hashSetArbitrary","hashSetPretty","hashSetEquivalence","hashSetParse","isHashSet","HashSetFromSelf","hashMapArbitrary","hashMapPretty","hashMapEquivalence","hashMapParse","isHashMap","HashMapFromSelf","HashMap","listArbitrary","listPretty","listEquivalence","listParse","isList","ListFromSelf","List","sortedSetArbitrary","ord","sortedSetPretty","sortedSetParse","isSortedSet","SortedSetFromSelf","ordA","ordI","SortedSet","BooleanFromUnknown","isTruthy","BooleanFromString","Config","symbolSerializable","asSerializable","serializable","serializableSchema","serialize","deserialize","symbolWithResult","asWithResult","withExit","failureSchema","successSchema","exitSchemaCache","exitSchema","serializeFailure","deserializeFailure","serializeSuccess","deserializeSuccess","serializeExit","deserializeExit","asSerializableWithResult","procedure","TaggedRequest","payload","TaggedRequestClass","getEquivalenceAnnotation","hook","aStringKeys","aSymbolKeys","aHas","bHas","bSymbolKeys","bStringKeys","aKeys","tuples","SymbolStruct","SymbolFromStruct","PropertyKey$","ArrayFormatterIssue"],"mappings":"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,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ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CP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAO,CACR,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAO,CACR,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAO,CACR,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAO,CACR,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,IAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAO,CACR,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAO,CACR,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAO,CACR,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAO,CACR,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAO,CACR,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAO,CACR,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAO,CACR,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAO,CACR,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAO,CACR,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAO,CACR,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAO,CACR,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAO,CACR,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,KAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,MAAQ,CACT,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAS,MAAQ,CAClB,CAAC,MAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAQ,CACT,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAQ,CACT,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAQ,CACT,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAQ,CACT,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAQ,CACT,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAQ,CACT,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAQ,CACT,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAQ,CACT,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAQ,CACT,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAQ,CACT,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,MAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAQ,CACT,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAS,OAAQ,CAClB,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAQ,CACT,CAAC,OAAQ,CACZ,CACY,GAAuC,CAChD,CAAC,IAAM,IAAK,CACZ,CAAC,IAAM,IAAK,CACZ,CAAC,IAAM,IAAK,CACZ,CAAC,IAAM,IAAK,CACZ,CAAC,IAAM,IAAK,CACZ,CAAC,IAAM,IAAK,CACZ,CAAC,IAAM,IAAK,CACZ,CAAC,IAAM,IAAK,CACZ,CAAC,IAAM,IAAM,CACb,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,IAAM,CACP,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,IAAO,IAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAO,KAAM,CACd,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAM,CACP,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAO,CACR,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAO,CACR,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAO,CACR,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAO,CACR,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAO,CACR,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,KAAQ,KAAO,CAChB,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAO,CACR,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB,CAAC,MAAQ,MAAO,CAChB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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268]}