{"version":3,"sources":["turbopack:///[project]/apps/web/src/features/visual-effect/lib/examples-manifest.ts","turbopack:///[project]/apps/web/src/app/dashboard/visual-effect/[exampleId]/page.tsx"],"sourcesContent":["import type { ExampleMeta } from \"./example-types\";\n\n// This is the single source of truth for all examples\n// Examples are listed in the exact order they should appear\nexport const examplesManifest: Array<ExampleMeta> = [\n  // Constructors\n  {\n    id: \"effect-succeed\",\n    name: \"Effect.succeed\",\n    description: \"Create an effect that always succeeds with a given value\",\n    section: \"constructors\",\n  },\n  {\n    id: \"effect-fail\",\n    name: \"Effect.fail\",\n    description: \"Create an effect that represents a recoverable error\",\n    section: \"constructors\",\n  },\n  {\n    id: \"effect-die\",\n    name: \"Effect.die\",\n    description: \"Create an effect that terminates with an unrecoverable defect\",\n    section: \"constructors\",\n  },\n  {\n    id: \"effect-sync\",\n    name: \"Effect.sync\",\n    description: \"Create an effect from a synchronous side-effectful computation\",\n    section: \"constructors\",\n  },\n  {\n    id: \"effect-promise\",\n    name: \"Effect.promise\",\n    description: \"Create an effect from an asynchronous computation guaranteed to succeed\",\n    section: \"constructors\",\n  },\n  {\n    id: \"effect-sleep\",\n    name: \"Effect.sleep\",\n    description: \"Create an effect that suspends execution for a given duration\",\n    section: \"constructors\",\n  },\n\n  // Concurrency\n  {\n    id: \"effect-all\",\n    name: \"Effect.all\",\n    description: \"Combine multiple effects into one, returning results based on input structure\",\n    section: \"concurrency\",\n  },\n  {\n    id: \"effect-race\",\n    name: \"Effect.race\",\n    description: \"Race two effects and return the result of the first successful one\",\n    section: \"concurrency\",\n  },\n  {\n    id: \"effect-raceall\",\n    name: \"Effect.raceAll\",\n    description: \"Race multiple effects and return the first successful result\",\n    section: \"concurrency\",\n  },\n  {\n    id: \"effect-foreach\",\n    name: \"Effect.forEach\",\n    description: \"Execute an effectful operation for each element in an iterable\",\n    section: \"concurrency\",\n  },\n  // {\n  //   id: \"effect-semaphore\",\n  //   name: \"Effect.Semaphore\",\n  //   description: \"Limit concurrent access to shared resources\",\n  //   section: \"concurrency\",\n  // },\n  // {\n  //   id: \"effect-ratelimiter\",\n  //   name: \"Effect.RateLimiter\",\n  //   description: \"Throttle operations to prevent overload\",\n  //   section: \"concurrency\",\n  // },\n\n  // Error Handling\n  {\n    id: \"effect-all-short-circuit\",\n    name: \"Effect.all\",\n    variant: \"short circuit\",\n    description: \"Stop execution on the first error encountered\",\n    section: \"error handling\",\n  },\n  {\n    id: \"effect-orelse\",\n    name: \"Effect.orElse\",\n    description: \"Try one effect, and if it fails, fall back to another effect\",\n    section: \"error handling\",\n  },\n  {\n    id: \"effect-timeout\",\n    name: \"Effect.timeout\",\n    description: \"Add a time limit to an effect, failing with timeout if exceeded\",\n    section: \"error handling\",\n  },\n  {\n    id: \"effect-eventually\",\n    name: \"Effect.eventually\",\n    description: \"Run an effect repeatedly until it succeeds, ignoring errors\",\n    section: \"error handling\",\n  },\n  {\n    id: \"effect-partition\",\n    name: \"Effect.partition\",\n    description: \"Execute effects and partition results into successes and failures\",\n    section: \"error handling\",\n  },\n  {\n    id: \"effect-validate\",\n    name: \"Effect.validate\",\n    description: \"Accumulate validation errors instead of short-circuiting\",\n    section: \"error handling\",\n  },\n\n  // Schedule\n  {\n    id: \"effect-repeat-spaced\",\n    name: \"Effect.repeat\",\n    description: \"Repeat an effect with a fixed delay between each execution\",\n    section: \"schedule\",\n    variant: \"spaced\",\n  },\n  {\n    id: \"effect-repeat-while-output\",\n    name: \"Effect.repeat\",\n    variant: \"whileOutput\",\n    description: \"Repeat while output matches a condition\",\n    section: \"schedule\",\n  },\n  {\n    id: \"effect-retry-recurs\",\n    name: \"Effect.retry\",\n    description: \"Retry an effect a fixed number of times\",\n    section: \"schedule\",\n    variant: \"recurs\",\n  },\n  {\n    id: \"effect-retry-exponential\",\n    name: \"Effect.retry\",\n    variant: \"exponential\",\n    description: \"Retry with exponential backoff\",\n    section: \"schedule\",\n  },\n\n  // Ref\n  {\n    id: \"ref-make\",\n    name: \"Ref.make\",\n    description: \"Create a concurrency-safe mutable reference\",\n    section: \"ref\",\n  },\n  {\n    id: \"ref-update-and-get\",\n    name: \"Ref.updateAndGet\",\n    description: \"Update a ref and return the new value\",\n    section: \"ref\",\n  },\n\n  // Scope\n  {\n    id: \"effect-add-finalizer\",\n    name: \"Effect.addFinalizer\",\n    description: \"Register cleanup actions in a scope\",\n    section: \"scope\",\n  },\n  {\n    id: \"effect-acquire-release\",\n    name: \"Effect.acquireRelease\",\n    description: \"Acquire resources with guaranteed cleanup\",\n    section: \"scope\",\n  },\n];\n\n// Section callout content\nexport const sectionCallouts: Partial<Record<ExampleMeta[\"section\"], string>> = {};\n//   {\n//     \"error handling\": `**Error Handling** in Effect is **type-safe** and **composable**. Effects track potential errors at the type level, enabling precise error recovery and handling strategies.\n\n// Effect provides powerful tools like **catchAll**, **catchTag**, **retry**, and **either** to handle different failure scenarios. Errors are tracked as union types, ensuring you know exactly what can go wrong and handle it appropriately.`,\n\n//     schedule: `**Scheduling** enables **repeating** and **retrying** effects with sophisticated timing control. Schedules are composable patterns that define when and how often effects should execute.\n\n// Use schedules to implement **retry policies** for resilient error handling, **repetition patterns** for recurring tasks, and **complex timing behaviors** by combining simple schedules into sophisticated recurrence patterns.`,\n\n//     ref: `**Refs** are Effect's solution for **state management** in concurrent applications. They enable safe communication and shared state between different fibers in your program.\n\n// Unlike regular variables, refs provide **controlled state updates** that work safely across concurrent operations, ensuring consistency even when multiple fibers access the same state simultaneously.`,\n\n//     scope: `**Scopes** represent the **lifetime of resources** and ensure efficient cleanup and safe resource handling. They manage a stack of **finalizers** that define how to release resources.\n\n// The key guarantee is that finalizers are executed **no matter what** â€” whether the effect succeeds, fails, dies, or is interrupted.`,\n//   };\n\n// Helper function to get metadata by ID\nexport function getExampleMeta(id: string): ExampleMeta | undefined {\n  return examplesManifest.find((meta) => meta.id === id);\n}\n\n// Helper function to load example component dynamically\nexport async function loadExampleComponent(id: string) {\n  const mod = await import(`../examples/${id}`);\n  return mod.default;\n}\n","import type { Metadata } from \"next\";\nimport { examplesManifest, getExampleMeta } from \"@/features/visual-effect/lib/examples-manifest\";\n\nexport const dynamicParams = false;\n\n// Build-time helper\nexport async function generateStaticParams() {\n  return examplesManifest.map((example) => ({ exampleId: example.id }));\n}\n\n// Dynamic metadata generation for each example route\nexport async function generateMetadata({ params }: { params: Promise<{ exampleId: string }> }): Promise<Metadata> {\n  const { exampleId } = await params;\n\n  try {\n    const meta = getExampleMeta(exampleId);\n    if (!meta) {\n      return {\n        title: \"Example Not Found - Visual Effect\",\n        description: \"The requested example could not be found\",\n      };\n    }\n\n    const title = `${meta.name}${meta.variant ? ` ${meta.variant}` : \"\"} - Visual Effect`;\n\n    return {\n      title,\n      description: meta.description,\n    };\n  } catch {\n    // Fallback to default metadata\n    return {\n      title: \"Visual Effect - Interactive Effect Playground\",\n      description: \"Interactive examples of TypeScript's beautiful Effect library\",\n    };\n  }\n}\n\nexport default function ExamplePage() {\n  return null; // nothing mounts, so no state loss\n}\n"],"names":[],"mappings":"qaAIO,IAAM,EAAuC,CAElD,CACE,GAAI,iBACJ,KAAM,iBACN,YAAa,2DACb,QAAS,cACX,EACA,CACE,GAAI,cACJ,KAAM,cACN,YAAa,uDACb,QAAS,cACX,EACA,CACE,GAAI,aACJ,KAAM,aACN,YAAa,gEACb,QAAS,cACX,EACA,CACE,GAAI,cACJ,KAAM,cACN,YAAa,iEACb,QAAS,cACX,EACA,CACE,GAAI,iBACJ,KAAM,iBACN,YAAa,0EACb,QAAS,cACX,EACA,CACE,GAAI,eACJ,KAAM,eACN,YAAa,gEACb,QAAS,cACX,EAGA,CACE,GAAI,aACJ,KAAM,aACN,YAAa,gFACb,QAAS,aACX,EACA,CACE,GAAI,cACJ,KAAM,cACN,YAAa,qEACb,QAAS,aACX,EACA,CACE,GAAI,iBACJ,KAAM,iBACN,YAAa,+DACb,QAAS,aACX,EACA,CACE,GAAI,iBACJ,KAAM,iBACN,YAAa,iEACb,QAAS,aACX,EAeA,CACE,GAAI,2BACJ,KAAM,aACN,QAAS,gBACT,YAAa,gDACb,QAAS,gBACX,EACA,CACE,GAAI,gBACJ,KAAM,gBACN,YAAa,+DACb,QAAS,gBACX,EACA,CACE,GAAI,iBACJ,KAAM,iBACN,YAAa,kEACb,QAAS,gBACX,EACA,CACE,GAAI,oBACJ,KAAM,oBACN,YAAa,8DACb,QAAS,gBACX,EACA,CACE,GAAI,mBACJ,KAAM,mBACN,YAAa,oEACb,QAAS,gBACX,EACA,CACE,GAAI,kBACJ,KAAM,kBACN,YAAa,2DACb,QAAS,gBACX,EAGA,CACE,GAAI,uBACJ,KAAM,gBACN,YAAa,6DACb,QAAS,WACT,QAAS,QACX,EACA,CACE,GAAI,6BACJ,KAAM,gBACN,QAAS,cACT,YAAa,0CACb,QAAS,UACX,EACA,CACE,GAAI,sBACJ,KAAM,eACN,YAAa,0CACb,QAAS,WACT,QAAS,QACX,EACA,CACE,GAAI,2BACJ,KAAM,eACN,QAAS,cACT,YAAa,iCACb,QAAS,UACX,EAGA,CACE,GAAI,WACJ,KAAM,WACN,YAAa,8CACb,QAAS,KACX,EACA,CACE,GAAI,qBACJ,KAAM,mBACN,YAAa,wCACb,QAAS,KACX,EAGA,CACE,GAAI,uBACJ,KAAM,sBACN,YAAa,sCACb,QAAS,OACX,EACA,CACE,GAAI,yBACJ,KAAM,wBACN,YAAa,4CACb,QAAS,OACX,EACD,CC3KM,eAAe,IACpB,OAAO,EAAiB,GAAG,CAAC,AAAC,GAAa,EAAE,KAAH,KAAc,EAAQ,EAAE,AAAC,CAAC,EACrE,CAGO,eAAe,EAAiB,QAAE,CAAM,CAA8C,EAC3F,GAAM,CAAE,WAAS,CAAE,CAAG,MAAM,EAE5B,GAAI,CACF,IAAM,ED0LD,EAAiB,GC1LT,CD0La,CAAC,AAAC,GAAS,EAAK,EAAE,GC1LhB,ED0LqB,CCzLjD,GAAI,CAAC,EACH,IADS,EACF,CACL,MAAO,oCACP,YAAa,0CACf,EAKF,MAAO,CACL,MAHY,CAAA,EAAG,EAAK,IAAI,CAAA,EAAG,EAAK,OAAO,CAAG,CAAC,CAAC,EAAE,EAAK,OAAO,CAAA,CAAE,CAAG,GAAG,gBAAgB,CAAC,CAInF,YAAa,EAAK,WACpB,AAD+B,CAEjC,CAAE,KAAM,CAEN,MAAO,CACL,MAAO,gDACP,YAAa,+DACf,CACF,CACF,CAEe,SAAS,IACtB,OAAO,IACT,EADe,mCAAmC,IApCrB"}