services:
  redis:
    image: redis:latest
    container_name: beep-redis
    ports:
      - "${REDIS_PORT:-6379}:${REDIS_PORT:-6379}"
    volumes:
      - redis_data:/data
  postgres:
    container_name: beep-db
    image: postgres:16-alpine

    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    ports:
      - "${DB_PG_PORT:-5432}:${DB_PG_PORT:-5432}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - jaeger-network
    restart: unless-stopped

#   grafana:
#     image: grafana/otel-lgtm:0.11.10
#     container_name: grafana
#     restart: unless-stopped
#     ports:
#       - "4000:3000"
#       - "4318:4318"
#     volumes:
#       - ./docker/grafana/otelcol-config.yaml:/otel-lgtm/otelcol-config.yaml:ro
  jaeger:
    container_name: rpc-tutorial-jaeger
    image: jaegertracing/all-in-one:latest
    command:
      - "--collector.otlp.http.cors.allowed-headers=*"
      - "--collector.otlp.http.tls.enabled=false"
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - QUERY_BASE_PATH=/
    networks:
      - jaeger-network
    restart: unless-stopped

networks:
  jaeger-network:
    driver: bridge
volumes:
  redis_data:
  postgres_data:
    driver: local
