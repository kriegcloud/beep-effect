########################################################################################################################
# ╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║                                                   🐝 BEEP CONFIG                                                 ║
# ║                                              Environment Configuration                                           ║
# ╚══════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
########################################################################################################################
#
# 📋 BEEP ENVIRONMENT CONFIGURATION TEMPLATE
#
# This file serves as a template for your .env file.
# Copy this file to .env and fill in the values.
#
# ⚠️  IMPORTANT NOTES:
# - Never commit your .env file to version control
# - Keep all sensitive values in a secure password manager
# - This file uses variable interpolation (${VARIABLE}) which requires dotenv-expand
# - Standard dotenv will NOT expand ${VARIABLE} references without additional setup
#
# 📖 Documentation: https://your-docs-url.com/configuration
# 🆘 Support: support@beep.com
#
# ┌─────────────────────────────────────────────────────────────────┐
# │ 🚀 QUICK SETUP COMMANDS                                         │
# └─────────────────────────────────────────────────────────────────┘
#
# 1. Copy this file:        cp .env.example .env
# 2. Generate secrets:      bun run gen:secrets
# 4. Start services:        bun run db:up
# 5. Run migrations:        bun run db:migrate
#
########################################################################################################################

# ┌─────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
# │ 🚀 APPLICATION CORE                                                                                             │
# └─────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘

# APP_NAME: Application identifier used throughout the system
APP_NAME="beep"

# APP_ENV: Environment mode - affects logging, debugging, and feature flags
# Values: dev | staging | prod
# Default: "dev" (enables debug features, verbose logging)
APP_ENV="dev"

# Development: "localhost" | Production: "yourdomain.com"
APP_DOMAIN="localhost"

# APP_ADMIN_EMAILS: Comma-separated list of administrator email addresses
# Example: "admin@beep.com,support@beep.com,security@beep.com"
# Used for: Error notifications, admin account creation, security alerts
APP_ADMINS_EMAILS="admin@beep.com,support@beep.com,security@beep.com"

# APP_ADMIN_USER_IDS: Comma-separated UUIDs for admin users
# Generate new UUIDs: node -e "console.log(('user__' + require('crypto').randomUUID()).repeat(1))"
# not a real one
APP_ADMIN_USER_IDS="user__0ba24928-9507-470e-970e-df9870ac1cae"

# ┌─────────────────────────────────────────────────────────────────┐
# │ 📝 LOGGING CONFIGURATION                                        │
# └─────────────────────────────────────────────────────────────────┘

# APP_LOG_FORMAT: Controls how logs are formatted and displayed
# Values: pretty (colored, human-readable) | json (structured) | logFmt | structured
# Default: "pretty" (development), "json" (production)
APP_LOG_FORMAT="pretty"

# APP_LOG_LEVEL: Controls verbosity of application logs
# Values: All | Debug | Error | Fatal | Info | Trace | None | Warning
# Default: "All" (development), "Error" (production)
APP_LOG_LEVEL="All"

# ┌─────────────────────────────────────────────────────────────────┐
# │ 🔗 SERVICE ENDPOINTS                                            │
# │ Internal service communication ports and URLs                   │
# └─────────────────────────────────────────────────────────────────┘

# MCP (Model Context Protocol) Service
APP_MCP_URL="http://${APP_DOMAIN}:8081"

# API Service (Backend REST API)
APP_API_URL="http://${APP_DOMAIN}:3000"

# Authentication Service
APP_AUTH_PATH="/api/auth"
APP_AUTH_URL="http://${APP_DOMAIN}:3000"

# Client Application (Next.js Frontend)
APP_CLIENT_URL="http://${APP_DOMAIN}:3000"

# ╭──────────────────────────────────────────────────────────────────╮
# │                     📊 OBSERVABILITY & MONITORING                │
# ╰──────────────────────────────────────────────────────────────────╯

# OpenTelemetry (OTLP) Trace Collection
OTLP_HOST="http://localhost:4318"
OTLP_TRACE_EXPORTER_URL="http://localhost:4318/v1/traces"
OTLP_LOG_EXPORTER_URL="http://localhost:4318/v1/logs"

# ╭──────────────────────────────────────────────────────────────────╮
# │                        📧 EMAIL SERVICES                         │
# ╰──────────────────────────────────────────────────────────────────╯

# Email Configuration
EMAIL_FROM="user@yourdomain.com"
EMAIL_TEST="user@yourdomain.com"

# Resend API (Transactional Email Service)
# Get your API key from: https://resend.com/api-keys
EMAIL_RESEND_API_KEY="placeholder"

# ╭──────────────────────────────────────────────────────────────────╮
# │                          🤖 AI SERVICES                          │
# ╰──────────────────────────────────────────────────────────────────╯

# AI_ANTHROPIC_API_KEY: Claude API access
# Get from: https://console.anthropic.com/
AI_ANTHROPIC_API_KEY="placeholder"

# AI_OPENAI_API_KEY: OpenAI GPT API access
# Get from: https://platform.openai.com/api-keys
AI_OPENAI_API_KEY="placeholder"

# ELEVENLABS_API_KEY: ElevenLabs API access
# https://elevenlabs.io/docs/api-reference/authentication#api-keys
ELEVENLABS_API_KEY="placeholder"
# ELEVENLABS_AGENT_ID: ElevenLabs agent ID
# https://elevenlabs.io/docs/conversational-ai/libraries/web-sockets#using-agent-id
ELEVENLABS_AGENT_ID="placeholder"

# ╭──────────────────────────────────────────────────────────────────╮
# │                       📈 MARKETING & ANALYTICS                   │
# ╰──────────────────────────────────────────────────────────────────╯

# Dub.co API (Link shortening and analytics)
# Get from: https://dub.co/settings/tokens
MARKETING_DUB_TOKEN="placeholder"

# ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓
# ▓                        💾 DATABASE CONFIGURATION              ▓
# ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓

# PostgreSQL Database Configuration
DB_PG_HOST="localhost"
DB_PG_PORT="5432"
DB_PG_USER="postgres"
DB_PG_PASSWORD="postgres"
DB_PG_DATABASE="postgres"
DB_PG_URL="postgres://${DB_PG_USER}:${DB_PG_PASSWORD}@${DB_PG_HOST}:${DB_PG_PORT}/${DB_PG_DATABASE}"
DB_PG_SSL="false"
DB_PG_DEBUG="true"

# ╭──────────────────────────────────────────────────────────────────╮
# │                        🗄️ KEY-VALUE STORE                         │
# ╰──────────────────────────────────────────────────────────────────╯

# Redis Configuration (Caching, Sessions, Queues)
KV_REDIS_HOST="${APP_DOMAIN}"
KV_REDIS_PORT="6379"
KV_REDIS_PASSWORD=""
KV_REDIS_URL="redis://${KV_REDIS_PASSWORD}@${KV_REDIS_HOST}:${KV_REDIS_PORT}"

# ╭──────────────────────────────────────────────────────────────────╮
# │                         ☁️ CLOUD SERVICES                         │
# ╰──────────────────────────────────────────────────────────────────╯

# Amazon Web Services (AWS)
CLOUD_AWS_REGION="placeholder"
CLOUD_AWS_ACCESS_KEY_ID="placeholder"
CLOUD_AWS_SECRET_ACCESS_KEY="placeholder"
CLOUD_AWS_S3_BUCKET_NAME="placeholder"
# Google Cloud Services
CLOUD_GOOGLE_CAPTCHA_SECRET_KEY="placeholder"
CLOUD_GOOGLE_CAPTCHA_SITE_KEY="placeholder"

# ╭──────────────────────────────────────────────────────────────────╮
# │                      🔐 OAUTH PROVIDERS                          │
# │ Social login integrations                                        │
# ╰──────────────────────────────────────────────────────────────────╯

# Microsoft Azure AD / Office 365
OAUTH_PROVIDER_MICROSOFT_TENANT_ID="placeholder"
OAUTH_PROVIDER_MICROSOFT_CLIENT_ID="placeholder"
OAUTH_PROVIDER_MICROSOFT_CLIENT_SECRET="placeholder"

# Google OAuth 2.0
OAUTH_PROVIDER_GOOGLE_CLIENT_ID="placeholder"
OAUTH_PROVIDER_GOOGLE_CLIENT_SECRET="placeholder"

# Discord OAuth
OAUTH_PROVIDER_DISCORD_CLIENT_ID="placeholder"
OAUTH_PROVIDER_DISCORD_CLIENT_SECRET="placeholder"

# GitHub OAuth
OAUTH_PROVIDER_GITHUB_CLIENT_ID="placeholder"
OAUTH_PROVIDER_GITHUB_CLIENT_SECRET="placeholder"

# LinkedIn OAuth
OAUTH_PROVIDER_LINKEDIN_CLIENT_ID="placeholder"
OAUTH_PROVIDER_LINKEDIN_CLIENT_SECRET="placeholder"

# X (Twitter) OAuth
OAUTH_PROVIDER_TWITTER_CLIENT_ID="placeholder"
OAUTH_PROVIDER_TWITTER_CLIENT_SECRET="placeholder"

# Facebook OAuth
OAUTH_PROVIDER_FACEBOOK_CLIENT_ID="placeholder"
OAUTH_PROVIDER_FACEBOOK_CLIENT_SECRET="placeholder"

# OAUTH_PROVIDER_NAMES: Enabled OAuth providers
# Values: microsoft,google,github,linkedin,twitter,facebook
# Leave empty to disable social login entirely
# Example: "google,github,linkedin"
OAUTH_PROVIDER_NAMES="google,github,linkedin,twitter"

# ┌─────────────────────────────────────────────────────────────────┐
# │ 🌍 PUBLIC VARIABLES (Safe for client-side)                      │
# │ These will be exposed in your frontend bundle                   │
# │ ⚠️  Never include sensitive data in NEXT_PUBLIC_ variables       │
# └─────────────────────────────────────────────────────────────────┘

NEXT_PUBLIC_ENV="${APP_ENV}"
NEXT_PUBLIC_APP_NAME="${APP_NAME}"
NEXT_PUBLIC_APP_DOMAIN="${APP_DOMAIN}"
NEXT_PUBLIC_AUTH_PROVIDER_NAMES="${OAUTH_PROVIDER_NAMES}"
NEXT_PUBLIC_API_URL="${APP_API_URL}"
NEXT_PUBLIC_OTLP_TRACE_EXPORTER_URL="${OTLP_TRACE_EXPORTER_URL}"
NEXT_PUBLIC_OTLP_LOG_EXPORTER_URL="${OTLP_LOG_EXPORTER_URL}"
NEXT_PUBLIC_LOG_LEVEL="${APP_LOG_LEVEL}"
NEXT_PUBLIC_LOG_FORMAT="${APP_LOG_FORMAT}"
NEXT_PUBLIC_CAPTCHA_SITE_KEY="${CLOUD_GOOGLE_CAPTCHA_SITE_KEY}"
NEXT_PUBLIC_AUTH_URL="${APP_AUTH_URL}"
NEXT_PUBLIC_AUTH_PATH="${APP_AUTH_PATH}"
NEXT_PUBLIC_GOOGLE_CLIENT_ID="${OAUTH_PROVIDER_GOOGLE_CLIENT_ID}"
NEXT_PUBLIC_APP_URL="${APP_CLIENT_URL}"
NEXT_PUBLIC_STATIC_URL="https://${CLOUD_AWS_S3_BUCKET_NAME}"
NEXT_PUBLIC_NODE_ENV=$NODE_ENV
# ╭──────────────────────────────────────────────────────────────────╮
# │                       🚀 DEPLOYMENT PLATFORMS                    │
# ╰──────────────────────────────────────────────────────────────────╯

# Vercel Deployment
VERCEL_PROJECT_ID=""
VERCEL_PROJECT_NAME=""

# Turbo (Vercel's Build System)
TURBO_TOKEN=""
TURBO_TEAM=""

# ┌─────────────────────────────────────────────────────────────────┐
# │ 🌐 TRUSTED ORIGINS                                               │
# │ Comma-separated list of trusted domains for CORS                │
# └─────────────────────────────────────────────────────────────────┘
SECURITY_TRUSTED_ORIGINS="${APP_CLIENT_URL},${APP_MCP_URL},${APP_API_URL},${APP_AUTH_URL}"
SECURITY_CSP_DEFAULT_SRC="default-src='self';"
SECURITY_CSP_BASE_URI="base-uri='self';"
SECURITY_CSP_FORM_ACTION="form-action='self';"
SECURITY_CSP_SCRIPT_SRC="script-src='self',blob:,https://cdn.jsdelivr.net;"
SECURITY_CSP_WORKER_SRC="worker-src='self',blob:;"
SECURITY_CSP_STYLE_SRC="style-src='self','unsafe-inline',https://cdn.jsdelivr.net;"
SECURITY_CSP_FONT_SRC="font-src='self',https://fonts.scalar.com;"
SECURITY_CSP_STYLE_SRC_ELEM="style-src-elem='self','unsafe-inline',https://www.googletagmanager.com,https://cdn.jsdelivr.net;"
SECURITY_CSP_SCRIPT_SRC_ELEM="script-src-elem='self','unsafe-inline',https://www.googletagmanager.com,blob:,https://vercel.live,https://www.gstatic.com,https://cdn.jsdelivr.net,https://www.google.com;"
SECURITY_CSP_CONNECT_SRC="connect-src='self',https://vercel.live/,https://vercel.com,ws:,wss:,http://localhost:*,http://127.0.0.1:*,https://localhost:*,https://127.0.0.1:*,ws://localhost:34437,wss://localhost:34437,http://localhost:4318,http://127.0.0.1:4318;"
SECURITY_CSP_MEDIA_SRC="media-src='self',data:;"
SECURITY_CSP_FRAME_ANCESTORS="frame-ancestors='self',https://vercel.live,https://vercel.com;"
SECURITY_CSP_IMG_SRC="img-src='self',https://www.google-analytics.com,data:,blob:;"
SECURITY_CSP_FRAME_SRC="frame-src='self',https://vercel.live,https://www.google.com,https://vercel.com;"
SECURITY_CSP="${SECURITY_CSP_DEFAULT_SRC}${SECURITY_CSP_BASE_URI}${SECURITY_CSP_FORM_ACTION}${SECURITY_CSP_SCRIPT_SRC}${SECURITY_CSP_WORKER_SRC}${SECURITY_CSP_STYLE_SRC_ELEM}${SECURITY_CSP_FONT_SRC}${SECURITY_CSP_STYLE_SRC}${SECURITY_CSP_SCRIPT_SRC_ELEM}${SECURITY_CSP_CONNECT_SRC}${SECURITY_CSP_MEDIA_SRC}${SECURITY_CSP_FRAME_ANCESTORS}${SECURITY_CSP_IMG_SRC}${SECURITY_CSP_FRAME_SRC}"


# ┌─────────────────────────────────────────────────────────────────┐
# │ 🔒 BETTER AUTH                                                   │
# │                                                                 │
# │                                                                 │
# └─────────────────────────────────────────────────────────────────┘
# You can generate the BETTER_AUTH_SECRET by running 'openssl rand -base64 32' in your terminal.
BETTER_AUTH_SECRET=""
