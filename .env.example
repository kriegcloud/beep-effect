########################################################################################################################
# ╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║                                                   🐝 BEEP CONFIG                                                 ║
# ║                                              Environment Configuration                                           ║
# ╚══════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
########################################################################################################################
#
# 📋 BEEP ENVIRONMENT CONFIGURATION TEMPLATE
#
# This file serves as a template for your .env file.
# Copy this file to .env and fill in the values.
#
# ⚠️  IMPORTANT NOTES:
# - Never commit your .env file to version control
# - Keep all sensitive values in a secure password manager
# - This file uses variable interpolation (${VARIABLE}) which requires dotenv-expand
# - Standard dotenv will NOT expand ${VARIABLE} references without additional setup
#
# 📖 Documentation: https://your-docs-url.com/configuration
# 🆘 Support: support@beep.com
#
# ┌─────────────────────────────────────────────────────────────────┐
# │ 🚀 QUICK SETUP COMMANDS                                         │
# └─────────────────────────────────────────────────────────────────┘
#
# 1. Copy this file:        cp .env.example .env
# 2. Generate secrets:      pnpm run generate:secrets
# 3. Validate config:       pnpm run validate:env
# 4. Start services:        docker-compose up -d
# 5. Run migrations:        pnpm run db:migrate
#
########################################################################################################################

# ┌─────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
# │ 🚀 APPLICATION CORE                                                                                             │
# └─────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘

# APP_NAME: Application identifier used throughout the system
APP_NAME="beep"

# APP_ENV: Environment mode - affects logging, debugging, and feature flags
# Values: dev | staging | prod
# Default: "dev" (enables debug features, verbose logging)
APP_ENV="dev"

# APP_TLD: Top-level domain for production deployments
# Values: "" (empty for localhost/dev) | .com | .net | .org
# Default: "" (localhost development)
APP_TLD=""

# APP_DOMAIN: Base domain constructed from TLD
# Development: "localhost" | Production: "yourdomain.com"
APP_DOMAIN="localhost${APP_TLD}"

# APP_ADMIN_EMAILS: Comma-separated list of administrator email addresses
# Example: "admin@beep.com,support@beep.com,security@beep.com"
# Used for: Error notifications, admin account creation, security alerts
APP_ADMINS_EMAILS=""

# APP_ADMIN_USER_IDS: Comma-separated UUIDs for admin users
# Generate new UUIDs: node -e "console.log(require('crypto').randomUUID())"
# TODO: Generate these dynamically during setup
APP_ADMIN_USER_IDS=""

# ┌─────────────────────────────────────────────────────────────────┐
# │ 🌐 DOMAINS & SUBDOMAINS                                          │
# │ Configure all domain-related settings here                      │
# └─────────────────────────────────────────────────────────────────┘

# Static asset domains (CDN endpoints for production)
APP_ASSETS_SUBDOMAIN="assets"
APP_ASSETS_DOMAIN="${APP_ASSETS_SUBDOMAIN}.${APP_DOMAIN}"

APP_STATIC_SUBDOMAIN="static"
APP_STATIC_DOMAIN="${APP_STATIC_SUBDOMAIN}.${APP_DOMAIN}"

# APP_SUBDOMAINS: Complete list of all subdomains used by the application
# Used for: CORS configuration, subdomain routing, SSL certificate generation
APP_SUBDOMAINS="otlp,mcp,auth,static,assets"

# ┌─────────────────────────────────────────────────────────────────┐
# │ 📝 LOGGING CONFIGURATION                                        │
# └─────────────────────────────────────────────────────────────────┘

# APP_LOG_FORMAT: Controls how logs are formatted and displayed
# Values: pretty (colored, human-readable) | json (structured) | logFmt | structured
# Default: "pretty" (development), "json" (production)
APP_LOG_FORMAT="pretty"

# APP_LOG_LEVEL: Controls verbosity of application logs
# Values: All | Debug | Error | Fatal | Info | Trace | None | Warning
# Default: "All" (development), "Error" (production)
APP_LOG_LEVEL="All"

# ┌─────────────────────────────────────────────────────────────────┐
# │ 🔗 SERVICE ENDPOINTS                                            │
# │ Internal service communication ports and URLs                   │
# └─────────────────────────────────────────────────────────────────┘

# MCP (Model Context Protocol) Service
APP_MCP_PORT="8081"
APP_MCP_HOST="localhost"
APP_MCP_URL="http://${APP_MCP_HOST}:${APP_MCP_PORT}"

# API Service (Backend REST API)
APP_API_PORT="8080"
APP_API_HOST="localhost"
APP_API_URL="http://${APP_API_HOST}:${APP_API_PORT}"

# Authentication Service
APP_AUTH_PORT="3000"
APP_AUTH_HOST="localhost"
APP_AUTH_PATH="/api/auth"
APP_AUTH_URL="http://${APP_AUTH_HOST}:${APP_AUTH_PORT}"

# Client Application (Next.js Frontend)
APP_CLIENT_PORT="3000"
APP_CLIENT_HOST="localhost"
APP_CLIENT_URL="http://${APP_CLIENT_HOST}:${APP_CLIENT_PORT}"

# ╭──────────────────────────────────────────────────────────────────╮
# │                     📊 OBSERVABILITY & MONITORING                │
# ╰──────────────────────────────────────────────────────────────────╯

# OpenTelemetry (OTLP) Trace Collection
OTLP_TRACE_EXPORTER_PORT="4318"
OTLP_TRACE_EXPORTER_HOST="localhost"
OTLP_TRACE_EXPORTER_PATH="v1/traces"
OTLP_TRACE_EXPORTER_URL="https://${OTLP_TRACE_EXPORTER_HOST}:${OTLP_TRACE_EXPORTER_PORT}/${OTLP_TRACE_EXPORTER_PATH}"

# Jaeger UI (Distributed Tracing Visualization)
OTLP_JAEGER_HOST="localhost"
OTLP_JAEGER_PORT="16686"
OTLP_JAEGER_URL="http://${OTLP_JAEGER_HOST}:${OTLP_JAEGER_PORT}"

# OTLP_SERVICE_NAMES: Services to monitor with distributed tracing
# Comma-separated list of service identifiers
OTLP_SERVICE_NAMES="app,api,auth,mcp"

# ┌─────────────────────────────────────────────────────────────────┐
# │ 🔍 ERROR MONITORING                                             │
# └─────────────────────────────────────────────────────────────────┘

# Sentry Configuration (Error Tracking & Performance Monitoring)
# Get these values from: https://sentry.io/settings/[your-org]/projects/
MONITORING_SENTRY_ORG=""
MONITORING_SENTRY_PROJECT=""
MONITORING_SENTRY_SILENT=""
MONITORING_SENTRY_DSN=""

# ╭──────────────────────────────────────────────────────────────────╮
# │                        📧 EMAIL SERVICES                         │
# ╰──────────────────────────────────────────────────────────────────╯

# Email Configuration
EMAIL_FROM="auth@beep.com"
EMAIL_TEST="support@beep.cloud"

# Resend API (Transactional Email Service)
# Get your API key from: https://resend.com/api-keys
EMAIL_RESEND_API_KEY=""

# ╭──────────────────────────────────────────────────────────────────╮
# │                          🤖 AI SERVICES                          │
# ╰──────────────────────────────────────────────────────────────────╯

# AI_ANTHROPIC_API_KEY: Claude API access
# Get from: https://console.anthropic.com/
AI_ANTHROPIC_API_KEY=""

# AI_OPENAI_API_KEY: OpenAI GPT API access
# Get from: https://platform.openai.com/api-keys
AI_OPENAI_API_KEY=""

# ELEVENLABS_API_KEY: ElevenLabs API access
# https://elevenlabs.io/docs/api-reference/authentication#api-keys
ELEVENLABS_API_KEY=""
# ELEVENLABS_AGENT_ID: ElevenLabs agent ID
# https://elevenlabs.io/docs/conversational-ai/libraries/web-sockets#using-agent-id
ELEVENLABS_AGENT_ID=""
# ╭──────────────────────────────────────────────────────────────────╮
# │                       💰 PAYMENT & BILLING                       │
# ╰──────────────────────────────────────────────────────────────────╯

# Global Payment Settings
PAYMENT_SUBSCRIPTIONS_ENABLED="true"
PAYMENT_SUCCESS_URL="https://${APP_DOMAIN}/success"
# Stripe Configuration
# Get these from: https://dashboard.stripe.com/apikeys
PAYMENT_STRIPE_KEY=""
PAYMENT_STRIPE_WEBHOOK_SECRET=""

# ┌─────────────────────────────────────────────────────────────────┐
# │ 💳 SUBSCRIPTION PLANS                                           │
# │ Configure your pricing tiers and trial periods                  │
# └─────────────────────────────────────────────────────────────────┘

# Basic Plan Configuration
PAYMENT_PLAN_BASIC_NAME="basic"
PAYMENT_PLAN_BASIC_PRICE_ID=""
PAYMENT_PLAN_BASIC_ANNUAL_DISCOUNT_PRICE_ID=""
PAYMENT_PLAN_BASIC_FREE_TRIAL_DAYS="8"

# Pro Plan Configuration
PAYMENT_PLAN_PRO_NAME="pro"
PAYMENT_PLAN_PRO_PRICE_ID=""
PAYMENT_PLAN_PRO_ANNUAL_DISCOUNT_PRICE_ID=""
PAYMENT_PLAN_PRO_FREE_TRIAL_DAYS="8"

# Enterprise Plan Configuration
PAYMENT_PLAN_ENTERPRISE_NAME="enterprise"
PAYMENT_PLAN_ENTERPRISE_PRICE_ID=""
PAYMENT_PLAN_ENTERPRISE_ANNUAL_DISCOUNT_PRICE_ID=""
PAYMENT_PLAN_ENTERPRISE_FREE_TRIAL_DAYS="8"
PAYMENT_PLAN_NAMES="${PAYMENT_PLAN_BASIC_NAME},${PAYMENT_PLAN_PRO_NAME},${PAYMENT_PLAN_ENTERPRISE_NAME}"

# ╭──────────────────────────────────────────────────────────────────╮
# │                       📈 MARKETING & ANALYTICS                   │
# ╰──────────────────────────────────────────────────────────────────╯

# Dub.co API (Link shortening and analytics)
# Get from: https://dub.co/settings/tokens
MARKETING_DUB_TOKEN=""

# ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓
# ▓                        💾 DATABASE CONFIGURATION              ▓
# ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓

# PostgreSQL Database Configuration
DB_PG_HOST="localhost"
DB_PG_PORT="5432"
DB_PG_USER="postgres"
DB_PG_PASSWORD="postgres"
DB_PG_DATABASE="postgres"
DB_PG_URL="postgres://${DB_PG_USER}:${DB_PG_PASSWORD}@${DB_PG_HOST}:${DB_PG_PORT}/${DB_PG_DATABASE}"
DB_PG_SSL="false"
DB_PG_DEBUG="true"

# ╭──────────────────────────────────────────────────────────────────╮
# │                        🗄️ KEY-VALUE STORE                         │
# ╰──────────────────────────────────────────────────────────────────╯

# Redis Configuration (Caching, Sessions, Queues)
KV_REDIS_HOST="localhost"
KV_REDIS_PORT="6379"
KV_REDIS_PASSWORD=""
KV_REDIS_URL="redis://${KV_REDIS_PASSWORD}@${KV_REDIS_HOST}:${KV_REDIS_PORT}"

# ╭──────────────────────────────────────────────────────────────────╮
# │                         ☁️ CLOUD SERVICES                         │
# ╰──────────────────────────────────────────────────────────────────╯

# Amazon Web Services (AWS)
CLOUD_AWS_REGION="us-east-1"
CLOUD_AWS_ACCESS_KEY_ID=""
CLOUD_AWS_SECRET_ACCESS_KEY=""
CLOUD_AWS_S3_BUCKET_NAME="static.vaultctx.com"

# Google Cloud Services
CLOUD_GOOGLE_CAPTCHA_SECRET_KEY=""
CLOUD_GOOGLE_CAPTCHA_SITE_KEY=""

# ╭──────────────────────────────────────────────────────────────────╮
# │                      🔐 OAUTH PROVIDERS                          │
# │ Social login integrations                                        │
# ╰──────────────────────────────────────────────────────────────────╯

# Microsoft Azure AD / Office 365
OAUTH_PROVIDER_MICROSOFT_TENANT_ID=""
OAUTH_PROVIDER_MICROSOFT_CLIENT_ID=""
OAUTH_PROVIDER_MICROSOFT_CLIENT_SECRET=""

# Google OAuth 2.0
OAUTH_PROVIDER_GOOGLE_CLIENT_ID=""
OAUTH_PROVIDER_GOOGLE_CLIENT_SECRET=""

# Discord OAuth
OAUTH_PROVIDER_DISCORD_CLIENT_ID=""
OAUTH_PROVIDER_DISCORD_CLIENT_SECRET=""

# GitHub OAuth
OAUTH_PROVIDER_GITHUB_CLIENT_ID=""
OAUTH_PROVIDER_GITHUB_CLIENT_SECRET=""

# LinkedIn OAuth
OAUTH_PROVIDER_LINKEDIN_CLIENT_ID=""
OAUTH_PROVIDER_LINKEDIN_CLIENT_SECRET=""

# X (Twitter) OAuth
OAUTH_PROVIDER_TWITTER_CLIENT_ID=""
OAUTH_PROVIDER_TWITTER_CLIENT_SECRET=""

# Facebook OAuth
OAUTH_PROVIDER_FACEBOOK_CLIENT_ID=""
OAUTH_PROVIDER_FACEBOOK_CLIENT_SECRET=""

# OAUTH_PROVIDER_NAMES: Enabled OAuth providers
# Values: microsoft,google,github,linkedin,twitter,facebook
# Leave empty to disable social login entirely
# Example: "google,github,linkedin"
OAUTH_PROVIDER_NAMES="google,github,linkedin,twitter"

# ┌─────────────────────────────────────────────────────────────────┐
# │ 🌍 PUBLIC VARIABLES (Safe for client-side)                      │
# │ These will be exposed in your frontend bundle                   │
# │ ⚠️  Never include sensitive data in NEXT_PUBLIC_ variables       │
# └─────────────────────────────────────────────────────────────────┘

NEXT_PUBLIC_ENV="${APP_ENV}"
NEXT_PUBLIC_APP_NAME="${APP_NAME}"
NEXT_PUBLIC_APP_DOMAIN="${APP_DOMAIN}"
NEXT_PUBLIC_AUTH_PROVIDER_NAMES="${OAUTH_PROVIDER_NAMES}"
NEXT_PUBLIC_API_URL="${APP_API_URL}"
NEXT_PUBLIC_OTLP_TRACE_EXPORTER_URL="${OTLP_TRACE_EXPORTER_URL}"
NEXT_PUBLIC_LOG_LEVEL="${APP_LOG_LEVEL}"
NEXT_PUBLIC_LOG_FORMAT="${APP_LOG_FORMAT}"
NEXT_PUBLIC_CAPTCHA_SITE_KEY="${CLOUD_GOOGLE_CAPTCHA_SITE_KEY}"
NEXT_PUBLIC_AUTH_URL="${APP_AUTH_URL}"
NEXT_PUBLIC_AUTH_PATH="${APP_AUTH_PATH}"
NEXT_PUBLIC_GOOGLE_CLIENT_ID="${OAUTH_PROVIDER_GOOGLE_CLIENT_ID}"
NEXT_PUBLIC_APP_URL="${APP_CLIENT_URL}"
NEXT_PUBLIC_STATIC_URL="https://${CLOUD_AWS_S3_BUCKET_NAME}"
NEXT_PUBLIC_NODE_ENV=$NODE_ENV
# ╭──────────────────────────────────────────────────────────────────╮
# │                       🚀 DEPLOYMENT PLATFORMS                    │
# ╰──────────────────────────────────────────────────────────────────╯

# Vercel Deployment
VERCEL_PROJECT_ID=""
VERCEL_PROJECT_NAME=""

# Turbo (Vercel's Build System)
TURBO_TOKEN=""
TURBO_TEAM=""

# ┌─────────────────────────────────────────────────────────────────┐
# │ 🌐 TRUSTED ORIGINS                                               │
# │ Comma-separated list of trusted domains for CORS                │
# └─────────────────────────────────────────────────────────────────┘
SECURITY_TRUSTED_ORIGINS="${APP_CLIENT_URL},${APP_MCP_URL},${APP_API_URL},${APP_AUTH_URL}"

# ┌─────────────────────────────────────────────────────────────────┐
# │ 🔒 BETTER AUTH                                                   │
# │                                                                 │
# │                                                                 │
# └─────────────────────────────────────────────────────────────────┘
BETTER_AUTH_SECRET=""
